"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([[65197],{21735:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var i=n(85893),o=n(11151);const a={slug:"goodbye-client-affinity-hello-data-protection-with-azure",title:"Goodbye Client Affinity, Hello Data Protection with Azure",description:"How to use ASP.NET Data Protection to remove the need for sticky sessions with Client Affinity",authors:"johnnyreilly",tags:["azure","asp.net","easy auth"],image:"./traffic-to-app-service.png",hide_table_of_contents:!1},r=void 0,s={permalink:"/goodbye-client-affinity-hello-data-protection-with-azure",editUrl:"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2021-02-27-goodbye-client-affinity-hello-data-protection-with-azure/index.md",source:"@site/blog/2021-02-27-goodbye-client-affinity-hello-data-protection-with-azure/index.md",title:"Goodbye Client Affinity, Hello Data Protection with Azure",description:"How to use ASP.NET Data Protection to remove the need for sticky sessions with Client Affinity",date:"2021-02-27T00:00:00.000Z",formattedDate:"February 27, 2021",tags:[{label:"azure",permalink:"/tags/azure"},{label:"asp.net",permalink:"/tags/asp-net"},{label:"easy auth",permalink:"/tags/easy-auth"}],readingTime:3.455,hasTruncateMarker:!0,authors:[{name:"John Reilly",title:"OSS Engineer - TypeScript, Azure, React, Node.js, .NET",url:"https://johnnyreilly.com/about",imageURL:"https://johnnyreilly.com/img/profile.jpg",key:"johnnyreilly"}],frontMatter:{slug:"goodbye-client-affinity-hello-data-protection-with-azure",title:"Goodbye Client Affinity, Hello Data Protection with Azure",description:"How to use ASP.NET Data Protection to remove the need for sticky sessions with Client Affinity",authors:"johnnyreilly",tags:["azure","asp.net","easy auth"],image:"./traffic-to-app-service.png",hide_table_of_contents:!1},unlisted:!1,prevItem:{title:"NSwag: TypeScript and CSharp client generation based on an API",permalink:"/generate-typescript-and-csharp-clients-with-nswag"},nextItem:{title:"Making Easy Auth tokens survive releases on Linux Azure App Service",permalink:"/easy-auth-tokens-survive-releases-on-linux-azure-app-service"}},l={image:n(28908).Z,authorsImageUrls:[void 0]},c=[];function u(e){const t={a:"a",p:"p",...(0,o.a)(),...e.components};return(0,i.jsxs)(t.p,{children:["I've written lately about ",(0,i.jsx)(t.a,{href:"/azure-app-service-health-checks-and-zero-downtime-deployments",children:"zero downtime releases with Azure App Service"}),". Zero downtime releases are only successful if your authentication mechanism survives a new deployment. We looked in my last post at ",(0,i.jsx)(t.a,{href:"/easy-auth-tokens-survive-releases-on-linux-azure-app-service",children:"how to achieve this with Azure's in-built authentication mechanism; Easy Auth"}),"."]})}function h(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},28908:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/traffic-to-app-service-431500979c75ac598fca93286ac657d1.png"},11151:(e,t,n)=>{n.d(t,{Z:()=>s,a:()=>r});var i=n(67294);const o={},a=i.createContext(o);function r(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);