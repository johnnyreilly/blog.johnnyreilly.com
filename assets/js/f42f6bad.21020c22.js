"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([[79891],{25142:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>n,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>h});var a=s(85893),r=s(11151);const o={slug:"react-usesearchparamsstate",title:"React: storing state in URL with URLSearchParams",authors:"johnnyreilly",tags:["react","typescript"],description:"The React `useState` hook is a great way to persist state. This post demos a simple React hook that stores state in the URL querystring.",hide_table_of_contents:!1},n=void 0,i={permalink:"/react-usesearchparamsstate",editUrl:"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2022-09-20-react-usesearchparamsstate/index.md",source:"@site/blog/2022-09-20-react-usesearchparamsstate/index.md",title:"React: storing state in URL with URLSearchParams",description:"The React `useState` hook is a great way to persist state. This post demos a simple React hook that stores state in the URL querystring.",date:"2022-09-20T00:00:00.000Z",formattedDate:"September 20, 2022",tags:[{label:"react",permalink:"/tags/react"},{label:"typescript",permalink:"/tags/typescript"}],readingTime:6.68,hasTruncateMarker:!0,authors:[{name:"John Reilly",title:"OSS Engineer - TypeScript, Azure, React, Node.js, .NET",url:"https://johnnyreilly.com/about",imageURL:"https://johnnyreilly.com/img/profile.jpg",key:"johnnyreilly"}],frontMatter:{slug:"react-usesearchparamsstate",title:"React: storing state in URL with URLSearchParams",authors:"johnnyreilly",tags:["react","typescript"],description:"The React `useState` hook is a great way to persist state. This post demos a simple React hook that stores state in the URL querystring.",hide_table_of_contents:!1},unlisted:!1,prevItem:{title:"Faster Docusaurus builds with swc-loader",permalink:"/faster-docusaurus-build-swc-loader"},nextItem:{title:"Reverse engineering the Azure Application Insights Transactions URL",permalink:"/reverse-engineering-azure-app-insights-transactions-url"}},c={authorsImageUrls:[void 0]},h=[];function l(e){const t={a:"a",code:"code",p:"p",...(0,r.a)(),...e.components};return(0,a.jsxs)(t.p,{children:["The React ",(0,a.jsx)(t.a,{href:"https://reactjs.org/docs/hooks-reference.html#usestate",children:(0,a.jsx)(t.code,{children:"useState"})})," hook is a great way to persist state inside the context of a component in React. This post demonstrates a simple React hook that stores state in the URL querystring, building on top of React Routers ",(0,a.jsx)(t.code,{children:"useSearchParams"})," hook."]})}function p(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},11151:(e,t,s)=>{s.d(t,{Z:()=>i,a:()=>n});var a=s(67294);const r={},o=a.createContext(r);function n(e){const t=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:n(e.components),a.createElement(o.Provider,{value:t},e.children)}}}]);