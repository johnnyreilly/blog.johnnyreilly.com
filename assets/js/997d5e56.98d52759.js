"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([[14771],{28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>p});var i=t(96540);const a={},s=i.createContext(a);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function p(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(s.Provider,{value:n},e.children)}},29446:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/title-image-44b5814dcf8723af68514dd3807b577a.png"},31471:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/title-image-44b5814dcf8723af68514dd3807b577a.png"},45518:e=>{e.exports=JSON.parse('{"permalink":"/static-web-apps-azure-devops-named-preview-environments","editUrl":"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2022-05-07-static-web-apps-azure-devops-named-preview-environments/index.md","source":"@site/blog/2022-05-07-static-web-apps-azure-devops-named-preview-environments/index.md","title":"Azure Static Web Apps: named preview environments with Azure DevOps","description":"Azure Static Web Apps have just released a new feature for Azure DevOps users called \\"named preview environments\\". Let us have a look","date":"2022-05-07T00:00:00.000Z","tags":[{"inline":false,"label":"Azure Static Web Apps","permalink":"/tags/azure-static-web-apps","description":"The Azure Static Web Apps service."},{"inline":false,"label":"Azure DevOps","permalink":"/tags/azure-devops","description":"The Azure DevOps suite of tools."}],"readingTime":5.6,"hasTruncateMarker":true,"authors":[{"name":"John Reilly","title":"OSS Engineer - TypeScript, Azure, React, Node.js, .NET","url":"https://johnnyreilly.com/about","imageURL":"https://johnnyreilly.com/img/profile-2025.jpg","key":"johnnyreilly","page":null}],"frontMatter":{"slug":"static-web-apps-azure-devops-named-preview-environments","title":"Azure Static Web Apps: named preview environments with Azure DevOps","authors":"johnnyreilly","tags":["azure static web apps","azure devops"],"image":"./title-image.png","description":"Azure Static Web Apps have just released a new feature for Azure DevOps users called \\"named preview environments\\". Let us have a look","hide_table_of_contents":false},"unlisted":false,"prevItem":{"title":"Azure Static Web Apps: Node.js 16 / 18 and Oryx","permalink":"/azure-static-web-apps-node-16-oryx"},"nextItem":{"title":"Upgrading to React 18 with TypeScript","permalink":"/upgrading-to-react-18-typescript"}}')},51564:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/screenshot-of-azure-pipeline-main-deployment-a76135fdbb4c2e010bd4562fab9a9fea.png"},53361:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/screenshot-of-azure-pipeline-preview-deployment-31a4f6a54877fa3821190e629d01b081.png"},65141:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/screenshot-of-main-static-web-app-950a25d4b231ffc8668cdf6a9b7ce9bb.png"},69086:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/both-environments-b890794a924a785bb1624c0df66fa1f1.gif"},80406:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/screenshot-of-preview-static-web-app-d2ab822989018ad0c005e5496792f62a.png"},92412:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>p,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var i=t(45518),a=t(74848),s=t(28453);const r={slug:"static-web-apps-azure-devops-named-preview-environments",title:"Azure Static Web Apps: named preview environments with Azure DevOps",authors:"johnnyreilly",tags:["azure static web apps","azure devops"],image:"./title-image.png",description:'Azure Static Web Apps have just released a new feature for Azure DevOps users called "named preview environments". Let us have a look',hide_table_of_contents:!1},p=void 0,o={image:t(29446).A,authorsImageUrls:[void 0]},l=[{value:"What are named preview environments?",id:"what-are-named-preview-environments",level:2},{value:"Deploy Static Web App with Bicep",id:"deploy-static-web-app-with-bicep",level:2},{value:"Azure Pipelines",id:"azure-pipelines",level:2},{value:"Creating a site",id:"creating-a-site",level:2},{value:"Testing the preview",id:"testing-the-preview",level:2},{value:"Conclusion",id:"conclusion",level:2}];function c(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",img:"img",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:'Azure Static Web Apps have just released a new feature for Azure DevOps users called "named preview environments". They allow users to deploy changes to an environment, prior to merging.'}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"title image reading &quot;Azure Static Web App Deploy Previews with Azure DevOps&quot; with a Azure, Bicep and Azure DevOps logos",src:t(31471).A+"",width:"1600",height:"900",loading:"lazy"})}),"\n",(0,a.jsx)(n.h2,{id:"what-are-named-preview-environments",children:"What are named preview environments?"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.a,{href:"https://docs.microsoft.com/en-gb/azure/static-web-apps/named-environments?tabs=azure-devops",children:"announcement"})," describes them like so:"]}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["You can configure your site to deploy every change to a named environment. This preview deployment is published at a stable URL that includes the environment name. For example, if the environment is named ",(0,a.jsx)(n.code,{children:"release"}),", then the preview is available at a location like ",(0,a.jsx)(n.code,{children:"<DEFAULT_HOST_NAME>-release.<LOCATION>.azurestaticapps.net"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"/azure-static-web-app-deploy-previews-with-azure-devops",children:"I'd previously written about how to hand roll preview environments with Azure DevOps using Bicep"}),". But now there's dedicated functionality that covers this, let's see if we can test it out."]}),"\n",(0,a.jsx)(n.h2,{id:"deploy-static-web-app-with-bicep",children:"Deploy Static Web App with Bicep"}),"\n",(0,a.jsx)(n.p,{children:"We'll start with an empty repo in Azure DevOps and we'll create the Bicep template for deploying a Static Web App to Azure:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bicep",children:"param appName string\nparam repositoryUrl string\nparam repositoryBranch string\n\nparam location string = resourceGroup().location\nparam skuName string = 'Free'\nparam skuTier string = 'Free'\n\nresource staticWebApp 'Microsoft.Web/staticSites@2021-03-01' = {\n  name: appName\n  location: location\n  sku: {\n    name: skuName\n    tier: skuTier\n  }\n  properties: {\n    // The provider, repositoryUrl and branch fields are required for successive deployments to succeed\n    // for more details see: https://github.com/Azure/static-web-apps/issues/516\n    provider: 'DevOps'\n    repositoryUrl: repositoryUrl\n    branch: repositoryBranch\n    buildProperties: {\n      skipGithubActionWorkflowGeneration: true\n    }\n  }\n}\n\noutput staticWebAppDefaultHostName string = staticWebApp.properties.defaultHostname // eg gentle-bush-0db02ce03.azurestaticapps.net\noutput staticWebAppId string = staticWebApp.id\noutput staticWebAppName string = staticWebApp.name\n"})}),"\n",(0,a.jsx)(n.p,{children:"The above deploys a Static Web App configured for Azure DevOps."}),"\n",(0,a.jsxs)(n.p,{children:["We are now outputting the ",(0,a.jsx)(n.code,{children:"defaultHostname"}),", ",(0,a.jsx)(n.code,{children:"id"})," and ",(0,a.jsx)(n.code,{children:"name"})," of our newly provisioned SWA. Doing this allows us to do build things in the pipeline around our SWA should we choose to."]}),"\n",(0,a.jsx)(n.h2,{id:"azure-pipelines",children:"Azure Pipelines"}),"\n",(0,a.jsxs)(n.p,{children:["We're going to need an Azure Pipeline for this. We'll create an ",(0,a.jsx)(n.code,{children:"azure-pipelines.yml"})," file in the root of our repo:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yml",children:"trigger:\n  - '*'\n\npool:\n  vmImage: ubuntu-latest\n\nvariables:\n  # subscriptionId is a variable defined on the pipeline itself\n  - name: appName\n    value: 'our-static-web-app'\n  - name: location\n    value: 'westeurope' #\xa0at time of writing static sites are available in limited locations such as westeurope\n  - name: serviceConnection\n    value: 'azure-resource-manager-rg-static-web-apps' # Azure Resource Manager Service Connection created in Azure DevOps with permission against the rg-static-web-apps resource group in Azure\n  - name: azureResourceGroup # this resource group lives in westeurope\n    value: 'rg-static-web-apps'\n  - name: isMain\n    value: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')] # runtime expression\n\nsteps:\n  - checkout: self\n    submodules: true\n\n  - bash: az bicep build --file infra/static-web-app/main.bicep\n    displayName: 'Compile Bicep to ARM'\n\n  - task: AzureResourceManagerTemplateDeployment@3\n    name: DeployStaticWebAppInfra\n    displayName: Deploy Static Web App infra\n    inputs:\n      deploymentScope: Resource Group\n      azureResourceManagerConnection: $(serviceConnection)\n      subscriptionId: $(subscriptionId)\n      action: Create Or Update Resource Group\n      resourceGroupName: $(azureResourceGroup)\n      location: $(location)\n      templateLocation: Linked artifact\n      csmFile: 'infra/static-web-app/main.json' # created by bash script\n      overrideParameters: >-\n        -repositoryUrl $(Build.Repository.Uri)\n        -repositoryBranch $(Build.SourceBranchName)\n        -appName $(appName)\n      deploymentMode: Incremental\n      deploymentOutputs: deploymentOutputs\n\n  - task: PowerShell@2\n    name: 'SetDeploymentOutputVariables'\n    displayName: 'Set Deployment Output Variables'\n    inputs:\n      targetType: inline\n      script: |\n        $armOutputObj = '$(deploymentOutputs)' | ConvertFrom-Json\n        $armOutputObj.PSObject.Properties | ForEach-Object {\n          $keyname = $_.Name\n          $value = $_.Value.value\n\n          # Creates a standard pipeline variable\n          Write-Output \"##vso[task.setvariable variable=$keyName;]$value\"\n\n          # Display keys and values in pipeline\n          Write-Output \"output variable: $keyName $value\"\n        }\n      pwsh: true\n\n  - task: AzureCLI@2\n    displayName: 'Acquire API key for deployment'\n    inputs:\n      azureSubscription: $(serviceConnection)\n      scriptType: bash\n      scriptLocation: inlineScript\n      inlineScript: |\n        APIKEY=$(az staticwebapp secrets list --name $(staticWebAppName) | jq -r '.properties.apiKey')\n        echo \"##vso[task.setvariable variable=apiKey;issecret=true]$APIKEY\"\n\n  - task: AzureStaticWebApp@0\n    name: DeployStaticWebApp\n    displayName: Deploy Static Web App\n    condition: and(succeeded(), eq(variables.isMain, 'true'))\n    inputs:\n      app_location: 'static-web-app'\n      # api_location: 'api'\n      output_location: 'build'\n      azure_static_web_apps_api_token: $(apiKey)\n\n  - task: AzureStaticWebApp@0\n    name: DeployStaticWebAppPreview\n    displayName: Deploy Static Web App to named preview environment\n    condition: and(succeeded(), ne(variables.isMain, 'true'))\n    inputs:\n      app_location: 'static-web-app'\n      # api_location: 'api'\n      output_location: 'build'\n      azure_static_web_apps_api_token: $(apiKey)\n      deployment_environment: 'pullrequest'\n"})}),"\n",(0,a.jsx)(n.p,{children:"There's two significant parts to the above pipeline. First the trigger, which ensures we run the pipeline on each change:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yml",children:"trigger:\n  - '*' # this means we'll trigger on each change\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Next the two ",(0,a.jsx)(n.code,{children:"AzureStaticWebApp@0"})," tasks:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yml",children:"- task: AzureStaticWebApp@0\n  name: DeployStaticWebApp\n  displayName: Deploy Static Web App\n  condition: and(succeeded(), eq(variables.isMain, 'true'))\n  inputs:\n    app_location: 'static-web-app'\n    # api_location: 'api'\n    output_location: 'build'\n    azure_static_web_apps_api_token: $(apiKey)\n\n- task: AzureStaticWebApp@0\n  name: DeployStaticWebAppPreview\n  displayName: Deploy Static Web App to named preview environment\n  condition: and(succeeded(), ne(variables.isMain, 'true'))\n  inputs:\n    app_location: 'static-web-app'\n    # api_location: 'api'\n    output_location: 'build'\n    azure_static_web_apps_api_token: $(apiKey)\n    deployment_environment: 'pullrequest'\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Depending upon whether we're using the ",(0,a.jsx)(n.code,{children:"main"})," branch or not, we either use or do not use the ",(0,a.jsx)(n.code,{children:"deployment_environment"})," property. When it is not the ",(0,a.jsx)(n.code,{children:"main"})," branch we supply the ",(0,a.jsx)(n.code,{children:"deployment_environment"})," property with a value of ",(0,a.jsx)(n.code,{children:"'pullrequest'"}),". This is the name of our preview environment; and the value will be used in the URL we end up with. In my own experiments it seems that using hyphens in the name can be problematic - so I would advise avoiding this."]}),"\n",(0,a.jsx)(n.h2,{id:"creating-a-site",children:"Creating a site"}),"\n",(0,a.jsx)(n.p,{children:"So we can test this out, we need a static web app to deploy. We'll spin up a simple Docusaurus site:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"npx create-docusaurus@latest static-web-app classic\n"})}),"\n",(0,a.jsx)(n.p,{children:"Upon the initial commit of our main branch we end up with a website, once the pipeline has run:"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"screenshot of Azure Pipelines, including the phrase &quot;Visit your site at: https://zealous-beach-05119b203.1.azurestaticapps.net&quot;",src:t(51564).A+"",width:"2467",height:"1307",loading:"lazy"})}),"\n",(0,a.jsx)(n.p,{children:"Note the URL:"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"screenshot of Docusaurus site deployed to Azure Static Web Apps",src:t(65141).A+"",width:"1552",height:"1100",loading:"lazy"})}),"\n",(0,a.jsx)(n.h2,{id:"testing-the-preview",children:"Testing the preview"}),"\n",(0,a.jsx)(n.p,{children:"Now our main site is deployed, let's test out the preview environment. We'll create a new branch:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"git checkout -b test-preview\n"})}),"\n",(0,a.jsxs)(n.p,{children:["And we'll update the ",(0,a.jsx)(n.code,{children:"pages.index.js"}),' file to include this message: "Hello from preview environment!". Once we commit and push our changes, we see the pipeline run:']}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"screenshot of Azure Pipelines, including the phrase &quot;Visit your site at: https://zealous-beach-05119b203-pullrequest.westeurope.1.azurestaticapps.net&quot;",src:t(53361).A+"",width:"2457",height:"1291",loading:"lazy"})}),"\n",(0,a.jsx)(n.p,{children:"Note that this time we are deploying to our preview environment instead."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"screenshot of Docusaurus site deployed to Azure Static Web Apps",src:t(80406).A+"",width:"1558",height:"1102",loading:"lazy"})}),"\n",(0,a.jsx)(n.p,{children:'As we can see, this preview is showing our "Hello from preview environment!" changes as well; whilst the main environment is unchanged.'}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"animated GIF demonstrating both environments with different content",src:t(69086).A+"",width:"1584",height:"1224",loading:"lazy"})}),"\n",(0,a.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,a.jsx)(n.p,{children:"Azure DevOps now has support for named preview environments for Azure Static Web Apps; a powerful addition to the product."}),"\n",(0,a.jsxs)(n.p,{children:["You can see further discussion of this feature on the ",(0,a.jsx)(n.a,{href:"https://github.com/Azure/static-web-apps/issues/510#issuecomment-1116307462",children:"Azure/static-web-apps repo"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}}}]);