"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([[91613],{73274:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>a,toc:()=>u});var n=o(74848),i=o(28453);const s={slug:"using-pubsub-observer-pattern-to",title:"Using the PubSub / Observer pattern to emulate constructor chaining without cluttering up global scope",authors:"johnnyreilly",tags:["javascript"],hide_table_of_contents:!1,description:"Pass objects between JavaScript files using PubSub interface to achieve code reusability without global scope pollution. No prototypes needed."},r=void 0,a={permalink:"/using-pubsub-observer-pattern-to",editUrl:"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2012-03-17-using-pubsub-observer-pattern-to/index.md",source:"@site/blog/2012-03-17-using-pubsub-observer-pattern-to/index.md",title:"Using the PubSub / Observer pattern to emulate constructor chaining without cluttering up global scope",description:"Pass objects between JavaScript files using PubSub interface to achieve code reusability without global scope pollution. No prototypes needed.",date:"2012-03-17T00:00:00.000Z",tags:[{label:"javascript",permalink:"/tags/javascript"}],readingTime:5.48,hasTruncateMarker:!0,authors:[{name:"John Reilly",title:"OSS Engineer - TypeScript, Azure, React, Node.js, .NET",url:"https://johnnyreilly.com/about",imageURL:"https://johnnyreilly.com/img/profile.jpg",key:"johnnyreilly"}],frontMatter:{slug:"using-pubsub-observer-pattern-to",title:"Using the PubSub / Observer pattern to emulate constructor chaining without cluttering up global scope",authors:"johnnyreilly",tags:["javascript"],hide_table_of_contents:!1,description:"Pass objects between JavaScript files using PubSub interface to achieve code reusability without global scope pollution. No prototypes needed."},unlisted:!1,prevItem:{title:"WCF - moving from Config to Code, a simple WCF service harness (plus implementing your own Authorization)",permalink:"/wcf-moving-from-config-to-code-simple"},nextItem:{title:"Striving for (JavaScript) Convention",permalink:"/striving-for-javascript-convention"}},l={authorsImageUrls:[void 0]},u=[];function c(e){const t={p:"p",strong:"strong",...(0,i.R)(),...e.components};return(0,n.jsxs)(t.p,{children:["Yes the title of this post is *",(0,n.jsx)(t.strong,{children:"painfully"}),"* verbose. Sorry about that. Couple of questions for you: - Have you ever liked the way you can have base classes in C# which can then be inherited and subclassed ",(0,n.jsx)("u",{children:"in a different file / class"})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},28453:(e,t,o)=>{o.d(t,{R:()=>r,x:()=>a});var n=o(96540);const i={},s=n.createContext(i);function r(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);