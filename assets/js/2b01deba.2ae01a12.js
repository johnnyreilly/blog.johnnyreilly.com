"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([["65826"],{19782:function(e,t,i){i.r(t),i.d(t,{assets:function(){return l},contentTitle:function(){return s},default:function(){return p},frontMatter:function(){return a},metadata:function(){return n},toc:function(){return u}});var n=i(76023),o=i(85893),r=i(50065);let a={slug:"simple-technique-for-initialising",title:"A Simple Technique for Initialising Properties with Internal Setters for Unit Testing",authors:"johnnyreilly",tags:["automated testing"],hide_table_of_contents:!1,description:"Refactoring a legacy app includes adding unit tests, but properties with internal setters pose a problem. John explores various approaches."},s=void 0,l={authorsImageUrls:[void 0]},u=[];function c(e){let t={a:"a",code:"code",p:"p",...(0,r.a)(),...e.components};return(0,o.jsxs)(t.p,{children:["I was recently working with my colleagues on refactoring a legacy application. We didn't have an immense amount of time available for this but the plan was to try and improve what was there as much as possible. In its initial state the application had no unit tests in place at all and so the plan was to refactor the code base in such a way as to make testing it a realistic proposition. To that end the ",(0,o.jsx)(t.a,{href:"http://en.wikipedia.org/wiki/Domain_layer",children:"domain layer"})," was being heavily adjusted and the GUI was being migrated from WebForms to MVC 3. The intention was to build up a pretty solid collection of unit tests. However, as we were working on this we realised we had a problem with properties on our models with ",(0,o.jsx)(t.a,{href:"http://msdn.microsoft.com/en-us/library/7c5ka91b(v=vs.80).aspx",children:(0,o.jsx)(t.code,{children:"internal"})})," setters..."]})}function p(e={}){let{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},50065:function(e,t,i){i.d(t,{Z:function(){return s},a:function(){return a}});var n=i(67294);let o={},r=n.createContext(o);function a(e){let t=n.useContext(r);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),n.createElement(r.Provider,{value:t},e.children)}},76023:function(e){e.exports=JSON.parse('{"permalink":"/simple-technique-for-initialising","editUrl":"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2012-04-16-simple-technique-for-initialising/index.md","source":"@site/blog/2012-04-16-simple-technique-for-initialising/index.md","title":"A Simple Technique for Initialising Properties with Internal Setters for Unit Testing","description":"Refactoring a legacy app includes adding unit tests, but properties with internal setters pose a problem. John explores various approaches.","date":"2012-04-16T00:00:00.000Z","tags":[{"inline":false,"label":"Automated Testing","permalink":"/tags/automated-testing","description":"How to perform the automation of tests."}],"readingTime":5.7,"hasTruncateMarker":true,"authors":[{"name":"John Reilly","title":"OSS Engineer - TypeScript, Azure, React, Node.js, .NET","url":"https://johnnyreilly.com/about","imageURL":"https://johnnyreilly.com/img/profile.jpg","key":"johnnyreilly","page":null}],"frontMatter":{"slug":"simple-technique-for-initialising","title":"A Simple Technique for Initialising Properties with Internal Setters for Unit Testing","authors":"johnnyreilly","tags":["automated testing"],"hide_table_of_contents":false,"description":"Refactoring a legacy app includes adding unit tests, but properties with internal setters pose a problem. John explores various approaches."},"unlisted":false,"prevItem":{"title":"JSHint - Customising your hurt feelings","permalink":"/jshint-customising-your-hurt-feelings"},"nextItem":{"title":"Making PDFs from HTML in C# using WKHTMLtoPDF","permalink":"/making-pdfs-from-html-in-c-using"}}')}}]);