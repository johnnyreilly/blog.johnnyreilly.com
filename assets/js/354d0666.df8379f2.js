"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([[48521],{23997:t=>{t.exports=JSON.parse('{"permalink":"/jshint-customising-your-hurt-feelings","editUrl":"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2012-04-23-jshint-customising-your-hurt-feelings/index.md","source":"@site/blog/2012-04-23-jshint-customising-your-hurt-feelings/index.md","title":"JSHint - Customising your hurt feelings","description":"JSHint is a tool for evaluating JavaScript code quality. Its configurable, has an extension for Visual Studio and is better than JSLint.","date":"2012-04-23T00:00:00.000Z","tags":[{"inline":false,"label":"JavaScript","permalink":"/tags/javascript","description":"The JavaScript programming language."}],"readingTime":4.74,"hasTruncateMarker":true,"authors":[{"name":"John Reilly","title":"OSS Engineer - TypeScript, Azure, React, Node.js, .NET","url":"https://johnnyreilly.com/about","imageURL":"https://johnnyreilly.com/img/profile.jpg","key":"johnnyreilly","page":null}],"frontMatter":{"slug":"jshint-customising-your-hurt-feelings","title":"JSHint - Customising your hurt feelings","authors":"johnnyreilly","tags":["javascript"],"hide_table_of_contents":false,"description":"JSHint is a tool for evaluating JavaScript code quality. Its configurable, has an extension for Visual Studio and is better than JSLint."},"unlisted":false,"prevItem":{"title":"Beg, Steal or Borrow a Decent JavaScript DateTime Converter","permalink":"/beg-steal-or-borrow-decent-javascript"},"nextItem":{"title":"A Simple Technique for Initialising Properties with Internal Setters for Unit Testing","permalink":"/simple-technique-for-initialising"}}')},28453:(t,e,i)=>{i.d(e,{R:()=>s,x:()=>r});var n=i(96540);const o={},a=n.createContext(o);function s(t){const e=n.useContext(a);return n.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function r(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(o):t.components||o:s(t.components),n.createElement(a.Provider,{value:e},t.children)}},53332:(t,e,i)=>{i.d(e,{A:()=>n});const n=i.p+"assets/images/JSLint-8f63767579064fce2f1881bc45bb1f11.webp"},85632:(t,e,i)=>{i.r(e),i.d(e,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>n,toc:()=>c});var n=i(23997),o=i(74848),a=i(28453);const s={slug:"jshint-customising-your-hurt-feelings",title:"JSHint - Customising your hurt feelings",authors:"johnnyreilly",tags:["javascript"],hide_table_of_contents:!1,description:"JSHint is a tool for evaluating JavaScript code quality. Its configurable, has an extension for Visual Studio and is better than JSLint."},r=void 0,l={authorsImageUrls:[void 0]},c=[];function u(t){const e={a:"a",img:"img",p:"p",...(0,a.R)(),...t.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(e.p,{children:["As I've started making greater use of JavaScript to give a richer GUI experience the amount of JS in my ASP.NET apps has unsurprisingly ballooned. If I'm honest, I hadn't given much consideration to the code quality of my JavaScript in the past. However, if I was going to make increasing use of it (and given the way the web is going at the moment I'd say that's a given) I didn't think this was tenable position to maintain. A friend of mine works for ",(0,o.jsx)(e.a,{href:"http://www.coverity.com/",children:"Coverity"})," which is a company that provides tools for analysing code quality. I understand, from conversations with him, that their tools provide static analysis for compiled languages such as C++ / C# / Java etc. I was looking for something similar for JavaScript. Like many, I have read and loved ",(0,o.jsx)(e.a,{href:"http://www.amazon.com/JavaScript-Good-Parts-Douglas-Crockford/dp/0596517742",children:'Douglas Crockford\'s "JavaScript: The Good Parts"'}),"; it is by some margin the most useful and interesting software related book I have read.So I was aware that Crockford had come up with his own JavaScript code quality tool called ",(0,o.jsx)(e.a,{href:"http://www.jslint.com/",children:"JSLint"}),". JSLint is quite striking when you first encounter it:"]}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.img,{src:i(53332).A+"",width:"320",height:"192",loading:"lazy"})})]})}function h(t={}){const{wrapper:e}={...(0,a.R)(),...t.components};return e?(0,o.jsx)(e,{...t,children:(0,o.jsx)(u,{...t})}):u(t)}}}]);