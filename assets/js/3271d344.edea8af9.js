"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([[66435],{14129:(e,t,i)=>{i.d(t,{A:()=>s});const s=i.p+"assets/images/title-image-c27519b13ccfb42822abd1b70624ae01.png"},19439:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var s=i(64521),n=i(74848),r=i(28453);const o={slug:"typescript-5-1-declaring-jsx-element-types",title:"TypeScript 5.1: declaring JSX element types",authors:"johnnyreilly",tags:["react","typescript"],image:"./title-image.png",description:"With TypeScript 5.1, it becomes possible for libraries to control what types are used for JSX elements. This post looks at why this matters.",hide_table_of_contents:!1},a=void 0,l={image:i(14129).A,authorsImageUrls:[void 0]},p=[];function c(e){const t={a:"a",img:"img",p:"p",strong:"strong",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["A new feature arrives with TypeScript 5.1, ",(0,n.jsx)(t.a,{href:"https://devblogs.microsoft.com/typescript/announcing-typescript-5-1-beta/#decoupled-type-checking-between-jsx-elements-and-jsx-tag-types",children:'it is described as "Decoupled Type-Checking Between JSX Elements and JSX Tag Types"'}),"."]}),"\n",(0,n.jsx)(t.p,{children:"It's all about handing control of JSX type definitions to libraries. With this feature, libraries can control what types are used for JSX elements. Why does this matter? Great question! Until version 5.1, TypeScript did an imperfect job of representing what is possible with JSX. This feature allows libraries to do a better job of that, and we'll look into it in this post."}),"\n",(0,n.jsxs)(t.p,{children:["It's probably worth saying, that this is a complicated feature. If you don't understand it (and as the author of this post I'll confess that I had to work quite hard to understand it), ",(0,n.jsx)(t.strong,{children:"that is okay"}),". This is a low level feature that is only likely to be used by library / type definition authors. It's a primitive that will unlock possibilites for people writing JSX - but it's something that people will mainly feel the benefit of, without directly doing anything themselves, or necessarily noticing that things have changed for the better."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"title image reading &quot;TypeScript 5.1: declaring JSX element types&quot; with the TypeScript logo",src:i(66050).A+"",width:"800",height:"450",loading:"lazy"})})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>o,x:()=>a});var s=i(96540);const n={},r=s.createContext(n);function o(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),s.createElement(r.Provider,{value:t},e.children)}},64521:e=>{e.exports=JSON.parse('{"permalink":"/typescript-5-1-declaring-jsx-element-types","editUrl":"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2023-07-09-typescript-5-1-declaring-jsx-element-types/index.md","source":"@site/blog/2023-07-09-typescript-5-1-declaring-jsx-element-types/index.md","title":"TypeScript 5.1: declaring JSX element types","description":"With TypeScript 5.1, it becomes possible for libraries to control what types are used for JSX elements. This post looks at why this matters.","date":"2023-07-09T00:00:00.000Z","tags":[{"inline":false,"label":"React","permalink":"/tags/react","description":"The React library."},{"inline":false,"label":"TypeScript","permalink":"/tags/typescript","description":"The TypeScript programming language."}],"readingTime":5.57,"hasTruncateMarker":true,"authors":[{"name":"John Reilly","title":"OSS Engineer - TypeScript, Azure, React, Node.js, .NET","url":"https://johnnyreilly.com/about","imageURL":"https://johnnyreilly.com/img/profile-2025.jpg","key":"johnnyreilly","page":null}],"frontMatter":{"slug":"typescript-5-1-declaring-jsx-element-types","title":"TypeScript 5.1: declaring JSX element types","authors":"johnnyreilly","tags":["react","typescript"],"image":"./title-image.png","description":"With TypeScript 5.1, it becomes possible for libraries to control what types are used for JSX elements. This post looks at why this matters.","hide_table_of_contents":false},"unlisted":false,"prevItem":{"title":"Azure Container Apps, Bicep, bring your own certificates and custom domains","permalink":"/azure-container-apps-bicep-bring-your-own-certificates-custom-domains"},"nextItem":{"title":"Azure Container Apps, Bicep, managed certificates and custom domains","permalink":"/azure-container-apps-bicep-managed-certificates-custom-domains"}}')},66050:(e,t,i)=>{i.d(t,{A:()=>s});const s=i.p+"assets/images/title-image-c27519b13ccfb42822abd1b70624ae01.png"}}]);