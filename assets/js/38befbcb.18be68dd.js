"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([[34526],{15891:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/title-image-c5f5559b43b1b3e7c3219905fa5e92ae.png"},17438:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/defaultazurecredentialauthflow-548aef2d21b3b534c26973884635b9f1.svg"},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>l});var i=t(96540);const r={},a=i.createContext(r);function s(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(a.Provider,{value:n},e.children)}},34147:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var i=t(35933),r=t(74848),a=t(28453);const s={slug:"azure-devops-with-defaultazurecredential",title:"Azure DevOps: using DefaultAzureCredential in an Azure Pipeline with AzureCLI@2",authors:"johnnyreilly",tags:["typescript","azure devops","node.js"],image:"./title-image.png",hide_table_of_contents:!1,description:"How to use DefaultAzureCredential in an Azure DevOps pipeline in the same way as you can locally."},l=void 0,o={image:t(15891).A,authorsImageUrls:[void 0]},c=[{value:"What is <code>DefaultAzureCredential</code>?",id:"what-is-defaultazurecredential",level:2},{value:"Why have you told me about <code>EnvironmentCredential</code> and <code>AzureCliCredential</code>?",id:"why-have-you-told-me-about-environmentcredential-and-azureclicredential",level:2},{value:"Using the <code>AzureCLI@2</code> task with <code>AzureCliCredential</code>",id:"using-the-azurecli2-task-with-azureclicredential",level:2},{value:"Using the <code>AzureCLI@2</code> task with <code>EnvironmentCredential</code>",id:"using-the-azurecli2-task-with-environmentcredential",level:2},{value:"Conclusion",id:"conclusion",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["I frequently build scripts that work against Azure resources using the ",(0,r.jsx)(n.a,{href:"https://github.com/Azure/azure-sdk-for-js",children:"Azure SDK for JavaScript"}),". I use the ",(0,r.jsx)(n.a,{href:"https://learn.microsoft.com/en-gb/dotnet/azure/sdk/authentication/credential-chains?tabs=dac#defaultazurecredential-overview",children:(0,r.jsx)(n.code,{children:"DefaultAzureCredential"})})," to authenticate against Azure resources - this is also available in other platforms such as .NET."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"title image reading &quot;Azure DevOps: using DefaultAzureCredential in an Azure Pipeline with AzureCLI@2&quot; with an Azure / Azure DevOps logos",src:t(93640).A+"",width:"800",height:"450",loading:"lazy"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"DefaultAzureCredential"})," is a great way to authenticate locally; I can ",(0,r.jsx)(n.code,{children:"az login"})," and then run my script, safe in the knowledge that the ",(0,r.jsx)(n.code,{children:"DefaultAzureCredential"})," will authenticate successfully. However, how can I use the ",(0,r.jsx)(n.code,{children:"DefaultAzureCredential"})," in an Azure DevOps pipeline?"]}),"\n",(0,r.jsxs)(n.p,{children:["This post will show you how to use the ",(0,r.jsx)(n.code,{children:"DefaultAzureCredential"})," in an Azure DevOps pipeline, specifically by using the ",(0,r.jsx)(n.code,{children:"AzureCLI@2"})," task."]}),"\n",(0,r.jsxs)(n.h2,{id:"what-is-defaultazurecredential",children:["What is ",(0,r.jsx)(n.code,{children:"DefaultAzureCredential"}),"?"]}),"\n",(0,r.jsx)(n.p,{children:"To quote the documentation:"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"DefaultAzureCredential"})," is an opinionated, preconfigured chain of credentials. It's designed to support many environments, along with the most common authentication flows and developer tools. In graphical form, the underlying chain looks like this:"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"an image representing the various entries in the chain",src:t(17438).A+"",width:"1445",height:"274",loading:"lazy"})}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["The first credential in the chain is ",(0,r.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/dotnet/api/azure.identity.environmentcredential?view=azure-dotnet&preserve-view=true",children:(0,r.jsx)(n.code,{children:"EnvironmentCredential"})}),", which looks for environment variables to authenticate. This means that if you set the right environment variables, you can use ",(0,r.jsx)(n.code,{children:"DefaultAzureCredential"})," and it will authenticate with them."]}),"\n",(0,r.jsxs)(n.p,{children:["The specific environment variables that ",(0,r.jsx)(n.code,{children:"DefaultAzureCredential"})," looks for are:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"AZURE_TENANT_ID"})," - The Microsoft Entra tenant (directory) ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"AZURE_CLIENT_ID"})," - The client (application) ID of an App Registration in the tenant."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"AZURE_CLIENT_SECRET"})," - A client secret that was generated for the App Registration."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["The fifth credential in the chain is ",(0,r.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/dotnet/api/azure.identity.azureclicredential?view=azure-dotnet&preserve-view=true",children:(0,r.jsx)(n.code,{children:"AzureCliCredential"})}),", which uses the Azure CLI to authenticate. This means that if you have already authenticated using ",(0,r.jsx)(n.code,{children:"az login"}),", you can use ",(0,r.jsx)(n.code,{children:"DefaultAzureCredential"})," without setting any environment variables."]}),"\n",(0,r.jsxs)(n.h2,{id:"why-have-you-told-me-about-environmentcredential-and-azureclicredential",children:["Why have you told me about ",(0,r.jsx)(n.code,{children:"EnvironmentCredential"})," and ",(0,r.jsx)(n.code,{children:"AzureCliCredential"}),"?"]}),"\n",(0,r.jsxs)(n.p,{children:["Great question! When I'm developing locally, I can use ",(0,r.jsx)(n.code,{children:"DefaultAzureCredential"})," without thinking further about it. I run ",(0,r.jsx)(n.code,{children:"az login"})," and then run my script. ",(0,r.jsx)(n.code,{children:"DefaultAzureCredential"})," will do what I need."]}),"\n",(0,r.jsxs)(n.p,{children:["You can make use of ",(0,r.jsx)(n.code,{children:"AzureCliCredential"}),", both locally and in an Azure DevOps pipeline, and it can be used for authentication as long as you have a service connection set up in Azure DevOps that uses the same credentials as your local ",(0,r.jsx)(n.code,{children:"az login"}),". Should you need it, ",(0,r.jsx)(n.code,{children:"EnvironmentCredential"})," is another option, and we'll demonstrate it too."]}),"\n",(0,r.jsxs)(n.p,{children:["The nice thing about ",(0,r.jsx)(n.code,{children:"DefaultAzureCredential"})," is that it supports both approaches, so you can use it in your code without having to specifically cater for the credential type being used."]}),"\n",(0,r.jsxs)(n.h2,{id:"using-the-azurecli2-task-with-azureclicredential",children:["Using the ",(0,r.jsx)(n.code,{children:"AzureCLI@2"})," task with ",(0,r.jsx)(n.code,{children:"AzureCliCredential"})]}),"\n",(0,r.jsxs)(n.p,{children:["To use the Azure CLI in an Azure DevOps pipeline, you can use the ",(0,r.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/azure/devops/pipelines/tasks/reference/azure-cli-v2?view=azure-pipelines",children:(0,r.jsx)(n.code,{children:"AzureCLI@2"})})," task. This task allows you to run Azure CLI commands in your pipeline, given it is configured to use a service connection that has the necessary permissions to access your Azure resources."]}),"\n",(0,r.jsx)(n.p,{children:"Consider the following example pipeline YAML:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yml",children:"- task: AzureCLI@2\n  displayName: Run with AzureCliCredential\n  inputs:\n    azureSubscription: myServiceConnection # this is the name of your Azure service connection in Azure DevOps\n    scriptType: bash\n    scriptLocation: inlineScript\n    inlineScript: npm start # where `npm start` is your command that uses DefaultAzureCredential\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The above will run the ",(0,r.jsx)(n.code,{children:"npm start"})," command in the context of the Azure CLI. We won't document it here, but imagine the ",(0,r.jsx)(n.code,{children:"npm start"})," command runs a Node.js script which makes use of ",(0,r.jsx)(n.code,{children:"DefaultAzureCredential"}),". The supplied service connection will authenticate using the credentials of the  associated service principal. When the code runs and ",(0,r.jsx)(n.code,{children:"DefaultAzureCredential"})," is used, the ",(0,r.jsx)(n.code,{children:"AzureCliCredential"})," will be used to authenticate, as at this point the pipeline is effectively a logged user with the Azure CLI."]}),"\n",(0,r.jsxs)(n.h2,{id:"using-the-azurecli2-task-with-environmentcredential",children:["Using the ",(0,r.jsx)(n.code,{children:"AzureCLI@2"})," task with ",(0,r.jsx)(n.code,{children:"EnvironmentCredential"})]}),"\n",(0,r.jsxs)(n.p,{children:["If, for whatever reason, you want to use ",(0,r.jsx)(n.code,{children:"EnvironmentCredential"})," in your Azure DevOps pipeline, you can do so by setting the necessary environment variables in the pipeline. I don't have a specific reason to do this, but you may. To achieve this, you can modify the approach as follows:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yml",children:'- task: AzureCLI@2\n  displayName: Set service principal variables\n  inputs:\n    azureSubscription: myServiceConnection # this is the name of your Azure service connection in Azure DevOps\n    scriptType: bash\n    scriptLocation: inlineScript\n    addSpnToEnvironment: true\n    inlineScript: |\n      echo "##vso[task.setvariable variable=AZURE_CLIENT_ID;issecret=true]${servicePrincipalId}"\n      echo "##vso[task.setvariable variable=AZURE_CLIENT_SECRET;issecret=true]${servicePrincipalKey}"\n      echo "##vso[task.setvariable variable=AZURE_SUBSCRIPTION_ID;issecret=true]$(az account show --query \'id\' -o tsv)"\n      echo "##vso[task.setvariable variable=AZURE_TENANT_ID;issecret=true]${tenantId}"\n\n- bash: npm start\n  displayName: \'Run with EnvironmentCredential\'\n  env:\n    #\xa0see https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/identity/Azure.Identity/README.md#environment-variables\n    AZURE_CLIENT_ID: $(AZURE_CLIENT_ID)\n    AZURE_CLIENT_SECRET: $(AZURE_CLIENT_SECRET)\n    AZURE_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID)\n    AZURE_TENANT_ID: $(AZURE_TENANT_ID) # this is optional and not necessary for EnvironmentCredential to work\n'})}),"\n",(0,r.jsxs)(n.p,{children:["You can see this is a little different from the previous example. We're now using the ",(0,r.jsx)(n.code,{children:"AzureCLI@2"})," task to set the necessary environment variables for ",(0,r.jsx)(n.code,{children:"DefaultAzureCredential"})," to work. The ",(0,r.jsx)(n.code,{children:"addSpnToEnvironment"})," input is set to ",(0,r.jsx)(n.code,{children:"true"}),", which ensures that the service principal's credentials are added to the environment. We then map those credentials to the names that the ",(0,r.jsx)(n.code,{children:"DefaultAzureCredential"})," expects and write them to the pipeline to be used in the next task."]}),"\n",(0,r.jsxs)(n.p,{children:["The second task is a simple bash task that runs ",(0,r.jsx)(n.code,{children:"npm start"}),", but it now has an ",(0,r.jsx)(n.code,{children:"env"})," section that sets the necessary environment variables for ",(0,r.jsx)(n.code,{children:"DefaultAzureCredential"})," to work. The environment variables are set using the variables exposed by the previous task."]}),"\n",(0,r.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,r.jsxs)(n.p,{children:["In this post, we explored how to use ",(0,r.jsx)(n.code,{children:"DefaultAzureCredential"})," in an Azure DevOps pipeline, specifically when using the ",(0,r.jsx)(n.code,{children:"AzureCLI@2"})," task. We discussed the two main approaches: using ",(0,r.jsx)(n.code,{children:"AzureCliCredential"})," and ",(0,r.jsx)(n.code,{children:"EnvironmentCredential"}),", and how to configure the pipeline to support both."]}),"\n",(0,r.jsxs)(n.p,{children:["It's worth noting that whilst my own use case is JavaScript / TypeScript, the same principles apply to other languages that support ",(0,r.jsx)(n.code,{children:"DefaultAzureCredential"}),", such as .NET. The key takeaway is that you can use ",(0,r.jsx)(n.code,{children:"DefaultAzureCredential"})," in an Azure DevOps pipeline just as easily as you can locally, allowing for a consistent development and deployment experience."]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},35933:e=>{e.exports=JSON.parse('{"permalink":"/azure-devops-with-defaultazurecredential","editUrl":"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2025-07-18-azure-devops-with-defaultazurecredential/index.md","source":"@site/blog/2025-07-18-azure-devops-with-defaultazurecredential/index.md","title":"Azure DevOps: using DefaultAzureCredential in an Azure Pipeline with AzureCLI@2","description":"How to use DefaultAzureCredential in an Azure DevOps pipeline in the same way as you can locally.","date":"2025-07-18T00:00:00.000Z","tags":[{"inline":false,"label":"TypeScript","permalink":"/tags/typescript","description":"The TypeScript programming language."},{"inline":false,"label":"Azure DevOps","permalink":"/tags/azure-devops","description":"The Azure DevOps suite of tools."},{"inline":false,"label":"Node.js","permalink":"/tags/node-js","description":"The Node.js runtime."}],"readingTime":5.11,"hasTruncateMarker":true,"authors":[{"name":"John Reilly","title":"OSS Engineer - TypeScript, Azure, React, Node.js, .NET","url":"https://johnnyreilly.com/about","imageURL":"https://johnnyreilly.com/img/profile.jpg","key":"johnnyreilly","page":null}],"frontMatter":{"slug":"azure-devops-with-defaultazurecredential","title":"Azure DevOps: using DefaultAzureCredential in an Azure Pipeline with AzureCLI@2","authors":"johnnyreilly","tags":["typescript","azure devops","node.js"],"image":"./title-image.png","hide_table_of_contents":false,"description":"How to use DefaultAzureCredential in an Azure DevOps pipeline in the same way as you can locally."},"unlisted":false,"nextItem":{"title":"Azure DevOps: pull requests and dynamic required reviewers","permalink":"/azure-devops-pull-requests-dynamic-required-reviewers"}}')},93640:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/title-image-c5f5559b43b1b3e7c3219905fa5e92ae.png"}}]);