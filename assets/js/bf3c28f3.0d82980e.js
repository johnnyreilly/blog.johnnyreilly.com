"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([["9535"],{43066:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return s},default:function(){return c},frontMatter:function(){return r},metadata:function(){return i},toc:function(){return d}});var i=n(41042),o=n(85893),a=n(50065);let r={slug:"ngvalidationfor-baby-steps",title:"NgValidationFor Baby Steps",authors:"johnnyreilly",tags:["angularjs","asp.net"],hide_table_of_contents:!1,description:"The NgValidationFor project translates data annotations to Angular validation directive attributes while minimising dependencies."},s=void 0,l={authorsImageUrls:[void 0]},d=[{value:"Getting up and running",id:"getting-up-and-running",level:2},{value:"So what have we got?",id:"so-what-have-we-got",level:2},{value:"So what now?",id:"so-what-now",level:2}];function h(e){let t={a:"a",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:["I thought as I start the ",(0,o.jsx)(t.a,{href:"/tonight-ill-start-open-source-project",children:"NgValidationFor project"})," I'd journal my progress. I'm writing this with someone particular in mind: me. Specifically, me in 2 years who will no doubt wonder why I made some of the choices I did. Everyone else, move along now - nothing to see. Unless the inner workings of someone else's mind are interesting to you... In which case: welcome!"]}),"\n",(0,o.jsx)(t.h2,{id:"getting-up-and-running",children:"Getting up and running"}),"\n",(0,o.jsxs)(t.p,{children:["I've got a project on ",(0,o.jsx)(t.a,{href:"https://github.com/johnnyreilly/NgValidationFor",children:"GitHub"})," and I'm starting to think about implementations. One thing that bit me on ",(0,o.jsx)(t.a,{href:"http://johnnyreilly.github.io/jQuery.Validation.Unobtrusive.Native/",children:"jVUN"})," was being tied to a specific version of ASP.Net MVC. For each major release of ASP.Net MVC I needed separate builds / NuGet packages and the like. A pain. Particularly when it came to bug fixes for prior versions - the breaking changes with each version of MVC meant far more work was required when it came to shipping fixes for MVC 4 / MVC 3."]}),"\n",(0,o.jsx)(t.p,{children:"So with that in mind I'm going to try and limit my dependencies. I'm not saying I will never depend upon ASP.Net MVC - I may if I think it becomes useful to give the users a nicer API or if there's another compelling reason. But to start with I'm just going to focus on the translation of data annotations to Angular validation directive attributes."}),"\n",(0,o.jsxs)(t.p,{children:["To that end I'm going to begin with just a class library and an associated test project. I'm going to try and minimise the dependencies that NgValidationFor has. At least initially I may even see if I can sensibly avoid depending on ",(0,o.jsx)(t.code,{children:"System.Web"})," (mindful of the upcoming ASP.Net 5 changes). Let's see."]}),"\n",(0,o.jsx)(t.p,{children:"A little time passes......."}),"\n",(0,o.jsx)(t.h2,{id:"so-what-have-we-got",children:"So what have we got?"}),"\n",(0,o.jsxs)(t.p,{children:["My first efforts have resulted in the implementation of the ",(0,o.jsx)(t.code,{children:'<a href="https://msdn.microsoft.com/en-us/library/system.componentmodel.dataannotations.requiredattribute(v=vs.110).aspx">RequiredAttribute</a>'}),". This is the ",(0,o.jsx)(t.a,{href:"https://github.com/johnnyreilly/NgValidationFor/tree/6cf862a7638d3ed933cd0e075a1807b1414847da",children:"code right now"}),". It's made up of:"]}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsx)(t.li,{children:"NgValidationFor.Core - the core part of the project which converts data annotations into AngularJS 1.x validation directive attributes."}),"\n",(0,o.jsx)(t.li,{children:"NgValidationFor.Core.UnitTests - the unit tests for the core"}),"\n",(0,o.jsx)(t.li,{children:"NgValidationFor.Documentation - this is an ASP.Net MVC project which will become a documentation site for NgValidationFor. It also doubles as a way for me to try out NgValidationFor."}),"\n",(0,o.jsx)(t.li,{children:"NgValidationFor.Documentation.UnitTests - unit tests for the documentation (there's none yet as I'm still spiking - but when I'm a little clearer, they will be)"}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"How can it be used? Well fairly easily. Take this simple model:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-cs",children:"using System.ComponentModel.DataAnnotations;\n\nnamespace NgValidationFor.Documentation.Models\n{\n    public class RequiredDemoModel\n    {\n        [Required]\n        public string RequiredField { get; set; }\n    }\n}\n"})}),"\n",(0,o.jsxs)(t.p,{children:["When used in an MVC View for which ",(0,o.jsx)(t.code,{children:"RequiredDemoModel"})," is the Model, NgValiditionFor can be used thusly:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-html",children:'@using NgValidationFor.Core @using NgValidationFor.Documentation.Models @model\nRequiredDemoModel\n<input\n  type="text"\n  name="userName"\n  ng-model="user.name"\n  @Html.Raw(Model.GetAttributes(x=""\n/>\nModel.RequiredField)) >\n'})}),"\n",(0,o.jsx)(t.p,{children:"Which results in this HTML:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-html",children:'<input type="text" name="userName" ng-model="user.name" required="required" />\n'})}),"\n",(0,o.jsx)(t.p,{children:"Tada!!!! It works."}),"\n",(0,o.jsx)(t.h2,{id:"so-what-now",children:"So what now?"}),"\n",(0,o.jsxs)(t.p,{children:["Yes it works, but I'm not going to pretend it's pretty. I don't like having to wrap the usage of NgValidationFor with ",(0,o.jsx)(t.code,{children:"Html.Raw(...)"}),". I'm having to do that because ",(0,o.jsx)(t.code,{children:"GetAttributes"})," returns a ",(0,o.jsx)(t.code,{children:"string"}),". This string is then HTML encoded by MVC. To avoid my quotation marks turning into ",(0,o.jsx)(t.code,{children:"&amp;quot;"})," I need to actually be exposing an ",(0,o.jsx)(t.code,{children:'<a href="https://msdn.microsoft.com/en-us/library/system.web.ihtmlstring(v=vs.110).aspx">IHtmlString</a>'}),". So I'm going to need to depend upon ",(0,o.jsx)(t.code,{children:"System.Web"}),". That's not so bad - at least I'm not tied to a specific MVC version."]}),"\n",(0,o.jsxs)(t.p,{children:["I'm not too keen on the implementation I've come up with for NgValidationFor either. It's a single static method at the minute which does everything. It breaks the ",(0,o.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Single_responsibility_principle",children:"Single Responsibility Priniciple"})," and the ",(0,o.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Open/closed_principle",children:"Open/Closed Principle"}),". I need to take a look at that - I want people to be able to extend this and I need to think about a good and simple way to achieve that."]}),"\n",(0,o.jsxs)(t.p,{children:["Finally, usage. ",(0,o.jsx)(t.code,{children:"Model.GetAttributes(x =&gt; Model.RequiredField)"})," feels wrong to me. I think I'm happy with having this used as an extension method but it needs to be clearer what's happening. Perhaps ",(0,o.jsx)(t.code,{children:"Model.NgValidationFor(x =&gt; Model.RequiredField)"})," would be better. I need to try a few things out and come up with a nicer way to use NgValidationFor."]})]})}function c(e={}){let{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},50065:function(e,t,n){n.d(t,{Z:function(){return s},a:function(){return r}});var i=n(67294);let o={},a=i.createContext(o);function r(e){let t=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(a.Provider,{value:t},e.children)}},41042:function(e){e.exports=JSON.parse('{"permalink":"/ngvalidationfor-baby-steps","editUrl":"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2015-05-11-ngvalidationfor-baby-steps/index.md","source":"@site/blog/2015-05-11-ngvalidationfor-baby-steps/index.md","title":"NgValidationFor Baby Steps","description":"The NgValidationFor project translates data annotations to Angular validation directive attributes while minimising dependencies.","date":"2015-05-11T00:00:00.000Z","tags":[{"inline":false,"label":"Angular JS","permalink":"/tags/angularjs","description":"The original Angular JS framework."},{"inline":false,"label":"ASP.NET","permalink":"/tags/asp-net","description":"The web framework built by Microsoft."}],"readingTime":3.385,"hasTruncateMarker":true,"authors":[{"name":"John Reilly","title":"OSS Engineer - TypeScript, Azure, React, Node.js, .NET","url":"https://johnnyreilly.com/about","imageURL":"https://johnnyreilly.com/img/profile.jpg","key":"johnnyreilly","page":null}],"frontMatter":{"slug":"ngvalidationfor-baby-steps","title":"NgValidationFor Baby Steps","authors":"johnnyreilly","tags":["angularjs","asp.net"],"hide_table_of_contents":false,"description":"The NgValidationFor project translates data annotations to Angular validation directive attributes while minimising dependencies."},"unlisted":false,"prevItem":{"title":"Angular UI Bootstrap Datepicker Weirdness","permalink":"/angular-ui-bootstrap-datepicker-weirdness"},"nextItem":{"title":"A tale of Angular, html5mode, ASP.Net MVC and ASP.Net Web API","permalink":"/a-tale-of-angular-html5mode-aspnet-mvc"}}')}}]);