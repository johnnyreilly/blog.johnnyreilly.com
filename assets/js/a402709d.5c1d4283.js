"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([[32976],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},b=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(r),b=o,d=u["".concat(c,".").concat(b)]||u[b]||h[b]||a;return r?n.createElement(d,i(i({ref:t},p),{},{components:r})):n.createElement(d,i({ref:t},p))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=b;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}b.displayName="MDXCreateElement"},42794:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>d,frontMatter:()=>l,metadata:()=>s,toc:()=>u});r(67294);var n=r(3905);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})),e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}const l={slug:"fork-ts-checker-webpack-plugin-code",title:"fork-ts-checker-webpack-plugin code clickability",authors:"johnnyreilly",tags:["vs code","fork-ts-checker-webpack-plugin","ts-loader","webpack"],hide_table_of_contents:!1,description:"The `fork-ts-checker-webpack-plugin` can speed up builds, but TypeScript errors in the terminal are not clickable. The cause and solution are explained."},c=void 0,s={permalink:"/fork-ts-checker-webpack-plugin-code",editUrl:"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2017-09-12-fork-ts-checker-webpack-plugin-code/index.md",source:"@site/blog/2017-09-12-fork-ts-checker-webpack-plugin-code/index.md",title:"fork-ts-checker-webpack-plugin code clickability",description:"The `fork-ts-checker-webpack-plugin` can speed up builds, but TypeScript errors in the terminal are not clickable. The cause and solution are explained.",date:"2017-09-12T00:00:00.000Z",formattedDate:"September 12, 2017",tags:[{label:"vs code",permalink:"/tags/vs-code"},{label:"fork-ts-checker-webpack-plugin",permalink:"/tags/fork-ts-checker-webpack-plugin"},{label:"ts-loader",permalink:"/tags/ts-loader"},{label:"webpack",permalink:"/tags/webpack"}],readingTime:2.09,hasTruncateMarker:!0,authors:[{name:"John Reilly",title:"OSS Engineer - TypeScript, Azure, React, Node.js, .NET",url:"https://johnnyreilly.com/about",imageURL:"https://johnnyreilly.com/img/profile.jpg",key:"johnnyreilly"}],frontMatter:{slug:"fork-ts-checker-webpack-plugin-code",title:"fork-ts-checker-webpack-plugin code clickability",authors:"johnnyreilly",tags:["vs code","fork-ts-checker-webpack-plugin","ts-loader","webpack"],hide_table_of_contents:!1,description:"The `fork-ts-checker-webpack-plugin` can speed up builds, but TypeScript errors in the terminal are not clickable. The cause and solution are explained."},prevItem:{title:"Working with Extrahop on webpack and ts-loader",permalink:"/working-with-extrahop-on-webpack-and-ts"},nextItem:{title:"TypeScript + webpack: Super Pursuit Mode",permalink:"/typescript-webpack-super-pursuit-mode"}},p={authorsImageUrls:[void 0]},u=[],h={toc:u},b="wrapper";function d(e){var{components:t}=e,l=i(e,["components"]);return(0,n.kt)(b,a(function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},n=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),n.forEach((function(t){o(e,t,r[t])}))}return e}({},h,l),{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"My name is John Reilly and I'm a VS Code addict. There I said it. I'm also a big fan of TypeScript and webpack. I've recently switched to using the awesome ",(0,n.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/fork-ts-checker-webpack-plugin"},(0,n.kt)("inlineCode",{parentName:"a"},"fork-ts-checker-webpack-plugin"))," to speed up my builds."),(0,n.kt)("p",null,"One thing I love is using VS Code both as my editor and my terminal. Using the fork-ts-checker-webpack-plugin I noticed a problem when TypeScript errors showed up in the terminal:"),(0,n.kt)("p",null,(0,n.kt)("img",{loading:"eager",fetchpriority:"high",src:r(24901).Z,width:"640",height:"317"})),(0,n.kt)("p",null,"Take a look at the red file location in the console above. What's probably not obvious from the above screenshot is that it is ",(0,n.kt)("strong",{parentName:"p"},"not clickable"),". I'm used to being able to click on link in the console and bounce straight to the error location. It's a really productive workflow; see a problem, click on it, be taken to the cause, fix it."),(0,n.kt)("p",null,'I want to click on "',(0,n.kt)("inlineCode",{parentName:"p"},"C:/source/ts-loader/examples/fork-ts-checker/src/fileWithError.ts(2,7)"),'" and have VS Code open up ',(0,n.kt)("inlineCode",{parentName:"p"},"fileWithError.ts"),", ideally at line 2 and column 7. But here it's not working. Why?"),(0,n.kt)("p",null,"Well, I initially got this slightly wrong; I thought it was about the formatting of the file path. It is. I thought that having the line number and column number in parentheses after the path (eg ",(0,n.kt)("inlineCode",{parentName:"p"},'"(2,7)"'),") was screwing over VS Code. It isn't. Something else is. Look closely at the screenshot; what do you see? Do you notice how the colour of the line number / column number is different to the path? In the words of ",(0,n.kt)("a",{parentName:"p",href:"https://youtu.be/281jMxOvP5k"},"Delbert Wilkins"),": that's crucial."),(0,n.kt)("p",null,"Yup, the colour change between the path and the line number / column number is the problem. I've submitted a ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/Realytics/fork-ts-checker-webpack-plugin/pull/48"},"PR to fix this")," that I hope will get merged. In the meantime you can avoid this issue by dropping this code into your ",(0,n.kt)("inlineCode",{parentName:"p"},"webpack.config.js"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"var chalk = require('chalk');\nvar os = require('os');\n\nfunction clickableFormatter(message, useColors) {\n  var colors = new chalk.constructor({ enabled: useColors });\n  var messageColor = message.isWarningSeverity()\n    ? colors.bold.yellow\n    : colors.bold.red;\n  var fileAndNumberColor = colors.bold.cyan;\n  var codeColor = colors.grey;\n  return [\n    messageColor(message.getSeverity().toUpperCase() + ' in ') +\n      fileAndNumberColor(\n        message.getFile() +\n          '(' +\n          message.getLine() +\n          ',' +\n          message.getCharacter() +\n          ')',\n      ) +\n      messageColor(':'),\n\n    codeColor(message.getFormattedCode() + ': ') + message.getContent(),\n  ].join(os.EOL);\n}\n\nmodule.exports = {\n  // Other config...\n  module: {\n    rules: [\n      {\n        test: /\\.tsx?$/,\n        loader: 'ts-loader',\n        options: { transpileOnly: true },\n      },\n    ],\n  },\n  resolve: {\n    extensions: ['.ts', '.tsx', 'js'],\n  },\n  plugins: [\n    new ForkTsCheckerWebpackPlugin({ formatter: clickableFormatter }), // Here we get our clickability back\n  ],\n};\n")),(0,n.kt)("p",null,"With that in place, what do you we have? This:"),(0,n.kt)("p",null,(0,n.kt)("img",{loading:"lazy",src:r(50080).Z,width:"640",height:"317"})),(0,n.kt)("p",null,"VS Code clickability; it's a beautiful thing."))}d.isMDXComponent=!0},24901:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/Screenshot-2017-09-12-06.12.25-9cd139a9749bbda7fddd886baddfb66f.webp"},50080:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/Screenshot-2017-09-12-06.35.48-c91b2e9793b84bc772c93f9863362e4f.webp"}}]);