"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([[48175],{98462:(t,e,i)=>{i.r(e),i.d(e,{assets:()=>l,contentTitle:()=>r,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var a=i(74848),n=i(28453);const o={slug:"jquery-validate-native-unobtrusive-validation",title:"jQuery Validation - Native Unobtrusive Validation Support!",authors:"johnnyreilly",tags:["jquery"],hide_table_of_contents:!1,description:"Use HTML5 data attributes with jQuery Validation to simplify code and achieve validation unobtrusively. Ideal for dynamically added DOM elements."},r=void 0,s={permalink:"/jquery-validate-native-unobtrusive-validation",editUrl:"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2013-06-26-jquery-validate-native-unobtrusive-validation/index.md",source:"@site/blog/2013-06-26-jquery-validate-native-unobtrusive-validation/index.md",title:"jQuery Validation - Native Unobtrusive Validation Support!",description:"Use HTML5 data attributes with jQuery Validation to simplify code and achieve validation unobtrusively. Ideal for dynamically added DOM elements.",date:"2013-06-26T00:00:00.000Z",tags:[{label:"jquery",permalink:"/tags/jquery"}],readingTime:3.39,hasTruncateMarker:!0,authors:[{name:"John Reilly",title:"OSS Engineer - TypeScript, Azure, React, Node.js, .NET",url:"https://johnnyreilly.com/about",imageURL:"https://johnnyreilly.com/img/profile.jpg",key:"johnnyreilly"}],frontMatter:{slug:"jquery-validate-native-unobtrusive-validation",title:"jQuery Validation - Native Unobtrusive Validation Support!",authors:"johnnyreilly",tags:["jquery"],hide_table_of_contents:!1,description:"Use HTML5 data attributes with jQuery Validation to simplify code and achieve validation unobtrusively. Ideal for dynamically added DOM elements."},unlisted:!1,prevItem:{title:"How I'm Using Cassette part 3:Cassette and TypeScript Integration",permalink:"/how-im-using-cassette-part-3-typescript"},nextItem:{title:"How I'm Using Cassette part 2:Get Cassette to Serve Scripts in Dependency Order",permalink:"/how-im-using-cassette-part-2"}},l={authorsImageUrls:[void 0]},d=[];function u(t){const e={a:"a",p:"p",...(0,n.R)(),...t.components};return(0,a.jsxs)(e.p,{children:["Did you know that jQuery Validation natively supports the use of ",(0,a.jsx)(e.a,{href:"http://ejohn.org/blog/html-5-data-attributes/",children:"HTML 5 data attributes"})," to drive validation unobtrusively? Neither did I - I haven't seen any documentation for it. However, I was reading the ",(0,a.jsx)(e.a,{href:"https://github.com/jzaefferer/jquery-validation/blob/master/test/index.html",children:"jQuery Validation test suite"})," and that's what I spotted being used in some of the tests."]})}function c(t={}){const{wrapper:e}={...(0,n.R)(),...t.components};return e?(0,a.jsx)(e,{...t,children:(0,a.jsx)(u,{...t})}):u(t)}},28453:(t,e,i)=>{i.d(e,{R:()=>r,x:()=>s});var a=i(96540);const n={},o=a.createContext(n);function r(t){const e=a.useContext(o);return a.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function s(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(n):t.components||n:r(t.components),a.createElement(o.Provider,{value:e},t.children)}}}]);