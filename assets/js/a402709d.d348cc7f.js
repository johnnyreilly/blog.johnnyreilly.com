"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([[92268],{4852:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var o=n(48498),r=n(74848),i=n(28453);const s={slug:"fork-ts-checker-webpack-plugin-code",title:"fork-ts-checker-webpack-plugin code clickability",authors:"johnnyreilly",tags:["vs code","fork-ts-checker-webpack-plugin","ts-loader","webpack"],hide_table_of_contents:!1,description:"The `fork-ts-checker-webpack-plugin` can speed up builds, but TypeScript errors in the terminal are not clickable. The cause and solution are explained."},c=void 0,a={authorsImageUrls:[void 0]},l=[];function h(e){const t={a:"a",code:"code",img:"img",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["My name is John Reilly and I'm a VS Code addict. There I said it. I'm also a big fan of TypeScript and webpack. I've recently switched to using the awesome ",(0,r.jsx)(t.a,{href:"https://www.npmjs.com/package/fork-ts-checker-webpack-plugin",children:(0,r.jsx)(t.code,{children:"fork-ts-checker-webpack-plugin"})})," to speed up my builds."]}),"\n",(0,r.jsx)(t.p,{children:"One thing I love is using VS Code both as my editor and my terminal. Using the fork-ts-checker-webpack-plugin I noticed a problem when TypeScript errors showed up in the terminal:"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{src:n(13128).A+"",width:"640",height:"317",loading:"lazy"})}),"\n",(0,r.jsxs)(t.p,{children:["Take a look at the red file location in the console above. What's probably not obvious from the above screenshot is that it is ",(0,r.jsx)(t.strong,{children:"not clickable"}),". I'm used to being able to click on link in the console and bounce straight to the error location. It's a really productive workflow; see a problem, click on it, be taken to the cause, fix it."]}),"\n",(0,r.jsxs)(t.p,{children:['I want to click on "',(0,r.jsx)(t.code,{children:"C:/source/ts-loader/examples/fork-ts-checker/src/fileWithError.ts(2,7)"}),'" and have VS Code open up ',(0,r.jsx)(t.code,{children:"fileWithError.ts"}),", ideally at line 2 and column 7. But here it's not working. Why?"]}),"\n",(0,r.jsxs)(t.p,{children:["Well, I initially got this slightly wrong; I thought it was about the formatting of the file path. It is. I thought that having the line number and column number in parentheses after the path (eg ",(0,r.jsx)(t.code,{children:'"(2,7)"'}),") was screwing over VS Code. It isn't. Something else is. Look closely at the screenshot; what do you see? Do you notice how the colour of the line number / column number is different to the path? In the words of ",(0,r.jsx)(t.a,{href:"https://youtu.be/281jMxOvP5k",children:"Delbert Wilkins"}),": that's crucial."]}),"\n",(0,r.jsxs)(t.p,{children:["Yup, the colour change between the path and the line number / column number is the problem. I've submitted a ",(0,r.jsx)(t.a,{href:"https://github.com/Realytics/fork-ts-checker-webpack-plugin/pull/48",children:"PR to fix this"})," that I hope will get merged. In the meantime you can avoid this issue by dropping this code into your ",(0,r.jsx)(t.code,{children:"webpack.config.js"}),":"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:"var chalk = require('chalk');\nvar os = require('os');\n\nfunction clickableFormatter(message, useColors) {\n  var colors = new chalk.constructor({ enabled: useColors });\n  var messageColor = message.isWarningSeverity()\n    ? colors.bold.yellow\n    : colors.bold.red;\n  var fileAndNumberColor = colors.bold.cyan;\n  var codeColor = colors.grey;\n  return [\n    messageColor(message.getSeverity().toUpperCase() + ' in ') +\n      fileAndNumberColor(\n        message.getFile() +\n          '(' +\n          message.getLine() +\n          ',' +\n          message.getCharacter() +\n          ')',\n      ) +\n      messageColor(':'),\n\n    codeColor(message.getFormattedCode() + ': ') + message.getContent(),\n  ].join(os.EOL);\n}\n\nmodule.exports = {\n  // Other config...\n  module: {\n    rules: [\n      {\n        test: /\\.tsx?$/,\n        loader: 'ts-loader',\n        options: { transpileOnly: true },\n      },\n    ],\n  },\n  resolve: {\n    extensions: ['.ts', '.tsx', 'js'],\n  },\n  plugins: [\n    new ForkTsCheckerWebpackPlugin({ formatter: clickableFormatter }), // Here we get our clickability back\n  ],\n};\n"})}),"\n",(0,r.jsx)(t.p,{children:"With that in place, what do you we have? This:"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{src:n(27680).A+"",width:"640",height:"317",loading:"lazy"})}),"\n",(0,r.jsx)(t.p,{children:"VS Code clickability; it's a beautiful thing."})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},13128:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/Screenshot-2017-09-12-06.12.25-9cd139a9749bbda7fddd886baddfb66f.webp"},27680:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/Screenshot-2017-09-12-06.35.48-c91b2e9793b84bc772c93f9863362e4f.webp"},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>c});var o=n(96540);const r={},i=o.createContext(r);function s(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(i.Provider,{value:t},e.children)}},48498:e=>{e.exports=JSON.parse('{"permalink":"/fork-ts-checker-webpack-plugin-code","editUrl":"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2017-09-12-fork-ts-checker-webpack-plugin-code/index.md","source":"@site/blog/2017-09-12-fork-ts-checker-webpack-plugin-code/index.md","title":"fork-ts-checker-webpack-plugin code clickability","description":"The `fork-ts-checker-webpack-plugin` can speed up builds, but TypeScript errors in the terminal are not clickable. The cause and solution are explained.","date":"2017-09-12T00:00:00.000Z","tags":[{"inline":false,"label":"VS Code","permalink":"/tags/vs-code","description":"The Visual Studio Code editor."},{"inline":false,"label":"fork-ts-checker-webpack-plugin","permalink":"/tags/fork-ts-checker-webpack-plugin","description":"The fork-ts-checker-webpack-plugin for webpack."},{"inline":false,"label":"ts-loader","permalink":"/tags/ts-loader","description":"The TypeScript loader for webpack."},{"inline":false,"label":"webpack","permalink":"/tags/webpack","description":"The webpack module bundler."}],"readingTime":2.12,"hasTruncateMarker":true,"authors":[{"name":"John Reilly","title":"OSS Engineer - TypeScript, Azure, React, Node.js, .NET","url":"https://johnnyreilly.com/about","imageURL":"https://johnnyreilly.com/img/profile-2025.jpg","key":"johnnyreilly","page":null}],"frontMatter":{"slug":"fork-ts-checker-webpack-plugin-code","title":"fork-ts-checker-webpack-plugin code clickability","authors":"johnnyreilly","tags":["vs code","fork-ts-checker-webpack-plugin","ts-loader","webpack"],"hide_table_of_contents":false,"description":"The `fork-ts-checker-webpack-plugin` can speed up builds, but TypeScript errors in the terminal are not clickable. The cause and solution are explained."},"unlisted":false,"prevItem":{"title":"Working with Extrahop on webpack and ts-loader","permalink":"/working-with-extrahop-on-webpack-and-ts"},"nextItem":{"title":"TypeScript + webpack: Super Pursuit Mode","permalink":"/typescript-webpack-super-pursuit-mode"}}')}}]);