"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([["84141"],{27434:function(e,n,t){t.r(n),t.d(n,{assets:function(){return l},contentTitle:function(){return o},default:function(){return d},frontMatter:function(){return s},metadata:function(){return i},toc:function(){return c}});var i=t(8836),r=t(85893),a=t(50065);let s={slug:"semantic-versioning-and-definitely-typed",title:"Semantic Versioning and Definitely Typed",authors:"johnnyreilly",tags:["definitely typed","typescript"],image:"./i-must-break-you.webp",hide_table_of_contents:!1,description:"Definitely Typed lacks semantic versioning, causing build failures. Use specific package versions, and breaking changes can be positive."},o=void 0,l={image:t(23241).Z,authorsImageUrls:[void 0]},c=[];function p(e){let n={p:"p",...(0,a.a)(),...e.components};return(0,r.jsx)(n.p,{children:"This a tale of things that are and things that aren't. It's a tale of semantic versioning, the lack thereof and heartbreak. It's a story of terror and failing builds. But it has a bittersweet ending wherein our heroes learn a lesson and understand the need for compromise. We all come out better and wiser people. Hopefully there's something for everybody; let's start with an exciting opener and see where it goes..."})}function d(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},23241:function(e,n,t){t.d(n,{Z:function(){return i}});let i=t.p+"assets/images/i-must-break-you-6212db0b9e54e386eb08a58d0e170dd1.webp"},50065:function(e,n,t){t.d(n,{Z:function(){return o},a:function(){return s}});var i=t(67294);let r={},a=i.createContext(r);function s(e){let n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(a.Provider,{value:n},e.children)}},8836:function(e){e.exports=JSON.parse('{"permalink":"/semantic-versioning-and-definitely-typed","editUrl":"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2018-09-15-semantic-versioning-and-definitely-typed/index.md","source":"@site/blog/2018-09-15-semantic-versioning-and-definitely-typed/index.md","title":"Semantic Versioning and Definitely Typed","description":"Definitely Typed lacks semantic versioning, causing build failures. Use specific package versions, and breaking changes can be positive.","date":"2018-09-15T00:00:00.000Z","tags":[{"inline":false,"label":"Definitely Typed","permalink":"/tags/definitely-typed","description":"The Definitely Typed project for TypeScript type definitions"},{"inline":false,"label":"TypeScript","permalink":"/tags/typescript","description":"The TypeScript programming language."}],"readingTime":4.61,"hasTruncateMarker":true,"authors":[{"name":"John Reilly","title":"OSS Engineer - TypeScript, Azure, React, Node.js, .NET","url":"https://johnnyreilly.com/about","imageURL":"https://johnnyreilly.com/img/profile.jpg","key":"johnnyreilly","page":null}],"frontMatter":{"slug":"semantic-versioning-and-definitely-typed","title":"Semantic Versioning and Definitely Typed","authors":"johnnyreilly","tags":["definitely typed","typescript"],"image":"./i-must-break-you.webp","hide_table_of_contents":false,"description":"Definitely Typed lacks semantic versioning, causing build failures. Use specific package versions, and breaking changes can be positive."},"unlisted":false,"prevItem":{"title":"ts-loader Project References: First Blood","permalink":"/ts-loader-project-references-first-blood"},"nextItem":{"title":"Using TypeScript and webpack alias: goodbye relative paths","permalink":"/typescript-webpack-alias-goodbye-relative-paths"}}')}}]);