"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([["4725"],{71064:function(e,t,s){s.r(t),s.d(t,{assets:function(){return c},contentTitle:function(){return o},default:function(){return h},frontMatter:function(){return i},metadata:function(){return a},toc:function(){return l}});var a=s(7222),r=s(85893),n=s(50065);let i={slug:"react-usesearchparamsstate",title:"React: storing state in URL with URLSearchParams",authors:"johnnyreilly",tags:["react","typescript"],description:"The React `useState` hook is a great way to persist state. This post demos a simple React hook that stores state in the URL querystring.",hide_table_of_contents:!1},o=void 0,c={authorsImageUrls:[void 0]},l=[];function u(e){let t={a:"a",code:"code",p:"p",...(0,n.a)(),...e.components};return(0,r.jsxs)(t.p,{children:["The React ",(0,r.jsx)(t.a,{href:"https://reactjs.org/docs/hooks-reference.html#usestate",children:(0,r.jsx)(t.code,{children:"useState"})})," hook is a great way to persist state inside the context of a component in React. This post demonstrates a simple React hook that stores state in the URL querystring, building on top of React Routers ",(0,r.jsx)(t.code,{children:"useSearchParams"})," hook."]})}function h(e={}){let{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},50065:function(e,t,s){s.d(t,{Z:function(){return o},a:function(){return i}});var a=s(67294);let r={},n=a.createContext(r);function i(e){let t=a.useContext(n);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),a.createElement(n.Provider,{value:t},e.children)}},7222:function(e){e.exports=JSON.parse('{"permalink":"/react-usesearchparamsstate","editUrl":"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2022-09-20-react-usesearchparamsstate/index.md","source":"@site/blog/2022-09-20-react-usesearchparamsstate/index.md","title":"React: storing state in URL with URLSearchParams","description":"The React `useState` hook is a great way to persist state. This post demos a simple React hook that stores state in the URL querystring.","date":"2022-09-20T00:00:00.000Z","tags":[{"inline":false,"label":"React","permalink":"/tags/react","description":"The React library."},{"inline":false,"label":"TypeScript","permalink":"/tags/typescript","description":"The TypeScript programming language."}],"readingTime":6.68,"hasTruncateMarker":true,"authors":[{"name":"John Reilly","title":"OSS Engineer - TypeScript, Azure, React, Node.js, .NET","url":"https://johnnyreilly.com/about","imageURL":"https://johnnyreilly.com/img/profile.jpg","key":"johnnyreilly","page":null}],"frontMatter":{"slug":"react-usesearchparamsstate","title":"React: storing state in URL with URLSearchParams","authors":"johnnyreilly","tags":["react","typescript"],"description":"The React `useState` hook is a great way to persist state. This post demos a simple React hook that stores state in the URL querystring.","hide_table_of_contents":false},"unlisted":false,"prevItem":{"title":"Faster Docusaurus builds with swc-loader","permalink":"/faster-docusaurus-build-swc-loader"},"nextItem":{"title":"Reverse engineering the Azure Application Insights Transactions URL","permalink":"/reverse-engineering-azure-app-insights-transactions-url"}}')}}]);