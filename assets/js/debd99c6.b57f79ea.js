"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([[97954],{26431:(t,e,s)=>{s.r(e),s.d(e,{assets:()=>i,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var a=s(85893),n=s(11151);const r={slug:"typescript-abstract-classes-and-constructors",title:"TypeScript, abstract classes, and constructors",authors:"johnnyreilly",tags:["typescript"],image:"./vs-code-abstract-screenshot.png",hide_table_of_contents:!1,description:"TypeScript abstract classes cannot be directly instantiated, but only used as a base for non-abstract subclasses with specific constructor usage rules."},c=void 0,o={permalink:"/typescript-abstract-classes-and-constructors",editUrl:"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2021-08-01-typescript-abstract-classes-and-constructors/index.md",source:"@site/blog/2021-08-01-typescript-abstract-classes-and-constructors/index.md",title:"TypeScript, abstract classes, and constructors",description:"TypeScript abstract classes cannot be directly instantiated, but only used as a base for non-abstract subclasses with specific constructor usage rules.",date:"2021-08-01T00:00:00.000Z",formattedDate:"August 1, 2021",tags:[{label:"typescript",permalink:"/tags/typescript"}],readingTime:4.7,hasTruncateMarker:!0,authors:[{name:"John Reilly",title:"OSS Engineer - TypeScript, Azure, React, Node.js, .NET",url:"https://johnnyreilly.com/about",imageURL:"https://johnnyreilly.com/img/profile.jpg",key:"johnnyreilly"}],frontMatter:{slug:"typescript-abstract-classes-and-constructors",title:"TypeScript, abstract classes, and constructors",authors:"johnnyreilly",tags:["typescript"],image:"./vs-code-abstract-screenshot.png",hide_table_of_contents:!1,description:"TypeScript abstract classes cannot be directly instantiated, but only used as a base for non-abstract subclasses with specific constructor usage rules."},unlisted:!1,prevItem:{title:"TypeScript 4.4 and more readable code",permalink:"/typescript-4-4-more-readable-code"},nextItem:{title:"Directory.Build.props: C# 9 for all your projects",permalink:"/directory-build-props-c-sharp-9-for-all"}},i={image:s(13098).Z,authorsImageUrls:[void 0]},l=[];function p(t){const e={p:"p",...(0,n.a)(),...t.components};return(0,a.jsx)(e.p,{children:"TypeScript has the ability to define classes as abstract. This means they cannot be instantiated directly, only non-abstract subclasses can be. Let's take a look at what this means when it comes to constructor usage."})}function u(t={}){const{wrapper:e}={...(0,n.a)(),...t.components};return e?(0,a.jsx)(e,{...t,children:(0,a.jsx)(p,{...t})}):p(t)}},13098:(t,e,s)=>{s.d(e,{Z:()=>a});const a=s.p+"assets/images/vs-code-abstract-screenshot-aff89651ee4a8e45696b778b00b02c05.png"},11151:(t,e,s)=>{s.d(e,{Z:()=>o,a:()=>c});var a=s(67294);const n={},r=a.createContext(n);function c(t){const e=a.useContext(r);return a.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function o(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(n):t.components||n:c(t.components),a.createElement(r.Provider,{value:e},t.children)}}}]);