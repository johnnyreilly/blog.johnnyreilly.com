"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([[86119],{7070:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var o=n(74848),a=n(28453);const i={slug:"aspnet-core-allowlist-proxying-http-requests",title:"ASP.NET Core: Proxying HTTP Requests with an AllowList",authors:"johnnyreilly",tags:["asp.net"],image:"./hang-on-lads-ive-got-a-great-idea.webp",hide_table_of_contents:!1,description:"ASP.NET Core can proxy HTTP requests selectively, allowing only acceptable traffic via a middleware for specified paths."},r=void 0,s={permalink:"/aspnet-core-allowlist-proxying-http-requests",editUrl:"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2019-02-22-aspnet-core-allowlist-proxying-http-requests/index.md",source:"@site/blog/2019-02-22-aspnet-core-allowlist-proxying-http-requests/index.md",title:"ASP.NET Core: Proxying HTTP Requests with an AllowList",description:"ASP.NET Core can proxy HTTP requests selectively, allowing only acceptable traffic via a middleware for specified paths.",date:"2019-02-22T00:00:00.000Z",tags:[{inline:!1,label:"ASP.NET",permalink:"/tags/asp-net",description:"The web framework built by Microsoft."}],readingTime:6.49,hasTruncateMarker:!0,authors:[{name:"John Reilly",title:"OSS Engineer - TypeScript, Azure, React, Node.js, .NET",url:"https://johnnyreilly.com/about",imageURL:"https://johnnyreilly.com/img/profile.jpg",key:"johnnyreilly"}],frontMatter:{slug:"aspnet-core-allowlist-proxying-http-requests",title:"ASP.NET Core: Proxying HTTP Requests with an AllowList",authors:"johnnyreilly",tags:["asp.net"],image:"./hang-on-lads-ive-got-a-great-idea.webp",hide_table_of_contents:!1,description:"ASP.NET Core can proxy HTTP requests selectively, allowing only acceptable traffic via a middleware for specified paths."},unlisted:!1,prevItem:{title:"fork-ts-checker-webpack-plugin v1.0",permalink:"/fork-ts-checker-webpack-plugin-v1"},nextItem:{title:"TypeScript and webpack: Watch It",permalink:"/typescript-and-webpack-watch-it"}},l={image:n(88640).A,authorsImageUrls:[void 0]},c=[];function p(e){const t={p:"p",...(0,a.R)(),...e.components};return(0,o.jsx)(t.p,{children:"This post demonstrates a mechanism for proxying HTTP requests in ASP.NET Core. It doesn't proxy all requests; it only proxies requests that match entries on an \"allowlist\" - so we only proxy the traffic that we've actively decided is acceptable as determined by taking the form of an expected URL and HTTP verb (GET / POST etc)."})}function d(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},88640:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/hang-on-lads-ive-got-a-great-idea-1f149b8af4aa7df5f8b7f66965781ceb.webp"},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>s});var o=n(96540);const a={},i=o.createContext(a);function r(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);