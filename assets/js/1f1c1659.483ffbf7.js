"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([["35248"],{1514:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return o},metadata:function(){return a},toc:function(){return c}});var a=n(10772),i=n(85893),r=n(50065);let o={slug:"serialising-aspnet-method-calls-for-later-execution",title:"Serialising ASP.NET method calls for later execution",authors:"johnnyreilly",image:"./title-image.png",tags:["azure","c#"],description:"How can we take a method call, serialise it, perhaps store it in a database, and then later rehydrate and execute?",hide_table_of_contents:!1},l=void 0,s={image:n(28010).Z,authorsImageUrls:[void 0]},c=[];function u(e){let t={img:"img",p:"p",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"Let's start with \"why\". Imagine you have an operation that you'd like to perform, but before that operation is performed, some other things need to take place first. Maybe it needs to be approved by someone, maybe you need an explicit record of what method is to be executed."}),"\n",(0,i.jsx)(t.p,{children:"Now you could build a mechanism to manually cater for each scenario that triggered a method call. But that's a lot of boilerplate code for each implementation, and given we might want to cater for many scenarios, it wouldn't scale particularly well as an approach."}),"\n",(0,i.jsx)(t.p,{children:"So how can we take a method call, serialise it, perhaps store it in a database, and then later rehydrate and execute?"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"title image reading &quot;Serialising ASP.NET method calls for later execution&quot; with the C# logo",src:n(62181).Z+"",width:"800",height:"450",loading:"eager",fetchpriority:"high"})})]})}function d(e={}){let{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},28010:function(e,t,n){n.d(t,{Z:function(){return a}});let a=n.p+"assets/images/title-image-0c2344bb797a565a0d579f3ef0c011c3.png"},62181:function(e,t,n){n.d(t,{Z:function(){return a}});let a=n.p+"assets/images/title-image-0c2344bb797a565a0d579f3ef0c011c3.png"},50065:function(e,t,n){n.d(t,{Z:function(){return l},a:function(){return o}});var a=n(67294);let i={},r=a.createContext(i);function o(e){let t=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),a.createElement(r.Provider,{value:t},e.children)}},10772:function(e){e.exports=JSON.parse('{"permalink":"/serialising-aspnet-method-calls-for-later-execution","editUrl":"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2024-05-12-serialising-aspnet-method-calls-for-later-execution/index.md","source":"@site/blog/2024-05-12-serialising-aspnet-method-calls-for-later-execution/index.md","title":"Serialising ASP.NET method calls for later execution","description":"How can we take a method call, serialise it, perhaps store it in a database, and then later rehydrate and execute?","date":"2024-05-12T00:00:00.000Z","tags":[{"inline":false,"label":"Azure","permalink":"/tags/azure","description":"The Microsoft cloud platform."},{"inline":false,"label":"C#","permalink":"/tags/csharp","description":"The C# programming language."}],"readingTime":5.72,"hasTruncateMarker":true,"authors":[{"name":"John Reilly","title":"OSS Engineer - TypeScript, Azure, React, Node.js, .NET","url":"https://johnnyreilly.com/about","imageURL":"https://johnnyreilly.com/img/profile.jpg","key":"johnnyreilly","page":null}],"frontMatter":{"slug":"serialising-aspnet-method-calls-for-later-execution","title":"Serialising ASP.NET method calls for later execution","authors":"johnnyreilly","image":"./title-image.png","tags":["azure","c#"],"description":"How can we take a method call, serialise it, perhaps store it in a database, and then later rehydrate and execute?","hide_table_of_contents":false},"unlisted":false,"prevItem":{"title":"MUI React Tree View: check children, uncheck parents","permalink":"/mui-react-tree-view-check-children-uncheck-parents"},"nextItem":{"title":"Large Language Models, Open API, View Models and the Backend for Frontend Pattern","permalink":"/large-language-models-view-models-backend-for-frontend"}}')}}]);