"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([["90303"],{56932:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return r},default:function(){return d},frontMatter:function(){return l},metadata:function(){return i},toc:function(){return c}});var i=t(1050),a=t(85893),o=t(50065);let l={slug:"knockout-globalize-valuenumber-binding",title:"Knockout + Globalize = valueNumber Binding Handler",authors:"johnnyreilly",tags:["globalize"],hide_table_of_contents:!1,description:'Learn how to use Globalize and Knockout to create a "valueNumber" binding handler that makes numeric validation and localization easy.'},r=void 0,u={authorsImageUrls:[void 0]},c=[];function s(e){let n={a:"a",p:"p",...(0,o.a)(),...e.components};return(0,a.jsxs)(n.p,{children:["I\u2019ve long used ",(0,a.jsx)(n.a,{href:"https://github.com/jquery/globalize/",children:"Globalize"})," for my JavaScript number formatting / parsing needs. In a current project I\u2019m using Knockout for the UI. When it came to data-binding numeric values none of the default binding handlers seemed appropriate. What I wanted was a binding handler that:"]})}function d(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(s,{...e})}):s(e)}},50065:function(e,n,t){t.d(n,{Z:function(){return r},a:function(){return l}});var i=t(67294);let a={},o=i.createContext(a);function l(e){let n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),i.createElement(o.Provider,{value:n},e.children)}},1050:function(e){e.exports=JSON.parse('{"permalink":"/knockout-globalize-valuenumber-binding","editUrl":"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2014-03-11-knockout-globalize-valuenumber-binding/index.md","source":"@site/blog/2014-03-11-knockout-globalize-valuenumber-binding/index.md","title":"Knockout + Globalize = valueNumber Binding Handler","description":"Learn how to use Globalize and Knockout to create a \\"valueNumber\\" binding handler that makes numeric validation and localization easy.","date":"2014-03-11T00:00:00.000Z","tags":[{"inline":false,"label":"Globalize","permalink":"/tags/globalize","description":"The Globalize library."}],"readingTime":3.885,"hasTruncateMarker":true,"authors":[{"name":"John Reilly","title":"OSS Engineer - TypeScript, Azure, React, Node.js, .NET","url":"https://johnnyreilly.com/about","imageURL":"https://johnnyreilly.com/img/profile.jpg","key":"johnnyreilly","page":null}],"frontMatter":{"slug":"knockout-globalize-valuenumber-binding","title":"Knockout + Globalize = valueNumber Binding Handler","authors":"johnnyreilly","tags":["globalize"],"hide_table_of_contents":false,"description":"Learn how to use Globalize and Knockout to create a \\"valueNumber\\" binding handler that makes numeric validation and localization easy."},"unlisted":false,"prevItem":{"title":"The Surprisingly Happy Tale of Visual Studio Online, Continous Integration and Chutzpah","permalink":"/the-surprisingly-happy-tale-of-visual"},"nextItem":{"title":"Caching and cache-busting with RequireJS","permalink":"/caching-and-cache-busting-with-requirejs"}}')}}]);