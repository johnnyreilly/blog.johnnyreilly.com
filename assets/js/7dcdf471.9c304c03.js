"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([["57882"],{72613:function(t,e,i){i.r(e),i.d(e,{assets:function(){return u},contentTitle:function(){return r},default:function(){return c},frontMatter:function(){return a},metadata:function(){return n},toc:function(){return d}});var n=i(73848),s=i(85893),o=i(50065);let a={slug:"adding-lastmod-to-sitemap-git-commit-date",title:"Adding lastmod to sitemap based on git commits",authors:"johnnyreilly",tags:["node.js","docusaurus"],image:"./title-image.png",description:"This post demonstrates enriching an XML sitemap with `lastmod` timestamps based on git commits.",hide_table_of_contents:!1},r=void 0,u={image:i(21388).Z,authorsImageUrls:[void 0]},d=[];function m(t){let e={a:"a",code:"code",img:"img",p:"p",...(0,o.a)(),...t.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(e.p,{children:["This post demonstrates enriching an XML sitemap with ",(0,s.jsx)(e.code,{children:"lastmod"})," timestamps based on git commits. The sitemap being enriched in this post was generated automatically by Docusaurus. The techniques used are predicated on the way Docusaurus works; in that it is file based. You could easily use this technique for another file based website solution; but you would need tweaks to target the relevant files you would use to drive your ",(0,s.jsx)(e.code,{children:"lastmod"}),"."]}),"\n",(0,s.jsxs)(e.p,{children:["If you're interested in applying the same technique to your RSS / Atom / JSON feeds in Docusaurus, ",(0,s.jsx)(e.a,{href:"/docusaurus-createfeeditems-api-git-commit-date",children:"you may find this post interesting"}),"."]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{alt:"title image reading &quot;Adding lastmod to sitemap based on git commits&quot; with XML and Docusaurus logos",src:i(49547).Z+"",width:"800",height:"450",loading:"eager",fetchpriority:"high"})})]})}function c(t={}){let{wrapper:e}={...(0,o.a)(),...t.components};return e?(0,s.jsx)(e,{...t,children:(0,s.jsx)(m,{...t})}):m(t)}},21388:function(t,e,i){i.d(e,{Z:function(){return n}});let n=i.p+"assets/images/title-image-83e5a8ec1684626cf7373c7c6c529fe4.png"},49547:function(t,e,i){i.d(e,{Z:function(){return n}});let n=i.p+"assets/images/title-image-83e5a8ec1684626cf7373c7c6c529fe4.png"},50065:function(t,e,i){i.d(e,{Z:function(){return r},a:function(){return a}});var n=i(67294);let s={},o=n.createContext(s);function a(t){let e=n.useContext(o);return n.useMemo(function(){return"function"==typeof t?t(e):{...e,...t}},[e,t])}function r(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(s):t.components||s:a(t.components),n.createElement(o.Provider,{value:e},t.children)}},73848:function(t){t.exports=JSON.parse('{"permalink":"/adding-lastmod-to-sitemap-git-commit-date","editUrl":"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2022-11-25-adding-lastmod-to-sitemap-git-commit-date/index.md","source":"@site/blog/2022-11-25-adding-lastmod-to-sitemap-git-commit-date/index.md","title":"Adding lastmod to sitemap based on git commits","description":"This post demonstrates enriching an XML sitemap with `lastmod` timestamps based on git commits.","date":"2022-11-25T00:00:00.000Z","tags":[{"inline":false,"label":"Node.js","permalink":"/tags/node-js","description":"The Node.js runtime."},{"inline":false,"label":"Docusaurus","permalink":"/tags/docusaurus","description":"The Docusaurus static site generator."}],"readingTime":4.555,"hasTruncateMarker":true,"authors":[{"name":"John Reilly","title":"OSS Engineer - TypeScript, Azure, React, Node.js, .NET","url":"https://johnnyreilly.com/about","imageURL":"https://johnnyreilly.com/img/profile.jpg","key":"johnnyreilly","page":null}],"frontMatter":{"slug":"adding-lastmod-to-sitemap-git-commit-date","title":"Adding lastmod to sitemap based on git commits","authors":"johnnyreilly","tags":["node.js","docusaurus"],"image":"./title-image.png","description":"This post demonstrates enriching an XML sitemap with `lastmod` timestamps based on git commits.","hide_table_of_contents":false},"unlisted":false,"prevItem":{"title":"Docusaurus: Using fontaine to reduce custom font cumulative layout shift","permalink":"/docusaurus-using-fontaine-to-reduce-custom-font-cumulative-layout-shift"},"nextItem":{"title":"XML: read and write with Node.js","permalink":"/xml-read-and-write-with-node-js"}}')}}]);