"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([[19568],{8609:(e,t,s)=>{s.d(t,{A:()=>a});const a=s.p+"assets/images/ts-loader-9-414595577372387f39261670825dc882.png"},9061:e=>{e.exports=JSON.parse('{"permalink":"/ts-loader-goes-webpack-5","editUrl":"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2021-04-20-ts-loader-goes-webpack-5/index.md","source":"@site/blog/2021-04-20-ts-loader-goes-webpack-5/index.md","title":"ts-loader goes webpack 5","description":"TypeScript webpack loader `ts-loader` has released version 9.0.0, with support for webpack 5 and a minimum supported Node version of 12.","date":"2021-04-20T00:00:00.000Z","tags":[{"inline":false,"label":"webpack","permalink":"/tags/webpack","description":"The webpack module bundler."},{"inline":false,"label":"ts-loader","permalink":"/tags/ts-loader","description":"The TypeScript loader for webpack."},{"inline":false,"label":"TypeScript","permalink":"/tags/typescript","description":"The TypeScript programming language."}],"readingTime":7.29,"hasTruncateMarker":true,"authors":[{"name":"John Reilly","title":"OSS Engineer - TypeScript, Azure, React, Node.js, .NET","url":"https://johnnyreilly.com/about","imageURL":"https://johnnyreilly.com/img/profile-2025.jpg","key":"johnnyreilly","page":null}],"frontMatter":{"slug":"ts-loader-goes-webpack-5","title":"ts-loader goes webpack 5","authors":"johnnyreilly","tags":["webpack","ts-loader","typescript"],"image":"./ts-loader-9.png","hide_table_of_contents":false,"description":"TypeScript webpack loader `ts-loader` has released version 9.0.0, with support for webpack 5 and a minimum supported Node version of 12."},"unlisted":false,"prevItem":{"title":"The Service Now API and TypeScript Conditional Types","permalink":"/service-now-api-and-typescript-conditional-types"},"nextItem":{"title":"Hello World Bicep","permalink":"/hello-world-bicep"}}')},28453:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>r});var a=s(96540);const o={},n=a.createContext(o);function i(e){const t=a.useContext(n);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),a.createElement(n.Provider,{value:t},e.children)}},45982:(e,t,s)=>{s.d(t,{A:()=>a});const a=s.p+"assets/images/ts-loader-9-414595577372387f39261670825dc882.png"},74511:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>c,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var a=s(9061),o=s(74848),n=s(28453);const i={slug:"ts-loader-goes-webpack-5",title:"ts-loader goes webpack 5",authors:"johnnyreilly",tags:["webpack","ts-loader","typescript"],image:"./ts-loader-9.png",hide_table_of_contents:!1,description:"TypeScript webpack loader `ts-loader` has released version 9.0.0, with support for webpack 5 and a minimum supported Node version of 12."},r=void 0,l={image:s(45982).A,authorsImageUrls:[void 0]},d=[{value:"One big pull request",id:"one-big-pull-request",level:2},{value:"What&#39;s changed",id:"whats-changed",level:2},{value:"The hole",id:"the-hole",level:2},{value:"&quot;Anybody down there?&quot;",id:"anybody-down-there",level:2},{value:"Release details",id:"release-details",level:2}];function h(e){const t={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,n.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.code,{children:"ts-loader"})," has just released ",(0,o.jsx)(t.a,{href:"https://github.com/TypeStrong/ts-loader/releases/tag/v9.0.0",children:"v9.0.0"}),". This post goes through what this release is all about, and what it took to ship this version. For intrigue, it includes a brief scamper into my mental health along the way. Some upgrades go smoothly - this one had some hiccups. But we'll get into that."]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"hello world bicep",src:s(8609).A+"",width:"1376",height:"510",loading:"lazy"})}),"\n",(0,o.jsx)(t.h2,{id:"one-big-pull-request",children:"One big pull request"}),"\n",(0,o.jsxs)(t.p,{children:["As of v8, ",(0,o.jsx)(t.code,{children:"ts-loader"})," supported webpack 4 and webpack 5. However the webpack 5 support was best efforts, and not protected by any automated tests. ",(0,o.jsx)(t.code,{children:"ts-loader"})," has two test packs:"]}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsxs)(t.li,{children:["A ",(0,o.jsx)(t.a,{href:"https://github.com/TypeStrong/ts-loader/tree/main/test/comparison-tests#readme",children:"comparison test pack"})," that compares transpilation and webpack compilation output with known outputs."]}),"\n",(0,o.jsxs)(t.li,{children:["An ",(0,o.jsx)(t.a,{href:"https://github.com/TypeStrong/ts-loader/tree/main/test/execution-tests#readme",children:"execution test pack"})," that executes Karma test packs written in TypeScript using ",(0,o.jsx)(t.code,{children:"ts-loader"}),"."]}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:["The test packs were tightly coupled to webpack 4 (and in the case of the comparison test pack, that's unavoidable). The mission was to port ",(0,o.jsx)(t.code,{children:"ts-loader"})," to be built against (and have an automated test pack that ran against) webpack 5."]}),"\n",(0,o.jsxs)(t.p,{children:["This ended up being a ",(0,o.jsx)(t.a,{href:"https://github.com/TypeStrong/ts-loader/pull/1251",children:"very big pull request"}),". Work on it started back in February 2021 and we're shipping now in April of 2021. I'd initially expected it would take a couple of days at most. I had underestimated."]}),"\n",(0,o.jsx)(t.p,{children:"A number of people collaborated on this PR, either with code, feedback, testing or even just responding to questions. So I'd like to say thank you to:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.a,{href:"https://github.com/JonWallsten",children:"John Wallsten"})," - who did a lot of the work swapping ",(0,o.jsx)(t.code,{children:"ts-loader"})," over to webpack 5 APIs"]}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"https://github.com/appzuka",children:"Nick Excell"})}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"https://github.com/andrewbranch",children:"Andrew Branch"})}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.a,{href:"https://github.com/alexander-akait",children:"Alexander Akait"})," - who provided webpack 5 expertise and ideas"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.a,{href:"https://github.com/sokra",children:"Tobias Koppers"})," - who got me out of a hole - more on that later"]}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"whats-changed",children:"What's changed"}),"\n",(0,o.jsx)(t.p,{children:"Let's go through what's different in v9. There's two breaking changes:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"The minimum webpack version supported is now webpack 5. This simplifies the codebase, which previously had to if/else the various API registrations based on the version of webpack being used."}),"\n",(0,o.jsxs)(t.li,{children:["The minimum node version supported is now node 12. ",(0,o.jsx)(t.a,{href:"https://nodejs.org/en/about/releases/",children:"Node 10 reaches end of life status at the end of April 2021."})]}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:["An interesting aspect of migrating to building against webpack 5 was dropping the dependency upon ",(0,o.jsx)(t.a,{href:"https://www.npmjs.com/package/@types/webpack",children:(0,o.jsx)(t.code,{children:"@types/webpack"})})," in favour of the types that now ship with webpack 5 itself. This was a mostly great experience; however we discovered some missing pieces."]}),"\n",(0,o.jsxs)(t.p,{children:["Most notably, the ",(0,o.jsx)(t.code,{children:"LoaderContext"})," ",(0,o.jsx)(t.a,{href:"https://github.com/webpack/webpack/blob/03961f33912ab6735d470b870eacff678735a9ed/lib/NormalModule.js#L424",children:"wasn't strongly typed"}),". ",(0,o.jsx)(t.code,{children:"LoaderContext"})," is the value of ",(0,o.jsx)(t.code,{children:"this"})," in the context of a running loader function. So it is probably the most interesting and important type from the perspective of a loader author."]}),"\n",(0,o.jsxs)(t.p,{children:["Historically we used our own definition which had been adapted from the one in ",(0,o.jsx)(t.code,{children:"@types/webpack"}),". ",(0,o.jsx)(t.a,{href:"https://github.com/webpack/webpack/issues/13162",children:"I've looked into the possibility of a type being exposed in webpack itself."})," However, it turns out, ",(0,o.jsxs)(t.a,{href:"https://github.com/webpack/webpack/pull/13164#issuecomment-821410359",children:["it's complicated - with the ",(0,o.jsx)(t.code,{children:"LoaderContext"})," type being effectively created across two packages"]}),". The type is initially created in ",(0,o.jsx)(t.code,{children:"webpack"})," and then augmented later in ",(0,o.jsx)(t.code,{children:"loader-runner"}),", prior to being supplied to loaders. You can read more on that ",(0,o.jsx)(t.a,{href:"https://github.com/webpack/webpack/pull/13164#issuecomment-821410359",children:"here"}),"."]}),"\n",(0,o.jsxs)(t.p,{children:["For now we've opted to stick with keeping ",(0,o.jsxs)(t.a,{href:"https://github.com/TypeStrong/ts-loader/pull/1251/commits/acbc71feed91fe14ec065dd9d31081af7a492f47",children:["an interface in ",(0,o.jsx)(t.code,{children:"ts-loader"})]})," that models what arrives in the loader when executed. We have freshened it up somewhat, to model the webpack 5 world."]}),"\n",(0,o.jsxs)(t.p,{children:["Alongside these changes, a ",(0,o.jsx)(t.a,{href:"https://github.com/TypeStrong/ts-loader/pull/1251/files#diff-7ae45ad102eab3b6d7e7896acd08c427a9b25b346470d7bc6507b6481575d519",children:"number of dependencies were upgraded"}),"."]}),"\n",(0,o.jsx)(t.h2,{id:"the-hole",children:"The hole"}),"\n",(0,o.jsxs)(t.p,{children:["By the 19th of February most of the work was done. However, ",(0,o.jsx)(t.a,{href:"https://github.com/TypeStrong/ts-loader/pull/1251#issuecomment-781967959",children:"we were experiencing different behaviour between Linux and Windows in our comparison test pack"}),"."]}),"\n",(0,o.jsxs)(t.p,{children:["As far as I was aware, we were doing all the appropriate work to ensure ",(0,o.jsx)(t.code,{children:"ts-loader"})," and our test packs worked cross platform. But we were still experiencing problems whenever we ran the test pack on Windows. I'd done no end of tweaking but nothing worked. I couldn't explain it. I couldn't fix it. I was finding that tough to deal with."]}),"\n",(0,o.jsx)(t.p,{children:"I really want to be transparent about the warts and all aspect of open source software development. It is like all other types of software development; sometimes things go wrong and it can be tough to work out why. Right then, I was really quite unhappy. Things weren't working code-wise and I was at a loss to say why. This is not something that I dig."}),"\n",(0,o.jsx)(t.p,{children:"I also wasn't sleeping amazingly at this point. It was winter and we'd been in lockdown in the UK for three months; as the COVID-19 pandemic ground relentlessly on. I love my family dearly. I really do. With that said, having my children around whilst I attempted to work was remarkably tough. I love those guys but, woah, was it stressful."}),"\n",(0,o.jsx)(t.p,{children:"I was feeling at a low ebb. And I wasn't sure what to do next. So, feeling tired and pretty fed up, I took a break."}),"\n",(0,o.jsx)(t.h2,{id:"anybody-down-there",children:'"Anybody down there?"'}),"\n",(0,o.jsxs)(t.p,{children:["Time passed. In March ",(0,o.jsx)(t.a,{href:"https://github.com/alexander-akait",children:"Alexander Akait"})," checked in to see how things were going and volunteered to help. He also ",(0,o.jsx)(t.a,{href:"https://github.com/TypeStrong/ts-loader/pull/1251#issuecomment-799531375",children:"suggested what turned out to be the fix"}),"; namely replacing usage of ",(0,o.jsx)(t.code,{children:"'\\'"})," with ",(0,o.jsx)(t.code,{children:"'/'"})," in the assets supplied back to webpack. But crucially I implemented this wrong. Observe ",(0,o.jsx)(t.a,{href:"https://github.com/TypeStrong/ts-loader/pull/1251/commits/4bcc5c9623acfd7ffbaf028781a8353b37243804",children:"this commit"}),":"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ts",children:"const assetPath = path\n  .relative(compilation.compiler.outputPath, outputFile.name)\n  // According to @alexander-akait we should always '/' https://github.com/TypeStrong/ts-loader/pull/1251#issuecomment-799606985\n  .replace(/\\//g, '/');\n"})}),"\n",(0,o.jsxs)(t.p,{children:["If you look closely at the ",(0,o.jsx)(t.code,{children:"replace"})," you'll see that I'm globally replacing ",(0,o.jsx)(t.code,{children:"'/'"})," with ",(0,o.jsx)(t.code,{children:"'/'"})," ",(0,o.jsx)(t.em,{children:"rather"})," than globally replacing ",(0,o.jsx)(t.code,{children:"'\\'"})," with ",(0,o.jsx)(t.code,{children:"'/'"}),". The wasted time this caused... I could weep."]}),"\n",(0,o.jsxs)(t.p,{children:["I generally thrashed around for a bit after this. Going in circles, like a six year old swimming wearing one armband. Then ",(0,o.jsx)(t.a,{href:"https://github.com/TypeStrong/ts-loader/pull/1251#issuecomment-805143890",children:"Tobias kindly volunteered to help"}),". This much I've learned from a career in software: if talented people offer their assistance, grab it with both hands!"]}),"\n",(0,o.jsxs)(t.p,{children:['I\'d been trying be as "learn in public" as possible about the issues I was facing on the pull request. The idea being, to surface the problems in a public forum where others can read and advise. And also to attempt a textual kind of ',(0,o.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Rubber_duck_debugging",children:"rubber duck debugging"}),"."]}),"\n",(0,o.jsxs)(t.p,{children:["When Tobias pitched in, I wanted to make it as easy as possible for him to help. So I wrote up ",(0,o.jsx)(t.a,{href:"https://github.com/TypeStrong/ts-loader/pull/1251#issuecomment-805181069",children:"a full description of what had changed"}),". What the divergent behaviour in test packs looked like. I shared my speculation for what might be causing the issue (I was wrong by the way). Finally I provided a simple way to get up and running with the broken code. The easier I could make it for others to collaborate on this, I figured, the greater the likelihood of an answer. Tobias got to an answer quickly:"]}),"\n",(0,o.jsxs)(t.blockquote,{children:["\n",(0,o.jsxs)(t.p,{children:["The problem is introduced due to some normalization logic in the test case: see ",(0,o.jsx)(t.a,{href:"https://github.com/TypeStrong/ts-loader/pull/1273",children:"#1273"})]}),"\n",(0,o.jsxs)(t.p,{children:["While the PR fixes the problem, I think the paths should be normalized earlier in the pipeline to make this normalization code unnecessary. Note that asset names should have only ",(0,o.jsx)(t.code,{children:"/"})," as they are filenames and not paths. Only absolute paths have ",(0,o.jsx)(t.code,{children:"\\"}),"."]}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:["Tobias had raised a PR which introduced a workaround to resolved things in the test pack. This made me happy. More than that, he also identified that the issue lay in ",(0,o.jsx)(t.code,{children:"ts-loader"})," itself. This caused me to look again at the changes I'd made, including my ",(0,o.jsx)(t.code,{children:"replace"})," addition. ",(0,o.jsx)(t.a,{href:"https://github.com/TypeStrong/ts-loader/pull/1251#issuecomment-805907212",children:"With fresh eyes, I now realised this was a bug"}),", and ",(0,o.jsx)(t.a,{href:"https://github.com/TypeStrong/ts-loader/pull/1251/commits/427714e43519289bb5745ca078133d1ace8fc2c1",children:"fixed"})," it."]}),"\n",(0,o.jsx)(t.p,{children:"I found then that I could revert Tobias' workaround and still have passing tests. Result!"}),"\n",(0,o.jsx)(t.h2,{id:"release-details",children:"Release details"}),"\n",(0,o.jsxs)(t.p,{children:["Now that we've got there; we've shipped. You can get the latest version of ",(0,o.jsx)(t.code,{children:"ts-loader"})," on ",(0,o.jsx)(t.a,{href:"https://www.npmjs.com/package/ts-loader/v/9.0.0",children:"npm"})," and you can find the release details on ",(0,o.jsx)(t.a,{href:"https://github.com/TypeStrong/ts-loader/releases/tag/v9.0.0",children:"GitHub"}),"."]}),"\n",(0,o.jsx)(t.p,{children:"Thanks everyone - I couldn't have done it without your help. \ud83c\udf3b\u2764\ufe0f"})]})}function c(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}}}]);