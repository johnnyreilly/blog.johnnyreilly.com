"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([["59248"],{42914:function(t,e,n){n.r(e),n.d(e,{assets:function(){return l},contentTitle:function(){return s},default:function(){return c},frontMatter:function(){return a},metadata:function(){return o},toc:function(){return p}});var o=n(80031),i=n(85893),r=n(50065);let a={slug:"migrating-from-ts-node-to-bun",title:"Migrating from ts-node to Bun",authors:"johnnyreilly",tags:["node.js","typescript"],image:"./title-image.png",description:"Migrating from ts-node to Bun is surprisingly easy - this post ports a console app from ts-node to Bun and compares performance.",hide_table_of_contents:!1},s=void 0,l={image:n(51494).Z,authorsImageUrls:[void 0]},p=[];function u(t){let e={a:"a",img:"img",p:"p",...(0,r.a)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(e.p,{children:["I've wanted to take a look at some of the alternative JavaScript runtimes for a while. The thing that has held me back is npm compatibility. I want to be able to run my code in a runtime that isn't Node.js and still be able to use npm packages. I've been using ",(0,i.jsx)(e.a,{href:"https://typestrong.org/ts-node/",children:"ts-node"})," for a long time now; it's what I reach for when I'm building any kind of console app. In this post I want to port a console app from ts-node to ",(0,i.jsx)(e.a,{href:"https://bun.sh/",children:"Bun"})," and see how easy it is."]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{alt:"title image reading &quot;From ts-node to Bun&quot;",src:n(19540).Z+"",width:"800",height:"450",loading:"eager",fetchpriority:"high"})})]})}function c(t={}){let{wrapper:e}={...(0,r.a)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(u,{...t})}):u(t)}},51494:function(t,e,n){n.d(e,{Z:function(){return o}});let o=n.p+"assets/images/title-image-59128fb2fcf34321698642211daaad26.png"},19540:function(t,e,n){n.d(e,{Z:function(){return o}});let o=n.p+"assets/images/title-image-59128fb2fcf34321698642211daaad26.png"},50065:function(t,e,n){n.d(e,{Z:function(){return s},a:function(){return a}});var o=n(67294);let i={},r=o.createContext(i);function a(t){let e=o.useContext(r);return o.useMemo(function(){return"function"==typeof t?t(e):{...e,...t}},[e,t])}function s(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:a(t.components),o.createElement(r.Provider,{value:e},t.children)}},80031:function(t){t.exports=JSON.parse('{"permalink":"/migrating-from-ts-node-to-bun","editUrl":"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2023-03-18-migrating-from-ts-node-to-bun/index.md","source":"@site/blog/2023-03-18-migrating-from-ts-node-to-bun/index.md","title":"Migrating from ts-node to Bun","description":"Migrating from ts-node to Bun is surprisingly easy - this post ports a console app from ts-node to Bun and compares performance.","date":"2023-03-18T00:00:00.000Z","tags":[{"inline":false,"label":"Node.js","permalink":"/tags/node-js","description":"The Node.js runtime."},{"inline":false,"label":"TypeScript","permalink":"/tags/typescript","description":"The TypeScript programming language."}],"readingTime":9.245,"hasTruncateMarker":true,"authors":[{"name":"John Reilly","title":"OSS Engineer - TypeScript, Azure, React, Node.js, .NET","url":"https://johnnyreilly.com/about","imageURL":"https://johnnyreilly.com/img/profile.jpg","key":"johnnyreilly","page":null}],"frontMatter":{"slug":"migrating-from-ts-node-to-bun","title":"Migrating from ts-node to Bun","authors":"johnnyreilly","tags":["node.js","typescript"],"image":"./title-image.png","description":"Migrating from ts-node to Bun is surprisingly easy - this post ports a console app from ts-node to Bun and compares performance.","hide_table_of_contents":false},"unlisted":false,"prevItem":{"title":"Playwright, GitHub Actions and Azure Static Web Apps staging environments","permalink":"/playwright-github-actions-and-azure-static-web-apps-staging-environments"},"nextItem":{"title":"Node.js 18, Axios and unsafe legacy renegotiation disabled","permalink":"/node-18-axios-and-unsafe-legacy-renegotiation-disabled"}}')}}]);