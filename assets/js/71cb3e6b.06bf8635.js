"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([[25652],{49493:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>c,metadata:()=>o,toc:()=>h});var i=n(74848),r=n(28453);const c={slug:"mui-react-tree-view-check-children-uncheck-parents",title:"MUI React Tree View: check children, uncheck parents",authors:"johnnyreilly",tags:["react"],image:"./title-image.png",hide_table_of_contents:!1,description:"Learn how to use the MUI treeview component with behaviour that selects child nodes when parents are select and deselects parent nodes when children are deselected."},a=void 0,o={permalink:"/mui-react-tree-view-check-children-uncheck-parents",editUrl:"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2024-05-25-mui-react-tree-view-check-children-uncheck-parents/index.md",source:"@site/blog/2024-05-25-mui-react-tree-view-check-children-uncheck-parents/index.md",title:"MUI React Tree View: check children, uncheck parents",description:"Learn how to use the MUI treeview component with behaviour that selects child nodes when parents are select and deselects parent nodes when children are deselected.",date:"2024-05-25T00:00:00.000Z",tags:[{label:"react",permalink:"/tags/react"}],readingTime:4.97,hasTruncateMarker:!0,authors:[{name:"John Reilly",title:"OSS Engineer - TypeScript, Azure, React, Node.js, .NET",url:"https://johnnyreilly.com/about",imageURL:"https://johnnyreilly.com/img/profile.jpg",key:"johnnyreilly"}],frontMatter:{slug:"mui-react-tree-view-check-children-uncheck-parents",title:"MUI React Tree View: check children, uncheck parents",authors:"johnnyreilly",tags:["react"],image:"./title-image.png",hide_table_of_contents:!1,description:"Learn how to use the MUI treeview component with behaviour that selects child nodes when parents are select and deselects parent nodes when children are deselected."},unlisted:!1,nextItem:{title:"Serialising ASP.NET method calls for later execution",permalink:"/serialising-aspnet-method-calls-for-later-execution"}},s={image:n(11139).A,authorsImageUrls:[void 0]},h=[];function l(e){const t={a:"a",img:"img",p:"p",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["Every now and then, I need to use a treeview component in a React application. The Material-UI (MUI) library provides a ",(0,i.jsx)(t.a,{href:"https://mui.com/x/react-tree-view/",children:"treeview component"})," that is very useful. However, some of the default behaviours of the component differ from that which you typically find in a treeview component. I'm speaking, of course, about node selection. I'm used to a treeview component that, when a parent node is selected, auto selects the child nodes underneath. And by turn, when nodes are deselected, the parent nodes get deselected."]}),"\n",(0,i.jsx)(t.p,{children:"This post documents how to do just that!"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"title image reading &quot;MUI React Tree View: check children, uncheck parents&quot; with the MUI logo",src:n(95e3).A+"",width:"800",height:"450",loading:"eager",fetchpriority:"high"})})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},11139:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/title-image-0461be933e2465270577c307ebf0afd5.png"},95e3:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/title-image-0461be933e2465270577c307ebf0afd5.png"},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var i=n(96540);const r={},c=i.createContext(r);function a(e){const t=i.useContext(c);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(c.Provider,{value:t},e.children)}}}]);