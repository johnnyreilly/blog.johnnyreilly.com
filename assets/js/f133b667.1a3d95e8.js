"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([[93191],{28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>s});var r=n(96540);const i={},a=r.createContext(i);function o(e){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(a.Provider,{value:t},e.children)}},45895:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/null_is_not_assignable-error-0a911a8777a58062f2957139ea2c5aab.png"},56570:e=>{e.exports=JSON.parse('{"permalink":"/react-18-and-typescript","editUrl":"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2021-06-30-react-18-and-typescript/index.md","source":"@site/blog/2021-06-30-react-18-and-typescript/index.md","title":"React 18 and TypeScript","description":"Upgrade React to `@next` and add new type definitions to use React 18 alpha with TypeScript. Use `ReactDOM.createRoot` API.","date":"2021-06-30T00:00:00.000Z","tags":[{"inline":false,"label":"React","permalink":"/tags/react","description":"The React library."},{"inline":false,"label":"TypeScript","permalink":"/tags/typescript","description":"The TypeScript programming language."}],"readingTime":3.63,"hasTruncateMarker":true,"authors":[{"name":"John Reilly","title":"OSS Engineer - TypeScript, Azure, React, Node.js, .NET","url":"https://johnnyreilly.com/about","imageURL":"https://johnnyreilly.com/img/profile.jpg","key":"johnnyreilly","page":null}],"frontMatter":{"slug":"react-18-and-typescript","title":"React 18 and TypeScript","authors":"johnnyreilly","tags":["react","typescript"],"image":"./createNode-error.png","hide_table_of_contents":false,"description":"Upgrade React to `@next` and add new type definitions to use React 18 alpha with TypeScript. Use `ReactDOM.createRoot` API."},"unlisted":false,"prevItem":{"title":"C# 9 in-process Azure Functions","permalink":"/c-sharp-9-azure-functions-in-process"},"nextItem":{"title":"Azure Functions and .NET 5: Query params, Dependency Injection, Bicep & Build","permalink":"/azure-functions-dotnet-5-query-params-di-bicep"}}')},77419:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>r,toc:()=>l});var r=n(56570),i=n(74848),a=n(28453);const o={slug:"react-18-and-typescript",title:"React 18 and TypeScript",authors:"johnnyreilly",tags:["react","typescript"],image:"./createNode-error.png",hide_table_of_contents:!1,description:"Upgrade React to `@next` and add new type definitions to use React 18 alpha with TypeScript. Use `ReactDOM.createRoot` API."},s=void 0,c={image:n(92352).A,authorsImageUrls:[void 0]},l=[{value:"Creating a React App with TypeScript",id:"creating-a-react-app-with-typescript",level:2},{value:"Using the new APIs",id:"using-the-new-apis",level:2},{value:"Telling TypeScript about the new APIs",id:"telling-typescript-about-the-new-apis",level:2}];function p(e){const t={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",img:"img",p:"p",pre:"pre",...(0,a.R)(),...e.components},{Head:r}=t;return r||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.a,{href:"https://reactjs.org/blog/2021/06/08/the-plan-for-react-18.html",children:"React 18 alpha has been released"}),'; but can we use it with TypeScript? The answer is "yes", but you need to do a couple of things to make that happen. This post will show you what to do.']}),"\n",(0,i.jsx)(t.h2,{id:"creating-a-react-app-with-typescript",children:"Creating a React App with TypeScript"}),"\n",(0,i.jsxs)(t.p,{children:["Let's create ourselves a vanilla React TypeScript app with ",(0,i.jsx)(t.a,{href:"https://create-react-app.dev/",children:"Create React App"}),":"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-shell",children:"yarn create react-app my-app --template typescript\n"})}),"\n",(0,i.jsxs)(t.p,{children:["Now let's upgrade the version of React to ",(0,i.jsx)(t.code,{children:"@next"}),":"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-shell",children:"yarn add react@next react-dom@next\n"})}),"\n",(0,i.jsxs)(t.p,{children:["Which will leave you with entries in the ",(0,i.jsx)(t.code,{children:"package.json"})," which use React 18. It will likely look something like this:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'    "react": "^18.0.0-alpha-e6be2d531",\n    "react-dom": "^18.0.0-alpha-e6be2d531",\n'})}),"\n",(0,i.jsxs)(t.p,{children:["If we run ",(0,i.jsx)(t.code,{children:"yarn start"})," we'll find ourselves running a React 18 app. Exciting!"]}),"\n",(0,i.jsx)(t.h2,{id:"using-the-new-apis",children:"Using the new APIs"}),"\n",(0,i.jsxs)(t.p,{children:["So let's try using ",(0,i.jsx)(t.a,{href:"https://github.com/reactwg/react-18/discussions/5",children:(0,i.jsx)(t.code,{children:"ReactDOM.createRoot"})})," API. It's this API that opts our application into using new features of React 18. We'll open up ",(0,i.jsx)(t.code,{children:"index.tsx"})," and make this change:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-diff",children:"-ReactDOM.render(\n-  <React.StrictMode>\n-    <App />\n-  </React.StrictMode>,\n-  document.getElementById('root')\n-);\n+const root = ReactDOM.createRoot(document.getElementById('root'));\n+\n+root.render(\n+  <React.StrictMode>\n+    <App />\n+  </React.StrictMode>\n+);\n"})}),"\n",(0,i.jsx)(t.p,{children:"If we were running JavaScript alone, this would work. However, because we're using TypeScript as well, we're now confronted with an error:"}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.code,{children:"Property 'createRoot' does not exist on type 'typeof import(\"/code/my-app/node_modules/@types/react-dom/index\")'. TS2339"})}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"a screenshot of the Property &#39;createRoot&#39; does not exist error",src:n(98051).A+"",width:"2076",height:"584",loading:"lazy"})}),"\n",(0,i.jsxs)(t.p,{children:["This is the TypeScript compiler complaining that it doesn't know anything about ",(0,i.jsx)(t.code,{children:"ReactDOM.createRoot"}),". This is because the type definitions that are currently in place in our application don't have that API defined."]}),"\n",(0,i.jsx)(t.p,{children:"Let's upgrade our type definitions:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-shell",children:"yarn add @types/react @types/react-dom\n"})}),"\n",(0,i.jsx)(t.p,{children:"We might reasonably hope that everything should work now. Alas it does not. The same error is presenting. TypeScript is not happy."}),"\n",(0,i.jsx)(t.h2,{id:"telling-typescript-about-the-new-apis",children:"Telling TypeScript about the new APIs"}),"\n",(0,i.jsxs)(t.p,{children:["If we take a look at the ",(0,i.jsx)(t.a,{href:"https://github.com/DefinitelyTyped/DefinitelyTyped/pull/53685",children:"PR that added support for the APIs"}),", we'll find some tips. If you look at one of the ",(0,i.jsx)(t.a,{href:"https://github.com/DefinitelyTyped/DefinitelyTyped/blob/a07e9cfb005682fb6be0a2e85113eac131c3006f/types/react/next.d.ts",children:(0,i.jsx)(t.code,{children:"next.d.ts"})})," you'll find this info, courtesy of ",(0,i.jsx)(t.a,{href:"https://twitter.com/sebsilbermann",children:"Sebastian Silbermann"}),":"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:'/**\n * These are types for things that are present in the upcoming React 18 release.\n *\n * Once React 18 is released they can just be moved to the main index file.\n *\n * To load the types declared here in an actual project, there are three ways. The easiest one,\n * if your `tsconfig.json` already has a `"types"` array in the `"compilerOptions"` section,\n * is to add `"react/next"` to the `"types"` array.\n *\n * Alternatively, a specific import syntax can to be used from a typescript file.\n * This module does not exist in reality, which is why the {} is important:\n *\n * ```ts\n * import {} from \'react/next\'\n * ```\n *\n * It is also possible to include it through a triple-slash reference:\n *\n * ```ts\n * /// <reference types="react/next" />\n * ```\n *\n * Either the import or the reference only needs to appear once, anywhere in the project.\n */\n'})}),"\n",(0,i.jsxs)(t.p,{children:["Let's try the first item on the list. We'll edit our ",(0,i.jsx)(t.code,{children:"tsconfig.json"})," and add a new entry to the ",(0,i.jsx)(t.code,{children:'"compilerOptions"'})," section:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'    "types": ["react/next", "react-dom/next"]\n'})}),"\n",(0,i.jsxs)(t.p,{children:["If we restart our build with ",(0,i.jsx)(t.code,{children:"yarn start"})," we're now presented with a ",(0,i.jsx)(t.em,{children:"different"})," error:"]}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.code,{children:"Argument of type 'HTMLElement | null' is not assignable to parameter of type 'Element | Document | DocumentFragment | Comment'. Type 'null' is not assignable to type 'Element | Document | DocumentFragment | Comment'. TS2345"})}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"a screenshot of the null is not assignable error",src:n(45895).A+"",width:"2076",height:"584",loading:"lazy"})}),"\n",(0,i.jsxs)(t.p,{children:["Now this is actually nothing to do with issues with our new React type definitions. They are fine. This is TypeScript saying \"it's not guaranteed that ",(0,i.jsx)(t.code,{children:"document.getElementById('root')"})," returns something that is not ",(0,i.jsx)(t.code,{children:"null"}),"... since we're in ",(0,i.jsx)(t.code,{children:"strictNullChecks"})," mode you need to be sure ",(0,i.jsx)(t.code,{children:"root"}),' is not null".']}),"\n",(0,i.jsxs)(t.p,{children:["We'll deal with that by testing we do have an element in play before invoking ",(0,i.jsx)(t.code,{children:"ReactDOM.createRoot"}),":"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-diff",children:"-const root = ReactDOM.createRoot(document.getElementById('root'));\n+const rootElement = document.getElementById('root');\n+if (!rootElement) throw new Error('Failed to find the root element');\n+const root = ReactDOM.createRoot(rootElement);\n"})}),"\n",(0,i.jsx)(t.p,{children:"Now that change is made, we have a working React 18 application, using TypeScript. Enjoy!"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://blog.logrocket.com/how-to-use-typescript-with-react-18-alpha/",children:"This post was originally published on LogRocket."})}),"\n",(0,i.jsx)(r,{children:(0,i.jsx)("link",{rel:"canonical",href:"https://blog.logrocket.com/how-to-use-typescript-with-react-18-alpha/"})})]})}function d(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},92352:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/createNode-error-fc2359bd913fb3297a9236a0ffc81fd7.png"},98051:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/createNode-error-fc2359bd913fb3297a9236a0ffc81fd7.png"}}]);