"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([[10952],{10439:e=>{e.exports=JSON.parse('{"permalink":"/you-might-not-need-thread-loader","editUrl":"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2018-12-22-you-might-not-need-thread-loader/index.md","source":"@site/blog/2018-12-22-you-might-not-need-thread-loader/index.md","title":"You Might Not Need thread-loader","description":"Jan Nicklas, the creator of webpack-config-plugins, suggests limiting the use of thread-loader for costly operations via `poolTimeout: Infinity`.","date":"2018-12-22T00:00:00.000Z","tags":[{"inline":false,"label":"fork-ts-checker-webpack-plugin","permalink":"/tags/fork-ts-checker-webpack-plugin","description":"The fork-ts-checker-webpack-plugin for webpack."},{"inline":false,"label":"ts-loader","permalink":"/tags/ts-loader","description":"The TypeScript loader for webpack."},{"inline":false,"label":"webpack","permalink":"/tags/webpack","description":"The webpack module bundler."}],"readingTime":4.1,"hasTruncateMarker":true,"authors":[{"name":"John Reilly","title":"OSS Engineer - TypeScript, Azure, React, Node.js, .NET","url":"https://johnnyreilly.com/about","imageURL":"https://johnnyreilly.com/img/profile-2025.jpg","key":"johnnyreilly","page":null}],"frontMatter":{"slug":"you-might-not-need-thread-loader","title":"You Might Not Need thread-loader","authors":"johnnyreilly","tags":["fork-ts-checker-webpack-plugin","ts-loader","webpack"],"hide_table_of_contents":false,"description":"Jan Nicklas, the creator of webpack-config-plugins, suggests limiting the use of thread-loader for costly operations via `poolTimeout: Infinity`."},"unlisted":false,"prevItem":{"title":"GitHub Actions and Yarn","permalink":"/github-actions-and-yarn"},"nextItem":{"title":"IMemoryCache and GetOrCreateForTimeSpanAsync","permalink":"/dotnet-imemorycache-getorcreatefortimespanasync"}}')},28453:(e,t,o)=>{o.d(t,{R:()=>r,x:()=>s});var n=o(96540);const i={},a=n.createContext(i);function r(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(a.Provider,{value:t},e.children)}},64703:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>n,toc:()=>c});var n=o(10439),i=o(74848),a=o(28453);const r={slug:"you-might-not-need-thread-loader",title:"You Might Not Need thread-loader",authors:"johnnyreilly",tags:["fork-ts-checker-webpack-plugin","ts-loader","webpack"],hide_table_of_contents:!1,description:"Jan Nicklas, the creator of webpack-config-plugins, suggests limiting the use of thread-loader for costly operations via `poolTimeout: Infinity`."},s=void 0,l={authorsImageUrls:[void 0]},c=[{value:"All I Want For Christmas is Faster Builds",id:"all-i-want-for-christmas-is-faster-builds",level:2},{value:"<code>thread-loader</code>: Infinity War",id:"thread-loader-infinity-war",level:2},{value:"&quot;Maybe You&#39;ve Thread Enough&quot;",id:"maybe-youve-thread-enough",level:2}];function d(e){const t={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",img:"img",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["It all started with a GitHub issue. ",(0,i.jsx)(t.a,{href:"https://github.com/namics/webpack-config-plugins/issues/24",children:"Ernst Ammann reported"}),":"]}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsx)(t.p,{children:"Without the thread-loader, compilation takes three to four times less time on changes. We could remove it."}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["If you're not aware of the ",(0,i.jsx)(t.a,{href:"https://github.com/namics/webpack-config-plugins",children:(0,i.jsx)(t.code,{children:"webpack-config-plugins"})})," project then I commend it to you. Famously, webpack configuration can prove tricky. ",(0,i.jsx)(t.code,{children:"webpack-config-plugins"})," borrows the idea of presets from Babel. It provides a number of pluggable webpack configurations which give a best practice setup for different webpack use cases. So if you're no expert with webpack and you want a good setup for building your TypeScript / Sass / JavaScript then ",(0,i.jsx)(t.code,{children:"webpack-config-plugins"})," has got your back."]}),"\n",(0,i.jsxs)(t.p,{children:["One of the people behind the project is the very excellent ",(0,i.jsx)(t.a,{href:"https://github.com/jantimon",children:"Jan Nicklas"})," who is well known for his work on the ",(0,i.jsx)(t.a,{href:"https://github.com/jantimon/html-webpack-plugin",children:(0,i.jsx)(t.code,{children:"html-webpack-plugin"})}),"."]}),"\n",(0,i.jsx)(t.p,{children:"It was Jan who responded to Ernst's issue and decided to look into it."}),"\n",(0,i.jsx)(t.h2,{id:"all-i-want-for-christmas-is-faster-builds",children:"All I Want For Christmas is Faster Builds"}),"\n",(0,i.jsxs)(t.p,{children:["Everyone wants fast builds. I do. You do. We all do. ",(0,i.jsx)(t.code,{children:"webpack-config-plugins"})," is about giving these to the user in a precooked package."]}),"\n",(0,i.jsxs)(t.p,{children:["There's a webpack loader called ",(0,i.jsx)(t.a,{href:"https://github.com/webpack-contrib/thread-loader",children:(0,i.jsx)(t.code,{children:"thread-loader"})})," which spawns multiple processes and splits up work between them. It was originally inspired by the work in the happypack project which does a similar thing."]}),"\n",(0,i.jsxs)(t.p,{children:["I wrote ",(0,i.jsx)(t.a,{href:"https://medium.com/p/83cc568dea79",children:"a blog post"})," some time ago which gave details about ways to speed up your TypeScript builds by combining the ",(0,i.jsx)(t.a,{href:"https://github.com/TypeStrong/ts-loader",children:(0,i.jsx)(t.code,{children:"ts-loader"})})," project (which I manage) with the ",(0,i.jsx)(t.a,{href:"https://github.com/Realytics/fork-ts-checker-webpack-plugin",children:(0,i.jsx)(t.code,{children:"fork-ts-checker-webpack-plugin"})})," project (which I'm heavily involved with)."]}),"\n",(0,i.jsxs)(t.p,{children:["That post was written back in the days of webpack 2 / 3. It advocated use of both ",(0,i.jsx)(t.code,{children:"happypack"})," / ",(0,i.jsx)(t.code,{children:"thread-loader"})," to drop your build times even further. As you'll see, now that we're well into the world of webpack 4 (with webpack 5 waiting in the wings) the advantage of ",(0,i.jsx)(t.code,{children:"happypack"})," / ",(0,i.jsx)(t.code,{children:"thread-loader"})," are no longer so profound."]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"webpack-config-plugins"})," follows the advice I set out in my post; it uses ",(0,i.jsx)(t.code,{children:"thread-loader"})," in its pluggable configurations. Now, back to Ernst's issue."]}),"\n",(0,i.jsxs)(t.h2,{id:"thread-loader-infinity-war",children:[(0,i.jsx)(t.code,{children:"thread-loader"}),": Infinity War"]}),"\n",(0,i.jsx)(t.p,{children:"Jan quickly identified the problem. He did that rarest of things; he read the documentation which said:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",children:"// timeout for killing the worker processes when idle\n      // defaults to 500 (ms)\n      // can be set to Infinity for watching builds to keep workers alive\n      poolTimeout: 2000,\n"})}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"webpack-config-plugins"})," configurations (running in watch mode) were subject to the thread loaders being killed after 500ms. They got resurrected when they were next needed; but that's not as instant as you might hope. Jan then did a test:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-sh",children:"(default pool - 30 runs - 1000 components ) average: 2.668068965517241\n(no thread-loader - 30 runs - 1000 components ) average: 1.2674137931034484\n(Infinity pool - 30 runs - 1000 components ) average: 1.371827586206896\n"})}),"\n",(0,i.jsxs)(t.p,{children:["This demonstrates that using ",(0,i.jsx)(t.code,{children:"thread-loader"})," in watch mode with ",(0,i.jsx)(t.code,{children:"poolTimeout: Infinity"})," performs significantly better than when it defaults to 500ms. But perhaps more significantly, not using ",(0,i.jsx)(t.code,{children:"thread-loader"})," performs even better still."]}),"\n",(0,i.jsx)(t.h2,{id:"maybe-youve-thread-enough",children:'"Maybe You\'ve Thread Enough"'}),"\n",(0,i.jsxs)(t.p,{children:["When I tested using ",(0,i.jsx)(t.code,{children:"thread-loader"})," in watch mode with ",(0,i.jsx)(t.code,{children:"poolTimeout: Infinity"})," on my own builds I got the same benefit Jan had. I also got ",(0,i.jsx)(t.em,{children:"even"})," more benefit from dropping ",(0,i.jsx)(t.code,{children:"thread-loader"})," entirely."]}),"\n",(0,i.jsx)(t.p,{children:"A likely reason for this benefit is that typically when you're developing, you're working on one file at a time. Hence you only transpile one file at a time:"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:o(74922).A+"",width:"640",height:"173",loading:"lazy"})}),"\n",(0,i.jsxs)(t.p,{children:["So there's not a great deal of value that ",(0,i.jsx)(t.code,{children:"thread-loader"})," can add here; mostly it's twiddling thumbs and adding an overhead. ",(0,i.jsx)(t.a,{href:"https://github.com/webpack-contrib/thread-loader/blob/master/README/index.md#usage",children:"To quote the docs:"})]}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsx)(t.p,{children:"Each worker is a separate node.js process, which has an overhead of ~600ms. There is also an overhead of inter-process communication."}),"\n",(0,i.jsx)(t.p,{children:"Use this loader only for expensive operations!"}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["Now, my build is not your build. I can't guarantee that you'll get the same results as Jan and I experienced; but I would encourage you to investigate if you're using ",(0,i.jsx)(t.code,{children:"thread-loader"})," correctly and whether it's actually helping you. In these days of webpack 4+ perhaps it isn't."]}),"\n",(0,i.jsxs)(t.p,{children:["There are still scenarios where ",(0,i.jsx)(t.code,{children:"thread-loader"})," still provides an advantage. It can speed up production builds. It can speed up the initial startup of watch mode. ",(0,i.jsxs)(t.a,{href:"https://github.com/webpack-contrib/thread-loader/pull/52",children:["In fact Jan has subsequently actually improved the ",(0,i.jsx)(t.code,{children:"thread-loader"})," to that specific end."]})," Yay Jan!"]}),"\n",(0,i.jsxs)(t.p,{children:["If this is all too much for you, and you want to hand off the concern to someone else then perhaps all of this serves as a motivation to just sit back, put your feet up and start using ",(0,i.jsx)(t.a,{href:"https://github.com/namics/webpack-config-plugins",children:(0,i.jsx)(t.code,{children:"webpack-config-plugins"})})," instead of doing your own configuration."]})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},74922:(e,t,o)=>{o.d(t,{A:()=>n});const n=o.p+"assets/images/ts-profile2-4c5d8cf4610f69e36465d4ec955ae94a.webp"}}]);