"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([[91790],{32489:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var o=a(85893),n=a(11151);const r={slug:"from-create-react-app-to-pwa",title:"From create-react-app to PWA",authors:"johnnyreilly",tags:["react"],hide_table_of_contents:!1,description:"Learn how to build a basic Progressive Web App with React and TypeScript, as well as how to add features like code splitting and deployment."},i=void 0,c={permalink:"/from-create-react-app-to-pwa",editUrl:"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2020-01-31-from-create-react-app-to-pwa/index.md",source:"@site/blog/2020-01-31-from-create-react-app-to-pwa/index.md",title:"From create-react-app to PWA",description:"Learn how to build a basic Progressive Web App with React and TypeScript, as well as how to add features like code splitting and deployment.",date:"2020-01-31T00:00:00.000Z",formattedDate:"January 31, 2020",tags:[{label:"react",permalink:"/tags/react"}],readingTime:10.745,hasTruncateMarker:!0,authors:[{name:"John Reilly",title:"OSS Engineer - TypeScript, Azure, React, Node.js, .NET",url:"https://johnnyreilly.com/about",imageURL:"https://johnnyreilly.com/img/profile.jpg",key:"johnnyreilly"}],frontMatter:{slug:"from-create-react-app-to-pwa",title:"From create-react-app to PWA",authors:"johnnyreilly",tags:["react"],hide_table_of_contents:!1,description:"Learn how to build a basic Progressive Web App with React and TypeScript, as well as how to add features like code splitting and deployment."},unlisted:!1,prevItem:{title:"Web Workers, comlink, TypeScript and React",permalink:"/web-workers-comlink-typescript-and-react"},nextItem:{title:"LICENSE to kill your PWA",permalink:"/license-to-kill-your-pwa"}},s={authorsImageUrls:[void 0]},l=[];function p(e){const t={em:"em",p:"p",...(0,n.a)(),...e.components};return(0,o.jsxs)(t.p,{children:["Progressive Web Apps are a (terribly named) wonderful idea. You can build an app ",(0,o.jsx)(t.em,{children:"once"})," using web technologies which serves all devices and form factors. It can be accessible over the web, but also surface on the home screen of your Android / iOS device. That app can work offline, have a splash screen when it launches and have notifications too."]})}function d(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},11151:(e,t,a)=>{a.d(t,{Z:()=>c,a:()=>i});var o=a(67294);const n={},r=o.createContext(n);function i(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);