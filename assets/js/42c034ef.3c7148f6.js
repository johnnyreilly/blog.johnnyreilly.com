"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([["8017"],{43169:function(t,e,n){n.r(e),n.d(e,{assets:function(){return u},contentTitle:function(){return s},default:function(){return p},frontMatter:function(){return r},metadata:function(){return o},toc:function(){return l}});var o=n(1916),i=n(85893),a=n(50065);let r={slug:"team-foundation-server-continuous-integration-and-javascript-unit-tests-in-unit-test-project",title:"Team Foundation Server, Continuous Integration and separate projects for JavaScript unit tests",authors:"johnnyreilly",tags:["automated testing","visual studio"],hide_table_of_contents:!1,description:"Learn how to run JavaScript tests on TFS/VSO by creating a separate unit test project to house tests, and installing Chutzpah on TFS/VSO."},s=void 0,u={authorsImageUrls:[void 0]},l=[];function c(t){let e={p:"p",...(0,a.a)(),...t.components};return(0,i.jsx)(e.p,{children:"Do you like to separate out your unit tests from the project you are testing? I imagine so. My own practice when creating a new project in Visual Studio is to create a separate unit test project alongside whose responsibility is to house unit tests for that new project."})}function p(t={}){let{wrapper:e}={...(0,a.a)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(c,{...t})}):c(t)}},50065:function(t,e,n){n.d(e,{Z:function(){return s},a:function(){return r}});var o=n(67294);let i={},a=o.createContext(i);function r(t){let e=o.useContext(a);return o.useMemo(function(){return"function"==typeof t?t(e):{...e,...t}},[e,t])}function s(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:r(t.components),o.createElement(a.Provider,{value:e},t.children)}},1916:function(t){t.exports=JSON.parse('{"permalink":"/team-foundation-server-continuous-integration-and-javascript-unit-tests-in-unit-test-project","editUrl":"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2014-05-15-team-foundation-server-continuous-integration-and-javascript-unit-tests-in-unit-test-project/index.md","source":"@site/blog/2014-05-15-team-foundation-server-continuous-integration-and-javascript-unit-tests-in-unit-test-project/index.md","title":"Team Foundation Server, Continuous Integration and separate projects for JavaScript unit tests","description":"Learn how to run JavaScript tests on TFS/VSO by creating a separate unit test project to house tests, and installing Chutzpah on TFS/VSO.","date":"2014-05-15T00:00:00.000Z","tags":[{"inline":false,"label":"Automated Testing","permalink":"/tags/automated-testing","description":"How to perform the automation of tests."},{"inline":false,"label":"Visual Studio","permalink":"/tags/visual-studio","description":"The Visual Studio IDE."}],"readingTime":2.65,"hasTruncateMarker":true,"authors":[{"name":"John Reilly","title":"OSS Engineer - TypeScript, Azure, React, Node.js, .NET","url":"https://johnnyreilly.com/about","imageURL":"https://johnnyreilly.com/img/profile.jpg","key":"johnnyreilly","page":null}],"frontMatter":{"slug":"team-foundation-server-continuous-integration-and-javascript-unit-tests-in-unit-test-project","title":"Team Foundation Server, Continuous Integration and separate projects for JavaScript unit tests","authors":"johnnyreilly","tags":["automated testing","visual studio"],"hide_table_of_contents":false,"description":"Learn how to run JavaScript tests on TFS/VSO by creating a separate unit test project to house tests, and installing Chutzpah on TFS/VSO."},"unlisted":false,"prevItem":{"title":"Migrating from AngularJS to AngularTS - a walkthrough","permalink":"/migrating-from-angularjs-to-angularts"},"nextItem":{"title":"TypeScript, JSDoc and Intellisense","permalink":"/typescript-jsdoc-and-intellisense"}}')}}]);