"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([[96439],{77325:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>d,contentTitle:()=>a,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>h});var i=n(74848),o=n(28453);const r={slug:"prettier-your-csharp-with-dotnet-format-and-lint-staged",title:"dotnet-format: Prettier your C# with lint-staged & husky",authors:"johnnyreilly",image:"./title-image.png",tags:[],hide_table_of_contents:!1,description:"Standardise C# formatting with `dotnet format` and `lint-staged`. Customise formatting and integrate with `husky` in this guide."},a=void 0,s={permalink:"/prettier-your-csharp-with-dotnet-format-and-lint-staged",editUrl:"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2020-12-22-prettier-your-csharp-with-dotnet-format-and-lint-staged/index.md",source:"@site/blog/2020-12-22-prettier-your-csharp-with-dotnet-format-and-lint-staged/index.md",title:"dotnet-format: Prettier your C# with lint-staged & husky",description:"Standardise C# formatting with `dotnet format` and `lint-staged`. Customise formatting and integrate with `husky` in this guide.",date:"2020-12-22T00:00:00.000Z",tags:[],readingTime:4.305,hasTruncateMarker:!0,authors:[{name:"John Reilly",title:"OSS Engineer - TypeScript, Azure, React, Node.js, .NET",url:"https://johnnyreilly.com/about",imageURL:"https://johnnyreilly.com/img/profile.jpg",key:"johnnyreilly"}],frontMatter:{slug:"prettier-your-csharp-with-dotnet-format-and-lint-staged",title:"dotnet-format: Prettier your C# with lint-staged & husky",authors:"johnnyreilly",image:"./title-image.png",tags:[],hide_table_of_contents:!1,description:"Standardise C# formatting with `dotnet format` and `lint-staged`. Customise formatting and integrate with `husky` in this guide."},unlisted:!1,prevItem:{title:"Azure Pipelines meet Jest",permalink:"/azure-pipelines-meet-jest"},nextItem:{title:"Make Microsoft.Identity.Web respond with 403 forbidden instead of a 302 redirect",permalink:"/how-to-make-azure-ad-403"}},d={image:n(72787).A,authorsImageUrls:[void 0]},h=[];function l(t){const e={code:"code",img:"img",p:"p",...(0,o.R)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(e.p,{children:["Consistent formatting in a codebase is a good thing. We can achieve this in dotnet using ",(0,i.jsx)(e.code,{children:"dotnet format"}),", used in combination with the npm packages ",(0,i.jsx)(e.code,{children:"husky"})," and ",(0,i.jsx)(e.code,{children:"lint-staged"}),". This post shows how."]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{alt:"title image reading &quot;dotnet-format: Prettier your CSharp with lint-staged and husky&quot; and the dotnet-format logo",src:n(49094).A+"",width:"1600",height:"900",loading:"eager",fetchpriority:"high"})})]})}function c(t={}){const{wrapper:e}={...(0,o.R)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(l,{...t})}):l(t)}},72787:(t,e,n)=>{n.d(e,{A:()=>i});const i=n.p+"assets/images/title-image-7fc4956ba503155ee49cece0524868fc.png"},49094:(t,e,n)=>{n.d(e,{A:()=>i});const i=n.p+"assets/images/title-image-7fc4956ba503155ee49cece0524868fc.png"},28453:(t,e,n)=>{n.d(e,{R:()=>a,x:()=>s});var i=n(96540);const o={},r=i.createContext(o);function a(t){const e=i.useContext(r);return i.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function s(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(o):t.components||o:a(t.components),i.createElement(r.Provider,{value:e},t.children)}}}]);