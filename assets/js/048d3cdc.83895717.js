"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([[25870],{20947:e=>{e.exports=JSON.parse('{"permalink":"/its-not-dead-webpack-and-dead-code","editUrl":"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2018-03-07-its-not-dead-webpack-and-dead-code/index.md","source":"@site/blog/2018-03-07-its-not-dead-webpack-and-dead-code/index.md","title":"It\'s Not Dead: webpack and dead code elimination limitations","description":"webpack eliminates dead code through DefinePlugin. Directly use `process.env.NODE_ENV !== production` for smarter code elimination by UglifyJSPlugin.","date":"2018-03-07T00:00:00.000Z","tags":[{"inline":false,"label":"webpack","permalink":"/tags/webpack","description":"The webpack module bundler."}],"readingTime":2.13,"hasTruncateMarker":true,"authors":[{"name":"John Reilly","title":"OSS Engineer - TypeScript, Azure, React, Node.js, .NET","url":"https://johnnyreilly.com/about","imageURL":"https://johnnyreilly.com/img/profile-2025.jpg","key":"johnnyreilly","page":null}],"frontMatter":{"slug":"its-not-dead-webpack-and-dead-code","title":"It\'s Not Dead: webpack and dead code elimination limitations","authors":"johnnyreilly","tags":["webpack"],"hide_table_of_contents":false,"description":"webpack eliminates dead code through DefinePlugin. Directly use `process.env.NODE_ENV !== production` for smarter code elimination by UglifyJSPlugin."},"unlisted":false,"prevItem":{"title":"Uploading Images to Cloudinary with the Fetch API","permalink":"/uploading-images-to-cloudinary-with-fetch"},"nextItem":{"title":"ts-loader 4 / fork-ts-checker-webpack-plugin 0.4","permalink":"/ts-loader-400-fork-ts-checker-webpack"}}')},28453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>d});var o=n(96540);const i={},a=o.createContext(i);function c(e){const t=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),o.createElement(a.Provider,{value:t},e.children)}},89161:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>d,default:()=>p,frontMatter:()=>c,metadata:()=>o,toc:()=>s});var o=n(20947),i=n(74848),a=n(28453);const c={slug:"its-not-dead-webpack-and-dead-code",title:"It's Not Dead: webpack and dead code elimination limitations",authors:"johnnyreilly",tags:["webpack"],hide_table_of_contents:!1,description:"webpack eliminates dead code through DefinePlugin. Directly use `process.env.NODE_ENV !== production` for smarter code elimination by UglifyJSPlugin."},d=void 0,r={authorsImageUrls:[void 0]},s=[];function l(e){const t={a:"a",code:"code",p:"p",...(0,a.R)(),...e.components};return(0,i.jsxs)(t.p,{children:["webpack has long supported the notion of dead code elimination. webpack facilitates this through use of the ",(0,i.jsx)(t.code,{children:"DefinePlugin"}),". The compile time value of ",(0,i.jsx)(t.code,{children:"process.env.NODE_ENV"})," is set either to ",(0,i.jsx)(t.code,{children:"'production'"})," or something else. If it's set to ",(0,i.jsx)(t.code,{children:"'production'"})," then some dead code hackery can happen. ",(0,i.jsx)(t.a,{href:"https://reactjs.org/docs/optimizing-performance.html#webpack",children:"Libraries like React make use of this to serve up different, and crucially smaller, production builds."})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);