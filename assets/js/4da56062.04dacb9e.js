"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([["11321"],{70544:function(e,n,t){t.r(n),t.d(n,{assets:function(){return l},contentTitle:function(){return a},default:function(){return c},frontMatter:function(){return s},metadata:function(){return o},toc:function(){return h}});var o=t(25499),i=t(85893),r=t(50065);let s={slug:"under-duck-afternoon-in-open-source",title:"Under the Duck: An Afternoon in Open Source",authors:"johnnyreilly",tags:["ts-loader","webpack"],hide_table_of_contents:!1,description:"A minute-by-minute account of how open source developers fixed an issue with ts-loader and webpack, demonstrating the collaborative nature of the community."},a=void 0,l={authorsImageUrls:[void 0]},h=[{value:"3:55pm",id:"355pm",level:3},{value:"4:01pm",id:"401pm",level:3},{value:"4:12pm",id:"412pm",level:3},{value:"4:15pm",id:"415pm",level:3},{value:"johnny_reilly",id:"johnny_reilly",level:4},{value:"sokra",id:"sokra",level:4},{value:"johnny_reilly",id:"johnny_reilly-1",level:4},{value:"sokra",id:"sokra-1",level:4},{value:"johnny_reilly",id:"johnny_reilly-2",level:4},{value:"sean.larkin",id:"seanlarkin",level:4},{value:"johnny_reilly",id:"johnny_reilly-3",level:4},{value:"sokra",id:"sokra-2",level:4},{value:"johnny_reilly",id:"johnny_reilly-4",level:4},{value:"5:28pm",id:"528pm",level:3},{value:"6:00pm",id:"600pm",level:3},{value:"6:15pm",id:"615pm",level:3},{value:"7:30pm",id:"730pm",level:3},{value:"8:30pm",id:"830pm",level:3}];function d(e){let n={a:"a",blockquote:"blockquote",code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["Have you ever wondered what happens behind the scenes of open source projects? One that I'm involved with is ",(0,i.jsx)(n.a,{href:"https://github.com/typestrong/ts-loader",children:"ts-loader"}),"; a TypeScript loader for webpack. Yesterday was an interesting day in the life of ts-loader and webpack; things unexpectedly broke. Oh and don't worry, they're fixed now."]}),"\n",(0,i.jsx)(n.p,{children:"How things panned out reflects well on the webpack community. I thought it might be instructive to take a look at the legs furiously paddling underneath the duck of open source. What follows is a minute by minute account of my life on the afternoon of Wednesday 22nd February 2017:"}),"\n",(0,i.jsx)(n.h3,{id:"355pm",children:"3:55pm"}),"\n",(0,i.jsxs)(n.p,{children:["I'm sat at my desk in the City of London. I have to leave at 4pm to go to the dentist. I'm working away on a project which is built and bundled using ts-loader and webpack. However, having just npm installed and tried to spin up webpack in watch mode, I discover that everything is broken. Watch mode is not working - there's an error being thrown in ts-loader. It's to do with a webpack property called ",(0,i.jsx)(n.code,{children:"mtimes"}),". ts-loader depends upon it and it looks like it is no longer always passed through. Go figure."]}),"\n",(0,i.jsx)(n.h3,{id:"401pm",children:"4:01pm"}),"\n",(0,i.jsxs)(n.p,{children:["I've got to go. I'm 15 minutes from Bank station. So, I grab my bag and scarper out the door. On my phone I notice ",(0,i.jsx)(n.a,{href:"https://github.com/TypeStrong/ts-loader/issues/479",children:"an issue"})," has been raised - other people are being affected by the problem too. As I trot down the various alleys that lead to the station I wonder whether I can work around this issue. Using GitHub to fork, edit code and submit a PR on a mobile phone is possible. Just. But it's certainly not easy..."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://github.com/TypeStrong/ts-loader/pull/481",children:"My PR is in"}),", the various test packs are starting to execute somewhere out there in Travis and Appveyor-land. Then I notice ",(0,i.jsx)(n.a,{href:"https://github.com/mredbishop",children:"Ed Bishop"})," has submitted a ",(0,i.jsx)(n.a,{href:"https://github.com/TypeStrong/ts-loader/pull/480",children:"near identical PR"}),". Yay Ed! I'm always keen to encourage people to contribute and so I intend to merge that PR rather than my own."]}),"\n",(0,i.jsx)(n.h3,{id:"412pm",children:"4:12pm"}),"\n",(0,i.jsx)(n.p,{children:"Rubbish. The Waterloo and City Line is out of action. I need to get across London to reach Waterloo or I'll miss my appointment. It's time to start running...."}),"\n",(0,i.jsx)("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/4IBGernmtKA",frameBorder:"0",allowFullScreen:""}),"\n",(0,i.jsx)(n.h3,{id:"415pm",children:"4:15pm"}),"\n",(0,i.jsx)(n.p,{children:"It's rather nagging at me that behaviour has changed without warning. This has been reliably in place the entire time I've been involved with ts-loader / webpack. Why now? I don't see any obvious mentions on the webpack GitHub repo. So I head over to the webpack Slack channel and ask: (conversation slightly abridged)"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.h4,{id:"johnny_reilly",children:"johnny_reilly"}),"\n",(0,i.jsxs)(n.p,{children:["Hey all, has something happened to ",(0,i.jsx)(n.code,{children:"mtimes"}),"? Behaviour seems to have changed - now undefined occasionally during watch mode. A PR has been raised against ts-loader to work around this ",(0,i.jsx)(n.a,{href:"https://github.com/TypeStrong/ts-loader/pull/480#issuecomment-281714600",children:"https://github.com/TypeStrong/ts-loader/pull/480#issuecomment-281714600"})]}),"\n",(0,i.jsx)(n.p,{children:"However I'm wondering if this should actually be merged given behaviour has changed unexpectedly"}),"\n",(0,i.jsx)(n.h4,{id:"sokra",children:"sokra"}),"\n",(0,i.jsx)(n.p,{children:"ah..."}),"\n",(0,i.jsx)(n.p,{children:"i removed it. I thought it was unused."}),"\n",(0,i.jsx)(n.h4,{id:"johnny_reilly-1",children:"johnny_reilly"}),"\n",(0,i.jsx)(n.p,{children:"It's definitely not!"}),"\n",(0,i.jsx)(n.h4,{id:"sokra-1",children:"sokra"}),"\n",(0,i.jsx)(n.p,{children:"it's not in the public API^^"}),"\n",(0,i.jsxs)(n.p,{children:["Any reason why you are not using ",(0,i.jsx)(n.code,{children:"getTimes()"}),"?"]}),"\n",(0,i.jsx)(n.p,{children:"..."}),"\n",(0,i.jsx)(n.h4,{id:"johnny_reilly-2",children:"johnny_reilly"}),"\n",(0,i.jsx)(n.p,{children:"Okay, I'm on a train and won't be near a computer for a while. ts-loader is presently broken because it depends on mtimes. Would it be possible for you to add this back at least for now. I'm aware many people depend on ts-loader and are now broken. #### sokra"}),"\n",(0,i.jsx)(n.p,{children:"sure, I readd it but deprecate it."}),"\n",(0,i.jsx)(n.p,{children:"..."}),"\n",(0,i.jsx)(n.h4,{id:"seanlarkin",children:"sean.larkin"}),"\n",(0,i.jsx)(n.p,{children:"@sokra is this the change you just made for that watchpack bug fix? Or unlrelated, just wanted to track if I didn't already have the change/issue #### sokra"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/webpack/watchpack/pull/48",children:"https://github.com/webpack/watchpack/pull/48"})}),"\n",(0,i.jsx)(n.h4,{id:"johnny_reilly-3",children:"johnny_reilly"}),"\n",(0,i.jsx)(n.p,{children:"This is what the present code does:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"const watcher =\n  watching.compiler.watchFileSystem.watcher ||\n  watching.compiler.watchFileSystem.wfs.watcher;\n"})}),"\n",(0,i.jsxs)(n.p,{children:["And then ",(0,i.jsx)(n.code,{children:".mtimes"})]}),"\n",(0,i.jsxs)(n.p,{children:["Should I be able to do ",(0,i.jsx)(n.code,{children:".getTimes()"})," instead?"]}),"\n",(0,i.jsx)(n.h4,{id:"sokra-2",children:"sokra"}),"\n",(0,i.jsxs)(n.p,{children:["actually you can't rely on ",(0,i.jsx)(n.code,{children:"watchFileSystem"})," being ",(0,i.jsx)(n.code,{children:"NodeJsWatchFileSystem"}),". But this is another topic"]}),"\n",(0,i.jsx)(n.p,{children:"..."}),"\n",(0,i.jsx)(n.p,{children:"but yes"}),"\n",(0,i.jsx)(n.h4,{id:"johnny_reilly-4",children:"johnny_reilly"}),"\n",(0,i.jsxs)(n.p,{children:["Thanks @sokra - when I get to a keyboard I'll swap ",(0,i.jsx)(n.code,{children:"mtimes"})," for ",(0,i.jsx)(n.code,{children:"getTimes()"})," and report back."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"528pm",children:"5:28pm"}),"\n",(0,i.jsxs)(n.p,{children:["Despite various trains being out of action / missing in action I've made it to the dentists; phew! I go in for my checkup and plan to take a look at the issue later that evening. In the meantime I've hoping that Tobias (",(0,i.jsx)(n.a,{href:"https://twitter.com/wsokra",children:"Sokra"}),") will get chance to republish so that ts-loader users aren't too impacted."]}),"\n",(0,i.jsx)(n.h3,{id:"600pm",children:"6:00pm"}),"\n",(0,i.jsxs)(n.p,{children:["Done at the dentist and I'm heading home. Whilst I've been opening wide and squinting at the ceiling, ",(0,i.jsx)(n.a,{href:"https://blogs.msdn.microsoft.com/typescript/2017/02/22/announcing-typescript-2-2/",children:"TypeScript 2.2 has shipped"}),". Whilst this is super exciting, according to Greenkeeper, ",(0,i.jsx)(n.a,{href:"https://github.com/TypeStrong/ts-loader/pull/483",children:"the new version has broken the build"}),". Arrrrghhhh..."]}),"\n",(0,i.jsxs)(n.p,{children:["I start to look into this and realise we're not broken because of TypeScript 2.2; we were broken because of the ",(0,i.jsx)(n.code,{children:"mtimes"}),". Tobias has now re-added ",(0,i.jsx)(n.code,{children:"mtimes"})," and published. With that in place I requeue a build and.... drum roll.... we're green!"]}),"\n",(0,i.jsxs)(n.p,{children:["The good news just keeps on coming as ",(0,i.jsx)(n.a,{href:"https://twitter.com/bancek",children:"Luka Zakraj\u0161ek"})," has submitted a ",(0,i.jsxs)(n.a,{href:"https://github.com/TypeStrong/ts-loader/pull/482",children:["PR which uses ",(0,i.jsx)(n.code,{children:"getTimes()"})," in place of ",(0,i.jsx)(n.code,{children:"mtimes"})]}),". And the tests pass. Awesome! MERGE. I just need to cut a release and we're done."]}),"\n",(0,i.jsx)(n.h3,{id:"615pm",children:"6:15pm"}),"\n",(0,i.jsx)(n.p,{children:"I'm home. My youngest son has been suffering from chicken pox all week and as a result my wife has been in isolation, taking care of him. We chat whilst the boys watch Paw Patrol as the bath runs. I flick open the laptop and start doing the various housekeeping tasks around cutting a release. This is interrupted by various bathtime / bedtime activities and I abandon work for now."}),"\n",(0,i.jsx)(n.h3,{id:"730pm",children:"7:30pm"}),"\n",(0,i.jsx)(n.p,{children:"The boys are down and I get on with the release; updating the changelog, bumping the version number and running the tests. For various reasons this takes longer than it normally does."}),"\n",(0,i.jsx)(n.h3,{id:"830pm",children:"8:30pm"}),"\n",(0,i.jsxs)(n.p,{children:["Finally we're there; ts-loader 2.0.1 ships: ",(0,i.jsx)(n.a,{href:"https://github.com/TypeStrong/ts-loader/releases/tag/v2.0.1",children:"https://github.com/TypeStrong/ts-loader/releases/tag/v2.0.1"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"I'm tremendously grateful to everyone that helped out - thank you all!"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["ts-loader 2.0.1 has shipped; thanks ",(0,i.jsx)(n.a,{href:"https://twitter.com/wSokra",children:"@wsokra"}),(0,i.jsx)(n.a,{href:"https://twitter.com/bancek",children:"@bancek"})," and @mredbishop ",(0,i.jsx)(n.a,{href:"https://t.co/I00c7sJyFo",children:"https://t.co/I00c7sJyFo"}),(0,i.jsx)(n.a,{href:"https://twitter.com/hashtag/typescript?src=hash",children:"#typescript"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://twitter.com/johnny_reilly/status/834515296077627392",children:"\u2014 John Reilly (@johnny_reilly) February 22, 2017"})}),"\n"]})]})}function c(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},50065:function(e,n,t){t.d(n,{Z:function(){return a},a:function(){return s}});var o=t(67294);let i={},r=o.createContext(i);function s(e){let n=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(r.Provider,{value:n},e.children)}},25499:function(e){e.exports=JSON.parse('{"permalink":"/under-duck-afternoon-in-open-source","editUrl":"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2017-02-23-under-duck-afternoon-in-open-source/index.md","source":"@site/blog/2017-02-23-under-duck-afternoon-in-open-source/index.md","title":"Under the Duck: An Afternoon in Open Source","description":"A minute-by-minute account of how open source developers fixed an issue with ts-loader and webpack, demonstrating the collaborative nature of the community.","date":"2017-02-23T00:00:00.000Z","tags":[{"inline":false,"label":"ts-loader","permalink":"/tags/ts-loader","description":"The TypeScript loader for webpack."},{"inline":false,"label":"webpack","permalink":"/tags/webpack","description":"The webpack module bundler."}],"readingTime":5.235,"hasTruncateMarker":true,"authors":[{"name":"John Reilly","title":"OSS Engineer - TypeScript, Azure, React, Node.js, .NET","url":"https://johnnyreilly.com/about","imageURL":"https://johnnyreilly.com/img/profile.jpg","key":"johnnyreilly","page":null}],"frontMatter":{"slug":"under-duck-afternoon-in-open-source","title":"Under the Duck: An Afternoon in Open Source","authors":"johnnyreilly","tags":["ts-loader","webpack"],"hide_table_of_contents":false,"description":"A minute-by-minute account of how open source developers fixed an issue with ts-loader and webpack, demonstrating the collaborative nature of the community."},"unlisted":false,"prevItem":{"title":"Debugging ASP.Net Core in VS or Code","permalink":"/debugging-aspnet-core-in-vs-or-code"},"nextItem":{"title":"@types is rogue","permalink":"/typescript-types-and-repeatable-builds"}}')}}]);