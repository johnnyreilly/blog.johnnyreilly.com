"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([[52438],{62459:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var n=a(85893),o=a(11151);const i={slug:"dates-DataAnnotations-and-data-impedance-mismatch",title:"A folk story wherein we shall find dates, DataAnnotations & data impedance mismatch",authors:"johnnyreilly",tags:[],hide_table_of_contents:!1,description:"This article offers developers an attribute-based solution to prevent datetime errors, ensuring that DateTime properties only include dates."},r=void 0,s={permalink:"/dates-DataAnnotations-and-data-impedance-mismatch",editUrl:"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2014-06-20-dates-DataAnnotations-and-data-impedance-mismatch/index.md",source:"@site/blog/2014-06-20-dates-DataAnnotations-and-data-impedance-mismatch/index.md",title:"A folk story wherein we shall find dates, DataAnnotations & data impedance mismatch",description:"This article offers developers an attribute-based solution to prevent datetime errors, ensuring that DateTime properties only include dates.",date:"2014-06-20T00:00:00.000Z",formattedDate:"June 20, 2014",tags:[],readingTime:4.04,hasTruncateMarker:!0,authors:[{name:"John Reilly",title:"OSS Engineer - TypeScript, Azure, React, Node.js, .NET",url:"https://johnnyreilly.com/about",imageURL:"https://johnnyreilly.com/img/profile.jpg",key:"johnnyreilly"}],frontMatter:{slug:"dates-DataAnnotations-and-data-impedance-mismatch",title:"A folk story wherein we shall find dates, DataAnnotations & data impedance mismatch",authors:"johnnyreilly",tags:[],hide_table_of_contents:!1,description:"This article offers developers an attribute-based solution to prevent datetime errors, ensuring that DateTime properties only include dates."},unlisted:!1,prevItem:{title:"HotTowel-Angular meet TypeScript",permalink:"/hottowel-angular-meet-typescript"},nextItem:{title:"Migrating from AngularJS to AngularTS - a walkthrough",permalink:"/migrating-from-angularjs-to-angularts"}},l={authorsImageUrls:[void 0]},d=[];function c(e){const t={code:"code",p:"p",strong:"strong",...(0,o.a)(),...e.components};return(0,n.jsxs)(t.p,{children:["If you ever take a step back from what you're doing it can sometimes seem pretty abstract. Here's an example. I was looking at an issue in an app that I was supporting. The problem concerned a field which was to store a date value. Let's call it, for the sake of argument, ",(0,n.jsx)(t.code,{children:"valuation_date"}),". (Clearly in reality the field name was entirely different... Probably.) This field was supposed to represent a specific date, like June 15th 2012 or 19th August 2014. To be clear, a date and *",(0,n.jsx)(t.strong,{children:"not"}),"* in any way, a time."]})}function m(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},11151:(e,t,a)=>{a.d(t,{Z:()=>s,a:()=>r});var n=a(67294);const o={},i=n.createContext(o);function r(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);