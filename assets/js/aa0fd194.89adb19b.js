"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([["1845"],{36793:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return r},default:function(){return u},frontMatter:function(){return a},metadata:function(){return o},toc:function(){return c}});var o=n(76773),i=n(85893),d=n(50065);let a={slug:"its-not-dead-2-mobx-react-devtools-and-the-undead",title:"It's Not Dead 2: mobx-react-devtools and the undead",authors:"johnnyreilly",tags:["webpack"],hide_table_of_contents:!1,description:"Using `mobx-react-devtools` with `process.env.NODE_ENV` caused problems with webpack production mode. A different approach fixed the issue."},r=void 0,s={authorsImageUrls:[void 0]},c=[];function l(e){let t={code:"code",p:"p",pre:"pre",...(0,d.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"I spent today digging through our webpack 4 config trying to work out why a production bundle contained code like this:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",children:'if("production"!==e.env.NODE_ENV){//...\n'})}),"\n",(0,i.jsxs)(t.p,{children:["My expectation was that with webpack 4 and ",(0,i.jsx)(t.code,{children:"'mode': 'production'"})," this meant that behind the scenes all ",(0,i.jsx)(t.code,{children:"process.env.NODE_ENV"})," statements should be converted to ",(0,i.jsx)(t.code,{children:"'production'"}),". Subsequently Uglify would automatically get its groove on with the resulting ",(0,i.jsx)(t.code,{children:'if("production"!=="production") ...'})," and et voil\xe0!... Strip the dead code."]}),"\n",(0,i.jsx)(t.p,{children:"It seemed that was not the case. I was seeing (regrettably) undead code. And who here actually likes the undead?"})]})}function u(e={}){let{wrapper:t}={...(0,d.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},50065:function(e,t,n){n.d(t,{Z:function(){return r},a:function(){return a}});var o=n(67294);let i={},d=o.createContext(i);function a(e){let t=o.useContext(d);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),o.createElement(d.Provider,{value:t},e.children)}},76773:function(e){e.exports=JSON.parse('{"permalink":"/its-not-dead-2-mobx-react-devtools-and-the-undead","editUrl":"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2018-03-26-its-not-dead-2-mobx-react-devtools-and-the-undead/index.md","source":"@site/blog/2018-03-26-its-not-dead-2-mobx-react-devtools-and-the-undead/index.md","title":"It\'s Not Dead 2: mobx-react-devtools and the undead","description":"Using `mobx-react-devtools` with `process.env.NODE_ENV` caused problems with webpack production mode. A different approach fixed the issue.","date":"2018-03-26T00:00:00.000Z","tags":[{"inline":false,"label":"webpack","permalink":"/tags/webpack","description":"The webpack module bundler."}],"readingTime":2.04,"hasTruncateMarker":true,"authors":[{"name":"John Reilly","title":"OSS Engineer - TypeScript, Azure, React, Node.js, .NET","url":"https://johnnyreilly.com/about","imageURL":"https://johnnyreilly.com/img/profile.jpg","key":"johnnyreilly","page":null}],"frontMatter":{"slug":"its-not-dead-2-mobx-react-devtools-and-the-undead","title":"It\'s Not Dead 2: mobx-react-devtools and the undead","authors":"johnnyreilly","tags":["webpack"],"hide_table_of_contents":false,"description":"Using `mobx-react-devtools` with `process.env.NODE_ENV` caused problems with webpack production mode. A different approach fixed the issue."},"unlisted":false,"prevItem":{"title":"Using Reflection to Identify Unwanted Dependencies","permalink":"/using-reflection-to-identify-unwanted-dependencies"},"nextItem":{"title":"Uploading Images to Cloudinary with the Fetch API","permalink":"/uploading-images-to-cloudinary-with-fetch"}}')}}]);