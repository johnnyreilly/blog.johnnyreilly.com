"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([[62670],{28453:(e,t,o)=>{o.d(t,{R:()=>i,x:()=>s});var n=o(96540);const r={},a=n.createContext(r);function i(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(a.Provider,{value:t},e.children)}},50238:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>n,toc:()=>m});var n=o(97612),r=o(74848),a=o(28453);const i={slug:"dotnet-imemorycache-getorcreatefortimespanasync",title:"IMemoryCache and GetOrCreateForTimeSpanAsync",authors:"johnnyreilly",tags:["asp.net"],description:"IMemoryCache is a tremendous caching mechanism for .NET. This post demonstrates how to write a helper to allow you to get or create an item for a given TimeSpan.",hide_table_of_contents:!1},s=void 0,c={authorsImageUrls:[void 0]},m=[];function l(e){const t={a:"a",code:"code",p:"p",...(0,a.R)(),...e.components};return(0,r.jsxs)(t.p,{children:["One thing that ASP.Net Core really got right was caching. ",(0,r.jsx)(t.a,{href:"https://docs.microsoft.com/en-us/aspnet/core/performance/caching/memory",children:(0,r.jsx)(t.code,{children:"IMemoryCache"})})," is a caching implementation that does just what I want."]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},97612:e=>{e.exports=JSON.parse('{"permalink":"/dotnet-imemorycache-getorcreatefortimespanasync","editUrl":"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2018-12-10-dotnet-imemorycache-getorcreatefortimespanasync/index.md","source":"@site/blog/2018-12-10-dotnet-imemorycache-getorcreatefortimespanasync/index.md","title":"IMemoryCache and GetOrCreateForTimeSpanAsync","description":"IMemoryCache is a tremendous caching mechanism for .NET. This post demonstrates how to write a helper to allow you to get or create an item for a given TimeSpan.","date":"2018-12-10T00:00:00.000Z","tags":[{"inline":false,"label":"ASP.NET","permalink":"/tags/asp-net","description":"The web framework built by Microsoft."}],"readingTime":1.58,"hasTruncateMarker":true,"authors":[{"name":"John Reilly","title":"OSS Engineer - TypeScript, Azure, React, Node.js, .NET","url":"https://johnnyreilly.com/about","imageURL":"https://johnnyreilly.com/img/profile-2025.jpg","key":"johnnyreilly","page":null}],"frontMatter":{"slug":"dotnet-imemorycache-getorcreatefortimespanasync","title":"IMemoryCache and GetOrCreateForTimeSpanAsync","authors":"johnnyreilly","tags":["asp.net"],"description":"IMemoryCache is a tremendous caching mechanism for .NET. This post demonstrates how to write a helper to allow you to get or create an item for a given TimeSpan.","hide_table_of_contents":false},"unlisted":false,"prevItem":{"title":"You Might Not Need thread-loader","permalink":"/you-might-not-need-thread-loader"},"nextItem":{"title":"Snapshot Testing for C#","permalink":"/snapshot-testing-for-c"}}')}}]);