"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([[54301],{87268:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>r,toc:()=>d});var o=n(85893),i=n(11151);const s={slug:"static-web-apps-cli-node-18-could-not-connect-to-api",title:"Static Web Apps CLI and Node.js 18: could not connect to API",authors:"johnnyreilly",tags:["azure static web apps","node.js"],image:"./title-image.png",description:"With Node.js 18, the Static Web Apps CLI fails to connect to the API - there is a way to fix this.",hide_table_of_contents:!1},a=void 0,r={permalink:"/static-web-apps-cli-node-18-could-not-connect-to-api",editUrl:"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2023-05-20-static-web-apps-cli-node-18-could-not-connect-to-api/index.md",source:"@site/blog/2023-05-20-static-web-apps-cli-node-18-could-not-connect-to-api/index.md",title:"Static Web Apps CLI and Node.js 18: could not connect to API",description:"With Node.js 18, the Static Web Apps CLI fails to connect to the API - there is a way to fix this.",date:"2023-05-20T00:00:00.000Z",formattedDate:"May 20, 2023",tags:[{label:"azure static web apps",permalink:"/tags/azure-static-web-apps"},{label:"node.js",permalink:"/tags/node-js"}],readingTime:2.155,hasTruncateMarker:!0,authors:[{name:"John Reilly",title:"OSS Engineer - TypeScript, Azure, React, Node.js, .NET",url:"https://johnnyreilly.com/about",imageURL:"https://johnnyreilly.com/img/profile.jpg",key:"johnnyreilly"}],frontMatter:{slug:"static-web-apps-cli-node-18-could-not-connect-to-api",title:"Static Web Apps CLI and Node.js 18: could not connect to API",authors:"johnnyreilly",tags:["azure static web apps","node.js"],image:"./title-image.png",description:"With Node.js 18, the Static Web Apps CLI fails to connect to the API - there is a way to fix this.",hide_table_of_contents:!1},unlisted:!1,prevItem:{title:"Private Bicep registry authentication with AzureResourceManagerTemplateDeployment@3",permalink:"/private-bicep-registry-authentication-azureresourcemanagertemplatedeployment"},nextItem:{title:"TypeScript 5: importsNotUsedAsValues replaced by ESLint consistent-type-imports",permalink:"/typescript-5-importsnotusedasvalues-error-eslint-consistent-type-imports"}},c={image:n(30113).Z,authorsImageUrls:[void 0]},d=[{value:"The issue",id:"the-issue",level:2},{value:"The workaround",id:"the-workaround",level:2},{value:"Summary",id:"summary",level:2}];function l(e){const t={a:"a",code:"code",h2:"h2",img:"img",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:["I make use of Azure Static Web Apps a lot. I recently upgraded to Node.js 18 and found that the Static Web Apps CLI no longer worked when trying to run locally; the API would not connect when running ",(0,o.jsx)(t.code,{children:"swa start"}),":"]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:'[swa] \u274c Could not connect to "http://localhost:7071/". Is the server up and running?'})}),"\n",(0,o.jsx)(t.p,{children:"This post shares a workaround."}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"title image reading &quot;Static Web Apps CLI and Node.js 18: could not connect to API&quot; with the Static Web Apps CLI and Node.js logos",src:n(25255).Z+"",width:"800",height:"450",loading:"eager",fetchpriority:"high"})}),"\n",(0,o.jsx)(t.h2,{id:"the-issue",children:"The issue"}),"\n",(0,o.jsxs)(t.p,{children:["My own setup is a Vite front end and a Function App back end. I have a ",(0,o.jsx)(t.code,{children:"package.json"})," in the folder of the front end app with the following scripts:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-json",children:'"dev": "vite",\n"start": "swa start http://localhost:5173 --run \\"npm run dev\\" --api-location ../FunctionApp"\n'})}),"\n",(0,o.jsx)(t.p,{children:"I could see both front end and back end starting up in the console, but inevitably the SWA CLI would report:"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:'[swa] \u274c Could not connect to "http://localhost:7071/". Is the server up and running?'})}),"\n",(0,o.jsxs)(t.p,{children:["It turned out this came down to the version of Node.js I was using. I was using Node.js 18. Or rather it was due to an issue with a dependency of the Static Web Apps CLI; the ",(0,o.jsx)(t.a,{href:"https://github.com/jeffbski/wait-on",children:"wait-on"})," library which waits for endpoints to become available. ",(0,o.jsx)(t.a,{href:"https://github.com/jeffbski/wait-on/issues/137",children:"With Node.js 18 this is broken"}),". It's not clear a fix is imminent."]}),"\n",(0,o.jsx)(t.h2,{id:"the-workaround",children:"The workaround"}),"\n",(0,o.jsxs)(t.p,{children:["Various workarounds are suggested in ",(0,o.jsx)(t.a,{href:"https://github.com/Azure/static-web-apps-cli/issues/663",children:"this GitHub issue"}),". I shared my own there, and I'm sharing it here too. (Mostly for me, I'll lay money I need this again and again.)"]}),"\n",(0,o.jsxs)(t.p,{children:["In the root of my project I installed ",(0,o.jsx)(t.a,{href:"https://www.npmjs.com/package/concurrently",children:"concurrently"}),":"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"npm i concurrently\n"})}),"\n",(0,o.jsx)(t.p,{children:"Then, again in the root of my project I added the following scripts:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-json",children:'"debug": "concurrently -n \\"staticwebapp,functionapp\\" -c \\"bgBlue.bold,bgMagenta.bold\\" \\"npm run debug:staticwebapp\\" \\"npm run debug:functionapp\\"",\n"debug:staticwebapp": "cd src/StaticWebApp && npm run debug",\n"debug:functionapp": "cd src/FunctionApp && func start",\n'})}),"\n",(0,o.jsxs)(t.p,{children:["What's happening here is that I'm running the Static Web Apps CLI and the Function App CLI in separate processes, and running them concurrently when we run ",(0,o.jsx)(t.code,{children:"npm run debug"}),". You'll note that the ",(0,o.jsx)(t.code,{children:"debug:staticwebapp"})," script is running another ",(0,o.jsx)(t.code,{children:"debug"})," script with the Static Web Apps CLI in the ",(0,o.jsx)(t.code,{children:"src/StaticWebApp"})," folder:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-json",children:'"debug": "swa start http://localhost:5173 --run \\"npm run dev\\" --api-location http://127.0.0.1:7071",\n'})}),"\n",(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.code,{children:"--api-location"})," flag is pointing to the endpoint the Function App is surfaced at. This is the key to the workaround."]}),"\n",(0,o.jsx)(t.h2,{id:"summary",children:"Summary"}),"\n",(0,o.jsx)(t.p,{children:"This takes us back to having a setup that will work with Node.js 18. Hopefully this is only needed for a short while, but it's good to have a workaround in the meantime."})]})}function p(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},30113:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/title-image-031d0022a4207916571018334832963d.png"},25255:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/title-image-031d0022a4207916571018334832963d.png"},11151:(e,t,n)=>{n.d(t,{Z:()=>r,a:()=>a});var o=n(67294);const i={},s=o.createContext(i);function a(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);