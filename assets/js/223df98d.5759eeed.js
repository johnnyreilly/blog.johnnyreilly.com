"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([[30553],{28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var i=s(96540);const a={},t=i.createContext(a);function o(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),i.createElement(t.Provider,{value:n},e.children)}},39006:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/screenshot-of-img-loading-lazy-element-3ac644b9a2be213dd60d46755535562c.png"},40786:e=>{e.exports=JSON.parse('{"permalink":"/lazy-loading-images-with-docusaurus","editUrl":"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2022-02-02-lazy-loading-images-with-docusaurus/index.md","source":"@site/blog/2022-02-02-lazy-loading-images-with-docusaurus/index.md","title":"Lazy loading images with Docusaurus","description":"Docusaurus websites can implement native lazy-loading of images, you can by writing a Rehype plugin.","date":"2022-02-02T00:00:00.000Z","tags":[{"inline":false,"label":"Docusaurus","permalink":"/tags/docusaurus","description":"The Docusaurus static site generator."}],"readingTime":3.3,"hasTruncateMarker":true,"authors":[{"name":"John Reilly","title":"OSS Engineer - TypeScript, Azure, React, Node.js, .NET","url":"https://johnnyreilly.com/about","imageURL":"https://johnnyreilly.com/img/profile-2025.jpg","key":"johnnyreilly","page":null}],"frontMatter":{"slug":"lazy-loading-images-with-docusaurus","title":"Lazy loading images with Docusaurus","authors":"johnnyreilly","tags":["docusaurus"],"image":"./title-image.png","description":"Docusaurus websites can implement native lazy-loading of images, you can by writing a Rehype plugin.","hide_table_of_contents":false},"unlisted":false,"prevItem":{"title":"Azure Static Web Apps - a Netlify alternative","permalink":"/azure-static-web-apps-a-netlify-alternative"},"nextItem":{"title":"Azure Container Apps: dapr, devcontainer, debug and deploy","permalink":"/azure-container-apps-dapr-bicep-github-actions-debug-devcontainer"}}')},83802:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var i=s(40786),a=s(74848),t=s(28453);const o={slug:"lazy-loading-images-with-docusaurus",title:"Lazy loading images with Docusaurus",authors:"johnnyreilly",tags:["docusaurus"],image:"./title-image.png",description:"Docusaurus websites can implement native lazy-loading of images, you can by writing a Rehype plugin.",hide_table_of_contents:!1},l=void 0,r={image:s(97712).A,authorsImageUrls:[void 0]},d=[{value:"Updated 26/02/2022",id:"updated-26022022",level:2},{value:"Lazy loading images",id:"lazy-loading-images",level:2},{value:"Docusaurus",id:"docusaurus",level:2},{value:"Rehype plugin",id:"rehype-plugin",level:2},{value:"What&#39;s the result?",id:"whats-the-result",level:2}];function u(e){const n={a:"a",code:"code",em:"em",h2:"h2",img:"img",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["If you'd like to improve the performance of a Docusaurus website by implementing native lazy-loading of images, you can. This post shows you how you too can have ",(0,a.jsx)(n.code,{children:'<img loading="lazy" '})," on your images by writing a Rehype plugin."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"title image reading &quot;Lazy loading images with Docusaurus&quot; with a Docusaurus logo and an image that reads &lt;img loading=&quot;lazy&quot; ",src:s(93397).A+"",width:"1600",height:"900",loading:"lazy"})}),"\n",(0,a.jsx)(n.h2,{id:"updated-26022022",children:"Updated 26/02/2022"}),"\n",(0,a.jsxs)(n.p,{children:["You don't need this anymore. As of Docusaurus ",(0,a.jsx)(n.a,{href:"https://github.com/facebook/docusaurus/releases/tag/v2.0.0-beta.16",children:"v2.0.0-beta.16"})," Docusaurus lazy loads markdown images by default. You can see the commit where it was added ",(0,a.jsx)(n.a,{href:"https://github.com/facebook/docusaurus/pull/6598",children:"here"}),". Isn't that wonderful?"]}),"\n",(0,a.jsx)(n.p,{children:"\u2705cumulative no of network requests for Docusaurus sites will go \ud83d\udc47\n\u2705perceived performance will go \u261d\ufe0f\n\u2705hosting costs will go \ud83d\udc47"}),"\n",(0,a.jsx)(n.h2,{id:"lazy-loading-images",children:"Lazy loading images"}),"\n",(0,a.jsxs)(n.p,{children:["Native browser lazy loading for images is a relatively recent innovation. To read more on the topic, ",(0,a.jsx)(n.a,{href:"https://web.dev/browser-level-image-lazy-loading/",children:"do look at this post"}),". The TL;DR is this though: by adding the ",(0,a.jsx)(n.code,{children:'loading="lazy"'})," attribute to an ",(0,a.jsx)(n.code,{children:"img"})," element, modern browsers will delay loading the image until it is needed. This provides better performance to your users: when it comes to loading, less is more."]}),"\n",(0,a.jsx)(n.h2,{id:"docusaurus",children:"Docusaurus"}),"\n",(0,a.jsxs)(n.p,{children:["If you're using Docusaurus then you're likely writing Markdown. I am. This blog is written using Markdown, and converted, using ",(0,a.jsx)(n.a,{href:"https://docusaurus.io/docs/next/markdown-features/plugins",children:"MDX plugins"})," into JSX. This handles images as well as we can ",(0,a.jsx)(n.a,{href:"https://github.com/facebook/docusaurus/blob/6ec0db4722cbf988fd5280a4442223637c2de8d7/packages/docusaurus-mdx-loader/src/remark/transformImage/index.ts#L79",children:"see here"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"jsxNode.value = `<img ${alt}src={${src}}${title}${width}${height} />`;\n"})}),"\n",(0,a.jsxs)(n.p,{children:["The crucial thing to note about the above, is the lack of the ",(0,a.jsx)(n.code,{children:'loading="lazy"'})," attribute. Can we add that somehow? Yes we can!"]}),"\n",(0,a.jsx)(n.h2,{id:"rehype-plugin",children:"Rehype plugin"}),"\n",(0,a.jsxs)(n.p,{children:["To do this, we're going to write our own mini ",(0,a.jsx)(n.a,{href:"https://github.com/rehypejs",children:"rehype plugin"})," that will take the HTML being pumped out of Docusaurus and add the ",(0,a.jsx)(n.code,{children:'loading="lazy"'})," attribute."]}),"\n",(0,a.jsxs)(n.p,{children:["Alongside our ",(0,a.jsx)(n.code,{children:"docusaurus.config.js"})," we're going to create a ",(0,a.jsx)(n.code,{children:"image-lazy-remark-plugin.js"})," file:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"const visit = require('unist-util-visit');\n\n/** @type {import('unified').Plugin<[], import('hast').Root>} */\nfunction lazyLoadImagesPlugin() {\n  return (tree) => {\n    visit(tree, ['element', 'jsx'], (node) => {\n      if (node.type === 'element' && node.tagName === 'img') {\n        // handles nodes like this:\n\n        // {\n        //   type: 'element',\n        //   tagName: 'img',\n        //   properties: {\n        //     src: 'https://some.website.com/cat.gif',\n        //     alt: null\n        //   },\n        //   ...\n        // }\n\n        node.properties.loading = 'lazy';\n      } else if (node.type === 'jsx' && node.value.includes('<img ')) {\n        // handles nodes like this:\n\n        // {\n        //   type: 'jsx',\n        //   value: '<img src={require(\"!/workspaces/blog.johnnyreilly.com/blog-website/node_modules/url-loader/dist/cjs.js?limit=10000&name=assets/images/[name]-[hash].[ext]&fallback=/workspaces/blog.johnnyreilly.com/blog-website/node_modules/file-loader/dist/cjs.js!./bower-with-the-long-paths.png\").default} width=\"640\" height=\"497\" />'\n        // }\n\n        node.value = node.value.replace(/<img /g, '<img loading=\"lazy\" ');\n      }\n    });\n  };\n}\n\nmodule.exports = lazyLoadImagesPlugin;\n"})}),"\n",(0,a.jsxs)(n.p,{children:["As the code above suggests, it looks for ",(0,a.jsx)(n.code,{children:"img"})," elements, whether they be in HTML or JSX, and adds in the ",(0,a.jsx)(n.code,{children:'loading="lazy"'})," attribute."]}),"\n",(0,a.jsxs)(n.p,{children:["To apply this to our blog, we simply tweak the ",(0,a.jsx)(n.code,{children:"docusaurus.config.js"})," file to make use of our plugin:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"const imageLazyRemarkPlugin = require('./image-lazy-remark-plugin');\n\n// ...\n\n/** @type {import('@docusaurus/types').Config} */\nconst config = {\n  // ...\n\n  presets: [\n    [\n      '@docusaurus/preset-classic',\n      /** @type {import('@docusaurus/preset-classic').Options} */\n      ({\n        // ...\n        blog: {\n          // ...\n          rehypePlugins: [imageLazyRemarkPlugin],\n        },\n        // ...\n      }),\n    ],\n  ],\n  // ...\n};\n"})}),"\n",(0,a.jsx)(n.h2,{id:"whats-the-result",children:"What's the result?"}),"\n",(0,a.jsx)(n.p,{children:"With this in place, next time we run a build, we can see the attribute being applied to our image elements:"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"screenshot of an img element with the loading=&quot;lazy&quot; attribute set",src:s(39006).A+"",width:"2042",height:"90",loading:"lazy"})}),"\n",(0,a.jsxs)(n.p,{children:["Consequently, when we fire up devtools we can see that only the images onscreen are being loaded. In the example below we're ",(0,a.jsx)(n.em,{children:"not"})," seeing five other images being loaded because they're offscreen and haven't been scrolled to as yet:"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"screenshot of chrome devtools showing only two images being loaded - the ones that are on the screen",src:s(93513).A+"",width:"2541",height:"789",loading:"lazy"})}),"\n",(0,a.jsxs)(n.p,{children:["Amazing! It works! It's possible that this could land directly in Docusaurus one day. ",(0,a.jsx)(n.a,{href:"https://docusaurus.io/feature-requests/p/lazy-loading-images-in-blog-posts-by-default",children:"Go here to follow the discussion on this."})]})]})}function c(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},93397:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/title-image-3cda6484d06c3541fb8da68e96e133ce.png"},93513:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/screenshot-of-chrome-devtools-showing-only-onscreen-images-loaded-a96686c6db91d40a25052e0960b80f4c.png"},97712:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/title-image-3cda6484d06c3541fb8da68e96e133ce.png"}}]);