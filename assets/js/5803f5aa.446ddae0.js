"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([[93810],{11203:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>t,toc:()=>p});var t=n(51581),r=n(74848),a=n(28453);const s={slug:"bicep-meet-azure-pipelines-2",title:"Bicep meet Azure Pipelines 2",authors:"johnnyreilly",tags:["bicep","azure pipelines","azure"],image:"./bicep-meet-azure-pipelines.webp",hide_table_of_contents:!1,description:"With Azure CLI, Bicep can be run in Azure Pipeline with minimal effort. Compile Bicep to ARM in a simple one-liner bash step."},l=void 0,o={image:n(72339).A,authorsImageUrls:[void 0]},p=[{value:"The easier way",id:"the-easier-way",level:2}];function c(e){const i={a:"a",code:"code",h2:"h2",img:"img",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.a,{href:"/bicep-meet-azure-pipelines",children:"Last time"})," I wrote about how to use the Azure CLI to run Bicep within the context of an Azure Pipeline. The solution was relatively straightforward, and involved using ",(0,r.jsx)(i.code,{children:"az deployment group create"})," in a task. There's an easier way."]}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.img,{alt:"Bicep meet Azure Pipelines",src:n(99756).A+"",width:"504",height:"252",loading:"lazy"})}),"\n",(0,r.jsx)(i.h2,{id:"the-easier-way",children:"The easier way"}),"\n",(0,r.jsxs)(i.p,{children:["The target reader of the previous post was someone who was already using ",(0,r.jsx)(i.code,{children:"AzureResourceManagerTemplateDeployment@3"})," in an Azure Pipeline to deploy an ARM template. Rather than replacing your existing ",(0,r.jsx)(i.code,{children:"AzureResourceManagerTemplateDeployment@3"})," tasks, all you need do is insert a prior ",(0,r.jsx)(i.code,{children:"bash"})," step that compiles the Bicep to ARM, which your existing template can then process. It looks like this:"]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-yml",children:"- bash: az bicep build --file infra/app-service/azuredeploy.bicep\n  displayName: 'Compile Bicep to ARM'\n"})}),"\n",(0,r.jsxs)(i.p,{children:["This will take your Bicep template of ",(0,r.jsx)(i.code,{children:"azuredeploy.bicep"}),", transpile it into an ARM template named ",(0,r.jsx)(i.code,{children:"azuredeploy.json"})," which a subsequent ",(0,r.jsx)(i.code,{children:"AzureResourceManagerTemplateDeployment@3"})," task can process. Since this is just exercising the Azure CLI, using ",(0,r.jsx)(i.code,{children:"bash"})," is not required; powershell etc would also be fine; it's just required that the Azure CLI is available in a pipeline."]}),"\n",(0,r.jsxs)(i.p,{children:["In fact this simple task could even be a one-liner if you didn't fancy using the ",(0,r.jsx)(i.code,{children:"displayName"}),". (Though I say keep it; optimising for readability is generally a good shout.) A full pipeline could look like this:"]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-yml",children:"- bash: az bicep build --file infra/app-service/azuredeploy.bicep\n  displayName: 'Compile Bicep to ARM'\n\n- task: AzureResourceManagerTemplateDeployment@3\n  displayName: 'Deploy Hello Azure ARM'\n  inputs:\n    azureResourceManagerConnection: '$(azureSubscription)'\n    action: Create Or Update Resource Group\n    resourceGroupName: '$(resourceGroupName)'\n    location: 'North Europe'\n    templateLocation: Linked artifact\n    csmFile: 'infra/app-service/azuredeploy.json' # created by bash script\n    csmParametersFile: 'infra/app-service/azuredeploy.parameters.json'\n    deploymentMode: Incremental\n    deploymentOutputs: resourceGroupDeploymentOutputs\n    overrideParameters: -applicationName $(Build.Repository.Name)\n\n- pwsh: |\n    $outputs = ConvertFrom-Json '$(resourceGroupDeploymentOutputs)'\n    foreach ($output in $outputs.PSObject.Properties) {\n        Write-Host \"##vso[task.setvariable variable=RGDO_$($output.Name)]$($output.Value.value)\"\n    }\n  displayName: 'Turn ARM outputs into variables'\n"})}),"\n",(0,r.jsx)(i.p,{children:"And when it's run, it may result in something along these lines:"}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.img,{alt:"Bicep in an Azure Pipeline",src:n(70077).A+"",width:"1916",height:"1132",loading:"lazy"})}),"\n",(0,r.jsxs)(i.p,{children:["So if you want to get using Bicep right now with minimal effort, this an on ramp that could work for you! Props to ",(0,r.jsx)(i.a,{href:"https://twitter.com/foldr",children:"Jamie McCrindle"})," for suggesting this."]})]})}function u(e={}){const{wrapper:i}={...(0,a.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,i,n)=>{n.d(i,{R:()=>s,x:()=>l});var t=n(96540);const r={},a=t.createContext(r);function s(e){const i=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(a.Provider,{value:i},e.children)}},51581:e=>{e.exports=JSON.parse('{"permalink":"/bicep-meet-azure-pipelines-2","editUrl":"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2021-03-23-bicep-meet-azure-pipelines-2/index.md","source":"@site/blog/2021-03-23-bicep-meet-azure-pipelines-2/index.md","title":"Bicep meet Azure Pipelines 2","description":"With Azure CLI, Bicep can be run in Azure Pipeline with minimal effort. Compile Bicep to ARM in a simple one-liner bash step.","date":"2021-03-23T00:00:00.000Z","tags":[{"inline":false,"label":"Bicep","permalink":"/tags/bicep","description":"The Bicep language for Azure Resource Manager templates."},{"inline":false,"label":"Azure Pipelines","permalink":"/tags/azure-pipelines","description":"The Azure Pipelines CI / CD service."},{"inline":false,"label":"Azure","permalink":"/tags/azure","description":"The Microsoft cloud platform."}],"readingTime":1.82,"hasTruncateMarker":true,"authors":[{"name":"John Reilly","title":"OSS Engineer - TypeScript, Azure, React, Node.js, .NET","url":"https://johnnyreilly.com/about","imageURL":"https://johnnyreilly.com/img/profile-2025.jpg","key":"johnnyreilly","page":null}],"frontMatter":{"slug":"bicep-meet-azure-pipelines-2","title":"Bicep meet Azure Pipelines 2","authors":"johnnyreilly","tags":["bicep","azure pipelines","azure"],"image":"./bicep-meet-azure-pipelines.webp","hide_table_of_contents":false,"description":"With Azure CLI, Bicep can be run in Azure Pipeline with minimal effort. Compile Bicep to ARM in a simple one-liner bash step."},"unlisted":false,"prevItem":{"title":"Hello World Bicep","permalink":"/hello-world-bicep"},"nextItem":{"title":"Bicep meet Azure Pipelines","permalink":"/bicep-meet-azure-pipelines"}}')},70077:(e,i,n)=>{n.d(i,{A:()=>t});const t=n.p+"assets/images/azure-pipeline-with-bicep-e95ad282dc1ec2774dba4e3645d20bbc.png"},72339:(e,i,n)=>{n.d(i,{A:()=>t});const t=n.p+"assets/images/bicep-meet-azure-pipelines-395092edba2730e38d21373a36d96e28.webp"},99756:(e,i,n)=>{n.d(i,{A:()=>t});const t=n.p+"assets/images/bicep-meet-azure-pipelines-395092edba2730e38d21373a36d96e28.webp"}}]);