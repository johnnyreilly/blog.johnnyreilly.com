"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([["88519"],{86054:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return s},default:function(){return h},frontMatter:function(){return i},metadata:function(){return o},toc:function(){return l}});var o=t(82676),r=t(85893),a=t(50065);let i={slug:"react-component-curry",title:"React Component Curry",authors:"johnnyreilly",tags:["react"],hide_table_of_contents:!1,description:"React 0.14 introduces stateless functional components to reduce code for components where state isnt required, while also allowing for currying."},s=void 0,c={authorsImageUrls:[void 0]},l=[{value:"Mine&#39;s a Balti",id:"mines-a-balti",level:2}];function u(e){let n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Everyone loves curry don't they? I don't know about you but I'm going for one on Friday."}),"\n",(0,r.jsxs)(n.p,{children:["When React 0.14 shipped, it came with a new way to write React components. Rather than as an ES2015 class or using ",(0,r.jsx)(n.code,{children:"React.createClass"})," there was now another way: stateless functional components."]}),"\n",(0,r.jsx)(n.p,{children:"These are components which have no state (the name gives it away) and a simple syntax; they are a function which takes your component props as a single parameter and they return JSX. Think of them as the render method of a standard component just with props as a parameter."}),"\n",(0,r.jsx)(n.p,{children:"The advantage of these components is that they can reduce the amount of code you have to write for a component which requires no state. This is even more true if you're using ES2015 syntax as you have arrow functions and destructuring to help.Embrace the terseness!"}),"\n",(0,r.jsx)(n.h2,{id:"mines-a-balti",children:"Mine's a Balti"}),"\n",(0,r.jsx)(n.p,{children:"There is another advantage of this syntax. If you have a number of components which share similar implementation you can easily make component factories by currying:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"function iconMaker(fontAwesomeClassName: string) {\n  return (props) => <i className={`fa ${fontAwesomeClassName}`} />;\n}\n\nconst ThumbsUpIcon = iconMaker('fa-thumbs-up');\nconst TrophyIcon = iconMaker('fa-trophy');\n\n// Somewhere in else inside a render function:\n\n<p>\n  This is totally <ThumbsUpIcon />\n  .... You should win a <TrophyIcon />\n</p>;\n"})}),"\n",(0,r.jsxs)(n.p,{children:["So our ",(0,r.jsx)(n.code,{children:"iconMaker"})," is a function which, when called with a ",(0,r.jsx)(n.a,{href:"http://fontawesome.io/",children:"Font Awesome"})," class name produces a function which, when invoked, will return a the HTML required to render that icon. This is a super simple example, a bhaji if you will, but you can imagine how useful this technique can be when you've more of a banquet in mind."]})]})}function h(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},50065:function(e,n,t){t.d(n,{Z:function(){return s},a:function(){return i}});var o=t(67294);let r={},a=o.createContext(r);function i(e){let n=o.useContext(a);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(a.Provider,{value:n},e.children)}},82676:function(e){e.exports=JSON.parse('{"permalink":"/react-component-curry","editUrl":"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2016-10-05-react-component-curry/index.md","source":"@site/blog/2016-10-05-react-component-curry/index.md","title":"React Component Curry","description":"React 0.14 introduces stateless functional components to reduce code for components where state isnt required, while also allowing for currying.","date":"2016-10-05T00:00:00.000Z","tags":[{"inline":false,"label":"React","permalink":"/tags/react","description":"The React library."}],"readingTime":1.395,"hasTruncateMarker":true,"authors":[{"name":"John Reilly","title":"OSS Engineer - TypeScript, Azure, React, Node.js, .NET","url":"https://johnnyreilly.com/about","imageURL":"https://johnnyreilly.com/img/profile.jpg","key":"johnnyreilly","page":null}],"frontMatter":{"slug":"react-component-curry","title":"React Component Curry","authors":"johnnyreilly","tags":["react"],"hide_table_of_contents":false,"description":"React 0.14 introduces stateless functional components to reduce code for components where state isnt required, while also allowing for currying."},"unlisted":false,"prevItem":{"title":"But you can\'t die... I love you!","permalink":"/but-you-cant-die-i-love-you-ts-loader"},"nextItem":{"title":"TypeScript 2.0, ES2016 and Babel","permalink":"/typescript-20-es2016-and-babel"}}')}}]);