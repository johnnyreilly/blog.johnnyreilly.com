"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([[41674],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>y});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=s(n),h=a,y=m["".concat(l,".").concat(h)]||m[h]||u[h]||o;return n?r.createElement(y,i(i({ref:t},p),{},{components:n})):r.createElement(y,i({ref:t},p))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=h;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[m]="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},8554:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>m});n(67294);var r=n(3905);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}const c={slug:"dotnet-imemorycache-getorcreatefortimespanasync",title:"IMemoryCache and GetOrCreateForTimeSpanAsync",authors:"johnnyreilly",tags:["asp.net"],description:"IMemoryCache is a tremendous caching mechanism for .NET. This post demonstrates how to write a helper to allow you to get or create an item for a given TimeSpan.",hide_table_of_contents:!1},l=void 0,s={permalink:"/dotnet-imemorycache-getorcreatefortimespanasync",editUrl:"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2018-12-10-dotnet-imemorycache-getorcreatefortimespanasync/index.md",source:"@site/blog/2018-12-10-dotnet-imemorycache-getorcreatefortimespanasync/index.md",title:"IMemoryCache and GetOrCreateForTimeSpanAsync",description:"IMemoryCache is a tremendous caching mechanism for .NET. This post demonstrates how to write a helper to allow you to get or create an item for a given TimeSpan.",date:"2018-12-10T00:00:00.000Z",formattedDate:"December 10, 2018",tags:[{label:"asp.net",permalink:"/tags/asp-net"}],readingTime:1.565,hasTruncateMarker:!0,authors:[{name:"John Reilly",title:"OSS Engineer - TypeScript, Azure, React, Node.js, .NET",url:"https://johnnyreilly.com/about",imageURL:"https://johnnyreilly.com/img/profile.jpg",key:"johnnyreilly"}],frontMatter:{slug:"dotnet-imemorycache-getorcreatefortimespanasync",title:"IMemoryCache and GetOrCreateForTimeSpanAsync",authors:"johnnyreilly",tags:["asp.net"],description:"IMemoryCache is a tremendous caching mechanism for .NET. This post demonstrates how to write a helper to allow you to get or create an item for a given TimeSpan.",hide_table_of_contents:!1},prevItem:{title:"You Might Not Need thread-loader",permalink:"/you-might-not-need-thread-loader"},nextItem:{title:"Snapshot Testing for C#",permalink:"/snapshot-testing-for-c"}},p={authorsImageUrls:[void 0]},m=[{value:"TimeSpan, TimeSpan Expiration Y&#39;all",id:"timespan-timespan-expiration-yall",level:2}],u={toc:m};function h(e){var{components:t}=e,n=i(e,["components"]);return(0,r.kt)("wrapper",o(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){a(e,t,n[t])}))}return e}({},u,n),{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"One thing that ASP.Net Core really got right was caching. ",(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/aspnet/core/performance/caching/memory"},(0,r.kt)("inlineCode",{parentName:"a"},"IMemoryCache"))," is a caching implementation that does just what I want."),(0,r.kt)("h2",{id:"timespan-timespan-expiration-yall"},"TimeSpan, TimeSpan Expiration Y'all"),(0,r.kt)("p",null,"To make usage of the ",(0,r.kt)("inlineCode",{parentName:"p"},"IMemoryCache")," ",(0,r.kt)("em",{parentName:"p"},"even")," more lovely I've written an extension method. I follow pretty much one cache strategy: ",(0,r.kt)("inlineCode",{parentName:"p"},"SetAbsoluteExpiration")," and I just vary the expiration by an amount of time. This extension method implements that in a simple way; I call it ",(0,r.kt)("inlineCode",{parentName:"p"},"GetOrCreateForTimeSpanAsync")," - catchy right? It looks like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"using System;\nusing System.Threading.Tasks;\nusing Microsoft.Extensions.Caching.Memory;\n\nnamespace My.Helpers {\n\n    public static class CacheHelpers {\n\n        public static async Task<TItem?> GetOrCreateForTimeSpanAsync<TItem>(\n            this IMemoryCache cache,\n            string key,\n            Func<Task<TItem?>> itemGetterAsync,\n            TimeSpan timeToCache\n        ) {\n            if (!cache.TryGetValue(key, out object? result))\n            {\n                result = await itemGetterAsync();\n                if (result == null)\n                    return default(TItem);\n\n                var cacheEntryOptions = new MemoryCacheEntryOptions()\n                    .SetAbsoluteExpiration(timeToCache);\n\n                cache.Set(key, result, cacheEntryOptions);\n            }\n\n            return (TItem)result;\n        }\n    }\n}\n")),(0,r.kt)("p",null,"Usage looks like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},'private Task<SuperInterestingThing> GetSuperInterestingThingFromCache(Guid superInterestingThingId) =>\n    _cache.GetOrCreateForTimeSpanAsync(\n        key: $"{nameof(MyClass)}:GetSuperInterestingThing:{superInterestingThingId}",\n        itemGetterAsync: () => GetSuperInterestingThing(superInterestingThingId),\n        timeToCache: TimeSpan.FromMinutes(5)\n    );\n')),(0,r.kt)("p",null,"Where ",(0,r.kt)("inlineCode",{parentName:"p"},"_cache")," is an instance of ",(0,r.kt)("inlineCode",{parentName:"p"},"IMemoryCache")," that can be dependency injected into your class. This helper allows the consumer to provide three things:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"key")," key for the item to be cached with"),(0,r.kt)("li",{parentName:"ul"},"A ",(0,r.kt)("inlineCode",{parentName:"li"},"itemGetterAsync")," which is the method that is used to retrieve a new value if an item cannot be found in the cache"),(0,r.kt)("li",{parentName:"ul"},"A ",(0,r.kt)("inlineCode",{parentName:"li"},"timeToCache")," which is the period of time that an item should be cached")),(0,r.kt)("p",null,"If an item can't be looked up by the ",(0,r.kt)("inlineCode",{parentName:"p"},"itemGetterAsync")," then ",(0,r.kt)("em",{parentName:"p"},"nothing")," will be cached and a the ",(0,r.kt)("inlineCode",{parentName:"p"},"default")," value of the expected type will be returned. This is important because lookups can fail, and there's nothing worse than a lookup failing and you caching ",(0,r.kt)("inlineCode",{parentName:"p"},"null")," as a result."),(0,r.kt)("p",null,"Go on, ask me how I know."),(0,r.kt)("p",null,"This is a simple, clear and helpful API which makes interacting with ",(0,r.kt)("inlineCode",{parentName:"p"},"IMemoryCache")," even more lovely than it was."))}h.isMDXComponent=!0}}]);