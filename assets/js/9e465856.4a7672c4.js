"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([[72573],{8284:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/title-image-f0945ac5da387c7202af084f33c85949.png"},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>s});var i=t(96540);const a={},r=i.createContext(a);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),i.createElement(r.Provider,{value:n},e.children)}},63041:e=>{e.exports=JSON.parse('{"permalink":"/keeping-front-end-and-back-end-in-sync-with-nswag-generated-clients","editUrl":"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2025-10-12-keeping-front-end-and-back-end-in-sync-with-nswag-generated-clients/index.md","source":"@site/blog/2025-10-12-keeping-front-end-and-back-end-in-sync-with-nswag-generated-clients/index.md","title":"Keeping front end and back end in sync with NSwag generated clients","description":"By generating clients from OpenAPI specs, it is possible to have integration tests that check your front end and your back end are aligned. This post will show you how to do that using NSwag.","date":"2025-10-12T00:00:00.000Z","tags":[{"inline":false,"label":"Swagger","permalink":"/tags/swagger","description":"The Swagger API documentation framework - now known as OpenAPI."},{"inline":false,"label":"C#","permalink":"/tags/csharp","description":"The C# programming language."},{"inline":false,"label":"Azure","permalink":"/tags/azure","description":"The Microsoft cloud platform."},{"inline":false,"label":"TypeScript","permalink":"/tags/typescript","description":"The TypeScript programming language."}],"readingTime":5.77,"hasTruncateMarker":true,"authors":[{"name":"John Reilly","title":"OSS Engineer - TypeScript, Azure, React, Node.js, .NET","url":"https://johnnyreilly.com/about","imageURL":"https://johnnyreilly.com/img/profile-2025.jpg","key":"johnnyreilly","page":null}],"frontMatter":{"slug":"keeping-front-end-and-back-end-in-sync-with-nswag-generated-clients","title":"Keeping front end and back end in sync with NSwag generated clients","authors":"johnnyreilly","tags":["swagger","c#","azure","typescript"],"image":"./title-image.png","hide_table_of_contents":false,"description":"By generating clients from OpenAPI specs, it is possible to have integration tests that check your front end and your back end are aligned. This post will show you how to do that using NSwag."},"unlisted":false,"nextItem":{"title":"Azure DevOps: merging pull requests with conventional commits","permalink":"/azure-devops-pull-requests-conventional-commits"}}')},69045:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/title-image-f0945ac5da387c7202af084f33c85949.png"},98227:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var i=t(63041),a=t(74848),r=t(28453);const o={slug:"keeping-front-end-and-back-end-in-sync-with-nswag-generated-clients",title:"Keeping front end and back end in sync with NSwag generated clients",authors:"johnnyreilly",tags:["swagger","c#","azure","typescript"],image:"./title-image.png",hide_table_of_contents:!1,description:"By generating clients from OpenAPI specs, it is possible to have integration tests that check your front end and your back end are aligned. This post will show you how to do that using NSwag."},s=void 0,c={image:t(69045).A,authorsImageUrls:[void 0]},l=[];function g(e){const n={a:"a",img:"img",p:"p",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["For many years I've been a big fan of using ",(0,a.jsx)(n.a,{href:"https://github.com/RicoSuter/NSwag",children:"NSwag"})," to generate TypeScript and CSharp clients for APIs. I've written about it before in ",(0,a.jsx)(n.a,{href:"/generate-typescript-and-csharp-clients-with-nswag",children:"Generate TypeScript and CSharp clients with NSwag"}),"."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"title image reading &quot;Keeping front end and back end in sync with NSwag generated clients&quot; with the Open API, TypeScript and C# logos",src:t(8284).A+"",width:"800",height:"450",loading:"lazy"})}),"\n",(0,a.jsxs)(n.p,{children:["You're likely aware of the popularity of excellent projects like ",(0,a.jsx)(n.a,{href:"https://trpc.io/",children:"tRPC"})," which provide a way to use TypeScript end-to-end. However, if you're working in a polyglot environment where your back end is written in C# or [insert other language here], and your front end is written in TypeScript, then cannot take advantage of that. However, by generating front end clients from a server's OpenAPI specs, it's possible to have integration tests that check your front end and your back end are aligned."]}),"\n",(0,a.jsx)(n.p,{children:"This post will show you how to do that using NSwag."})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(g,{...e})}):g(e)}}}]);