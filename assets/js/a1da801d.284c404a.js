"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([[45167],{11808:(e,t,a)=>{a.d(t,{A:()=>s});const s=a.p+"assets/images/screenshot-google-rich-results-test-breadcrumbs-breakdown-7c784707aa30b741a8d1910abdd2738f.png"},15867:(e,t,a)=>{a.d(t,{A:()=>s});const s=a.p+"assets/images/screenshot-google-rich-results-test-breadcrumbs-11885edfb2bbd57f6a5b30155b6cae25.webp"},26436:(e,t,a)=>{a.d(t,{A:()=>s});const s=a.p+"assets/images/screenshot-google-search-results-breadcrumbs-52876f7da35364e23a3e878bef810fd0.webp"},26666:e=>{e.exports=JSON.parse('{"permalink":"/docusaurus-blogs-adding-breadcrumb-structured-data","editUrl":"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2023-02-05-docusaurus-blogs-adding-breadcrumb-structured-data/index.md","source":"@site/blog/2023-02-05-docusaurus-blogs-adding-breadcrumb-structured-data/index.md","title":"Docusaurus blogs: adding breadcrumb structured data","description":"Docusaurus blogs can add breadcrumb structured data to their blog posts. This post shows how to add it using the JSON-LD format.","date":"2023-02-05T00:00:00.000Z","tags":[{"inline":false,"label":"Docusaurus","permalink":"/tags/docusaurus","description":"The Docusaurus static site generator."},{"inline":false,"label":"SEO","permalink":"/tags/seo","description":"Search Engine Optimization."}],"readingTime":6.18,"hasTruncateMarker":true,"authors":[{"name":"John Reilly","title":"OSS Engineer - TypeScript, Azure, React, Node.js, .NET","url":"https://johnnyreilly.com/about","imageURL":"https://johnnyreilly.com/img/profile-2025.jpg","key":"johnnyreilly","page":null}],"frontMatter":{"slug":"docusaurus-blogs-adding-breadcrumb-structured-data","title":"Docusaurus blogs: adding breadcrumb structured data","authors":"johnnyreilly","tags":["docusaurus","seo"],"image":"./title-image.png","description":"Docusaurus blogs can add breadcrumb structured data to their blog posts. This post shows how to add it using the JSON-LD format.","hide_table_of_contents":false},"unlisted":false,"prevItem":{"title":"In defence of pull requests","permalink":"/in-defence-of-pull-requests"},"nextItem":{"title":"Migrating from GitHub Pages to Azure Static Web Apps","permalink":"/migrating-from-github-pages-to-azure-static-web-apps"}}')},28453:(e,t,a)=>{a.d(t,{R:()=>o,x:()=>i});var s=a(96540);const r={},n=s.createContext(r);function o(e){const t=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(n.Provider,{value:t},e.children)}},36259:(e,t,a)=>{a.d(t,{A:()=>s});const s=a.p+"assets/images/screenshot-google-search-console-breadcrumbs-7f4b06a345be9e6b2154662089fc79b5.webp"},75726:(e,t,a)=>{a.d(t,{A:()=>s});const s=a.p+"assets/images/title-image-e80a4fa94841330420bfb9d28d8d0f1e.png"},77213:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var s=a(26666),r=a(74848),n=a(28453);const o={slug:"docusaurus-blogs-adding-breadcrumb-structured-data",title:"Docusaurus blogs: adding breadcrumb structured data",authors:"johnnyreilly",tags:["docusaurus","seo"],image:"./title-image.png",description:"Docusaurus blogs can add breadcrumb structured data to their blog posts. This post shows how to add it using the JSON-LD format.",hide_table_of_contents:!1},i=void 0,c={image:a(87305).A,authorsImageUrls:[void 0]},d=[{value:"What are breadcrumbs?",id:"what-are-breadcrumbs",level:2},{value:"Adding a breadcrumb to a blog post",id:"adding-a-breadcrumb-to-a-blog-post",level:2},{value:"Adding a breadcrumb to the blog archive page",id:"adding-a-breadcrumb-to-the-blog-archive-page",level:2},{value:"Adding a breadcrumb to the blog post page",id:"adding-a-breadcrumb-to-the-blog-post-page",level:2},{value:"Using the Rich Results test to validate the breadcrumbs",id:"using-the-rich-results-test-to-validate-the-breadcrumbs",level:2},{value:"Conclusion",id:"conclusion",level:2}];function l(e){const t={a:"a",blockquote:"blockquote",code:"code",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"By default, Docusaurus blogs don't add breadcrumb structured data to their blog posts. It's not hard to make it happen though; this post shows how to add it using the JSON-LD format."}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"title image reading &quot;Docusaurus blogs: adding breadcrumb structured data&quot; with the Docusaurus logo",src:a(75726).A+"",width:"800",height:"450",loading:"lazy"})}),"\n",(0,r.jsx)(t.h2,{id:"what-are-breadcrumbs",children:"What are breadcrumbs?"}),"\n",(0,r.jsx)(t.p,{children:"Take a look at this:"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"screenshot of Google search results with a highlighted breadcrumb",src:a(26436).A+"",width:"954",height:"327",loading:"lazy"})}),"\n",(0,r.jsxs)(t.p,{children:["What you're looking at is a ",(0,r.jsx)(t.a,{href:"/directory-build-props-c-sharp-9-for-all",children:"blog post of mine"}),' showing up in Google search results. Significantly, it has a breadcrumb which I\'ve highlighted. It indicates that the blog post sits under the blogs "Archive" page, which in turn sits under the home page of the site.']}),"\n",(0,r.jsx)(t.p,{children:"This breadcrumb was driven by structured data that my blog surfaces. Structured data is a form of metadata that is intended to be easily machine readable; and consequently helpful to search engines like Google. Now, what is a breadcrumb to Google?"}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsx)(t.p,{children:"Google Search uses breadcrumb markup in the body of a web page to categorize the information from the page in search results."}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.a,{href:"https://developers.google.com/search/docs/appearance/structured-data/breadcrumb",children:"You can read more on breadcrumbs in the Google documentation"}),". This post is about how to add breadcrumbs to your Docusaurus blog posts, to help Google categorise your blog posts."]}),"\n",(0,r.jsx)(t.p,{children:"It's worth noting that what we're going to do here is add a JSON-LD structured data breadcrumb to the blog post. There's going to be no physical breadcrumb on the page itself. It could be nice to add a physical breadcrumb, but that's not what we're going to do here as it would not be a trivial addition. (As an aside, Docusaurus does use physical breadcrumbs in its documentation pages; which surface structured data.)"}),"\n",(0,r.jsxs)(t.p,{children:["Docusaurus already has structured data support for blog posts; ",(0,r.jsx)(t.a,{href:"https://github.com/facebook/docusaurus/pull/5322",children:"in fact I had a hand in that"}),". I like me some structured data \ud83d\ude09. The existing structured data is article / ",(0,r.jsx)(t.code,{children:"BlogPosting"})," metadata. We're going to enrich the structured data for blog posts by adding a ",(0,r.jsx)(t.code,{children:"BreadcrumbList"})," as well."]}),"\n",(0,r.jsxs)(t.p,{children:["Incidentally, if you'd like to learn more about React, JSON-LD and structured data, I've ",(0,r.jsx)(t.a,{href:"/structured-data-seo-and-react",children:"written about it, and done a short talk on the topic"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"adding-a-breadcrumb-to-a-blog-post",children:"Adding a breadcrumb to a blog post"}),"\n",(0,r.jsxs)(t.p,{children:["With all that preamble out of the way, let's get to the good stuff. We're going to add a breadcrumb to a blog post. To do that, we need to adjust two components in Docusaurus; the ",(0,r.jsx)(t.code,{children:"BlogArchivePage"})," and the ",(0,r.jsx)(t.code,{children:"BlogPostPage"}),". We're going to do this by swizzling. Let's crack open the terminal and get started:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"npm run swizzle @docusaurus/theme-classic BlogArchivePage -- --wrap --danger\nnpm run swizzle @docusaurus/theme-classic BlogPostPage -- --wrap --danger\n"})}),"\n",(0,r.jsxs)(t.p,{children:["This will create two files in the ",(0,r.jsx)(t.code,{children:"src/theme/"})," directory:"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"src/theme/BlogArchivePage/index.js"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"src/theme/BlogPostPage/index.js"})}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:["You'll note from the command that we've used the ",(0,r.jsx)(t.code,{children:"--wrap"})," flag. This is because we want to wrap the existing component. If we didn't use the ",(0,r.jsx)(t.code,{children:"--wrap"})," flag, we'd be replacing the existing component. We're wrapping rather than replacing as it will make maintenance easier as Docusaurus evolves."]}),"\n",(0,r.jsx)(t.h2,{id:"adding-a-breadcrumb-to-the-blog-archive-page",children:"Adding a breadcrumb to the blog archive page"}),"\n",(0,r.jsxs)(t.p,{children:["We're now going to replace the generated ",(0,r.jsx)(t.code,{children:"BlogArchivePage"})," component with the following:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-jsx",children:"import React from 'react';\nimport BlogArchivePage from '@theme-original/BlogArchivePage';\nimport useDocusaurusContext from '@docusaurus/useDocusaurusContext';\n\nexport default function BlogArchivePageWrapper(props) {\n  const { siteConfig } = useDocusaurusContext();\n\n  // https://developers.google.com/search/docs/appearance/structured-data/breadcrumb#json-ld\n  const breadcrumbStructuredData = {\n    '@context': 'https://schema.org',\n    '@type': 'BreadcrumbList',\n    name: 'Archive breadcrumb',\n    itemListElement: [\n      {\n        '@type': 'ListItem',\n        position: 1,\n        name: 'Home',\n        item: siteConfig.url,\n      },\n      {\n        '@type': 'ListItem',\n        position: 2,\n        name: 'Archive',\n      },\n    ],\n  };\n\n  return (\n    <>\n      <script\n        type=\"application/ld+json\"\n        dangerouslySetInnerHTML={{\n          __html: JSON.stringify(breadcrumbStructuredData),\n        }}\n      />\n      <BlogArchivePage {...props} />\n    </>\n  );\n}\n"})}),"\n",(0,r.jsxs)(t.p,{children:["Here we're constructing a JSON-LD structured data object that represents a breadcrumb. We're then adding it to the page as a script tag with the ",(0,r.jsx)(t.code,{children:"type"})," of ",(0,r.jsx)(t.code,{children:"application/ld+json"}),". And we're rendering the wrapped ",(0,r.jsx)(t.code,{children:"BlogArchivePage"})," component. This is so that we can add the structured data breadcrumb to the page without having to duplicate the existing code."]}),"\n",(0,r.jsxs)(t.p,{children:["There's two entries in the ",(0,r.jsx)(t.code,{children:"itemListElement"})," array. The first is the home page of the site. The second is the archive page itself. We're not going to add a link to the archive page as it's the current page."]}),"\n",(0,r.jsx)(t.h2,{id:"adding-a-breadcrumb-to-the-blog-post-page",children:"Adding a breadcrumb to the blog post page"}),"\n",(0,r.jsxs)(t.p,{children:["Okay, one down - one to go. We're now going to replace the generated ",(0,r.jsx)(t.code,{children:"BlogPostPage"})," component with the following:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-jsx",children:"import React from 'react';\nimport BlogPostPage from '@theme-original/BlogPostPage';\nimport useDocusaurusContext from '@docusaurus/useDocusaurusContext';\n\nexport default function BlogPostPageWrapper(props) {\n  const { siteConfig } = useDocusaurusContext();\n\n  /** @type {import('@docusaurus/plugin-content-blog').BlogPostMetadata} */ const blogMetaData =\n    props.content.metadata;\n\n  // https://developers.google.com/search/docs/appearance/structured-data/breadcrumb#json-ld\n  const archiveBreadcrumbStructuredData = {\n    '@context': 'https://schema.org',\n    '@type': 'BreadcrumbList',\n    name: 'Archive breadcrumb',\n    itemListElement: [\n      {\n        '@type': 'ListItem',\n        position: 1,\n        name: 'Home',\n        item: siteConfig.url,\n      },\n      {\n        '@type': 'ListItem',\n        position: 2,\n        name: 'Archive',\n        item: `${siteConfig.url}/archive`,\n      },\n      {\n        '@type': 'ListItem',\n        position: 3,\n        name: blogMetaData.title,\n      },\n    ],\n  };\n\n  const tagsBreadcrumbStructuredData = blogMetaData.tags.map((tag) => ({\n    '@context': 'https://schema.org',\n    '@type': 'BreadcrumbList',\n    name: `Tags ${tag.label} breadcrumb`,\n    itemListElement: [\n      {\n        '@type': 'ListItem',\n        position: 1,\n        name: 'Home',\n        item: siteConfig.url,\n      },\n      {\n        '@type': 'ListItem',\n        position: 2,\n        name: 'Tags',\n        item: `${siteConfig.url}/tags`,\n      },\n      {\n        '@type': 'ListItem',\n        position: 3,\n        name: tag.label,\n        item: `${siteConfig.url}${tag.permalink}`,\n      },\n      {\n        '@type': 'ListItem',\n        position: 4,\n        name: blogMetaData.title,\n      },\n    ],\n  }));\n\n  const breadcrumbStructuredData = [\n    archiveBreadcrumbStructuredData,\n    ...tagsBreadcrumbStructuredData,\n  ];\n\n  return (\n    <>\n      <script\n        type=\"application/ld+json\"\n        dangerouslySetInnerHTML={{\n          __html: JSON.stringify(breadcrumbStructuredData),\n        }}\n      />\n      <BlogPostPage {...props} />\n    </>\n  );\n}\n"})}),"\n",(0,r.jsx)(t.p,{children:"Again, we're constructing a JSON-LD structured data object that represents a breadcrumb. But this time we're going to add multiple breadcrumbs to the page. The first is the archive breadcrumb. The other breadcrumbs are generated for each tag."}),"\n",(0,r.jsxs)(t.p,{children:["I'm somewhat on the fence as to whether it's useful to have a breadcrumb for each tag. ",(0,r.jsx)(t.a,{href:"https://github.com/johnnyreilly/blog.johnnyreilly.com/pull/416",children:"In fact, originally I didn't have it when I first added support"}),". But I've added it in as it's not a lot of work and it's not a lot of code. I'm not sure if it's useful or not. ",(0,r.jsx)(t.a,{href:"https://github.com/johnnyreilly/blog.johnnyreilly.com/commit/e69633ca6cc6cae98cd405580e9659594ac92f8a",children:"I've added it now"}),"; I'm going to leave it in in place for a bit and see how it goes."]}),"\n",(0,r.jsx)(t.h2,{id:"using-the-rich-results-test-to-validate-the-breadcrumbs",children:"Using the Rich Results test to validate the breadcrumbs"}),"\n",(0,r.jsxs)(t.p,{children:["Once we've shipped the changes we can test them using the ",(0,r.jsx)(t.a,{href:"https://search.google.com/test/rich-results",children:"Google Rich Results Test"}),". The screenshot below was taken after I'd deployed the changes and ",(0,r.jsx)(t.a,{href:"https://search.google.com/test/rich-results?url=https%3A%2F%2Fjohnnyreilly.com%2Fdirectory-build-props-c-sharp-9-for-all",children:"the test was run"}),"."]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"screenshot of the Rich Results Test featuring article and breadcrumbs",src:a(15867).A+"",width:"1043",height:"810",loading:"lazy"})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"screenshot of the Rich Results Test featuring the specific 4 breadcrumbs",src:a(11808).A+"",width:"1044",height:"840",loading:"lazy"})}),"\n",(0,r.jsxs)(t.p,{children:["We can also check the breadcrumbs in the ",(0,r.jsx)(t.a,{href:"https://search.google.com/search-console/r/breadcrumbs",children:"Google Search Console"}),":"]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Screenshot of the Google search console",src:a(36259).A+"",width:"1053",height:"860",loading:"lazy"})}),"\n",(0,r.jsx)(t.p,{children:"So that's it, now we have breadcrumbs on the blog posts."}),"\n",(0,r.jsx)(t.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,r.jsxs)(t.p,{children:['This is a useful addition to the blog. I\'d like it more if it was a physical breadcrumb as well; not just an "invisible" one. ',(0,r.jsx)(t.a,{href:"https://docusaurus.io/feature-requests/p/add-breadcrumb-for-blog-posts",children:"I've opened an issue with Docusaurus to see if that's possible"}),". I would imagine, if that does get added, it would likely be a single breadcrumb rather than multiple ones. But let me not preempt; let's see what comes of it."]})]})}function u(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},87305:(e,t,a)=>{a.d(t,{A:()=>s});const s=a.p+"assets/images/title-image-e80a4fa94841330420bfb9d28d8d0f1e.png"}}]);