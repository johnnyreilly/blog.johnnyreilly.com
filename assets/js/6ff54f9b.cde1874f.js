"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([[89538],{3905:(e,t,r)=>{r.d(t,{Zo:()=>h,kt:()=>d});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),u=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},h=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,h=s(e,["components","mdxType","originalType","parentName"]),m=u(r),c=o,d=m["".concat(l,".").concat(c)]||m[c]||p[c]||a;return r?n.createElement(d,i(i({ref:t},h),{},{components:r})):n.createElement(d,i({ref:t},h))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:o,i[1]=s;for(var u=2;u<a;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},32512:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>h,contentTitle:()=>l,default:()=>c,frontMatter:()=>s,metadata:()=>u,toc:()=>m});r(67294);var n=r(3905);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})),e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}const s={slug:"karma-from-phantomjs-to-headless-chrome",title:"Karma: From PhantomJS to Headless Chrome",authors:"johnnyreilly",tags:["Automated Testing"],hide_table_of_contents:!1,description:"Replace PhantomJS with new Chrome Headless to run Chrome without a UI. Migrate a test and add Chrome to your build environment."},l=void 0,u={permalink:"/karma-from-phantomjs-to-headless-chrome",editUrl:"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2017-08-27-karma-from-phantomjs-to-headless-chrome/index.md",source:"@site/blog/2017-08-27-karma-from-phantomjs-to-headless-chrome/index.md",title:"Karma: From PhantomJS to Headless Chrome",description:"Replace PhantomJS with new Chrome Headless to run Chrome without a UI. Migrate a test and add Chrome to your build environment.",date:"2017-08-27T00:00:00.000Z",formattedDate:"August 27, 2017",tags:[{label:"Automated Testing",permalink:"/tags/automated-testing"}],readingTime:1.91,hasTruncateMarker:!0,authors:[{name:"John Reilly",title:"OSS Engineer - TypeScript, Azure, React, Node.js, .NET",url:"https://johnnyreilly.com/about",imageURL:"https://johnnyreilly.com/img/profile.jpg",key:"johnnyreilly"}],frontMatter:{slug:"karma-from-phantomjs-to-headless-chrome",title:"Karma: From PhantomJS to Headless Chrome",authors:"johnnyreilly",tags:["Automated Testing"],hide_table_of_contents:!1,description:"Replace PhantomJS with new Chrome Headless to run Chrome without a UI. Migrate a test and add Chrome to your build environment."},prevItem:{title:"Oh the Glamour of Open Source",permalink:"/oh-glamour-of-open-source"},nextItem:{title:"A Haiku on the Problem with SemVer: Us",permalink:"/a-haiku-on-problem-with-semver-us"}},h={authorsImageUrls:[void 0]},m=[{value:"Making the Switch",id:"making-the-switch",level:2},{value:"<code>package.json</code>",id:"packagejson",level:2},{value:"<code>karma.conf.js</code>",id:"karmaconfjs",level:2},{value:"Continuous Integration",id:"continuous-integration",level:2}],p={toc:m};function c(e){var{components:t}=e,r=i(e,["components"]);return(0,n.kt)("wrapper",a(function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},n=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),n.forEach((function(t){o(e,t,r[t])}))}return e}({},p,r),{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Like pretty much everyone else I've been using PhantomJS to run my JavaScript (or compiled-to-JS) unit tests. It's been great. So when I heard the news that ",(0,n.kt)("a",{parentName:"p",href:"https://news.ycombinator.com/item?id=14105489"},"PhantomJS was dead")," I was genuinely sad. However, the King is dead.... Long live the King! For there is a new hope; it's called ",(0,n.kt)("a",{parentName:"p",href:"https://developers.google.com/web/updates/2017/04/headless-chrome"},"Chrome Headless "),". It's not a separate version of Chrome; rather the ability to run Chrome without a UI is now baked into Google's favourite browser as of v59. (For those history buffs I might as well be clear: the main reason PhantomJS died is because Chrome Headless was in the works.)"),(0,n.kt)("h2",{id:"making-the-switch"},"Making the Switch"),(0,n.kt)("p",null,"As long as you're running Chrome v59 or greater then you can switch. I've just made ts-loader's execution test pack run with Chrome Headless instead of PhantomJS and I've rarely been happier. Honest. Some context: the execution test pack runs Jasmine unit tests via the ",(0,n.kt)("a",{parentName:"p",href:"https://karma-runner.github.io/1.0/index.html"},"Karma test runner"),". The move was surprisingly easy and you can see just how minimal it was in the PR ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/TypeStrong/ts-loader/pull/611/files"},"here"),". If you want to migrate a test that runs tests via Karma then this will take you through what you need to do."),(0,n.kt)("h2",{id:"packagejson"},(0,n.kt)("inlineCode",{parentName:"h2"},"package.json")),(0,n.kt)("p",null,"You no longer need ",(0,n.kt)("inlineCode",{parentName:"p"},"phantomjs-prebuilt")," as a dev dependency of your project. That's the PhantomJS browser disappearing in the rear view mirror. Next we need to replace ",(0,n.kt)("inlineCode",{parentName:"p"},"karma-phantomjs-launcher")," with ",(0,n.kt)("inlineCode",{parentName:"p"},"karma-chrome-launcher"),". These packages are responsible for firing up the browser that the tests are run in and we no longer want to invoke PhantomJS; we're Chrome all the way baby."),(0,n.kt)("h2",{id:"karmaconfjs"},(0,n.kt)("inlineCode",{parentName:"h2"},"karma.conf.js")),(0,n.kt)("p",null,"You need to tell Karma to use Chrome Headless instead of PhantomJS. You do that by replacing"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"browsers: [ 'PhantomJS' ],\n")),(0,n.kt)("p",null,"with"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"browsers: [ 'ChromeHeadless' ],\n")),(0,n.kt)("p",null,"That's it; job done!"),(0,n.kt)("h2",{id:"continuous-integration"},"Continuous Integration"),(0,n.kt)("p",null,"There's always one more thing isn't there? Yup, ts-loader has CI builds that run on ",(0,n.kt)("a",{parentName:"p",href:"https://ci.appveyor.com/project/JohnReilly/ts-loader/branch/master"},"Windows with AppVeyor")," and ",(0,n.kt)("a",{parentName:"p",href:"https://travis-ci.org/TypeStrong/ts-loader"},"Linux with Travis"),". The AppVeyor build went green on the first run; that's because Chrome is installed by default in the AppVeyor build environment. (yay!)"),(0,n.kt)("p",null,"Travis went red. (boooo!) Travis doesn't have Chrome installed by default. But it's no biggie; you just need to tweak your ",(0,n.kt)("inlineCode",{parentName:"p"},".travis.yml")," like so:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yml"},"dist: trusty\naddons:\n  chrome: stable\n")),(0,n.kt)("p",null,"This includes Chrome in the Travis build environment. Green. Boom!"))}c.isMDXComponent=!0}}]);