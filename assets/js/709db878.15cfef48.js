"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([[23046],{28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var i=n(96540);const s={},o=i.createContext(s);function r(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:t},e.children)}},31862:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/play-codesandbox-d27ff822b6a759948e7d790b8062e14c.svg"},42300:e=>{e.exports=JSON.parse('{"permalink":"/react-select-with-less-typing-lag","editUrl":"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2019-04-27-react-select-with-less-typing-lag/index.md","source":"@site/blog/2019-04-27-react-select-with-less-typing-lag/index.md","title":"react-select with less typing lag","description":"Fix lagging in `react-select`. Change `filterOption` to `ignoreAccents: false` for faster typing experience with 1000+ items.","date":"2019-04-27T00:00:00.000Z","tags":[{"inline":false,"label":"React","permalink":"/tags/react","description":"The React library."}],"readingTime":2.19,"hasTruncateMarker":true,"authors":[{"name":"John Reilly","title":"OSS Engineer - TypeScript, Azure, React, Node.js, .NET","url":"https://johnnyreilly.com/about","imageURL":"https://johnnyreilly.com/img/profile.jpg","key":"johnnyreilly","page":null}],"frontMatter":{"slug":"react-select-with-less-typing-lag","title":"react-select with less typing lag","authors":"johnnyreilly","tags":["react"],"hide_table_of_contents":false,"description":"Fix lagging in `react-select`. Change `filterOption` to `ignoreAccents: false` for faster typing experience with 1000+ items."},"unlisted":false,"prevItem":{"title":"TypeScript and high CPU usage - watch don\'t stare!","permalink":"/typescript-and-high-cpu-usage-watch"},"nextItem":{"title":"Template Tricks for a Dainty DOM","permalink":"/template-tricks-for-dainty-dom"}}')},82501:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var i=n(42300),s=n(74848),o=n(28453);const r={slug:"react-select-with-less-typing-lag",title:"react-select with less typing lag",authors:"johnnyreilly",tags:["react"],hide_table_of_contents:!1,description:"Fix lagging in `react-select`. Change `filterOption` to `ignoreAccents: false` for faster typing experience with 1000+ items."},a=void 0,l={authorsImageUrls:[void 0]},c=[];function h(e){const t={a:"a",code:"code",em:"em",img:"img",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["This is going out to all those people using ",(0,s.jsx)(t.a,{href:"https://react-select.com",children:(0,s.jsx)(t.code,{children:"react-select"})})," with 1000+ items to render. To those people typing into the select and saying out loud \"it's ",(0,s.jsx)(t.em,{children:"so"})," laggy.... This can't be... It's 2019... I mean, right?\" To the people who read this ",(0,s.jsx)(t.a,{href:"https://github.com/JedWatson/react-select/issues/3128",children:"GitHub issue"})," top to bottom 30 times and still came back unsure of what to do. This is for you."]}),"\n",(0,s.jsxs)(t.p,{children:["I'm lying. Mostly this goes out to me. I have a select box. I need it to render 2000+ items. I want it to be lovely. I want my users to be delighted as they use it. I want them to type in and (",(0,s.jsx)(t.em,{children:"this is the crucial part!"}),") for the control to feel responsive. Not laggy. Not like each keypress is going to Jupiter and back before it renders to the screen."]}),"\n",(0,s.jsxs)(t.p,{children:["Amongst the various gems on the GitHub issue are shared CodeSandboxes illustrating ways to integrate react-select with react-window. That's great and they do improve things. However, they don't do much to improve the laggy typing feel. There's ",(0,s.jsx)(t.a,{href:"https://github.com/JedWatson/react-select/issues/3128#issuecomment-431397942",children:"brief mention"})," of a props tweak you can make to react-select; this:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"filterOption={createFilter({ ignoreAccents: false })}\n"})}),"\n",(0,s.jsxs)(t.p,{children:["What does this do? Well, this improves the typing lag experience ",(0,s.jsx)(t.em,{children:"massively"}),". For why? Well, ",(0,s.jsx)(t.a,{href:"https://github.com/JedWatson/react-select/blob/292bad3298f2cafad6767f2134bd79a9c27e4073/src/filters.js#L21",children:"if you look at the code"})," you find that the default value is ",(0,s.jsx)(t.code,{children:"ignoreAccents: true"}),". This default makes react-select invoke an expensive (and scary sounding) function called ",(0,s.jsx)(t.a,{href:"https://github.com/JedWatson/react-select/blob/292bad3298f2cafad6767f2134bd79a9c27e4073/src/diacritics.js#L90",children:(0,s.jsx)(t.code,{children:"stripDiacritics"})}),". Not once but twice. Ouchy. And this kills performance."]}),"\n",(0,s.jsxs)(t.p,{children:["But if you're okay with accents not being ignored (and ",(0,s.jsx)(t.em,{children:"spoiler"}),": I am) then this is the option for you."]}),"\n",(0,s.jsxs)(t.p,{children:["Here's a CodeSandbox which also includes the ",(0,s.jsx)(t.code,{children:"ignoreAccents: false"})," tweak. Enjoy!"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://codesandbox.io/s/zn70lqp31m?fontsize=14",children:(0,s.jsx)(t.img,{alt:"Edit johnnyreilly/react-window-with-react-select-less-laggy",src:n(31862).A+"",width:"184",height:"40",loading:"lazy"})})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Select, { createFilter } from 'react-select';\nimport { FixedSizeList as List } from 'react-window';\n\nimport './styles.css';\n\nconst options = [];\nfor (let i = 0; i < 2500; i = i + 1) {\n  options.push({ value: i, label: `Option ${i}` });\n}\n\nconst height = 35;\n\nclass MenuList extends Component {\n  render() {\n    const { options, children, maxHeight, getValue } = this.props;\n    const [value] = getValue();\n    const initialOffset = options.indexOf(value) * height;\n\n    return (\n      <List\n        height={maxHeight}\n        itemCount={children.length}\n        itemSize={height}\n        initialScrollOffset={initialOffset}\n      >\n        {({ index, style }) => <div style={style}>{children[index]}</div>}\n      </List>\n    );\n  }\n}\n\nconst App = () => (\n  <Select\n    filterOption={createFilter({ ignoreAccents: false })} // this makes all the difference!\n    components={{ MenuList }}\n    options={options}\n  />\n);\n\nReactDOM.render(<App />, document.getElementById('root'));\n"})})]})}function d(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}}}]);