"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([[3303],{28453:(e,t,o)=>{o.d(t,{R:()=>i,x:()=>a});var n=o(96540);const s={},r=n.createContext(s);function i(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(r.Provider,{value:t},e.children)}},79946:e=>{e.exports=JSON.parse('{"permalink":"/font-awesome-brand-icons-react","editUrl":"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2018-10-07-font-awesome-brand-icons-react/index.md","source":"@site/blog/2018-10-07-font-awesome-brand-icons-react/index.md","title":"Brand New Fonting Awesomeness","description":"Learn how to use brand icons with Font Awesome 5 in React with these helpful instructions on @fortawesome/free-brands-svg-icons.","date":"2018-10-07T00:00:00.000Z","tags":[{"inline":false,"label":"React","permalink":"/tags/react","description":"The React library."}],"readingTime":1.68,"hasTruncateMarker":true,"authors":[{"name":"John Reilly","title":"OSS Engineer - TypeScript, Azure, React, Node.js, .NET","url":"https://johnnyreilly.com/about","imageURL":"https://johnnyreilly.com/img/profile.jpg","key":"johnnyreilly","page":null}],"frontMatter":{"slug":"font-awesome-brand-icons-react","title":"Brand New Fonting Awesomeness","authors":"johnnyreilly","tags":["react"],"hide_table_of_contents":false,"description":"Learn how to use brand icons with Font Awesome 5 in React with these helpful instructions on @fortawesome/free-brands-svg-icons."},"unlisted":false,"prevItem":{"title":"Making a Programmer","permalink":"/making-a-programmer"},"nextItem":{"title":"ts-loader Project References: First Blood","permalink":"/ts-loader-project-references-first-blood"}}')},86725:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>n,toc:()=>l});var n=o(79946),s=o(74848),r=o(28453);const i={slug:"font-awesome-brand-icons-react",title:"Brand New Fonting Awesomeness",authors:"johnnyreilly",tags:["react"],hide_table_of_contents:!1,description:"Learn how to use brand icons with Font Awesome 5 in React with these helpful instructions on @fortawesome/free-brands-svg-icons."},a=void 0,c={authorsImageUrls:[void 0]},l=[{value:"Brand Me Up Buttercup",id:"brand-me-up-buttercup",level:2},{value:"Update: It is documented!",id:"update-it-is-documented",level:2}];function d(e){const t={a:"a",code:"code",em:"em",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["Love me some ",(0,s.jsx)(t.a,{href:"https://fontawesome.com",children:"Font Awesome"}),". Absolutely wonderful. However, I came a cropper when following the instructions ",(0,s.jsx)(t.a,{href:"https://fontawesome.com/how-to-use/on-the-web/using-with/react",children:"on using the all new Font Awesome 5 with React"}),". The instructions for standard icons work ",(0,s.jsx)(t.em,{children:"fine"}),". But if you want to use brand icons then this does not help you out much. There's 2 problems:"]}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["Font Awesome's brand icons are not part of ",(0,s.jsx)(t.a,{href:"https://www.npmjs.com/package/@fortawesome/free-solid-svg-icons",children:(0,s.jsx)(t.code,{children:"@fortawesome/free-solid-svg-icons"})})," package"]}),"\n",(0,s.jsxs)(t.li,{children:["The method of icon usage illustrated (i.e. with the ",(0,s.jsx)(t.code,{children:"FontAwesomeIcon"})," component) doesn't work. It doesn't render owt."]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"brand-me-up-buttercup",children:"Brand Me Up Buttercup"}),"\n",(0,s.jsxs)(t.p,{children:["You want brands? Well you need the ",(0,s.jsx)(t.a,{href:"https://www.npmjs.com/package/@fortawesome/free-brands-svg-icons",children:(0,s.jsx)(t.code,{children:"@fortawesome/free-brands-svg-icons"})}),". Obvs, right?"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sh",children:"yarn add @fortawesome/fontawesome-svg-core\nyarn add @fortawesome/free-brands-svg-icons\nyarn add @fortawesome/react-fontawesome\n"})}),"\n",(0,s.jsx)(t.p,{children:"Now usage:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-jsx",children:"import * as React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faReact } from '@fortawesome/free-brands-svg-icons';\n\nexport const Framework = () => (\n  <div>\n    Favorite Framework: <FontAwesomeIcon icon={faReact} />\n  </div>\n);\n"})}),"\n",(0,s.jsx)(t.p,{children:"Here we've ditched the \"library / magic-string\" approach from the documentation for one which explicitly imports and uses the required icons. I suspect this will be good for tree-shaking as well but, hand-on-heart, I haven't rigorously tested that. I'm not sure why the approach I'm using isn't documented actually. Mysterious! I've seen no ill-effects from using it but perhaps YMMV. Proceed with caution..."}),"\n",(0,s.jsx)(t.h2,{id:"update-it-is-documented",children:"Update: It is documented!"}),"\n",(0,s.jsxs)(t.p,{children:["Yup - information on this approach is out there; but it's less obvious than you might hope. ",(0,s.jsx)(t.a,{href:"https://github.com/FortAwesome/react-fontawesome#explicit-import",children:"Read all about it here."})," For what it's worth, the explicit import approach seems to be playing second fiddle to the library / magic-string one. I'm not too sure why. For my money, explicit imports are clearer, less prone to errors and better setup for optimisation. Go figure..."]}),"\n",(0,s.jsx)(t.p,{children:"Feel free to set me straight in the comments!"})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);