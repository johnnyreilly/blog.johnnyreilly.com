"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([["77332"],{43588:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return p},frontMatter:function(){return a},metadata:function(){return r},toc:function(){return l}});var r=n(16020),o=n(85893),i=n(50065);let a={slug:"from-react-window-to-react-virtual",title:"From react-window to react-virtual",authors:"johnnyreilly",tags:["react"],hide_table_of_contents:!1,description:"Switch from `react-window` to `react-virtual` for simpler code, TypeScript support and improved perceived performance."},s=void 0,c={authorsImageUrls:[void 0]},l=[{value:"Make that change",id:"make-that-change",level:2}];function d(e){let t={a:"a",blockquote:"blockquote",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:["The tremendous ",(0,o.jsx)(t.a,{href:"https://twitter.com/tannerlinsley",children:"Tanner Linsley"})," recently released ",(0,o.jsx)(t.a,{href:"https://github.com/tannerlinsley/react-virtual",children:(0,o.jsx)(t.code,{children:"react-virtual"})}),". ",(0,o.jsx)(t.code,{children:"react-virtual"}),' provides "hooks for virtualizing scrollable elements in React".']}),"\n",(0,o.jsxs)(t.p,{children:["I was already using the (also excellent) ",(0,o.jsx)(t.a,{href:"https://github.com/bvaughn/react-window",children:(0,o.jsx)(t.code,{children:"react-window"})})," for this purpose. ",(0,o.jsx)(t.code,{children:"react-window"})," does the virtualising job and does it very well indeed However, I was both intrigued by the lure of the new shiny thing. I've also never been the biggest fan of ",(0,o.jsx)(t.code,{children:"react-window"}),"'s API. So I tried switching over from ",(0,o.jsx)(t.code,{children:"react-window"})," to ",(0,o.jsx)(t.code,{children:"react-virtual"})," as an experiment. To my delight, the experiment went so well I didn't look back!"]}),"\n",(0,o.jsx)(t.p,{children:"What did I get out of the switch?"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["Simpler code / nicer developer ergonomics. The API for ",(0,o.jsx)(t.code,{children:"react-virtual"})," allowed me to simplify my code and lose a layer of components."]}),"\n",(0,o.jsx)(t.li,{children:"TypeScript support in the box"}),"\n",(0,o.jsx)(t.li,{children:"Improved perceived performance. I didn't run any specific tests to quantify this, but I can say that the same functionality now feels snappier."}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"I tweeted my delight at this and Tanner asked if there was commit diff I could share. I couldn't as it's a private codebase, but I thought it could form the basis of a blogpost."}),"\n",(0,o.jsxs)(t.blockquote,{children:["\n",(0,o.jsx)(t.p,{children:"Nice! Do you have a commit diff we could see?"}),"\n",(0,o.jsxs)(t.p,{children:["\u2014 Tanner Linsley \u269B\uFE0F (@tannerlinsley) ",(0,o.jsx)(t.a,{href:"https://twitter.com/tannerlinsley/status/1259503283103608832?ref_src=twsrc%5Etfw",children:"May 10, 2020"})]}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"In case you hadn't guessed, this is that blog post..."}),"\n",(0,o.jsx)(t.h2,{id:"make-that-change",children:"Make that change"}),"\n",(0,o.jsxs)(t.p,{children:["So what does the change look like? Well first remove ",(0,o.jsx)(t.code,{children:"react-window"})," from your project:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"yarn remove react-window @types/react-window\n"})}),"\n",(0,o.jsxs)(t.p,{children:["Add the dependency to ",(0,o.jsx)(t.code,{children:"react-virtual"}),":"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"yarn add react-virtual\n"})}),"\n",(0,o.jsx)(t.p,{children:"Change your imports from:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ts",children:"import { FixedSizeList, ListChildComponentProps } from 'react-window';\n"})}),"\n",(0,o.jsx)(t.p,{children:"to:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ts",children:"import { useVirtual } from 'react-virtual';\n"})}),"\n",(0,o.jsx)(t.p,{children:"Change your component code from:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ts",children:"type ImportantDataListProps = {\n  classes: ReturnType<typeof useStyles>;\n  importants: ImportantData[];\n};\n\nconst ImportantDataList: React.FC<ImportantDataListProps> = React.memo(\n  (props) => (\n    <FixedSizeList\n      height={400}\n      width={'100%'}\n      itemSize={80}\n      itemCount={props.importants.length}\n      itemData={props}\n    >\n      {RenderRow}\n    </FixedSizeList>\n  ),\n);\n\ntype ListItemProps = {\n  classes: ReturnType<typeof useStyles>;\n  importants: ImportantData[];\n};\n\nfunction RenderRow(props: ListChildComponentProps) {\n  const { index, style } = props;\n  const { importants, classes } = props.data as ListItemProps;\n  const important = importants[index];\n\n  return (\n    <ListItem button style={style} key={index}>\n      <ImportantThing classes={classes} important={important} />\n    </ListItem>\n  );\n}\n"})}),"\n",(0,o.jsxs)(t.p,{children:["Of the above you can delete the ",(0,o.jsx)(t.code,{children:"ListItemProps"})," type and the associate ",(0,o.jsx)(t.code,{children:"RenderRow"})," function. You won't need them again! There's no longer a need to pass down data to the child element and then extract it for usage; it all comes down into a single simpler component."]}),"\n",(0,o.jsxs)(t.p,{children:["Replace the ",(0,o.jsx)(t.code,{children:"ImportantDataList"})," component with this:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ts",children:"const ImportantDataList: React.FC<ImportantDataListProps> = React.memo(\n  (props) => {\n    const parentRef = React.useRef<HTMLDivElement>(null);\n\n    const rowVirtualizer = useVirtual({\n      size: props.importants.length,\n      parentRef,\n      estimateSize: React.useCallback(() => 80, []), // This is just a best guess\n      overscan: 5,\n    });\n\n    return (\n      <div\n        ref={parentRef}\n        style={{\n          width: `100%`,\n          height: `500px`,\n          overflow: 'auto',\n        }}\n      >\n        <div\n          style={{\n            height: `${rowVirtualizer.totalSize}px`,\n            width: '100%',\n            position: 'relative',\n          }}\n        >\n          {rowVirtualizer.virtualItems.map((virtualRow) => (\n            <div\n              key={virtualRow.index}\n              ref={virtualRow.measureRef}\n              className={props.classes.hoverRow}\n              style={{\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                width: '100%',\n                height: `${virtualRow.size}px`,\n                transform: `translateY(${virtualRow.start}px)`,\n              }}\n            >\n              <ImportantThing\n                classes={props.classes}\n                important={props.importants[virtualRow.index]}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  },\n);\n"})}),"\n",(0,o.jsx)(t.p,{children:"And you are done! Thanks Tanner for this tremendous library!"})]})}function p(e={}){let{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},50065:function(e,t,n){n.d(t,{Z:function(){return s},a:function(){return a}});var r=n(67294);let o={},i=r.createContext(o);function a(e){let t=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),r.createElement(i.Provider,{value:t},e.children)}},16020:function(e){e.exports=JSON.parse('{"permalink":"/from-react-window-to-react-virtual","editUrl":"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2020-05-10-from-react-window-to-react-virtual/index.md","source":"@site/blog/2020-05-10-from-react-window-to-react-virtual/index.md","title":"From react-window to react-virtual","description":"Switch from `react-window` to `react-virtual` for simpler code, TypeScript support and improved perceived performance.","date":"2020-05-10T00:00:00.000Z","tags":[{"inline":false,"label":"React","permalink":"/tags/react","description":"The React library."}],"readingTime":2.535,"hasTruncateMarker":true,"authors":[{"name":"John Reilly","title":"OSS Engineer - TypeScript, Azure, React, Node.js, .NET","url":"https://johnnyreilly.com/about","imageURL":"https://johnnyreilly.com/img/profile.jpg","key":"johnnyreilly","page":null}],"frontMatter":{"slug":"from-react-window-to-react-virtual","title":"From react-window to react-virtual","authors":"johnnyreilly","tags":["react"],"hide_table_of_contents":false,"description":"Switch from `react-window` to `react-virtual` for simpler code, TypeScript support and improved perceived performance."},"unlisted":false,"prevItem":{"title":"Autofac, WebApplicationFactory and integration tests","permalink":"/autofac-webapplicationfactory-integration-tests"},"nextItem":{"title":"Up to the clouds!","permalink":"/up-to-clouds"}}')}}]);