"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([[49319],{28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var s=n(96540);const o={},i=s.createContext(o);function r(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:t},e.children)}},57432:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/title-image-dc75470e8b6f2a9987c70908fbd3c61a.png"},71433:e=>{e.exports=JSON.parse('{"permalink":"/dual-publishing-esm-cjs-modules-with-tsup-and-are-the-types-wrong","editUrl":"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2024-06-15-dual-publishing-esm-cjs-modules-with-tsup-are-the-types-wrong/index.md","source":"@site/blog/2024-06-15-dual-publishing-esm-cjs-modules-with-tsup-are-the-types-wrong/index.md","title":"Dual Publishing ESM and CJS Modules with tsup and Are the Types Wrong?","description":"Learn how to publish a package that supports both ECMAScript modules (ESM) and CommonJS modules (CJS) using tsup and Are the Types Wrong?","date":"2024-06-15T00:00:00.000Z","tags":[{"inline":false,"label":"TypeScript","permalink":"/tags/typescript","description":"The TypeScript programming language."}],"readingTime":5.96,"hasTruncateMarker":true,"authors":[{"name":"John Reilly","title":"OSS Engineer - TypeScript, Azure, React, Node.js, .NET","url":"https://johnnyreilly.com/about","imageURL":"https://johnnyreilly.com/img/profile-2025.jpg","key":"johnnyreilly","page":null}],"frontMatter":{"slug":"dual-publishing-esm-cjs-modules-with-tsup-and-are-the-types-wrong","title":"Dual Publishing ESM and CJS Modules with tsup and Are the Types Wrong?","authors":"johnnyreilly","tags":["typescript"],"image":"./title-image.png","hide_table_of_contents":false,"description":"Learn how to publish a package that supports both ECMAScript modules (ESM) and CommonJS modules (CJS) using tsup and Are the Types Wrong?"},"unlisted":false,"prevItem":{"title":"Static Web Apps CLI: improve performance with Vite server proxy","permalink":"/static-web-apps-cli-improve-performance-with-vite-server-proxy"},"nextItem":{"title":"MUI React Tree View: check children, uncheck parents","permalink":"/mui-react-tree-view-check-children-uncheck-parents"}}')},81701:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/title-image-dc75470e8b6f2a9987c70908fbd3c61a.png"},88590:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var s=n(71433),o=n(74848),i=n(28453);const r={slug:"dual-publishing-esm-cjs-modules-with-tsup-and-are-the-types-wrong",title:"Dual Publishing ESM and CJS Modules with tsup and Are the Types Wrong?",authors:"johnnyreilly",tags:["typescript"],image:"./title-image.png",hide_table_of_contents:!1,description:"Learn how to publish a package that supports both ECMAScript modules (ESM) and CommonJS modules (CJS) using tsup and Are the Types Wrong?"},a=void 0,p={image:n(57432).A,authorsImageUrls:[void 0]},l=[];function h(e){const t={a:"a",code:"code",img:"img",p:"p",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:["If you need to publish a package that supports both ECMAScript modules (ESM) and CommonJS modules (CJS), you can use ",(0,o.jsx)(t.a,{href:"https://github.com/egoist/tsup",children:(0,o.jsx)(t.code,{children:"tsup"})})," to do so. This post will show you how to do that and how to ensure that the types are correct using the tool ",(0,o.jsx)(t.a,{href:"https://github.com/arethetypeswrong/arethetypeswrong.github.io",children:(0,o.jsx)(t.code,{children:"Are the Types Wrong?"})}),"."]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"title image reading &quot;Dual Publishing ESM and CJS Modules with tsup and Are the Types Wrong?&quot; with the Are the Types Wrong logo",src:n(81701).A+"",width:"800",height:"450",loading:"lazy"})})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}}}]);