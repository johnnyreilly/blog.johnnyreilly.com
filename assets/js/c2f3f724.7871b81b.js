"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([[90650],{7053:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>c});var t=i(54863),s=i(74848),a=i(28453);const o={slug:"azure-easy-auth-and-roles-with-net-and-microsoft-identity-web",title:"Azure App Service, Easy Auth and Roles with .NET and Microsoft.Identity.Web",authors:"johnnyreilly",tags:["azure","asp.net","easy auth","auth"],hide_table_of_contents:!1,description:"The `Microsoft.Identity.Web` library has authorization issues with roles. A `IClaimsTransformation` can map claims to fix the problem."},r=void 0,l={authorsImageUrls:[void 0]},c=[{value:"Getting set up",id:"getting-set-up",level:2},{value:"You gotta <code>roles</code> with it",id:"you-gotta-roles-with-it",level:2},{value:"Claims transformation with <code>IClaimsTransformation</code>",id:"claims-transformation-with-iclaimstransformation",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/azure-easy-auth-and-roles-with-dotnet-and-core",children:"I wrote recently about how to get Azure App Service Easy Auth to work with roles"}),". This involved borrowing the approach used by ",(0,s.jsx)(n.a,{href:"https://github.com/MaximRouiller/MaximeRouiller.Azure.AppService.EasyAuth",children:"MaximeRouiller.Azure.AppService.EasyAuth"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["As a consequence of writing that post I came to learn that official support for Azure Easy Auth had landed in October 2020 in v1.2 of ",(0,s.jsx)(n.a,{href:"https://github.com/AzureAD/microsoft-identity-web/wiki/1.2.0#integration-with-azure-app-services-authentication-of-web-apps-running-with-microsoftidentityweb",children:"Microsoft.Identity.Web"}),". This was great news; I was delighted."]}),"\n",(0,s.jsxs)(n.p,{children:["However, it turns out that the same authorization issue that ",(0,s.jsx)(n.code,{children:"MaximeRouiller.Azure.AppService.EasyAuth"})," suffers from, is visited upon ",(0,s.jsx)(n.code,{children:"Microsoft.Identity.Web"})," as well. This post shows hoew to resolve it with ",(0,s.jsx)(n.code,{children:"IClaimsTransformation"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["If you're looking for information about Easy Auth and authentication with .NET and Azure Container Apps, ",(0,s.jsx)(n.a,{href:"/azure-container-apps-easy-auth-and-dotnet-authentication",children:"you can find it here"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"getting-set-up",children:"Getting set up"}),"\n",(0,s.jsxs)(n.p,{children:["We're using a .NET 5 project, running in an Azure App Service (Linux). In our ",(0,s.jsx)(n.code,{children:".csproj"})," we have:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'<PackageReference Include="Microsoft.Identity.Web" Version="1.4.1" />\n'})}),"\n",(0,s.jsxs)(n.p,{children:["In our ",(0,s.jsx)(n.code,{children:"Startup.cs"})," we're using:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cs",children:"public void ConfigureServices(IServiceCollection services) {\n    //...\n    services.AddMicrosoftIdentityWebAppAuthentication(Configuration);\n    //...\n}\n\npublic void Configure(IApplicationBuilder app, IWebHostEnvironment env) {\n    //...\n    app.UseAuthentication();\n    app.UseAuthorization();\n    //...\n}\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"you-gotta-roles-with-it",children:["You gotta ",(0,s.jsx)(n.code,{children:"roles"})," with it"]}),"\n",(0,s.jsxs)(n.p,{children:["Whilst the authentication works, authorization does not. So whilst my app knows who I am - the authorization is not working with relation to ",(0,s.jsx)(n.strong,{children:"roles"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["When directly using ",(0,s.jsx)(n.code,{children:"Microsoft.Identity.Web"})," when running locally, we see these claims:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'[\n  // ...\n  {\n    "type": "http://schemas.microsoft.com/ws/2008/06/identity/claims/role",\n    "value": "Administrator"\n  },\n  {\n    "type": "http://schemas.microsoft.com/ws/2008/06/identity/claims/role",\n    "value": "Reader"\n  }\n  // ...\n]\n'})}),"\n",(0,s.jsxs)(n.p,{children:["However, we get different behaviour with EasyAuth; it provides roles related claims with a ",(0,s.jsx)(n.strong,{children:"different type"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'[\n  // ...\n  {\n    "type": "roles",\n    "value": "Administrator"\n  },\n  {\n    "type": "roles",\n    "value": "Reader"\n  }\n  // ...\n]\n'})}),"\n",(0,s.jsxs)(n.p,{children:["This means that roles related authorization ",(0,s.jsx)(n.em,{children:"does not work"})," with Easy Auth:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cs",children:'[Authorize(Roles = "Reader")]\n[HttpGet("api/reader")]\npublic string GetWithReader() =>\n    "this is a secure endpoint that users with the Reader role can access";\n'})}),"\n",(0,s.jsxs)(n.p,{children:["This is because .NET is looking for claims with a ",(0,s.jsx)(n.code,{children:"type"})," of ",(0,s.jsx)(n.code,{children:'"http://schemas.microsoft.com/ws/2008/06/identity/claims/role"'})," and not finding them with Easy Auth."]}),"\n",(0,s.jsxs)(n.h2,{id:"claims-transformation-with-iclaimstransformation",children:["Claims transformation with ",(0,s.jsx)(n.code,{children:"IClaimsTransformation"})]}),"\n",(0,s.jsxs)(n.p,{children:["There is a way to work around this issue .NET using ",(0,s.jsx)(n.code,{children:"IClaimsTransformation"}),". This is a poorly documented feature, but fortunately ",(0,s.jsx)(n.a,{href:"https://gunnarpeipman.com/aspnet-core-adding-claims-to-existing-identity/",children:"Gunnar Peipman's blog does a grand job of explaining it"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Inside our ",(0,s.jsx)(n.code,{children:"Startup.cs"})," I've registered a claims transformer:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cs",children:"services.AddScoped<IClaimsTransformation, AddRolesClaimsTransformation>();\n"})}),"\n",(0,s.jsx)(n.p,{children:"And that claims transformer looks like this:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cs",children:'public class AddRolesClaimsTransformation : IClaimsTransformation {\n    private readonly ILogger<AddRolesClaimsTransformation> _logger;\n\n    public AddRolesClaimsTransformation(ILogger<AddRolesClaimsTransformation> logger) {\n        _logger = logger;\n    }\n\n    public Task<ClaimsPrincipal> TransformAsync(ClaimsPrincipal principal) {\n        var mappedRolesClaims = principal.Claims\n            .Where(claim => claim.Type == "roles")\n            .Select(claim => new Claim(ClaimTypes.Role, claim.Value))\n            .ToList();\n\n        // Clone current identity\n        var clone = principal.Clone();\n\n        if (clone.Identity is not ClaimsIdentity newIdentity) return Task.FromResult(principal);\n\n        // Add role claims to cloned identity\n        foreach (var mappedRoleClaim in mappedRolesClaims)\n            newIdentity.AddClaim(mappedRoleClaim);\n\n        if (mappedRolesClaims.Count > 0)\n            _logger.LogInformation("Added roles claims {mappedRolesClaims}", mappedRolesClaims);\n        else\n            _logger.LogInformation("No roles claims added");\n\n        return Task.FromResult(clone);\n    }\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["The class above creates a new principal with ",(0,s.jsx)(n.code,{children:'"roles"'})," claims mapped across to ",(0,s.jsx)(n.code,{children:'"http://schemas.microsoft.com/ws/2008/06/identity/claims/role"'}),". This is enough to get .NET treating roles the way you'd hope."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsxs)(n.a,{href:"https://github.com/AzureAD/microsoft-identity-web/issues/881",children:["I've raised an issue against the ",(0,s.jsx)(n.code,{children:"Microsoft.Identity.Web"})," repo"]})," about this. Perhaps one day this workaround will no longer be necessary."]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>r});var t=i(96540);const s={},a=t.createContext(s);function o(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(a.Provider,{value:n},e.children)}},54863:e=>{e.exports=JSON.parse('{"permalink":"/azure-easy-auth-and-roles-with-net-and-microsoft-identity-web","editUrl":"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2021-01-17-azure-easy-auth-and-roles-with-net-and-microsoft-identity-web/index.md","source":"@site/blog/2021-01-17-azure-easy-auth-and-roles-with-net-and-microsoft-identity-web/index.md","title":"Azure App Service, Easy Auth and Roles with .NET and Microsoft.Identity.Web","description":"The `Microsoft.Identity.Web` library has authorization issues with roles. A `IClaimsTransformation` can map claims to fix the problem.","date":"2021-01-17T00:00:00.000Z","tags":[{"inline":false,"label":"Azure","permalink":"/tags/azure","description":"The Microsoft cloud platform."},{"inline":false,"label":"ASP.NET","permalink":"/tags/asp-net","description":"The web framework built by Microsoft."},{"inline":false,"label":"Easy Auth","permalink":"/tags/easy-auth","description":"The Azure Easy Auth feature used for authentication and authorization."},{"inline":false,"label":"Authentication and Authorization","permalink":"/tags/auth","description":"Matters related to identity and permissioning"}],"readingTime":2.81,"hasTruncateMarker":true,"authors":[{"name":"John Reilly","title":"OSS Engineer - TypeScript, Azure, React, Node.js, .NET","url":"https://johnnyreilly.com/about","imageURL":"https://johnnyreilly.com/img/profile-2025.jpg","key":"johnnyreilly","page":null}],"frontMatter":{"slug":"azure-easy-auth-and-roles-with-net-and-microsoft-identity-web","title":"Azure App Service, Easy Auth and Roles with .NET and Microsoft.Identity.Web","authors":"johnnyreilly","tags":["azure","asp.net","easy auth","auth"],"hide_table_of_contents":false,"description":"The `Microsoft.Identity.Web` library has authorization issues with roles. A `IClaimsTransformation` can map claims to fix the problem."},"unlisted":false,"prevItem":{"title":"Azure Pipelines Build Info in an ASP.NET React app","permalink":"/surfacing-azure-pipelines-build-info-in-an-aspnet-react-app"},"nextItem":{"title":"Azure App Service, Easy Auth and Roles with .NET","permalink":"/azure-easy-auth-and-roles-with-dotnet-and-core"}}')}}]);