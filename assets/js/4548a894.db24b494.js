"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([["44163"],{38719:function(e,n,t){t.r(n),t.d(n,{assets:function(){return l},contentTitle:function(){return s},default:function(){return c},frontMatter:function(){return a},metadata:function(){return o},toc:function(){return d}});var o=t(76896),i=t(85893),r=t(50065);let a={slug:"ef-core-31-breaks-left-join-with-no-navigation-property",title:"EF Core 3.1 breaks left join with no navigation property",authors:"johnnyreilly",tags:["sql server"],hide_table_of_contents:!1,description:"When upgrading from .NET Core 2.2 to 3.1, an invalid LEFT JOIN error was encountered. The issue was resolved by adding Navigation property."},s=void 0,l={authorsImageUrls:[void 0]},d=[{value:"Join me!",id:"join-me",level:2},{value:"Navigation properties to the rescue!",id:"navigation-properties-to-the-rescue",level:2}];function h(e){let n={code:"code",em:"em",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Just recently my team took on the challenge of upgrading our codebase from .NET Core 2.2 to .NET Core 3.1. Along the way we encountered a quirky issue which caused us much befuddlement. Should you be befuddled too, then maybe this can help you."}),"\n",(0,i.jsx)(n.p,{children:"Whilst running our app, we started encountering an error with an Entity Framework Query that looked like this:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cs",children:"var stuffWeCareAbout = await context.Things\n    .Include(thing => thing.ThisIsFine)\n    .Include(thing => thing.Problematic)\n    .Where(thing => thing.CreatedOn > startFromThisTime && thing.CreatedOn < endAtThisTime)\n    .OrderByDescending(thing => thing.CreatedOn)\n    .ToArrayAsync();\n"})}),"\n",(0,i.jsx)(n.h2,{id:"join-me",children:"Join me!"}),"\n",(0,i.jsxs)(n.p,{children:["As EF Core tried to join from the ",(0,i.jsx)(n.code,{children:"Things"})," table to the ",(0,i.jsx)(n.code,{children:"Problematic"})," table (some obfuscation in table names here), that which worked in .NET Core 2.2 was ",(0,i.jsx)(n.em,{children:"not"})," working in .NET Core 3.1. Digging into the issue, we discovered EF Core was generating an invalid ",(0,i.jsx)(n.code,{children:"LEFT JOIN"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"fail: Microsoft.EntityFrameworkCore.Database.Command[20102]\n      Failed executing DbCommand (18ms) [Parameters=[@__startFromThisTime_0='?' (DbType = DateTime2), @__endAtThisTime_1='?' (DbType = DateTime2)], CommandType='Text', CommandTimeout='30']\n      SELECT [o].[ThingId], [o].[AnonymousId], [o].[CreatedOn],  [o].[Status], [o].[UpdatedOn], [o0].[Id], [o0].[ThingId], [o0].[Name], [o1].[ThingId], [o1].[Status], [o1].[CreatedOn], [o1].[ThingThingId], [o1].[SentOn]\n      FROM [Things] AS [o]\n      LEFT JOIN [ThisIsFines] AS [o0] ON [o].[ThingId] = [o0].[ThingId]\n      LEFT JOIN [Problematic] AS [o1] ON [o].[ThingId] = [o1].[ThingThingId]\n      WHERE ([o].[CreatedOn] @__startFromThisTime_0) AND ([o].[CreatedOn] < @__endAtThisTime_1)\n      ORDER BY [o].[CreatedOn] DESC, [o].[ThingId], [o1].[ThingId], [o1].[Status]\nMicrosoft.EntityFrameworkCore.Database.Command: Error: Failed executing DbCommand (18ms) [Parameters=[@__startFromThisTime_0='?' (DbType = DateTime2), @__endAtThisTime_1='?' (DbType = DateTime2)], CommandType='Text', CommandTimeout='30']\nSELECT [o].[ThingId], [o].[AnonymousId], [o].[CreatedOn], [o].[Status], [o].[UpdatedOn], [o0].[Id], [o0].[ThingId], [o0].[Name], [o1].[ThingId], [o1].[Status], [o1].[CreatedOn], [o1].[ThingThingId], [o1].[SentOn]\nFROM [Things] AS [o]\nLEFT JOIN [ThisIsFines] AS [o0] ON [o].[ThingId] = [o0].[ThingId]\nLEFT JOIN [Problematic] AS [o1] ON [o].[ThingId] = [o1].[ThingThingId]\nWHERE ([o].[CreatedOn] @__startFromThisTime_0) AND ([o].[CreatedOn] < @__endAtThisTime_1)\nORDER BY [o].[CreatedOn] DESC, [o].[ThingId], [o1].[ThingId], [o1].[Status]\n"})}),"\n",(0,i.jsx)(n.p,{children:"Do you see it? Probably not; it took us a while too... The issue lay here:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"LEFT JOIN [Problematic] AS [o1] ON [o].[ThingId] = [o1].[ThingThingId]\n"})}),"\n",(0,i.jsx)(n.p,{children:"This should actually have been:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"LEFT JOIN [Problematic] AS [o1] ON [o].[ThingId] = [o1].[ThingId]\n"})}),"\n",(0,i.jsxs)(n.p,{children:["For some reason EF Core was looking for ",(0,i.jsx)(n.code,{children:"ThingThingId"})," where it should have looked for ",(0,i.jsx)(n.code,{children:"ThingId"}),". But why?"]}),"\n",(0,i.jsx)(n.h2,{id:"navigation-properties-to-the-rescue",children:"Navigation properties to the rescue!"}),"\n",(0,i.jsxs)(n.p,{children:["This was the ",(0,i.jsx)(n.code,{children:"Problematic"})," class:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cs",children:'using System;\nusing System.ComponentModel.DataAnnotations;\nusing System.ComponentModel.DataAnnotations.Schema;\n\nnamespace Treasury.Data.Entities\n{\n    public class Problematic\n    {\n        [ForeignKey("Thing")]\n        [Required]\n        public Guid ThingId { get; set; }\n        [Required]\n        public DateTime CreatedOn { get; set; }\n        public DateTime SentOn { get; set; }\n    }\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["If you look closely you'll see it has a ",(0,i.jsx)(n.code,{children:"ForeignKey"})," but ",(0,i.jsx)(n.em,{children:"no"})," accompanying Navigation property. So let's add one:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cs",children:'using System;\nusing System.ComponentModel.DataAnnotations;\nusing System.ComponentModel.DataAnnotations.Schema;\n\nnamespace Our.App\n{\n    public class Problematic\n    {\n        [ForeignKey("Thing")]\n        [Required]\n        public Guid ThingId { get; set; }\n        [Required]\n        public DateTime CreatedOn { get; set; }\n        public DateTime SentOn { get; set; }\n\n        /* THIS NAVIGATION PROPERTY IS WHAT WE NEEDED!!! */\n        public virtual Thing Thing { get; set; }\n    }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"With this in place our app starts generating the SQL we need."})]})}function c(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},50065:function(e,n,t){t.d(n,{Z:function(){return s},a:function(){return a}});var o=t(67294);let i={},r=o.createContext(i);function a(e){let n=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),o.createElement(r.Provider,{value:n},e.children)}},76896:function(e){e.exports=JSON.parse('{"permalink":"/ef-core-31-breaks-left-join-with-no-navigation-property","editUrl":"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2020-01-02-ef-core-31-breaks-left-join-with-no-navigation-property/index.md","source":"@site/blog/2020-01-02-ef-core-31-breaks-left-join-with-no-navigation-property/index.md","title":"EF Core 3.1 breaks left join with no navigation property","description":"When upgrading from .NET Core 2.2 to 3.1, an invalid LEFT JOIN error was encountered. The issue was resolved by adding Navigation property.","date":"2020-01-02T00:00:00.000Z","tags":[{"inline":false,"label":"SQL Server","permalink":"/tags/sql-server","description":"The SQL Server database."}],"readingTime":2.38,"hasTruncateMarker":true,"authors":[{"name":"John Reilly","title":"OSS Engineer - TypeScript, Azure, React, Node.js, .NET","url":"https://johnnyreilly.com/about","imageURL":"https://johnnyreilly.com/img/profile.jpg","key":"johnnyreilly","page":null}],"frontMatter":{"slug":"ef-core-31-breaks-left-join-with-no-navigation-property","title":"EF Core 3.1 breaks left join with no navigation property","authors":"johnnyreilly","tags":["sql server"],"hide_table_of_contents":false,"description":"When upgrading from .NET Core 2.2 to 3.1, an invalid LEFT JOIN error was encountered. The issue was resolved by adding Navigation property."},"unlisted":false,"prevItem":{"title":"LICENSE to kill your PWA","permalink":"/license-to-kill-your-pwa"},"nextItem":{"title":"Teams notification webhooks","permalink":"/teams-notification-webhooks"}}')}}]);