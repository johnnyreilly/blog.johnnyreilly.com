"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([[63104],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),h=o,m=u["".concat(l,".").concat(h)]||u[h]||d[h]||a;return n?r.createElement(m,i(i({ref:t},c),{},{components:n})):r.createElement(m,i({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},7550:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>p,toc:()=>u});n(67294);var r=n(3905);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}const s={slug:"using-expressions-with-constructors",title:"Using Expressions with Constructors",authors:"johnnyreilly",tags:[".NET"],hide_table_of_contents:!1,description:"This article explains how John used LINQs expression to extend a validation class and automatically change the property name."},l=void 0,p={permalink:"/using-expressions-with-constructors",editUrl:"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2013-02-13-using-expressions-with-constructors/index.md",source:"@site/blog/2013-02-13-using-expressions-with-constructors/index.md",title:"Using Expressions with Constructors",description:"This article explains how John used LINQs expression to extend a validation class and automatically change the property name.",date:"2013-02-13T00:00:00.000Z",formattedDate:"February 13, 2013",tags:[{label:".NET",permalink:"/tags/net"}],readingTime:2.835,hasTruncateMarker:!0,authors:[{name:"John Reilly",title:"OSS Engineer - TypeScript, Azure, React, Node.js, .NET",url:"https://johnnyreilly.com/about",imageURL:"https://johnnyreilly.com/img/profile.jpg",key:"johnnyreilly"}],frontMatter:{slug:"using-expressions-with-constructors",title:"Using Expressions with Constructors",authors:"johnnyreilly",tags:[".NET"],hide_table_of_contents:!1,description:"This article explains how John used LINQs expression to extend a validation class and automatically change the property name."},prevItem:{title:"Unit testing MVC controllers / Mocking UrlHelper",permalink:"/unit-testing-mvc-controllers-mocking"},nextItem:{title:"Twitter.Bootstrap.MVC4 meet Bootstrap Datepicker *and* get your Internationalization on...",permalink:"/twitterbootstrapmvc4-meet-bootstrap_14"}},c={authorsImageUrls:[void 0]},u=[{value:"So what&#39;s the problem?",id:"so-whats-the-problem",level:2},{value:"So what&#39;s the solution?",id:"so-whats-the-solution",level:2}],d={toc:u};function h(e){var{components:t}=e,n=i(e,["components"]);return(0,r.kt)("wrapper",a(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){o(e,t,n[t])}))}return e}({},d,n),{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Every now and then you think \"x should be easy\" - and it isn't. I had one of those situations this morning. Something I thought would take 5 minutes had me still pondering 30 minutes later. I finally cracked it (with the help of a colleague - thanks Marc!) and I wanted to note down what I did since I'm sure to forget this."),(0,r.kt)("h2",{id:"so-whats-the-problem"},"So what's the problem?"),(0,r.kt)("p",null,"In our project we had a very simple validation class. It looked a bit like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"    public class FieldValidation\n    {\n        public FieldValidation(string fieldName, string message)\n        {\n            FieldName = fieldName;\n            Message = message;\n        }\n\n        public string FieldName { get; set; }\n        public string Message { get; set; }\n    }\n")),(0,r.kt)("p",null,"I wanted to take this class and extend it to have a constructor which allowed me to specify a Type and subsequently an Expression of that Type that allowed me to specify a property. 10 points if you read the last sentence and understood it without reading it a second time."),(0,r.kt)("p",null,"Code is a better illustration; take a look below. I wanted to go from #1 to #2:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},'//#1 Specify field name up front - how we currently use this\nvar oldSchoolValidation = new FieldValidation(\n  "WithAProperty", "Message of some kind...");\n\n//#2 Field name driven directly by property - how we want to use this\nvar newSchoolValidation = new FieldValidation<AnObject>(\n  x => x.WithAProperty, "Message of some kind...");\n\n/// <summary>\n/// Example class for demo\n/// </summary>\npublic class AnObject\n{\n  public bool WithAProperty { get; set; }\n}\n')),(0,r.kt)("p",null,'"Why?" I hear you ask. Well we had a swathe of statements in the code which test each property for a problem and would create a ',(0,r.kt)("inlineCode",{parentName:"p"},"FieldValidation")," with the very same property name if one was found. There's no real problem with that but I'm a man that likes to refactor. Property names change and I didn't want to have to remember to manually go through each ",(0,r.kt)("inlineCode",{parentName:"p"},"FieldValidation")," keeping these in line. If I was using the actual property name to drive the creation of my ",(0,r.kt)("inlineCode",{parentName:"p"},"FieldValidations")," then that problem disappears. And I like that."),(0,r.kt)("h2",{id:"so-whats-the-solution"},"So what's the solution?"),(0,r.kt)("p",null,"Well it's this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},'    public class FieldValidation\n    {\n        public FieldValidation(string fieldName, string message)\n        {\n            FieldName = fieldName;\n            Message = message;\n        }\n\n        public string FieldName { get; set; }\n        public string Message { get; set; }\n    }\n\n    public class FieldValidation<T> : FieldValidation where T : class\n    {\n        public FieldValidation(\n            Expression<Func<T, object>> expression,\n            string message)\n        {\n            //Will work for reference types\n            var body = expression.Body as MemberExpression;\n\n            if (body == null)\n            {\n                //Will work for value types\n                var uBody = (UnaryExpression)expression.Body;\n                body = uBody.Operand as MemberExpression;\n            }\n\n\n            if (body == null)\n                throw new ArgumentException("Invalid property expression");\n\n            FieldName = body.Member.Name;\n            Message = message;\n        }\n    }\n')),(0,r.kt)("p",null,"As you can see we have taken the original FieldValidation class and added in a generic constructor which instead of taking ",(0,r.kt)("inlineCode",{parentName:"p"},"string fieldName")," as a first argument it takes ",(0,r.kt)("inlineCode",{parentName:"p"},"Expression&lt;Func&lt;T, object&gt;&gt; expression"),". LINQ's Expression magic is used to determine the supplied property name which is smashing. If you were wondering, the first ",(0,r.kt)("inlineCode",{parentName:"p"},"MemberExpression")," code is used for ",(0,r.kt)("em",{parentName:"p"},"reference")," types. The ",(0,r.kt)("inlineCode",{parentName:"p"},"UnaryExpression")," wrapping a ",(0,r.kt)("inlineCode",{parentName:"p"},"MemberExpression")," code is used for ",(0,r.kt)("em",{parentName:"p"},"value")," types. A good explanation of this can be found ",(0,r.kt)("a",{parentName:"p",href:"http://stackoverflow.com/a/12975480/761388"},"here"),"."),(0,r.kt)("p",null,"My colleague directed me to ",(0,r.kt)("a",{parentName:"p",href:"http://stackoverflow.com/a/2916344"},"this crucial StackOverflow answer")," which provided some much needed direction when I was thrashing. And that's it; we're done, home free."))}h.isMDXComponent=!0}}]);