"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([[31275],{28453:(e,t,o)=>{o.d(t,{R:()=>n,x:()=>l});var r=o(96540);const i={},s=r.createContext(i);function n(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:n(e.components),r.createElement(s.Provider,{value:t},e.children)}},82366:(e,t,o)=>{o.d(t,{A:()=>r});const r=o.p+"assets/images/title-image-2b4a386c34040c43329911cbc5e99384.png"},88299:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>d,frontMatter:()=>n,metadata:()=>r,toc:()=>c});var r=o(97779),i=o(74848),s=o(28453);const n={slug:"directory-build-props-c-sharp-9-for-all",title:"Directory.Build.props: C# 9 for all your projects",authors:"johnnyreilly",tags:["c#","asp.net"],image:"./title-image.png",hide_table_of_contents:!1,description:"Learn how to use C# 9 with .NET Core by creating a `Directory.Build.props` file. All projects in the solution will support C#9 with no further steps."},l=void 0,a={image:o(98864).A,authorsImageUrls:[void 0]},c=[{value:"&quot;have you the good news about <code>Directory.Build.props</code>&quot;?",id:"have-you-the-good-news-about-directorybuildprops",level:2},{value:"<code>Directory.Build.props</code>: C# 9 for all",id:"directorybuildprops-c-9-for-all",level:2}];function p(e){const t={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",img:"img",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:[".NET Core can make use of C# 9 by making some changes to your ",(0,i.jsx)(t.code,{children:".csproj"})," files. There is a way to opt all projects in a solution into this behaviour in a ",(0,i.jsx)(t.em,{children:"single"})," place, through using a ",(0,i.jsx)(t.code,{children:"Directory.Build.props"})," file and / or a ",(0,i.jsx)(t.code,{children:"Directory.Build.targets"})," file. Here's how to do it."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"title image showing name of post and the C# logo",src:o(82366).A+"",width:"1366",height:"548",loading:"lazy"})}),"\n",(0,i.jsxs)(t.h2,{id:"have-you-the-good-news-about-directorybuildprops",children:['"have you the good news about ',(0,i.jsx)(t.code,{children:"Directory.Build.props"}),'"?']}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.a,{href:"/c-sharp-9-azure-functions-in-process",children:"I wrote recently about using C# 9 with in-process Azure Functions."})," What that amounted to, was using C# 9 with .NET Core."]}),"\n",(0,i.jsxs)(t.p,{children:["One of the best things about blogging, is all that you get to learn along the way. After I put up that post, ",(0,i.jsx)(t.a,{href:"https://twitter.com/danielearwicker",children:"Daniel Earwicker"})," was kind enough to send this message:"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://twitter.com/danielearwicker/status/1412678642203828226",children:(0,i.jsx)(t.img,{alt:"title image showing name of post and the C# logo",src:o(89059).A+"",width:"1200",height:"950",loading:"lazy"})})}),"\n",(0,i.jsxs)(t.p,{children:["I was intrigued that Daniel was able to configure all the projects in a solution to use the same approach using some strange incantations named ",(0,i.jsx)(t.code,{children:"Directory.Build.props"})," and ",(0,i.jsx)(t.code,{children:"Directory.Build.targets"}),". ",(0,i.jsx)(t.a,{href:"https://docs.microsoft.com/en-us/visualstudio/msbuild/customize-your-build?view=vs-2019#directorybuildprops-and-directorybuildtargets",children:"Microsoft describes them thusly"}),":"]}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsxs)(t.p,{children:["Prior to MSBuild version 15, if you wanted to provide a new, custom property to projects in your solution, you had to manually add a reference to that property to every project file in the solution. Or, you had to define the property in a ",(0,i.jsx)(t.code,{children:".props"})," file and then explicitly import the ",(0,i.jsx)(t.code,{children:".props"})," file in every project in the solution, among other things."]}),"\n",(0,i.jsxs)(t.p,{children:["However, now you can add a new property to every project in one step by defining it in a single file called ",(0,i.jsx)(t.code,{children:"Directory.Build.props"})," in the root folder that contains your source."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"Let's see if we can put it to use."}),"\n",(0,i.jsxs)(t.h2,{id:"directorybuildprops-c-9-for-all",children:[(0,i.jsx)(t.code,{children:"Directory.Build.props"}),": C# 9 for all"]}),"\n",(0,i.jsxs)(t.p,{children:["So, rather than us updating each of our ",(0,i.jsx)(t.code,{children:".csproj"})," files, we should be able to create a ",(0,i.jsx)(t.code,{children:"Directory.Build.props"})," file to sit alongside our ",(0,i.jsx)(t.code,{children:".sln"})," file in the root of our source code. We'll add this into the file:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-xml",children:'<Project>\n <PropertyGroup>\n    \x3c!-- use C# 9 --\x3e\n    <LangVersion>9.0</LangVersion>\n </PropertyGroup>\n <ItemGroup>\n    \x3c!-- allows some C# 9 support with .NET Core 3.1 https://github.com/manuelroemer/IsExternalInit --\x3e\n    <PackageReference Include="IsExternalInit" Version="1.0.1">\n      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\n      <PrivateAssets>all</PrivateAssets>\n    </PackageReference>\n  </ItemGroup>\n</Project>\n'})}),"\n",(0,i.jsxs)(t.p,{children:["Now we're free to add projects into the solution, which will ",(0,i.jsx)(t.em,{children:"already"})," support C# 9 without us taking any further steps. It's as simple as that! Thanks to Daniel for sharing this super handy tip. \u2764\ufe0f\ud83c\udf3b"]})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},89059:(e,t,o)=>{o.d(t,{A:()=>r});const r=o.p+"assets/images/daniel-earwicker-tweet-e28ea936a83541e26ef0810214f8fe9f.png"},97779:e=>{e.exports=JSON.parse('{"permalink":"/directory-build-props-c-sharp-9-for-all","editUrl":"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2021-07-14-directory-build-props-c-sharp-9-for-all/index.md","source":"@site/blog/2021-07-14-directory-build-props-c-sharp-9-for-all/index.md","title":"Directory.Build.props: C# 9 for all your projects","description":"Learn how to use C# 9 with .NET Core by creating a `Directory.Build.props` file. All projects in the solution will support C#9 with no further steps.","date":"2021-07-14T00:00:00.000Z","tags":[{"inline":false,"label":"C#","permalink":"/tags/csharp","description":"The C# programming language."},{"inline":false,"label":"ASP.NET","permalink":"/tags/asp-net","description":"The web framework built by Microsoft."}],"readingTime":2.13,"hasTruncateMarker":true,"authors":[{"name":"John Reilly","title":"OSS Engineer - TypeScript, Azure, React, Node.js, .NET","url":"https://johnnyreilly.com/about","imageURL":"https://johnnyreilly.com/img/profile-2025.jpg","key":"johnnyreilly","page":null}],"frontMatter":{"slug":"directory-build-props-c-sharp-9-for-all","title":"Directory.Build.props: C# 9 for all your projects","authors":"johnnyreilly","tags":["c#","asp.net"],"image":"./title-image.png","hide_table_of_contents":false,"description":"Learn how to use C# 9 with .NET Core by creating a `Directory.Build.props` file. All projects in the solution will support C#9 with no further steps."},"unlisted":false,"prevItem":{"title":"TypeScript, abstract classes, and constructors","permalink":"/typescript-abstract-classes-and-constructors"},"nextItem":{"title":"webpack? esbuild? Why not both?","permalink":"/webpack-esbuild-why-not-both"}}')},98864:(e,t,o)=>{o.d(t,{A:()=>r});const r=o.p+"assets/images/title-image-2b4a386c34040c43329911cbc5e99384.png"}}]);