"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([[2379],{7291:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/autofac-integration-tests-7eae6e7477002b42a76517fc1c85313b.webp"},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var i=n(96540);const s={},o=i.createContext(s);function r(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:t},e.children)}},81257:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var i=n(86186),s=n(74848),o=n(28453);const r={slug:"autofac-6-integration-tests-and-generic-hosting",title:"Autofac 6, integration tests and .NET generic hosting",authors:"johnnyreilly",tags:["asp.net","automated testing"],image:"./autofac-integration-tests.webp",hide_table_of_contents:!1,description:"Integration tests using Autofac have been affected by a long-standing issue in .NET Core 3.0. Alternative approaches may not last long."},a=void 0,c={image:n(99548).A,authorsImageUrls:[void 0]},l=[{value:"Concern for third-party containers",id:"concern-for-third-party-containers",level:2}];function u(e){const t={a:"a",code:"code",h2:"h2",img:"img",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["I ",(0,s.jsx)(t.a,{href:"/autofac-webapplicationfactory-integration-tests",children:"blogged a little while ago around to support integration tests using Autofac"}),". This was specific to Autofac but documented a workaround for a ",(0,s.jsxs)(t.a,{href:"https://github.com/dotnet/aspnetcore/issues/14907",children:["long standing issue with ",(0,s.jsx)(t.code,{children:"ConfigureTestContainer"})," that was introduced into .NET core 3.0"]})," which affects ",(0,s.jsx)(t.a,{href:"https://docs.microsoft.com/en-us/aspnet/core/fundamentals/dependency-injection?view=aspnetcore-3.1#default-service-container-replacement",children:"all third-party containers"})," that use ",(0,s.jsx)(t.code,{children:"ConfigureTestContainer"})," in their tests."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"A title image for the blog featuring the Autofac logo",src:n(7291).A+"",width:"1185",height:"493",loading:"lazy"})}),"\n",(0,s.jsxs)(t.p,{children:["I'll not repeat the contents of the previous post - it all still stands. However, with Autofac 6 the approach documented there will cease to work. This is because the previous approach relied upon ",(0,s.jsx)(t.code,{children:"ContainerBuilder"})," not being sealed. ",(0,s.jsx)(t.a,{href:"https://github.com/autofac/Autofac/issues/1120",children:"As of Autofac 6 it is."})]}),"\n",(0,s.jsxs)(t.p,{children:["Happily the tremendous ",(0,s.jsx)(t.a,{href:"https://twitter.com/evocationist",children:"Alistair Evans"})," came up with an ",(0,s.jsx)(t.a,{href:"https://github.com/autofac/Autofac/issues/1207#issuecomment-701961371",children:"alternative approach"})," which is listed below:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cs",children:'/// <summary>\n/// Based upon https://github.com/dotnet/AspNetCore.Docs/tree/master/aspnetcore/test/integration-tests/samples/3.x/IntegrationTestsSample\n/// </summary>\n/// <typeparam name="TStartup"></typeparam>\npublic class AutofacWebApplicationFactory<TStartup> : WebApplicationFactory<TStartup> where TStartup : class\n{\n    protected override IHost CreateHost(IHostBuilder builder)\n    {\n        builder.UseServiceProviderFactory<ContainerBuilder>(new CustomServiceProviderFactory());\n        return base.CreateHost(builder);\n    }\n}\n\n/// <summary>\n/// Based upon https://github.com/dotnet/aspnetcore/issues/14907#issuecomment-620750841 - only necessary because of an issue in ASP.NET Core\n/// </summary>\npublic class CustomServiceProviderFactory : IServiceProviderFactory<ContainerBuilder>\n{\n    private AutofacServiceProviderFactory _wrapped;\n    private IServiceCollection _services;\n\n    public CustomServiceProviderFactory()\n    {\n        _wrapped = new AutofacServiceProviderFactory();\n    }\n\n    public ContainerBuilder CreateBuilder(IServiceCollection services)\n    {\n        // Store the services for later.\n        _services = services;\n\n        return _wrapped.CreateBuilder(services);\n    }\n\n    public IServiceProvider CreateServiceProvider(ContainerBuilder containerBuilder)\n    {\n        var sp = _services.BuildServiceProvider();\n#pragma warning disable CS0612 // Type or member is obsolete\n        var filters = sp.GetRequiredService<IEnumerable<IStartupConfigureContainerFilter<ContainerBuilder>>>();\n#pragma warning restore CS0612 // Type or member is obsolete\n\n        foreach (var filter in filters)\n        {\n            filter.ConfigureContainer(b => { })(containerBuilder);\n        }\n\n        return _wrapped.CreateServiceProvider(containerBuilder);\n    }\n}\n'})}),"\n",(0,s.jsx)(t.p,{children:"Using this in place of the previous approach should allow you continue running your integration tests with Autofac 6. Thanks Alistair!"}),"\n",(0,s.jsx)(t.h2,{id:"concern-for-third-party-containers",children:"Concern for third-party containers"}),"\n",(0,s.jsxs)(t.p,{children:["Whilst this gets us back up and running, ",(0,s.jsx)(t.a,{href:"https://github.com/autofac/Autofac/issues/1207#issuecomment-702250044",children:"Alistair pointed out that this approach depends upon a deprecated interface"}),". This is the ",(0,s.jsx)(t.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.hosting.istartupconfigurecontainerfilter-1.configurecontainer?view=aspnetcore-3.1",children:(0,s.jsx)(t.code,{children:"IStartupConfigureContainerFilter"})})," which ",(0,s.jsxs)(t.a,{href:"https://github.com/dotnet/aspnetcore/pull/11505",children:["has been marked as ",(0,s.jsx)(t.code,{children:"Obsolete"})," since mid 2019"]}),". What this means is, at some point, this approach will stop working."]}),"\n",(0,s.jsxs)(t.p,{children:["The marvellous David Fowler has said that ",(0,s.jsxs)(t.a,{href:"https://github.com/autofac/Autofac/issues/1207#issuecomment-702361608",children:[(0,s.jsx)(t.code,{children:"ConfigureTestContainer"})," issue should be resolved in .NET"]}),". However it's worth noting that this has been an issue since .NET Core 3 shipped and unfortunately the wonderful ",(0,s.jsx)(t.a,{href:"https://github.com/dotnet/aspnetcore/issues/14907#issuecomment-702287717",children:"Chris Ross has advised that it's not likely to be fixed for .NET 5"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["I'm very keen this does get resolved in .NET. Building tests upon an ",(0,s.jsx)(t.code,{children:"Obsolete"})," attribute doesn't fill me with confidence. I'm a long time user of Autofac and I'd like to continue to be. Here's hoping that's made possible by a fix landing in .NET. If this is something you care about, it may be worth upvoting / commenting on ",(0,s.jsx)(t.a,{href:"https://github.com/dotnet/aspnetcore/issues/14907",children:"the issue in GitHub"})," so the team are aware of desire around this being resolved."]})]})}function d(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},86186:e=>{e.exports=JSON.parse('{"permalink":"/autofac-6-integration-tests-and-generic-hosting","editUrl":"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2020-10-02-autofac-6-integration-tests-and-generic-hosting/index.md","source":"@site/blog/2020-10-02-autofac-6-integration-tests-and-generic-hosting/index.md","title":"Autofac 6, integration tests and .NET generic hosting","description":"Integration tests using Autofac have been affected by a long-standing issue in .NET Core 3.0. Alternative approaches may not last long.","date":"2020-10-02T00:00:00.000Z","tags":[{"inline":false,"label":"ASP.NET","permalink":"/tags/asp-net","description":"The web framework built by Microsoft."},{"inline":false,"label":"Automated Testing","permalink":"/tags/automated-testing","description":"How to perform the automation of tests."}],"readingTime":2.73,"hasTruncateMarker":true,"authors":[{"name":"John Reilly","title":"OSS Engineer - TypeScript, Azure, React, Node.js, .NET","url":"https://johnnyreilly.com/about","imageURL":"https://johnnyreilly.com/img/profile.jpg","key":"johnnyreilly","page":null}],"frontMatter":{"slug":"autofac-6-integration-tests-and-generic-hosting","title":"Autofac 6, integration tests and .NET generic hosting","authors":"johnnyreilly","tags":["asp.net","automated testing"],"image":"./autofac-integration-tests.webp","hide_table_of_contents":false,"description":"Integration tests using Autofac have been affected by a long-standing issue in .NET Core 3.0. Alternative approaches may not last long."},"unlisted":false,"prevItem":{"title":"Safari: The Mysterious Case of the Empty Download","permalink":"/safari-empty-download-content-type"},"nextItem":{"title":"Why your team needs a newsfeed","permalink":"/why-your-team-needs-newsfeed"}}')},99548:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/autofac-integration-tests-7eae6e7477002b42a76517fc1c85313b.webp"}}]);