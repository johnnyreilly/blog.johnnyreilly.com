"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([["3244"],{62969:function(e,t,n){n.r(t),n.d(t,{assets:function(){return a},contentTitle:function(){return l},default:function(){return u},frontMatter:function(){return s},metadata:function(){return o},toc:function(){return c}});var o=n(85301),r=n(85893),i=n(50065);let s={slug:"setting-build-version-using-appveyor",title:"Setting Build Version Using AppVeyor and ASP.Net Core",authors:"johnnyreilly",tags:["asp.net"],hide_table_of_contents:!1,description:"AppVeyor doesnt have support for setting version of a binary in dot net core, but it can be done easily through PowerShell."},l=void 0,a={authorsImageUrls:[void 0]},c=[];function p(e){let t={a:"a",code:"code",p:"p",...(0,i.a)(),...e.components};return(0,r.jsxs)(t.p,{children:["AppVeyor has ",(0,r.jsx)(t.a,{href:"https://www.appveyor.com/docs/build-configuration/#assemblyinfo-patching",children:"support for setting the version of a binary during a build"}),". However - this deals with the classic ASP.Net world of ",(0,r.jsx)(t.code,{children:"AssemblyInfo"}),". I didn't find any reference to support for doing the same with dot net core. Remember, dot net core ",(0,r.jsxs)(t.a,{href:"https://docs.microsoft.com/en-us/dotnet/articles/core/tools/project-json-to-csproj#version",children:["relies upon a ",(0,r.jsx)(t.code,{children:"&lt;Version&gt;"})," or a ",(0,r.jsx)(t.code,{children:"&lt;VersionPrefix&gt;"})," setting in the ",(0,r.jsx)(t.code,{children:".csproj"})," file"]}),". Personally, ",(0,r.jsx)(t.code,{children:"&lt;Version&gt;"})," is my jam."]})}function u(e={}){let{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},50065:function(e,t,n){n.d(t,{Z:function(){return l},a:function(){return s}});var o=n(67294);let r={},i=o.createContext(r);function s(e){let t=o.useContext(i);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(i.Provider,{value:t},e.children)}},85301:function(e){e.exports=JSON.parse('{"permalink":"/setting-build-version-using-appveyor","editUrl":"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2017-04-25-setting-build-version-using-appveyor/index.md","source":"@site/blog/2017-04-25-setting-build-version-using-appveyor/index.md","title":"Setting Build Version Using AppVeyor and ASP.Net Core","description":"AppVeyor doesnt have support for setting version of a binary in dot net core, but it can be done easily through PowerShell.","date":"2017-04-25T00:00:00.000Z","tags":[{"inline":false,"label":"ASP.NET","permalink":"/tags/asp-net","description":"The web framework built by Microsoft."}],"readingTime":1.03,"hasTruncateMarker":true,"authors":[{"name":"John Reilly","title":"OSS Engineer - TypeScript, Azure, React, Node.js, .NET","url":"https://johnnyreilly.com/about","imageURL":"https://johnnyreilly.com/img/profile.jpg","key":"johnnyreilly","page":null}],"frontMatter":{"slug":"setting-build-version-using-appveyor","title":"Setting Build Version Using AppVeyor and ASP.Net Core","authors":"johnnyreilly","tags":["asp.net"],"hide_table_of_contents":false,"description":"AppVeyor doesnt have support for setting version of a binary in dot net core, but it can be done easily through PowerShell."},"unlisted":false,"prevItem":{"title":"TypeScript: Spare the Rod, Spoil the Code","permalink":"/typescript-spare-rod-spoil-code"},"nextItem":{"title":"I\'m looking for work!","permalink":"/im-looking-for-work"}}')}}]);