"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([[85018],{1002:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/title-image-031d0022a4207916571018334832963d.png"},2377:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/title-image-031d0022a4207916571018334832963d.png"},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>r});var i=n(96540);const s={},o=i.createContext(s);function a(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(o.Provider,{value:t},e.children)}},36424:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var i=n(90290),s=n(74848),o=n(28453);const a={slug:"static-web-apps-cli-node-18-could-not-connect-to-api",title:"Static Web Apps CLI and Node.js 18: could not connect to API",authors:"johnnyreilly",tags:["azure static web apps","node.js","static web apps cli"],image:"./title-image.png",description:"With Node.js 18, the Static Web Apps CLI fails to connect to the API - there is a way to fix this.",hide_table_of_contents:!1},r=void 0,c={image:n(1002).A,authorsImageUrls:[void 0]},p=[{value:"How this affects the Static Web Apps CLI",id:"how-this-affects-the-static-web-apps-cli",level:2},{value:"The workaround for v1.1.3 or earlier",id:"the-workaround-for-v113-or-earlier",level:2},{value:"Summary",id:"summary",level:2}];function l(e){const t={a:"a",code:"code",h2:"h2",img:"img",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["I make use of Azure Static Web Apps a lot. I recently upgraded to Node.js 18 and found that the Static Web Apps CLI no longer worked when trying to run locally; the API would not connect when running ",(0,s.jsx)(t.code,{children:"swa start"}),":"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:'[swa] \u274c Could not connect to "http://localhost:7071/". Is the server up and running?'})}),"\n",(0,s.jsxs)(t.p,{children:["This post shares a workaround. This works for v1.1.3 or earlier of the Static Web Apps CLI. If you're using v1.1.4 or later, you should not need this workaround. But in that case ",(0,s.jsx)(t.a,{href:"/static-web-apps-cli-improve-performance-with-vite-server-proxy",children:"you might find this post helpful on improving performance with 1.1.4 or later"}),"."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"title image reading &quot;Static Web Apps CLI and Node.js 18: could not connect to API&quot; with the Static Web Apps CLI and Node.js logos",src:n(2377).A+"",width:"800",height:"450",loading:"lazy"})}),"\n",(0,s.jsxs)(t.p,{children:["With Node.js 17 onwards there were changes in the behaviour of Node.js concerning DNS names. Although it's not obvious, the ",(0,s.jsx)(t.a,{href:"https://github.com/nodejs/node/pull/39987",children:"changes happened here"})," and the result of this was that IPv6 became the default DNS instead of IPv4. You can read more about this ",(0,s.jsx)(t.a,{href:"https://github.com/nodejs/node/issues/40537",children:"on this GitHub issue"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"how-this-affects-the-static-web-apps-cli",children:"How this affects the Static Web Apps CLI"}),"\n",(0,s.jsxs)(t.p,{children:["My own setup is a Vite front end and a Function App back end. I have a ",(0,s.jsx)(t.code,{children:"package.json"})," in the folder of the front end app with the following scripts:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'"dev": "vite",\n"start": "swa start http://localhost:5173 --run \\"npm run dev\\" --api-location ../FunctionApp"\n'})}),"\n",(0,s.jsx)(t.p,{children:"I could see both front end and back end starting up in the console, but inevitably the SWA CLI would report:"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:'[swa] \u274c Could not connect to "http://localhost:7071/". Is the server up and running?'})}),"\n",(0,s.jsxs)(t.p,{children:["I experienced this when moving from Node.js 16 to Node.js 18. A dependency of the Static Web Apps CLI; the ",(0,s.jsx)(t.a,{href:"https://github.com/jeffbski/wait-on",children:"wait-on"})," library which waits for endpoints to become available, was impacted by the new behavior. ",(0,s.jsx)(t.a,{href:"https://github.com/jeffbski/wait-on/issues/137",children:"With Node.js 18 this is broken"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["A fix to the overall issue was released in ",(0,s.jsx)(t.a,{href:"https://github.com/Azure/static-web-apps-cli/releases/tag/v1.1.4",children:"v1.1.4 of the Static Web Apps CLI"}),". Unfortunately, it caused performance issues with the proxy server. ",(0,s.jsx)(t.a,{href:"/static-web-apps-cli-improve-performance-with-vite-server-proxy",children:"This post shows you how to work around this issue"}),". If you'd like to work around the issue with v1.1.3 or earlier, read on."]}),"\n",(0,s.jsx)(t.h2,{id:"the-workaround-for-v113-or-earlier",children:"The workaround for v1.1.3 or earlier"}),"\n",(0,s.jsxs)(t.p,{children:["Various workarounds are suggested in ",(0,s.jsx)(t.a,{href:"https://github.com/Azure/static-web-apps-cli/issues/663",children:"this GitHub issue"}),". I shared my own there, and I'm sharing it here too. (Mostly for me, I'll lay money I need this again and again.)"]}),"\n",(0,s.jsxs)(t.p,{children:["In the root of my project I installed ",(0,s.jsx)(t.a,{href:"https://www.npmjs.com/package/concurrently",children:"concurrently"}),":"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"npm i concurrently\n"})}),"\n",(0,s.jsx)(t.p,{children:"Then, again in the root of my project I added the following scripts:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'"debug": "concurrently -n \\"staticwebapp,functionapp\\" -c \\"bgBlue.bold,bgMagenta.bold\\" \\"npm run debug:staticwebapp\\" \\"npm run debug:functionapp\\"",\n"debug:staticwebapp": "cd src/StaticWebApp && npm run debug",\n"debug:functionapp": "cd src/FunctionApp && func start",\n'})}),"\n",(0,s.jsxs)(t.p,{children:["What's happening here is that I'm running the Static Web Apps CLI and the Function App CLI in separate processes, and running them concurrently when we run ",(0,s.jsx)(t.code,{children:"npm run debug"}),". You'll note that the ",(0,s.jsx)(t.code,{children:"debug:staticwebapp"})," script is running another ",(0,s.jsx)(t.code,{children:"debug"})," script with the Static Web Apps CLI in the ",(0,s.jsx)(t.code,{children:"src/StaticWebApp"})," folder:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'"debug": "swa start http://localhost:5173 --run \\"npm run dev\\" --api-location http://127.0.0.1:7071",\n'})}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"--api-location"})," flag is pointing to the endpoint the Function App is surfaced at. This is the key to the workaround."]}),"\n",(0,s.jsx)(t.h2,{id:"summary",children:"Summary"}),"\n",(0,s.jsx)(t.p,{children:"This takes us back to having a setup that will work with Node.js 18. Hopefully this is only needed for a short while, but it's good to have a workaround in the meantime."})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},90290:e=>{e.exports=JSON.parse('{"permalink":"/static-web-apps-cli-node-18-could-not-connect-to-api","editUrl":"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2023-05-20-static-web-apps-cli-node-18-could-not-connect-to-api/index.md","source":"@site/blog/2023-05-20-static-web-apps-cli-node-18-could-not-connect-to-api/index.md","title":"Static Web Apps CLI and Node.js 18: could not connect to API","description":"With Node.js 18, the Static Web Apps CLI fails to connect to the API - there is a way to fix this.","date":"2023-05-20T00:00:00.000Z","tags":[{"inline":false,"label":"Azure Static Web Apps","permalink":"/tags/azure-static-web-apps","description":"The Azure Static Web Apps service."},{"inline":false,"label":"Node.js","permalink":"/tags/node-js","description":"The Node.js runtime."},{"inline":false,"label":"Static Web Apps CLI","permalink":"/tags/static-web-apps-cli","description":"The Static Web Apps CLI is a local development tool which can be used with static web apps / single page applications"}],"readingTime":3.23,"hasTruncateMarker":true,"authors":[{"name":"John Reilly","title":"OSS Engineer - TypeScript, Azure, React, Node.js, .NET","url":"https://johnnyreilly.com/about","imageURL":"https://johnnyreilly.com/img/profile.jpg","key":"johnnyreilly","page":null}],"frontMatter":{"slug":"static-web-apps-cli-node-18-could-not-connect-to-api","title":"Static Web Apps CLI and Node.js 18: could not connect to API","authors":"johnnyreilly","tags":["azure static web apps","node.js","static web apps cli"],"image":"./title-image.png","description":"With Node.js 18, the Static Web Apps CLI fails to connect to the API - there is a way to fix this.","hide_table_of_contents":false},"unlisted":false,"prevItem":{"title":"Private Bicep registry authentication with AzureResourceManagerTemplateDeployment@3","permalink":"/private-bicep-registry-authentication-azureresourcemanagertemplatedeployment"},"nextItem":{"title":"TypeScript 5: importsNotUsedAsValues replaced by ESLint consistent-type-imports","permalink":"/typescript-5-importsnotusedasvalues-error-eslint-consistent-type-imports"}}')}}]);