<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://johnnyreilly.com/</id>
    <title>I CAN MAKE THIS WORK</title>
    <updated>2024-08-27T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://johnnyreilly.com/"/>
    <subtitle>The blog of John Reilly ‚ù§Ô∏èüåª</subtitle>
    <icon>https://johnnyreilly.com/favicon.ico</icon>
    <rights>Copyright ¬© 2012 - 2024 John Reilly.</rights>
    <entry>
        <title type="html"><![CDATA[Using AZD for faster incremental Azure Static Web App deployments in GitHub Actions]]></title>
        <id>https://johnnyreilly.com/using-azd-for-faster-incremental-azure-static-web-app-deployments-in-github-actions</id>
        <link href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-static-web-app-deployments-in-github-actions"/>
        <updated>2024-08-26T20:11:37.000Z</updated>
        <summary type="html"><![CDATA[Learn how to speed up deployments of Azure Static Web Apps in GitHub Actions using the AZD command.]]></summary>
        <content type="html"><![CDATA[<p>This post is a follow on from the post <a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops">Using AZD for faster incremental Azure Container App deployments in Azure DevOps</a>. In that post, we looked at how to speed up deployments of Azure Container Apps in Azure DevOps using the <a href="https://learn.microsoft.com/en-us/azure/developer/azure-developer-cli/" target="_blank" rel="noopener noreferrer">Azure Developer CLI (<code>azd</code>)</a>. In this post, we're going to look at how to speed up deployments of Azure Static Web Apps in GitHub Actions using <code>azd</code>.</p>
<p><img decoding="async" loading="eager" alt="title image reading &amp;quot;Using AZD for faster incremental Azure Static Web App deployments in GitHub Actions&amp;quot; with the Azure Static Web Apps logo" src="https://johnnyreilly.com/assets/images/title-image-7a98185b6742dae247aecbbc096eac82.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<p>There's going to be some overlap between the last post and this one. I don't want to force you to read them both, so I'll duplicate some of the content from the previous post here. But I'll also add some new content that's specific to deploying Azure Static Web Apps in GitHub Actions with <code>azd</code>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="faster-deployments-from-azd-14-and-beyond">Faster deployments from <code>azd</code> 1.4 and beyond<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-static-web-app-deployments-in-github-actions#faster-deployments-from-azd-14-and-beyond" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>The <code>azd</code> v1.4.0 release contained a significant feature: <code>azd provision</code> is now faster when there are no infrastructure changes.</p>
<p>To quote a trimmed down version of the <a href="https://devblogs.microsoft.com/azure-sdk/azure-developer-cli-azd-october-2023-release/#azd-provision-is-now-faster-when-there-are-no-infrastructure-changes" target="_blank" rel="noopener noreferrer">announcement</a>:</p>
<blockquote>
<p>If you‚Äôve been using the Azure Developer CLI for a while, you may have noticed that sometimes <code>azd provision</code> takes a long time to complete when it may not need to. The wait time was because, prior to version 1.4.0, <code>azd provision</code> would always reprovision regardless of whether the underlying Infrastructure as Code had changed... As of today‚Äôs 1.4.0 release, <code>azd provision</code> now checks the most recent deployment upstream on Azure to see if the state is the same as what‚Äôs represented in the Infrastructure as Code that‚Äôs been used to provision. If the state is the same, the provision is skipped... with this new experience, you should also notice improved performance when running <code>azd up</code> in a CI/CD pipeline as provisioning will be automatically skipped when there are no changes.</p>
</blockquote>
<p>This can help us speed up deployments of Azure Static Web Apps in GitHub Actions.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="background">Background<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-static-web-app-deployments-in-github-actions#background" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>You're reading this post on my blog, which, at the time of writing, runs using Azure Static Web Apps. And has done for years. Every time I push a change, a deployment pipeline runs that deploys the changes to Azure. There's two distinct parts to the deployment pipeline:</p>
<ol>
<li>deploying infrastructure (the Azure resources that the blog relies upon such as the Azure Static Web App, a Cosmos DB etc)</li>
<li>building and deploying the application code (the blog itself)</li>
</ol>
<p>It takes around <strong>3 minutes</strong> to deploy the infrastructure. And this is happening every time we update the site. But most of the time, there are no changes to be made to the infrastructure of the site; just the content. So it's a waste of time. I want to speed this up and <code>azd</code> can help me do that.</p>
<p>Specifically, I want to switch my usage of <code>az deployment group create</code> to <code>azd provision</code> because <code>azd provision</code> is faster when there are no infrastructure changes. We will drop the infrastructure deployment job time from <strong>3 minutes</strong> to <strong>20 seconds</strong> when there are no infrastructure changes.</p>
<p>Now when I started trying to see if doing faster deployments of Static Web Apps was possible with <code>azd</code>, I couldn't discover any documentation. So I've found myself writing the documentation I wish had existed. Please forgive me any mistakes I make along the way.</p>
<p>To be clear on scope, my intention here is only to speed up how we handle the deployment of the infrastructure. I don't want to deploy infrastructure if there are no changes; so I'll use <code>azd</code> to accomplish this goal. I'm not going all in on <code>azd</code> for the deployment of the application code as well. For now, we'll focus solely on the infrastructure piece. Maybe we'll come back to the application code in a future post.</p>
<p>From here on out, we'll go through the changes we need to make to our project to replace <code>az deployment group create</code> with <code>azd provision</code> for faster incremental Azure Static Web App deployments in GitHub Actions.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="hello-azureyml">Hello <code>azure.yml</code><a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-static-web-app-deployments-in-github-actions#hello-azureyml" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>To make use of <code>azd</code>, we'll requires an <code>azure.yml</code> file in our project. This file is going to contain the configuration for our <code>azd</code> project. Here's what it looks like:</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># yaml-language-server: $schema=https://raw.githubusercontent.com/Azure/azure-dev/main/schemas/v1.0/azure.yaml.json</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> my</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">static</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">web</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">app</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token key atrule">metadata</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">template</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> azd</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">init@1.9.6</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token key atrule">services</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">web</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">host</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> staticwebapp</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">resourceName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">STATIC_WEB_APP_NAME</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">project</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> ./blog</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">website</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">language</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> js</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The particular things to note in this file are:</p>
<ul>
<li>we have one service - <code>web</code> - this is the service that represents our Static Web App</li>
<li>our host is <code>staticwebapp</code> - this means we're deploying a Static Web App</li>
<li>we provide the resource name of our static web app name in the <code>STATIC_WEB_APP_NAME</code> environment variable - this allows <code>azd</code> to identify it. (The <code>resourceName</code> parameter supports environment variable substitution and will plug in the name of the resource when it is used.)</li>
<li>we provide the path to the project that contains the code for our Static Web App in the <code>project</code> parameter and specify it is <code>js</code> code in the <code>language</code> parameter. Neither of these parameters are used by <code>azd</code> during provisioning, but they are required.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="bicep-modifications">Bicep modifications<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-static-web-app-deployments-in-github-actions#bicep-modifications" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>The feature we want to consume from <code>azd</code> is the ability to avoid provisioning infrastructure when there are no changes. To do this, we need to make some modifications to our Bicep files in order that <code>azd</code> can determine whether there are changes or not.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="using-resource-group-scoped-deployments-with-azd">Using resource group scoped deployments with azd<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-static-web-app-deployments-in-github-actions#using-resource-group-scoped-deployments-with-azd" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>We're going to start off with a minor tweak to our <code>main.bicep</code> file; the entry point to our Bicep deployments.</p>
<div class="language-bicep codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bicep codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">targetScope</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'resourceGroup'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The change above allows us to use <code>azd</code> deployments targeted at existing resource groups. The default mode of operation for <code>azd</code> deployments is deploying a resource group to a subscription. We are seeking to <a href="https://learn.microsoft.com/en-us/azure/developer/azure-developer-cli/resource-group-scoped-deployments" target="_blank" rel="noopener noreferrer">deploy to an existing resource group</a>.</p>
<p>Now, strictly speaking, this isn't necessary for speeding up deployments with <code>azd</code>. But if you're not one for creating a resource group per deployment (as I am not), then this is a good idea. This kind of deployment requires less permissions and aligns with the principle of least privilege.</p>
<p>We'll need to opt into using this feature with <code>azd</code> later on when we update our workflow as at present resource group scoped deployments are considered "alpha".</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="new-parameters-in-mainbicep">New parameters in <code>main.bicep</code><a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-static-web-app-deployments-in-github-actions#new-parameters-in-mainbicep" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>We're going to add an <code>envName</code> parameter that will be used to populate <code>azd-env-name</code> tags on resources. We're also going to add a parameter that will be used to determine whether the Static Web App already exists:</p>
<div class="language-bicep codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bicep codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token decorator">@description</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'Environment eg dev, prod'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> envName </span><span class="token datatype class-name" style="color:rgb(250, 208, 0)">string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token decorator">@description</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'Specifies if the static web app exists - azd will provide this'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">#disable</span><span class="token operator" style="color:rgb(255, 157, 0)">-</span><span class="token plain">next</span><span class="token operator" style="color:rgb(255, 157, 0)">-</span><span class="token plain">line no</span><span class="token operator" style="color:rgb(255, 157, 0)">-</span><span class="token plain">unused</span><span class="token operator" style="color:rgb(255, 157, 0)">-</span><span class="token plain">params</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> staticWebAppExists </span><span class="token datatype class-name" style="color:rgb(250, 208, 0)">bool</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">false</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Whilst the equivalent "exists" parameter <strong>is</strong> used by Container App provisioning, it's not clear if Static Web Apps need it also. I have a feeling this could be omitted, given that the parameter is unused. (As indicated by the <code>#disable-next-line no-unused-params</code> to quiet the linter.) But I'm going to include the parameter for now.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="tagging-resources-with-the-azd-tags">Tagging resources with the azd tags<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-static-web-app-deployments-in-github-actions#tagging-resources-with-the-azd-tags" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>Now that we've passed the <code>envName</code> parameter to our <code>main.bicep</code> file, we're going to use it to tag our resources with the environment name. This allows <code>azd</code> to determine the environment of a given resource. We already have a <code>tags</code> object, let's add the value of the <code>envName</code> parameter to it with the special property name of <code>azd-env-name</code>:</p>
<div class="language-bicep codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bicep codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> combinedTags </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">union</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">tags</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'azd-env-name'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> envName </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We'll make use of the <code>combinedTags</code> object as we tag our resources instead of the <code>tags</code> object. We will also add an extra tag to the static web app resource to identify it as our <code>web</code> service:</p>
<div class="language-bicep codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bicep codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> tagsForStaticWebApp </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">union</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">'azd-service-name'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'web'</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// note the "web" matches the service name in azure.yml</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> combinedTags</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">resource</span><span class="token plain"> staticWebApp </span><span class="token string" style="color:rgb(165, 255, 144)">'Microsoft.Web/staticSites@2022-09-01'</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">name</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> staticWebAppName</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">location</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> location</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">tags</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> tagsForStaticWebApp</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="migrating-to-mainbicepparam">Migrating to <code>main.bicepparam</code><a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-static-web-app-deployments-in-github-actions#migrating-to-mainbicepparam" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>Prior to using <code>azd</code>, we were using a <code>main.bicep</code> file to deploy our infrastructure and we provided parameters to this file via our GitHub Actions workflow. We're going to make a change to our pipeline to use a <a href="https://learn.microsoft.com/en-us/azure/azure-resource-manager/bicep/parameter-files?tabs=Bicep" target="_blank" rel="noopener noreferrer"><code>main.bicepparam</code></a> file instead.</p>
<p>The <code>main.bicepparam</code> file is going to contain the parameters that we were previously providing directly to our <code>main.bicep</code> file. It's going to pick these up from environment variables that we'll declare and from environment variables provided by <code>azd</code>; such as the one to drive environment name and whether our service exists. So there's a little more indirection in our parameter passing now. It used to be:</p>
<p><em>GitHub Actions -&gt; <code>main.bicep</code></em></p>
<p>Now it will be:</p>
<p><em>GitHub Actions -&gt; <code>main.bicepparam</code> -&gt; <code>main.bicep</code></em></p>
<p>Consider the following (cut down) <code>main.bicepparam</code> file:</p>
<div class="language-bicep codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bicep codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">using </span><span class="token string" style="color:rgb(165, 255, 144)">'./main.bicep'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> envName </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">readEnvironmentVariable</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'AZURE_ENV_NAME'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> location </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">readEnvironmentVariable</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'AZURE_LOCATION'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> branch </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">readEnvironmentVariable</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'REPOSITORY_BRANCH'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> staticWebAppName </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">readEnvironmentVariable</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'STATIC_WEB_APP_NAME'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> tags </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">owner</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">readEnvironmentVariable</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'TAGS_OWNER'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">emain</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">readEnvironmentVariable</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'TAGS_EMAIL'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// azd will provide the following parameters</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> staticWebAppExists </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">bool</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token function" style="color:rgb(250, 208, 0)">readEnvironmentVariable</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'SERVICE_WEB_RESOURCE_EXISTS'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'false'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This should pick up the values we need from environment values provided both by us and <code>azd</code>. Later we'll update the GitHub Actions workflow to ensure these are provided.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="updating-our-github-actions-workflow-to-use-azd">Updating our GitHub Actions workflow to use <code>azd</code><a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-static-web-app-deployments-in-github-actions#updating-our-github-actions-workflow-to-use-azd" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>We need to install and configure <code>azd</code> in our GitHub Actions workflow:</p>
<div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Install azd üîß</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">uses</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Azure/setup</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">azd@v1.0.0</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Set `azd` config options üîß</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">run</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">|</span><span class="token scalar string" style="color:rgb(165, 255, 144)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">    azd config set auth.useAzCliAuth "true"</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">    azd config set alpha.resourceGroupDeployments on</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>As well as installing <code>azd</code>, we're setting two configuration options. The <code>auth.useAzCliAuth</code> option tells <code>azd</code> to use the Azure CLI for authentication - we already have the <a href="https://github.com/marketplace/actions/azure-login" target="_blank" rel="noopener noreferrer">Azure Login Action</a> in our workflow, authenticating our pipeline so it can use the Azure CLI. With the <code>useAzCliAuth</code> option set, <code>azd</code> can make use of that existing authentication rather than needing us to authenticate it independently. The <code>alpha.resourceGroupDeployments</code> option enables resource group scoped deployments because we're using resource group scoped deployments in our Bicep files as we discussed earlier.</p>
<p>Now we have <code>azd</code> in place and authenticated, we're ready to swap out <code>az deployment group create</code> for <code>azd provision</code>. We're going to remove the following job from our workflow:</p>
<div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Infra </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> provision üîß</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">uses</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> azure/CLI@v2</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">with</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">inlineScript</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">|</span><span class="token scalar string" style="color:rgb(165, 255, 144)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">      az deployment group create \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">        --resource-group ${{ env.RESOURCE_GROUP }} \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">        --name "${{ steps.deployment_name.outputs.DEPLOYMENT_NAME }}" \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">        --template-file ./infra/main.bicep \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">        --parameters \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">            branch='main' \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">            location='${{ env.LOCATION }}' \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">            staticWebAppName='${{ env.STATICWEBAPPNAME }}' \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">            tags='${{ env.TAGS }}' \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">            rootCustomDomainName='${{ env.ROOTCUSTOMDOMAINNAME }}' \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">            blogCustomDomainName='${{ env.BLOGCUSTOMDOMAINNAME }}'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>And in it's place we'll add the following:</p>
<div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Infra </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> provision üîß</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">run</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> azd provision </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">no</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">prompt</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># See https://learn.microsoft.com/en-gb/azure/developer/azure-developer-cli/configure-devops-pipeline?tabs=azdo</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">AZURE_LOCATION</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> env.AZURE_LOCATION </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">AZURE_SUBSCRIPTION_ID</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> vars.AZURE_SUBSCRIPTION_ID </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">AZURE_ENV_NAME</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> prod </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># I only have one environment - you might have more</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># https://learn.microsoft.com/en-us/azure/developer/azure-developer-cli/manage-environment-variables#user-provided-environment-variables</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">AZURE_RESOURCE_GROUP</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> env.AZURE_RESOURCE_GROUP </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># Define the additional variables or secrets that are required only for provision - see main.bicepparam</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">REPOSITORY_BRANCH</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> main </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># we only provision for the main branch</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">STATIC_WEB_APP_NAME</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> env.STATIC_WEB_APP_NAME </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">TAGS_OWNER</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> env.TAGS_OWNER </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">TAGS_EMAIL</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> env.TAGS_EMAIL </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">ROOT_CUSTOM_DOMAIN_NAME</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> env.ROOT_CUSTOM_DOMAIN_NAME </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">BLOG_CUSTOM_DOMAIN_NAME</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> env.BLOG_CUSTOM_DOMAIN_NAME </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The above amounts simply to a <code>azd provision --no-prompt</code> command, but it works because we are first authenticated and because we supply a number of environment variables to the job.</p>
<p>You'll see that we're populating environment variables that will be picked up by our <code>main.bicepparam</code> file. These were the same variables that were being passed explicitly to our <code>main.bicep</code> file when we were using <code>az deployment group create</code>. Now it will be <code>azd</code> that will be responsible for passing these values to our <code>main.bicep</code> file, using <code>main.bicepparam</code> as the connective tissue.</p>
<p>When <code>azd provision</code> runs, it will look at the existing infrastructure and determine whether there are changes to be made. If there are no changes, then the deployment will be skipped. This is the magic of <code>azd</code>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-does-it-look-like-when-it-works">What does it look like when it works?<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-static-web-app-deployments-in-github-actions#what-does-it-look-like-when-it-works" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Well, once the initial workflow has run (to tag the resources accordingly), a subsequent no-infra-change will look like this:</p>
<p><img decoding="async" loading="lazy" alt="screenshot of azd detecting no changes and so not provisioning" src="https://johnnyreilly.com/assets/images/screenshot-of-azd-detecting-no-changes-7eb0fe0adb96a8060b8f21f009db79ea.webp" width="793" height="579" class="img_ev3q"></p>
<p>The <code>Skipped: Didn't find new changes</code> message is a sign that we're now no longer deploying in full each time. Only when we need to. This is us dropping infrastructure deployment job time from <strong>3 minutes</strong> to <strong>20 seconds</strong> when there are no infrastructure changes.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-static-web-app-deployments-in-github-actions#conclusion" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>It is actually fairly straightforward to get the benefits of faster deployments with <code>azd</code> for Static Web Apps. In fact it's even more straightforward than with Container Apps, because you can choose to continue with your own preferred method of app code deployment. You're not obliged to use <code>azd deploy</code> as well as <code>azd provision</code>. So even if you might want to make the switch later, you can choose to do it gradually.</p>
<p>If you're interested in the PR that implemented this for my blog <a href="https://github.com/johnnyreilly/blog.johnnyreilly.com/pull/913/files" target="_blank" rel="noopener noreferrer">you can find it here</a> - though I should warn you that I did some general refactoring in there as well, so please ignore tweaks to blog content etc.</p>]]></content>
        <author>
            <name>John Reilly</name>
            <uri>https://johnnyreilly.com/about</uri>
        </author>
        <category label="Azure" term="Azure"/>
        <category label="Bicep" term="Bicep"/>
        <category label="GitHub Actions" term="GitHub Actions"/>
        <category label="Azure Static Web Apps" term="Azure Static Web Apps"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Using AZD for faster incremental Azure Container App deployments in Azure DevOps]]></title>
        <id>https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops</id>
        <link href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops"/>
        <updated>2024-08-26T20:11:37.000Z</updated>
        <summary type="html"><![CDATA[Learn how to speed up deployments of Azure Container Apps in GitHub Actions using the AZD command.]]></summary>
        <content type="html"><![CDATA[<p>When deploying Azure Container Apps from Azure DevOps, you can use the <code>azd</code> command to speed up deployments that do not affect infrastructure. Given that when you're deploying, it's far more common to be making a code and / or content change and not an infrastructure one, this can be a significant time saver.</p>
<p><img decoding="async" loading="eager" alt="title image reading &amp;quot;Using AZD for faster incremental Azure Container App deployments in Azure DevOps&amp;quot; with the Azure Container Apps logo" src="https://johnnyreilly.com/assets/images/title-image-ca63b951ef232f0eede02c6a48f0d39b.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<p>If you're looking for information on how to use <code>azd</code> to speed up deployments of Azure Static Web Apps in GitHub Actions, then you might want to read <a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-static-web-app-deployments-in-github-actions">this post</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="faster-deployments-from-azd-14-and-beyond">Faster deployments from <code>azd</code> 1.4 and beyond<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops#faster-deployments-from-azd-14-and-beyond" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>The <code>azd</code> v1.4.0 release contained a significant feature: <code>azd provision</code> is now faster when there are no infrastructure changes.</p>
<p>To quote a trimmed down version of the <a href="https://devblogs.microsoft.com/azure-sdk/azure-developer-cli-azd-october-2023-release/#azd-provision-is-now-faster-when-there-are-no-infrastructure-changes" target="_blank" rel="noopener noreferrer">announcement</a>:</p>
<blockquote>
<p>If you‚Äôve been using the Azure Developer CLI for a while, you may have noticed that sometimes <code>azd provision</code> takes a long time to complete when it may not need to. The wait time was because, prior to version 1.4.0, <code>azd provision</code> would always reprovision regardless of whether the underlying Infrastructure as Code had changed... As of today‚Äôs 1.4.0 release, <code>azd provision</code> now checks the most recent deployment upstream on Azure to see if the state is the same as what‚Äôs represented in the Infrastructure as Code that‚Äôs been used to provision. If the state is the same, the provision is skipped... with this new experience, you should also notice improved performance when running <code>azd up</code> in a CI/CD pipeline as provisioning will be automatically skipped when there are no changes.</p>
</blockquote>
<p>I want this. We're going to unpack how to use this feature in the context of an Azure DevOps pipeline with Azure Container Apps. It turns out that there's a little more to it than just running <code>azd provision</code> and hoping for the best. In fact, there's gotchas aplenty - but it's totally achievable.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-about-bicep-what-if">What about Bicep <code>what-if</code>?<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops#what-about-bicep-what-if" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>You might be thinking at this point: "What about Bicep <code>what-if</code>?" It's a good question. <code>what-if</code> is a feature of the Azure CLI that allows you to see what changes would be made if you were to deploy a Bicep file. Unfortunately, my own experience of using <code>what-if</code> has been that it's quite unreliable. It will detect changes where there are none, and it will fail to detect changes where there are some. I'd love to use it, but I can't trust it. If you'd like to watch a more in depth discussion of the issue, <a href="https://www.youtube.com/watch?v=jlkwH-fP--M" target="_blank" rel="noopener noreferrer">this video is a good place to start</a>.</p>
<p>There appear to be some known issues with <code>what-if</code> that you can follow the progress of here:</p>
<ul>
<li><a href="https://github.com/Azure/arm-template-whatif/issues/83" target="_blank" rel="noopener noreferrer">https://github.com/Azure/arm-template-whatif/issues/83</a></li>
<li><a href="https://github.com/Azure/arm-template-whatif/issues/157" target="_blank" rel="noopener noreferrer">https://github.com/Azure/arm-template-whatif/issues/157</a></li>
</ul>
<p>Given that <code>what-if</code> is not reliable, we're going to use <code>azd</code> to speed up our deployments.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="embracing-azd-in-an-existing-azure-devops-pipeline">Embracing <code>azd</code> in an existing Azure DevOps pipeline<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops#embracing-azd-in-an-existing-azure-devops-pipeline" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>I'm going to start with a pre-existing Azure Pipeline that deploys an Azure Container App. It uses the classic <a href="https://learn.microsoft.com/en-us/azure/devops/pipelines/tasks/reference/azure-resource-manager-template-deployment-v3?view=azure-pipelines" target="_blank" rel="noopener noreferrer"><code>AzureResourceManagerTemplateDeployment@3</code> ARM template deployment v3 task</a> to deploy our infrastructure in the form of a <code>main.bicep</code> (and it's submodules) file.</p>
<p>This existing pipeline and infrastructure as code payload is in a good state. But it's slow. Every time the pipeline runs, the bicep section takes <strong>8 minutes</strong>. We're going to make it faster. Spoiler: we're going to get it down to <strong>1 minute</strong>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="hello-azureyml">Hello <code>azure.yml</code><a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops#hello-azureyml" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Our project has no integration with <code>azd</code>. But we need <code>azd</code> to take advantage of the new <code>azd provision</code> feature. We're going to add a new file to our project: <code>azure.yml</code>. This file is going to contain the configuration for our <code>azd</code> project.</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># yaml-language-server: $schema=https://raw.githubusercontent.com/Azure/azure-dev/main/schemas/v1.0/azure.yaml.json</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> my</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">container</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">app</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token key atrule">metadata</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">template</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> azd</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">init@1.9.4</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token key atrule">services</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">web</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">image</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> myregistry.azurecr.io/my</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">project/my</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">container</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">app</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain">$</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">WEB_VERSION_TAG</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">host</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> containerapp</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">resourceName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">CONTAINER_APP_NAME</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The yaml above describes a container app service called <code>web</code> that uses an image from an Azure Container Registry. The <code>WEB_VERSION_TAG</code> is a variable that we'll need to provide in our Azure DevOps pipeline. It's worth noticing the link at the top to the schema for the <code>azure.yml</code> file: <a href="https://raw.githubusercontent.com/Azure/azure-dev/main/schemas/v1.0/azure.yaml.json" target="_blank" rel="noopener noreferrer">https://raw.githubusercontent.com/Azure/azure-dev/main/schemas/v1.0/azure.yaml.json</a> - much of the work around figuring out how to use <code>azd</code> was achieved by looking at the schema for the <code>azure.yml</code> file.</p>
<p>One thing we learned, as we looked at the schema, was that many parameters support environment variable substitution at runtime:</p>
<p><img decoding="async" loading="lazy" alt="screenshot of schema file" src="https://johnnyreilly.com/assets/images/screenshot-azure-yml-schema-993e66df439d83bf81c6e6439f964776.png" width="1996" height="1834" class="img_ev3q"></p>
<p>The screenshot above is taken from the Docker section of the configuration where environment variable substitution is widely supported. You might imagine that the <code>WEB_VERSION_TAG</code> used in the <code>image</code> parameter we pass would also be one of those variables. But, alas, at the time of writing it is not.</p>
<p><img decoding="async" loading="lazy" alt="screenshot of the image section of schema file" src="https://johnnyreilly.com/assets/images/screenshot-azure-yml-image-a4f57e534631486648a4251fe4f3cd43.png" width="2016" height="1642" class="img_ev3q"></p>
<p>I've raised a <a href="https://github.com/Azure/azure-dev/issues/4124" target="_blank" rel="noopener noreferrer">GitHub issue to investigate whether this could be supported</a>.</p>
<p>We'll find another way to pass the <code>WEB_VERSION_TAG</code> value to <code>azd</code> later on. You'll notice that we pass <code>resourceName: ${CONTAINER_APP_NAME}</code> - and this <strong>is</strong> a parameter which supports environment variable substitution. You'll see later that we supply the <code>CONTAINER_APP_NAME</code> and this will be consumed by the <code>azd deploy</code> stage.</p>
<p>Incidentally, we're using an approach whereby the image is built and pushed to the registry independently of <code>azd</code>. You could equally use <code>azd</code> to build and push the image. But we're not doing that here.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="bicep-modifications">Bicep modifications<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops#bicep-modifications" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>I mentioned that we're adding a level of <code>azd</code> support to an existing pipeline. As part of that, we need to make modifications to our existing Bicep modules.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="using-resource-group-scoped-deployments-with-azd">Using resource group scoped deployments with azd<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops#using-resource-group-scoped-deployments-with-azd" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>We're going to start off with a minor tweak to our <code>main.bicep</code> file; the entry point to our Bicep deployments.</p>
<div class="language-bicep codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bicep codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">targetScope</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'resourceGroup'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The change above allows us to use <code>azd</code> deployments targeted at existing resource groups. The default mode of operation for <code>azd</code> deployments is deploying a resource group to a subscription. We are seeking to <a href="https://learn.microsoft.com/en-us/azure/developer/azure-developer-cli/resource-group-scoped-deployments" target="_blank" rel="noopener noreferrer">deploy to an existing resource group</a>.</p>
<p>Now, strictly speaking, this isn't necessary for speeding up deployments with <code>azd</code>. But if you're not one for creating a resource group per deployment (as I am not), then this is a good idea. This kind of deployment requires less permissions and may well better align with your organisation's security posture.</p>
<p>We'll need to opt into using this feature with <code>azd</code> later on in the pipeline; at present resource group scoped deployments are considered "alpha".</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="the-does-your-service-exist-parameter">The "does your service exist?" parameter<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops#the-does-your-service-exist-parameter" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>We're going to add a "magic" parameter to our <code>main.bicep</code> file. This parameter is going to be used to determine whether the container app we're deploying already exists. This is important because if the container app already exists, we will reuse the existing deployed container image during the <code>azd provision</code> stage. If it does not, then we'll deploy a new container image.</p>
<div class="language-bicep codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bicep codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token decorator">@description</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'Specifies if the container app exists - azd will provide this'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> containerAppExists </span><span class="token datatype class-name" style="color:rgb(250, 208, 0)">bool</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">false</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We'll look later at where this value comes from, but for now, we're just adding it to our <code>main.bicep</code> file. How do we use this parameter? In the module where we deploy our container app, we're going to make a couple of changes:</p>
<div class="language-bicep codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bicep codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">module</span><span class="token plain"> fetchLatestImage </span><span class="token string" style="color:rgb(165, 255, 144)">'../modules/fetch-container-image.bicep'</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">name</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token interpolated-string string" style="color:rgb(165, 255, 144)">'</span><span class="token interpolated-string interpolation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token interpolated-string interpolation expression">name</span><span class="token interpolated-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolated-string string" style="color:rgb(165, 255, 144)">-fetch-image'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">params</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">exists</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> containerAppExists</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">name</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> name</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">resource</span><span class="token plain"> app </span><span class="token string" style="color:rgb(165, 255, 144)">'Microsoft.App/containerApps@2023-05-01'</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">name</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> name</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">location</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> location</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">tags</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">union</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">tags</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token string" style="color:rgb(165, 255, 144)">'azd-service-name'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain">  </span><span class="token string" style="color:rgb(165, 255, 144)">'web'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// note the "web" matches the service name in azure.yml</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">properties</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">template</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">containers</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token property" style="color:rgb(255, 157, 0)">image</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> fetchLatestImage</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">outputs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token operator" style="color:rgb(255, 157, 0)">?</span><span class="token plain">containers</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token operator" style="color:rgb(255, 157, 0)">?</span><span class="token number" style="color:rgb(255, 98, 140)">0</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token operator" style="color:rgb(255, 157, 0)">?</span><span class="token plain">image </span><span class="token operator" style="color:rgb(255, 157, 0)">??</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'mcr.microsoft.com/azuredocs/containerapps-helloworld:latest'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>You can see we tag the container app with the service name from the <code>azure.yml</code> file (<code>web</code>). This is important because it allows <code>azd</code> to determine whether the container app already exists and so power the <code>containerAppExists</code> parameter we added to our <code>main.bicep</code> file.</p>
<p>We're using the <code>containerAppExists</code> parameter to determine whether we should fetch the currently deployed image from the existing container app. If the container app exists, we'll use the existing image. If it does not, we'll use a default image. We'd typically only expect to use the default image when we're deploying the container app to an environment for the first time. (You might be wondering how the new version of the application gets deployed; given that we're not using the new container image. It turns out that <code>azd deploy</code> is the command responsible for deploying the new image; we'll get to that later.)</p>
<p>You'll have noticed that we're using a new module called <code>fetch-container-image.bicep</code>. This module is responsible for attempting to fetch the existing image from the currently deployed container app:</p>
<div class="language-bicep codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bicep codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> exists </span><span class="token datatype class-name" style="color:rgb(250, 208, 0)">bool</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> name </span><span class="token datatype class-name" style="color:rgb(250, 208, 0)">string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">resource</span><span class="token plain"> existingApp </span><span class="token string" style="color:rgb(165, 255, 144)">'Microsoft.App/containerApps@2023-05-01'</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">existing</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">exists</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">name</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> name</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">output</span><span class="token plain"> containers </span><span class="token datatype class-name" style="color:rgb(250, 208, 0)">array</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> exists </span><span class="token operator" style="color:rgb(255, 157, 0)">?</span><span class="token plain"> existingApp</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">properties</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">template</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">containers </span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This is based on what files are generated when you perform an <code>azd init</code>, but has been customised for the specific version of the <code>Microsoft.App/containerApps</code> resource we're using.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="tagging-resources-with-the-environment-name">Tagging resources with the environment name<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops#tagging-resources-with-the-environment-name" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>Another addition we're going to make to our <code>main.bicep</code> file is to tag our resources with the environment name. This allows <code>azd</code> to determine the environment of a given resource. It's achieved by using the our already existing <code>envName</code> parameter and adding it to the tags of our resources:</p>
<div class="language-bicep codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bicep codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token decorator">@description</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'Environment eg dev, prod'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> envName </span><span class="token datatype class-name" style="color:rgb(250, 208, 0)">string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> combinedTags </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">union</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">tags</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'azd-env-name'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> envName </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="parameters-in-mainbicep-must-be-immutable-per-environment">Parameters in <code>main.bicep</code> must be immutable per environment<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops#parameters-in-mainbicep-must-be-immutable-per-environment" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>It's gotcha time! One thing we learned the hard way is that parameters in <code>main.bicep</code> must be <strong>immutable per environment</strong>. This means that you can't change the value of a parameter in a <code>main.bicep</code> file between deployments to an environment. This is because <code>azd</code> uses the <code>main.bicep</code> file to determine whether a deployment is incremental or not. If the parameters change, then <code>azd</code> will assume that the deployment requires infrastructure changes, and will reprovision the resources.</p>
<p>What's more, as things stand, <code>azd</code> only has the ability to <strong>fully</strong> reprovision your resources. If your app consists of a database and a container app, and you only want to deploy a new version of the container app, you're out of luck. <code>azd</code> will deploy the database again too. This is a limitation of <code>azd</code> at the time of writing.</p>
<p>I've <a href="https://github.com/Azure/azure-dev/issues/4123" target="_blank" rel="noopener noreferrer">raised a GitHub issue</a> in the hope that this feature might one day land. Perhaps it's super hard - quite possibly.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="welcome-mainbicepparam">Welcome <code>main.bicepparam</code><a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops#welcome-mainbicepparam" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Prior to using <code>azd</code>, we were using a <code>main.bicep</code> file to deploy our infrastructure and we provided parameters to this file via our Azure DevOps pipeline. We're going to make a change to our pipeline to use a <a href="https://learn.microsoft.com/en-us/azure/azure-resource-manager/bicep/parameter-files?tabs=Bicep" target="_blank" rel="noopener noreferrer"><code>main.bicepparam</code></a> file instead.</p>
<p>The <code>main.bicepparam</code> file is going to contain the parameters that we were previously providing to our <code>main.bicep</code> file. It's going to pick these up from environment variables that we'll declare. We're also going to add our new <code>containerAppExists</code> parameter to this file, which will also collect its value from an environment variable. But it won't be us that provides that value; it will be <code>azd</code>.</p>
<p>Consider the following (cut down) <code>main.bicepparam</code> file:</p>
<div class="language-bicep codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bicep codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">using </span><span class="token string" style="color:rgb(165, 255, 144)">'./main.bicep'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> envName </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">readEnvironmentVariable</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'AZURE_ENV_NAME'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> location </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">readEnvironmentVariable</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'AZURE_LOCATION'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> serviceConnectionPrincipalId </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">readEnvironmentVariable</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'AZURE_PRINCIPAL_ID'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> tags </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">branch</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">readEnvironmentVariable</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'TAGS_BRANCH'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">repo</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">readEnvironmentVariable</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'TAGS_REPO'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// azd will provide the following parameters</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> containerAppExists </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">bool</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token function" style="color:rgb(250, 208, 0)">readEnvironmentVariable</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'SERVICE_WEB_RESOURCE_EXISTS'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'false'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The <code>containerAppExists</code> parameter is determined by the <code>SERVICE_WEB_RESOURCE_EXISTS</code> environment variable to provide this value. What's happening here is that we're picking up on a convention that <code>azd</code> uses to provide confirmation that a service already exists. <code>SERVICE_[SERVICENAME]_RESOURCE_EXISTS</code> is the pattern that <code>azd</code> uses to provide this information; where <code>[SERVICENAME]</code> is the name of the service as defined in the <code>azure.yml</code> file. In our case, it's <code>web</code> (or rather <code>WEB</code>).</p>
<p>If you're curious about how this actually works <a href="https://github.com/Azure/azure-dev/blob/837d4e8592c53375c7d9aa6df8b134c23cdeb487/cli/azd/pkg/project/service_target_containerapp.go#L174-L190" target="_blank" rel="noopener noreferrer">you can read the source code here</a> in the <code>azd</code> project. Here's the relevant code snippet:</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">func</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">at </span><span class="token operator" style="color:rgb(255, 157, 0)">*</span><span class="token plain">containerAppTarget</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">addPreProvisionChecks</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">ctx context</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Context</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> serviceConfig </span><span class="token operator" style="color:rgb(255, 157, 0)">*</span><span class="token plain">ServiceConfig</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">error</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// Attempt to retrieve the target resource for the current service</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// This allows the resource deployment to detect whether or not to pull existing container image during</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// provision operation to avoid resetting the container app back to a default image</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> serviceConfig</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Project</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">AddHandler</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"preprovision"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">func</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">ctx context</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Context</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> args ProjectLifecycleEventArgs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">error</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    exists </span><span class="token operator" style="color:rgb(255, 157, 0)">:=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// Check if the target resource already exists</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    targetResource</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> err </span><span class="token operator" style="color:rgb(255, 157, 0)">:=</span><span class="token plain"> at</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">resourceManager</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetTargetResource</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> at</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetSubscriptionId</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> serviceConfig</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> targetResource </span><span class="token operator" style="color:rgb(255, 157, 0)">!=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">nil</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">&amp;&amp;</span><span class="token plain"> err </span><span class="token operator" style="color:rgb(255, 157, 0)">==</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      exists </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    at</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">SetServiceProperty</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">serviceConfig</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"RESOURCE_EXISTS"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> strconv</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">FormatBool</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">exists</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> at</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">envManager</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Save</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> at</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Now that we have our <code>main.bicepparam</code> file, we're ready to migrate to our pipeline to use <code>azd</code>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="azure-devops-pipeline-modifications">Azure DevOps pipeline modifications<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops#azure-devops-pipeline-modifications" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>There's no two ways about it; our Azure DevOps pipeline modifications are pretty extensive. Where we were previously using the <code>AzureResourceManagerTemplateDeployment@3</code> task to deploy our Bicep files, we're now going to use the <code>azd</code> command to deploy our infrastructure and our container app.</p>
<p>Here's a cut down version of our pipeline replacing the single <code>AzureResourceManagerTemplateDeployment@3</code> task with a series of tasks that use the <code>azd</code> command:</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> setup</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">azd@0</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Install azd</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># If you can't use above task in your organization, you can remove it and uncomment below task to install azd</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># - task: Bash@3</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">#   displayName: Install azd</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">#   inputs:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">#     targetType: "inline"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">#     script: |</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">#       curl -fsSL https://aka.ms/install-azd.sh | bash</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">pwsh</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">|</span><span class="token scalar string" style="color:rgb(165, 255, 144)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">    azd config set auth.useAzCliAuth "true"</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">    azd config set alpha.resourceGroupDeployments on</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Configure `azd` config options.</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> AzureCLI@2</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Login to ACR</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">azureSubscription</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(registryServiceConnection)</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">scriptType</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> bash</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">scriptLocation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> inlineScript</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">inlineScript</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">|</span><span class="token scalar string" style="color:rgb(165, 255, 144)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">      az acr login -n myregistry</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> AzureCLI@2</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Provision Infra</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">azureSubscription</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(serviceConnection)</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">scriptType</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> bash</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">scriptLocation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> inlineScript</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">inlineScript</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">|</span><span class="token scalar string" style="color:rgb(165, 255, 144)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">      azd provision --no-prompt</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># See https://learn.microsoft.com/en-gb/azure/developer/azure-developer-cli/configure-devops-pipeline?tabs=azdo</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">AZURE_LOCATION</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(location)</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">AZURE_SUBSCRIPTION_ID</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(subscriptionId)</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">AZURE_ENV_NAME</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">parameters.env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># https://learn.microsoft.com/en-us/azure/developer/azure-developer-cli/manage-environment-variables#user-provided-environment-variables</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">AZURE_RESOURCE_GROUP</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(resourceGroupName)</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">AZURE_PRINCIPAL_ID</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(serviceConnectionPrincipalId)</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># Define the additional variables or secrets that are required only for provision</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">TAGS_BRANCH</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(Build.SourceBranch)</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">TAGS_REPO</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(repo)</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">CONTAINER_APP_NAME</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(myContainerAppName)</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">bash</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">|</span><span class="token scalar string" style="color:rgb(165, 255, 144)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">    sed -i "s/\${WEB_VERSION_TAG}/$(containerImageTag)/g" azure.yaml</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'Update WEB_VERSION_TAG in azure.yaml'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> AzureCLI@2</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Deploy Application</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">retryCountOnTaskFailure</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">azureSubscription</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(serviceConnection)</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">scriptType</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> bash</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">scriptLocation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> inlineScript</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">inlineScript</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">|</span><span class="token scalar string" style="color:rgb(165, 255, 144)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">      azd deploy --no-prompt</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># See https://learn.microsoft.com/en-gb/azure/developer/azure-developer-cli/configure-devops-pipeline?tabs=azdo</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">AZURE_LOCATION</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(location)</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">AZURE_SUBSCRIPTION_ID</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(subscriptionId)</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">AZURE_ENV_NAME</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">parameters.env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># https://learn.microsoft.com/en-us/azure/developer/azure-developer-cli/manage-environment-variables#user-provided-environment-variables</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">AZURE_RESOURCE_GROUP</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(resourceGroupName)</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># Define the additional variables or secrets that are required only for deploy</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">CONTAINER_APP_NAME</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(myContainerAppName) </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># this is used to substitute the CONTAINER_APP_NAME value in the azure.yaml file</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># ...</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>What's happening here? We'll take it step by step:</p>
<ul>
<li>We're installing <code>azd</code> using the <code>setup-azd@0</code> task.</li>
<li>We're configuring <code>azd</code> to use the Azure CLI for authentication and to enable resource group scoped deployments.</li>
<li>We're logging into our Azure Container Registry. (If you're not building your image independently of <code>azd</code>, then you may not need this step.)</li>
<li>We're provisioning our infrastructure using <code>azd provision --no-prompt</code>. Note that we're providing a number of environment variables to <code>azd</code> which will be detected in our <code>main.bicepparam</code> file.</li>
<li>We're updating the <code>azure.yml</code> file with the <code>WEB_VERSION_TAG</code> that we need to provide. This is us working around the lack of support for environment variables in the <code>azure.yml</code> file for the <code>image</code> parameter.</li>
<li>We're deploying our application using <code>azd deploy --no-prompt</code>. As we do that, we pass the <code>CONTAINER_APP_NAME</code> environment variable which will substitute into the <code>azure.yaml</code> file</li>
</ul>
<p>You'll note that as we use <code>azd</code>, we make heavy use of environment variables. These environment variables will be picked up in the <code>main.bicepparam</code> file and passed through to the <code>main.bicep</code>. And of course there's the runtime <code>SERVICE_[SERVICENAME]_RESOURCE_EXISTS</code> parameter which <code>azd</code> will provide. Much of what you see here is inspired by <a href="https://learn.microsoft.com/en-gb/azure/developer/azure-developer-cli/configure-devops-pipeline?tabs=azdo" target="_blank" rel="noopener noreferrer">this documentation</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-does-it-look-like-when-it-works">What does it look like when it works?<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops#what-does-it-look-like-when-it-works" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>That is the question! Like this:</p>
<p><img decoding="async" loading="lazy" alt="screenshot of azd detecting no changes and so not provisioning" src="https://johnnyreilly.com/assets/images/screenshot-of-azd-detecting-no-changes-4a38419f8f4697892fd6f67d0b151543.avif" width="1434" height="932" class="img_ev3q"></p>
<p>The magic sentence in the above screenshot is: <code>SUCCESS: There are no changes to provision for your application.</code> This is what we're looking for. This is what makes our deployments faster.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops#conclusion" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>So we've done it, we've speeded up our subsequent deployments by using <code>azd</code> in our Azure DevOps pipeline to avoid unnecessary infrastructure provisioning when there are no changes. This is a significant time saver. However, as we've also seen, this is very easy to get wrong and quite hard to get right! Hopefully this will help you implement <code>azd</code> in your Azure DevOps pipelines.</p>
<p>I couldn't have written this without <a href="https://twitter.com/MarcelMichau" target="_blank" rel="noopener noreferrer">Marcel Michau</a> who did much of the heavy lifting on this project. I am the Boswell to his Johnson. Or something like that.</p>]]></content>
        <author>
            <name>John Reilly</name>
            <uri>https://johnnyreilly.com/about</uri>
        </author>
        <category label="Azure" term="Azure"/>
        <category label="Bicep" term="Bicep"/>
        <category label="Azure Container Apps" term="Azure Container Apps"/>
        <category label="Azure DevOps" term="Azure DevOps"/>
        <category label="Azure Pipelines" term="Azure Pipelines"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Dual Publishing ESM and CJS Modules with tsup and Are the Types Wrong?]]></title>
        <id>https://johnnyreilly.com/dual-publishing-esm-cjs-modules-with-tsup-and-are-the-types-wrong</id>
        <link href="https://johnnyreilly.com/dual-publishing-esm-cjs-modules-with-tsup-and-are-the-types-wrong"/>
        <updated>2024-06-26T08:59:34.000Z</updated>
        <summary type="html"><![CDATA[Learn how to publish a package that supports both ECMAScript modules (ESM) and CommonJS modules (CJS) using tsup and Are the Types Wrong?]]></summary>
        <content type="html"><![CDATA[<p>If you need to publish a package that supports both ECMAScript modules (ESM) and CommonJS modules (CJS), you can use <a href="https://github.com/egoist/tsup" target="_blank" rel="noopener noreferrer"><code>tsup</code></a> to do so. This post will show you how to do that and how to ensure that the types are correct using the tool <a href="https://github.com/arethetypeswrong/arethetypeswrong.github.io" target="_blank" rel="noopener noreferrer"><code>Are the Types Wrong?</code></a>.</p>
<p><img decoding="async" loading="eager" alt="title image reading &amp;quot;Dual Publishing ESM and CJS Modules with tsup and Are the Types Wrong?&amp;quot; with the Are the Types Wrong logo" src="https://johnnyreilly.com/assets/images/title-image-dc75470e8b6f2a9987c70908fbd3c61a.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="package-support-for-esm-and-cjs-with-tsup">Package support for ESM and CJS with tsup<a href="https://johnnyreilly.com/dual-publishing-esm-cjs-modules-with-tsup-and-are-the-types-wrong#package-support-for-esm-and-cjs-with-tsup" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>I recently needed to build a package that supported both ESM and CJS modules. After attempting to implement this myself, and frankly aging ten years, I decided to see if there was a tool out there that could help me. Happily, there are a number of tools that can help with this and I found that the excellent <code>tsup</code> was the easiest to use.</p>
<p><code>tsup</code> is a zero-config TypeScript bundler with a focus on speed and simplicity. It's a great tool for building and bundling your TypeScript code into ESM and CJS modules and is powered by <a href="https://github.com/evanw/esbuild" target="_blank" rel="noopener noreferrer"><code>esbuild</code></a>.</p>
<p>To get started, you can install <code>tsup</code> to your project:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">install</span><span class="token plain"> tsup --save-dev</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Then you can add a script to your <code>package.json</code> to build your package:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"scripts"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"build"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"tsup src/index.ts --format cjs,esm --dts --clean --sourcemap"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>In this example, we're building the <code>src/index.ts</code> file into both CJS and ESM modules, generating type definitions, cleaning up the output directory prior to build, and generating sourcemaps. You can, if you like, use a <code>tsup.config.ts</code> file to configure <code>tsup</code> but I found the above to be sufficient for my needs.</p>
<p>When you run <code>npm run build</code>, you'll see that <code>tsup</code> has created a <code>dist</code> directory with the following structure:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">dist/</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  index.cjs</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  index.cjs.map</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  index.d.cts</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  index.js</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  index.js.map</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  index.d.ts</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The <code>index.js</code> and <code>index.js.map</code> files are the ESM modules and the <code>index.cjs</code> and <code>index.cjs.map</code> files are the CJS modules. The <code>index.d.ts</code> and <code>index.d.cts</code> files contain the type definitions.</p>
<p>This is great news! You now have a package that supports both ESM and CJS modules. But now we need to get our <code>package.json</code> file set up correctly.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="linting-your-packagejson-file-with-are-the-types-wrong">Linting your package.json file with Are the Types Wrong?<a href="https://johnnyreilly.com/dual-publishing-esm-cjs-modules-with-tsup-and-are-the-types-wrong#linting-your-packagejson-file-with-are-the-types-wrong" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>When you're publishing a package, it's important to ensure that your <code>package.json</code> file is set up correctly. It is the manifest that other packages consume. If it is not set up correctly, things won't work at runtime and you'll have an unpleasant engineering experience in your IDE as well. Getting it right includes ensuring that the <code>exports</code> field is set up correctly to support both ESM and CJS modules. This can be a bit tricky to get right, so it's a good idea to use a tool to help you.</p>
<p>I made the following additions to my <code>package.json</code> file to support both ESM and CJS modules:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"//"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"This is the correct way to set up a package with a `src/index.ts` root file that supports both ESM and CJS modules."</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"type"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"module"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"main"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"./dist/index.cjs"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"module"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"./dist/index.js"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"types"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"./dist/index.d.ts"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"exports"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"import"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"types"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"./dist/index.d.ts"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"import"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"./dist/index.js"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"require"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"types"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"./dist/index.d.cts"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"require"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"./dist/index.cjs"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Let's break this down:</p>
<ul>
<li>The <code>type</code> field is set to <code>module</code> to indicate that the package supports ESM modules.</li>
<li>The <code>main</code> field is set to <code>./dist/index.cjs</code> to indicate the entry point for CJS modules.</li>
<li>The <code>module</code> field is set to <code>./dist/index.js</code> to indicate the entry point for ESM modules.</li>
<li>The <code>types</code> field is set to <code>./dist/index.d.ts</code> to indicate the type definitions file for ESM modules.</li>
</ul>
<p>We then set up the <code>exports</code> field to support both ESM and CJS modules. The <code>import</code> field is set up to support ESM modules and the <code>require</code> field is set up to support CJS modules. In each, the <code>types</code> field is set to the relevant type definitions file - significantly, the <code>types</code> comes first.</p>
<p>Here I've jumped straight to the good part here. I've given you the correct way to set up the <code>exports</code> field for a package that supports both ESM and CJS modules. But how do you know if your <code>package.json</code> file is set up correctly?</p>
<p>Well, in my case I used the tool <a href="https://arethetypeswrong.github.io/" target="_blank" rel="noopener noreferrer"><code>Are the Types Wrong</code></a> to lint my <code>package.json</code> file. <code>Are the Types Wrong</code> is a tool that checks your <code>package.json</code> file to ensure that it's set up correctly for publishing a package that supports both ESM and CJS modules. You're possibly aware of the <a href="https://arethetypeswrong.github.io/" target="_blank" rel="noopener noreferrer">website</a> but did you know that there's a CLI tool that you can use to lint your <code>package.json</code> file?</p>
<p>There is.</p>
<p>If you would like to read the full documentation on the CLI tool, you can find it <a href="https://github.com/arethetypeswrong/arethetypeswrong.github.io/blob/main/packages/cli/README.md" target="_blank" rel="noopener noreferrer">here</a>. However, if you're like me and in a hurry, you can just use it like this:</p>
<ul>
<li>cd into your project directory</li>
<li>run <code>npx @arethetypeswrong/cli</code></li>
<li>when prompted <code>Run npm pack? (Pass -P/--pack to skip) (Y/n)</code> hit enter</li>
<li>et voila, your <code>package.json</code> file will be linted for type issues</li>
</ul>
<p>To see what this looks like, here's the output from running <code>npx @arethetypeswrong/cli</code> in the project directory of a package with the <code>package.json</code> file <em>not</em> set up correctly:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">api v1.0.0</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">Build tools:</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">- typescript@^5.2.2</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚ùå Import resolved to JavaScript files, but no </span><span class="token builtin class-name" style="color:rgb(250, 208, 0)">type</span><span class="token plain"> declarations were found. https://github.com/arethetypeswrong/arethetypeswrong.github.io/blob/main/docs/problems/UntypedResolution.md</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚îÇ                   ‚îÇ </span><span class="token string" style="color:rgb(165, 255, 144)">"api"</span><span class="token plain">       ‚îÇ</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚îÇ node10            ‚îÇ ‚ùå No types ‚îÇ</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚îÇ node16 </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">from CJS</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> ‚îÇ ‚ùå No types ‚îÇ</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚îÇ node16 </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">from ESM</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> ‚îÇ ‚ùå No types ‚îÇ</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚îÇ bundler           ‚îÇ ‚ùå No types ‚îÇ</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>By contrast, here's how it looks when you use the correct <code>package.json</code> file:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">shared v1.0.0</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">Build tools:</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">- typescript@^5.4.5</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">- tsup@^8.1.0</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"> No problems found üåü</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚îÇ                   ‚îÇ </span><span class="token string" style="color:rgb(165, 255, 144)">"api"</span><span class="token plain">    ‚îÇ</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚îÇ node10            ‚îÇ üü¢       ‚îÇ</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚îÇ node16 </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">from CJS</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> ‚îÇ üü¢ </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">CJS</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> ‚îÇ</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚îÇ node16 </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">from ESM</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> ‚îÇ üü¢ </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">ESM</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> ‚îÇ</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚îÇ bundler           ‚îÇ üü¢       ‚îÇ</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Isn't that great? You can now be confident that your <code>package.json</code> file is set up correctly for publishing a package that supports both ESM and CJS modules, both from a runtime code and a types perspective. So the full <code>package.json</code> might look something like this:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"name"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"our-package"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"version"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"1.0.0"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"description"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">""</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"scripts"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"build"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"tsup src/index.ts --format cjs,esm --dts --clean --sourcemap"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"author"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">""</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"license"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"ISC"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"dependencies"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"devDependencies"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"tsup"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"^8.1.0"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"typescript"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"^5.4.5"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"type"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"module"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"main"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"./dist/index.cjs"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"module"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"./dist/index.js"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"types"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"./dist/index.d.ts"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"exports"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"import"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"types"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"./dist/index.d.ts"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"import"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"./dist/index.js"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"require"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"types"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"./dist/index.d.cts"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"require"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"./dist/index.cjs"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://johnnyreilly.com/dual-publishing-esm-cjs-modules-with-tsup-and-are-the-types-wrong#conclusion" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>In this post, we've seen how to publish a package that supports both ESM and CJS modules using <code>tsup</code>. We've also seen how to ensure that the types are correct using the tool <code>Are the Types Wrong</code>.</p>
<p>It's probably worth saying that <code>Are the Types Wrong</code> doesn't check everything, and that <code>tsup</code>s method of dual compilation makes some unchecked assumptions too. Using these tools isn't a silver bullet, given how complicated the ESM/CJS compatibility story is, but they do their best to help.</p>
<p>Thanks to <a href="https://github.com/andrewbranch" target="_blank" rel="noopener noreferrer">Andrew Branch</a> for putting together <code>Are the Types Wrong</code> and to the folk that work on <code>tsup</code> for making it easy to build packages that support both ESM and CJS modules. Thanks also to Andrew for his help in reviewing this post.</p>
<p>Remember, friends don't let friends publish packages with incorrect types!</p>]]></content>
        <author>
            <name>John Reilly</name>
            <uri>https://johnnyreilly.com/about</uri>
        </author>
        <category label="TypeScript" term="TypeScript"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Web Workers, Comlink, Vite and TanStack Query]]></title>
        <id>https://johnnyreilly.com/web-workers-comlink-vite-tanstack-query</id>
        <link href="https://johnnyreilly.com/web-workers-comlink-vite-tanstack-query"/>
        <updated>2024-06-23T13:50:30.000Z</updated>
        <summary type="html"><![CDATA[Web Workers are a great way to offload work from the main thread. Comlink is a delightful way to communicate with Web Workers. TanStack Query is an awesome way to bring them together.]]></summary>
        <content type="html"><![CDATA[<p>I've written previously about combining <a href="https://johnnyreilly.com/web-workers-comlink-typescript-and-react">Web Workers and Comlink</a>. I recently found myself needing to use Web Workers again. As I picked them up this time I found myself making some different choices, now I was working in a codebase that used Vite to build. I ended up using <a href="https://github.com/tanstack/query" target="_blank" rel="noopener noreferrer">TanStack Query</a> in combination with my <a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers" target="_blank" rel="noopener noreferrer">Web Workers</a> and <a href="https://github.com/GoogleChromeLabs/comlink" target="_blank" rel="noopener noreferrer">Comlink</a>. It was a really good fit and this post will show you how to use Web Workers with Comlink and TanStack Query.</p>
<p><img decoding="async" loading="eager" alt="title image reading &amp;quot;Web Workers, Comlink, Vite and TanStack Query&amp;quot; with the Static Web Apps CLI and Vite logos" src="https://johnnyreilly.com/assets/images/title-image-734455bc3d473a791221ef8db78f23ac.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="a-use-case-for-web-workers">A use case for Web Workers<a href="https://johnnyreilly.com/web-workers-comlink-vite-tanstack-query#a-use-case-for-web-workers" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Web Workers are a great way to offload work from the main thread. This can be particularly useful if you have a long running task that you don't want to block the UI thread. In my case, I was working on a feature that required a lot of computation. I wanted to keep the UI responsive whilst the numbers got crunched.</p>
<p>Imagine the following function in our <code>calculations.ts</code> file:</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">expensiveCalculation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  data</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> BigLumpOfData</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  from</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> Date</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  to</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> Date</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">number</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// SUPER EXPENSIVE COMPUTATION CODE HERE...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> importantNumber</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This function is doing some very expensive computation. We don't want to block the main thread with it. We want to use a Web Worker to offload this work. But the naked Web Worker API is a bit of a pain to work with. Instead then, we can use Comlink to make it easier.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="vite-comlink-setup-with-vite-plugin-comlink">Vite Comlink setup with <code>vite-plugin-comlink</code><a href="https://johnnyreilly.com/web-workers-comlink-vite-tanstack-query#vite-comlink-setup-with-vite-plugin-comlink" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>As I've mentioned, we're working with Vite in this codebase. To get Comlink working with Vite, we can use the dedicated plugin named <a href="https://github.com/mathe42/vite-plugin-comlink" target="_blank" rel="noopener noreferrer"><code>vite-plugin-comlink</code></a>. It is a wrapper around Comlink that simplifies using it with Vite.</p>
<p>To get started, we need to install the plugin and Comlink:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> i --save-dev vite-plugin-comlink</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> i </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">--save</span><span class="token plain"> comlink</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We need the plugin at build time and Comlink at runtime. We can then add the plugin to our Vite config:</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> react </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@vitejs/plugin-react'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> defineConfig </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'vite'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> comlink </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'vite-plugin-comlink'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// https://vitejs.dev/config/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">default</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">defineConfig</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  plugins</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token function" style="color:rgb(250, 208, 0)">comlink</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">react</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  worker</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token function-variable function" style="color:rgb(250, 208, 0)">plugins</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token function" style="color:rgb(250, 208, 0)">comlink</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Note that we're adding the <code>comlink</code> plugin to both the main Vite config and the worker config. This is because we want to use Comlink in both places. The order of the plugins is important. We want to make sure that <code>comlink</code> is added right at the start.</p>
<p>This is a TypeScript project, so we update our <code>vite-env.d.ts</code> file to include the Comlink types:</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// &lt;reference types="vite/client" /&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// &lt;reference types="vite-plugin-comlink/client" /&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="migrating-our-expensive-calculations-to-comlink">Migrating our expensive calculations to Comlink<a href="https://johnnyreilly.com/web-workers-comlink-vite-tanstack-query#migrating-our-expensive-calculations-to-comlink" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Now we have Comlink set up, we can move our expensive calculations to a Web Worker. This is very easily achieved; we just need to create a variable that points to our Web Worker file:</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> calculationsWorker </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">ComlinkWorker</span><span class="token class-name operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token class-name" style="color:rgb(250, 208, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token class-name" style="color:rgb(250, 208, 0)">  </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">typeof</span><span class="token class-name" style="color:rgb(250, 208, 0)"> </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">import</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name string" style="color:rgb(165, 255, 144)">'./calculations.js'</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token class-name" style="color:rgb(250, 208, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token class-name" style="color:rgb(250, 208, 0)"></span><span class="token class-name operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name constant" style="color:rgb(250, 208, 0)">URL</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'./calculations.js'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">meta</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">url</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  name</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'calculationsComlink'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  type</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'module'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>There's not much code above, but it's doing a lot. We're creating a new Web Worker with Comlink using the <code>ComlinkWorker</code>. This is an affordance provided by <code>vite-plugin-comlink</code> and it creates a Web Worker with Comlink. We're pointing it at our <code>calculations.js</code> file (<code>.js</code> as this is an ESM import representing the <code>calculations.ts</code> file). We're also giving the Web Worker a name, <code>calculationsComlink</code> - this will be handy when debugging. Finally, we're telling the Web Worker that it's a module. So we can use ESM imports in our Web Worker. Actually, we're not do that right now, but we could.</p>
<p>Note also that the types will be inferred from the <code>calculations.js</code> file thanks to the <code>typeof import('./calculations.js')</code>. This is a really nice feature of TypeScript.</p>
<p>The API of the <code>calculationsWorker</code> is the same as the <code>calculations.ts</code> file, with one subtle difference. All sync functions will move to being <code>Promise</code> based. So the API of the <code>calculationsWorker</code> is</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token function-variable function" style="color:rgb(250, 208, 0)">expensiveCalculation</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">data</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> BigLumpOfData</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> from</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> Date</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> to</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> Date</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token builtin" style="color:rgb(250, 208, 0)">Promise</span><span class="token operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token builtin" style="color:rgb(250, 208, 0)">number</span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Which is pretty much the same as the original function in <code>calculations.ts</code>:</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token function-variable function" style="color:rgb(250, 208, 0)">expensiveCalculation</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">data</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> BigLumpOfData</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> from</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> Date</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> to</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> Date</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">number</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The only difference is that the return type is now a <code>Promise&lt;number&gt;</code> rather than a <code>number</code>. If your function was <code>async</code> / <code>Promise</code>-based originally, then the API remains identical.</p>
<p>Incidentally; this is terrific. The journey from a standard codebase to a Web Worker enabled codebase is really smooth.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="using-tanstack-query-to-interact-with-the-comlink-web-worker">Using TanStack Query to interact with the Comlink Web Worker<a href="https://johnnyreilly.com/web-workers-comlink-vite-tanstack-query#using-tanstack-query-to-interact-with-the-comlink-web-worker" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>The final piece of the puzzle is to use TanStack Query (AKA React Query) to interact with our Web Worker. TanStack Query is a fantastic library for managing data in applications. It's a great fit for working with our Web Worker because it's designed to work with async data. We can use TanStack Query to manage interactions with our Web Worker.</p>
<p>To install it we run:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> i @tanstack/react-query</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We can then use it in our component like so:</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> expensiveCalculationResult </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">useQuery</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  queryKey</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token string" style="color:rgb(165, 255, 144)">'expensiveCalculation'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> data</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> from</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> to</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token function-variable function" style="color:rgb(250, 208, 0)">queryFn</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    calculationsWorker</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">expensiveCalculation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">data</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">Date</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">from</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">Date</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">to</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  staleTime</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">Infinity</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This is a pretty standard use of TanStack Query. We're using the <code>useQuery</code> hook to fetch data. We're passing in a <code>queryKey</code> that represents the data we're fetching. We're passing in a <code>queryFn</code> that fetches the data. In this case, it's calling our Web Worker. We're also setting <code>staleTime</code> to <code>Infinity</code> so that the data never goes stale. This is an optimisation, because we're not going to be refetching the data unless the dependencies change. (If you'd like to understand more about <code>staleTime</code> read <a href="https://tkdodo.eu/blog/practical-react-query#the-defaults-explained" target="_blank" rel="noopener noreferrer">TkDodo's excellent post</a>).</p>
<p>This is a really nice way to interact with our Web Worker. We're using TanStack Query to manage the data fetching and Comlink to interact with the Web Worker. It's a really nice fit.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="putting-it-all-together">Putting it all together<a href="https://johnnyreilly.com/web-workers-comlink-vite-tanstack-query#putting-it-all-together" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Here's the full component that uses the Web Worker, Comlink and TanStack Query:</p>
<div class="language-tsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-tsx codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token imports"> useQuery </span><span class="token imports punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@tanstack/react-query'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> calculationsWorker </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">ComlinkWorker</span><span class="token class-name operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token class-name" style="color:rgb(250, 208, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token class-name" style="color:rgb(250, 208, 0)">  </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">typeof</span><span class="token class-name" style="color:rgb(250, 208, 0)"> </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">import</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name string" style="color:rgb(165, 255, 144)">'./calculations.js'</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token class-name" style="color:rgb(250, 208, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token class-name" style="color:rgb(250, 208, 0)"></span><span class="token class-name operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name constant" style="color:rgb(250, 208, 0)">URL</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'./calculations.js'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">meta</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">url</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  name</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'calculationsComlink'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  type</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'module'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">WorkerDemo</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  data</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  from</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  to</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  data</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">BigLumpOfData</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  from</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  to</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> expensiveCalculationResult </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">useQuery</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    queryKey</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token string" style="color:rgb(165, 255, 144)">'expensiveCalculation'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> data</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> from</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> to</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token function-variable function" style="color:rgb(250, 208, 0)">queryFn</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      calculationsWorker</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">expensiveCalculation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        data</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">Date</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">from</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">Date</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">to</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    staleTime</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">Infinity</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag" style="color:rgb(255, 157, 0)">div</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag" style="color:rgb(255, 157, 0)">h1</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text">Web Workers, Comlink and Tanstack Query in action!</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag" style="color:rgb(255, 157, 0)">h1</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">expensiveCalculationResult</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">data</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">?</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag" style="color:rgb(255, 157, 0)">p</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text">Calculation result: </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">expensiveCalculationResult</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">data</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag" style="color:rgb(255, 157, 0)">p</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> expensiveCalculationResult</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">isPending</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">?</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag" style="color:rgb(255, 157, 0)">p</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text">Calculating...</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag" style="color:rgb(255, 157, 0)">p</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> expensiveCalculationResult</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">error</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">?</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag" style="color:rgb(255, 157, 0)">p</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text">Error: </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">expensiveCalculationResult</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">error</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag" style="color:rgb(255, 157, 0)">p</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag" style="color:rgb(255, 157, 0)">p</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text">...</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag" style="color:rgb(255, 157, 0)">p</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag" style="color:rgb(255, 157, 0)">div</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This is a really nice way to use Web Workers with TanStack Query. We're using Comlink to interact with the Web Worker and TanStack Query to manage the data fetching. It's a really nice fit. I hope this helps you to use Web Workers in your Vite projects. Enjoy!</p>]]></content>
        <author>
            <name>John Reilly</name>
            <uri>https://johnnyreilly.com/about</uri>
        </author>
        <category label="TypeScript" term="TypeScript"/>
        <category label="React" term="React"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Using Kernel Memory to Chunk Documents into Azure AI Search]]></title>
        <id>https://johnnyreilly.com/using-kernel-memory-to-chunk-documents-into-azure-ai-search</id>
        <link href="https://johnnyreilly.com/using-kernel-memory-to-chunk-documents-into-azure-ai-search"/>
        <updated>2024-04-21T08:47:49.000Z</updated>
        <summary type="html"><![CDATA[To build RAG (Retrieval Augmented Generation) experiences, where LLMs can query documents, you need a strategy to chunk those documents. Kernel Memory supports this.]]></summary>
        <content type="html"><![CDATA[<p>I've recently been working on building retrieval augmented generation (RAG) experiences into applications; building systems where large language models (LLMs) can query documents. To achieve this, we first need a strategy to chunk those documents and make them LLM-friendly. <a href="https://github.com/microsoft/kernel-memory" target="_blank" rel="noopener noreferrer">Kernel Memory</a>, a sister project of <a href="https://github.com/microsoft/semantic-kernel" target="_blank" rel="noopener noreferrer">Semantic Kernel</a> supports this.</p>
<p><img decoding="async" loading="eager" alt="title image reading &amp;quot;Using Kernel Memory to Chunk Documents into Azure AI Search&amp;quot; with the Azure Open AI / Azure AI Search logos" src="https://johnnyreilly.com/assets/images/title-image-337c58e5e55f92f59a1d1db49366ec04.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<p>If you haven't heard of Kernel Memory before, it's a library that, amongst other things, provides a way to chunk documents into smaller pieces. To quote the <a href="https://github.com/microsoft/kernel-memory?tab=readme-ov-file#kernel-memory-km-and-semantic-memory-sm" target="_blank" rel="noopener noreferrer">Kernel Memory GitHub repository</a>:</p>
<blockquote>
<p>Kernel Memory (KM) is a service built on the feedback received and lessons learned from developing Semantic Kernel (SK) and Semantic Memory (SM). It provides several features that would otherwise have to be developed manually, such as storing files, extracting text from files, providing a framework to secure users' data, etc. The KM codebase is entirely in .NET, which eliminates the need to write and maintain features in multiple languages. As a service, KM can be used from any language, tool, or platform, e.g. browser extensions and ChatGPT assistants.</p>
</blockquote>
<p>In this post, I'll show you how to use Kernel Memory to chunk documents in the background of an ASP.NET application.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="kernel-memory-serverless-vs-service">Kernel Memory: Serverless vs Service<a href="https://johnnyreilly.com/using-kernel-memory-to-chunk-documents-into-azure-ai-search#kernel-memory-serverless-vs-service" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>There's two ways that we can run Kernel Memory: "Serverless" and "Service".</p>
<p>Running the full service is more powerful, but effectively requires running a separate application. We would then need to integrate our main app with that. Given that I'm building with ASP.NET, I'll be using the serverless approach, which allows us to run Kernel Memory within the context of a single application (which will contain our main app code as well). We can then manage our integrations with Kernel Memory as simple method calls.</p>
<p>This is simpler and more cost-effective, but it does have some limitations. The service approach offers more features; including persistent retry logic. The documentation states that if we want to scale then we'll likely want to consider the service approach. But my own experience has been that serverless works very well for small to medium-sized applications.</p>
<p>Perhaps surprisingly, using serverless we can still have the experience of running Kernel Memory as a <strong>non-blocking</strong> separate service within the context of our ASP.NET application. This is achieved by running Kernel Memory as a <a href="https://learn.microsoft.com/en-us/aspnet/core/fundamentals/host/hosted-services?view=aspnetcore-8.0" target="_blank" rel="noopener noreferrer">hosted service</a> - this is the standard ASP.NET mechanism for running background tasks. That's what we're going to use.</p>
<p>There's four parts to bring this to life:</p>
<ol>
<li>Our Kernel Memory serverless instance - this is where the integration between Kernel Memory, Azure Open AI, Azure AI Search and the actual chunking takes place</li>
<li>A queue which we'll use to provide documents for chunking with Kernel Memory</li>
<li>Our hosted service which will bring together the queue and the Kernel Memory integration to manage our background document processing</li>
<li>An endpoint in our ASP.NET application to add documents to the queue</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="1-setting-up-kernel-memory-serverless">1. Setting up Kernel Memory serverless<a href="https://johnnyreilly.com/using-kernel-memory-to-chunk-documents-into-azure-ai-search#1-setting-up-kernel-memory-serverless" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>There's a number of dependencies that we need to add to our project to get Kernel Memory working. These are:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">dotnet </span><span class="token function" style="color:rgb(250, 208, 0)">add</span><span class="token plain"> Azure.AI.OpenAI</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">dotnet </span><span class="token function" style="color:rgb(250, 208, 0)">add</span><span class="token plain"> Azure.AI.FormRecognizer </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># if we want to use Document Intelligence - not mandatory</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">dotnet </span><span class="token function" style="color:rgb(250, 208, 0)">add</span><span class="token plain"> Azure.Identity</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">dotnet </span><span class="token function" style="color:rgb(250, 208, 0)">add</span><span class="token plain"> Azure.Storage.Blobs</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">dotnet </span><span class="token function" style="color:rgb(250, 208, 0)">add</span><span class="token plain"> Microsoft.KernelMemory.Core</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">dotnet </span><span class="token function" style="color:rgb(250, 208, 0)">add</span><span class="token plain"> Microsoft.SemanticKernel</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>With this in place we'll start to integrate with Kernel Memory. We will first construct ourselves an <code>IKernelMemory</code> like so:</p>
<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">_memory </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">KernelMemoryBuilder</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">WithAzureOpenAITextEmbeddingGeneration</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">AzureOpenAIConfig</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        APIType </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> AzureOpenAIConfig</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">APITypes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">EmbeddingGeneration</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        Auth </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> AzureOpenAIConfig</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">AuthTypes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">AzureIdentity</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        Endpoint </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"https://cog-ourapp-dev.openai.azure.com/"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        Deployment </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"OpenAi-text-embedding-ada2"</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// text-embedding-ada-002</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">WithAzureOpenAITextGeneration</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">AzureOpenAIConfig</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        APIType </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> AzureOpenAIConfig</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">APITypes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">ChatCompletion</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        Auth </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> AzureOpenAIConfig</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">AuthTypes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">AzureIdentity</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        Endpoint </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"https://cog-ourapp-dev.openai.azure.com/"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        Deployment </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"OpenAi-gpt-35-turbo-16k"</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// gpt-3.5-turbo-16k</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">WithAzureAISearchMemoryDb</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">AzureAISearchConfig</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        Auth </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> AzureAISearchConfig</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">AuthTypes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">AzureIdentity</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        Endpoint </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"https://srch-ourapp-dev.search.windows.net"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// Only necessary if you want to add Document Intelligence</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">WithAzureAIDocIntel</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">AzureAIDocIntelConfig</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        Auth </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> AzureAIDocIntelConfig</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">AuthTypes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">AzureIdentity</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        Endpoint </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"https://cog-ourapp-dev.cognitiveservices.azure.com/"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Build</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>What we're doing here, is creating an <code>IKernelMemory</code> instance and making it aware of all our deployed Azure resources. Going through how to deploy those is out of the scope of this post, but it's probably worth highlighting that we're using <code>AzureIdentity</code> for auth as it's particularly secure, if you would like to use other options, you certainly can.</p>
<p>It's probably worth highlighting that we're using the <code>text-embedding-ada-002</code> model for text embedding and the <code>gpt-3.5-turbo-16k</code> model for text generation. These are the models that I've found to be most effective for my use cases. Of these, the text embedding model is the most important - it's the one that will be used to chunk documents.</p>
<p>You'll also note we're using Azure AI Document Intelligence; this is optional and just tackles a few more document chunking scenarios. It's not mandatory.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="chunking-with-kernel-memory-serverless">Chunking with Kernel Memory serverless<a href="https://johnnyreilly.com/using-kernel-memory-to-chunk-documents-into-azure-ai-search#chunking-with-kernel-memory-serverless" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>With our <code>IKernelMemory</code> ready to go, we now need a way to chunk documents. Deep down, this is achieved by acquiring the document we want to chunk from blob storage and passing it to <code>_memory.ImportDocumentAsync</code> with the name of the index we want to process into. You can see examples of this usage in the <a href="https://microsoft.github.io/kernel-memory/serverless" target="_blank" rel="noopener noreferrer">Kernel Memory docs</a>. You can also see how it works in the <a href="https://github.com/microsoft/kernel-memory/blob/9112757f4fe25edd7bfbf10222621f11422bd3b5/service/Core/MemoryServerless.cs#L89" target="_blank" rel="noopener noreferrer">Kernel Memory repository itself</a>.</p>
<p>However, it's often helpful to have a number of other things in place to manage:</p>
<ol>
<li>Applying tags to documents (this gives us more power when querying later)</li>
<li>Creating acceptable names / ids for the Azure AI Search Service</li>
<li>Handling rate limiting - more on that in a moment</li>
</ol>
<p>To that end, I tend to end up implementing a <code>Process</code> method that looks something like this:</p>
<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">async</span><span class="token plain"> </span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">Task</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">Process</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> index</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> documentUrl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name" style="color:rgb(250, 208, 0)">TokenCredential</span><span class="token plain"> credential </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> _env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">IsDevelopment</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">AzureCliCredential</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">DefaultAzureCredential</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">DefaultAzureCredentialOptions</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        ManagedIdentityClientId </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"[Managed Identity ClientId Here]"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name" style="color:rgb(250, 208, 0)">BlobServiceClient</span><span class="token plain"> azureBlobServiceClient </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">Uri</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"https://stourappdev.blob.core.windows.net"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> credential</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> containerClient </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> azureBlobServiceClient</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetBlobContainerClient</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">index</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// eg DocumentUrl: https://stourappdev.blob.core.windows.net/my-index/A%20Booklet.pdf</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> fileName </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> System</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Web</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">HttpUtility</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">UrlDecode</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">documentToProcess</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">DocumentUrl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Split</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token char" style="color:rgb(250, 208, 0)">'/'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Last</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> blobClient </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> containerClient</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetBlobClient</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">fileName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name" style="color:rgb(250, 208, 0)">MemoryStream</span><span class="token plain"> documentContent </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> response </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> blobClient</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">DownloadToAsync</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">documentContent</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// example documentUrl:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// Chunking, getting embeddings for and storing for documentUrl consisting of 103469 characters in https://stourappdev.blob.core.windows.net/my-index/A%20Booklet.pdf</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogInformation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Chunking, getting embeddings for and storing for {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">documentUrl</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} consisting of {{count}} characters in {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">index</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}}"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> documentUrl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> documentContent</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Length</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> index</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> documentId </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">MakeDocumentId</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">documentUrl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name" style="color:rgb(250, 208, 0)">TagCollection</span><span class="token plain"> tags </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"DocumentUrl"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> documentUrl </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"FileName"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> fileName </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> stopwatch </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">Stopwatch</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    stopwatch</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Start</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">int</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> waitForSeconds </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">bool</span><span class="token plain"> done </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">false</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">int</span><span class="token plain"> attempt </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">0</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">do</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        attempt</span><span class="token operator" style="color:rgb(255, 157, 0)">++</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">attempt </span><span class="token operator" style="color:rgb(255, 157, 0)">==</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">4</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// if we've tried 3 times, give up</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">throw</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">Exception</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Failed to store document </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp">documentUrl</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)"> after </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp">attempt </span><span class="token interpolation-string interpolation expression language-csharp operator" style="color:rgb(255, 157, 0)">-</span><span class="token interpolation-string interpolation expression language-csharp"> </span><span class="token interpolation-string interpolation expression language-csharp number" style="color:rgb(255, 98, 140)">1</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)"> attempts and </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp">stopwatch</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">Elapsed</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">TotalSeconds</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)"> seconds"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">try</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">waitForSeconds </span><span class="token operator" style="color:rgb(255, 157, 0)">!=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogInformation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Waiting {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">waitForSeconds</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} seconds"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> waitForSeconds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Value</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> Task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Delay</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">TimeSpan</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">FromSeconds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">waitForSeconds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Value</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                waitForSeconds </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogInformation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"Importing documentId {documentId} attempt {attempt}"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> documentId</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> attempt</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> _memory</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">ImportDocumentAsync</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">content</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> documentContent</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">fileName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> fileName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">documentId</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> documentId</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">index</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> index</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">tags</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> tags</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            done </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">Microsoft</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token class-name" style="color:rgb(250, 208, 0)">SemanticKernel</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token class-name" style="color:rgb(250, 208, 0)">HttpOperationException</span><span class="token plain"> e</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">when</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">e</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">InnerException </span><span class="token keyword" style="color:rgb(255, 157, 0)">is</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">Azure</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token class-name" style="color:rgb(250, 208, 0)">RequestFailedException</span><span class="token plain"> azureRequestFailedException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            waitForSeconds </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">HandleRequestFailed</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">azureRequestFailedException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">Azure</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token class-name" style="color:rgb(250, 208, 0)">RequestFailedException</span><span class="token plain"> azureRequestFailedException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            waitForSeconds </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">HandleRequestFailed</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">azureRequestFailedException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">Exception</span><span class="token plain"> ex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">throw</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">Exception</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Error storing document </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp">documentUrl</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)"> on attempt </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp">attempt</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)"> after </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp">stopwatch</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">Elapsed</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">TotalSeconds</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)"> seconds"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> ex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">while</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token operator" style="color:rgb(255, 157, 0)">!</span><span class="token plain">done</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    stopwatch</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Stop</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogInformation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Processed {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">documentId</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} into {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">index</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} index in {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">stopwatch</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">Elapsed</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">TotalSeconds</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} seconds"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> documentId</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> index</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> stopwatch</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Elapsed</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">TotalSeconds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token return-type class-name keyword" style="color:rgb(255, 157, 0)">int</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">HandleRequestFailed</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">Azure</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token class-name" style="color:rgb(250, 208, 0)">RequestFailedException</span><span class="token plain"> azureRequestFailedException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">int</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> waitForSeconds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> response </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> azureRequestFailedException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetRawResponse</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> retryAfterSeconds </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> response</span><span class="token punctuation" style="color:rgb(255, 255, 255)">?.</span><span class="token plain">Headers</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">FirstOrDefault</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">h </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> h</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Name </span><span class="token operator" style="color:rgb(255, 157, 0)">==</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"x-ratelimit-reset-requests"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Value</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token operator" style="color:rgb(255, 157, 0)">??</span><span class="token plain"> response</span><span class="token punctuation" style="color:rgb(255, 255, 255)">?.</span><span class="token plain">Headers</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">FirstOrDefault</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">h </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> h</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Name </span><span class="token operator" style="color:rgb(255, 157, 0)">==</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"Retry-After"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Value</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">//x-ratelimit-reset-requests: 4,x-ms-client-request-id: XXXX,apim-request-id: 69569dd5-2e4a-4bfa-9b52-f3eb08481a83,Strict-Transport-Security: max-age=31536000; includeSubDomains; preload,X-Content-Type-Options: nosniff,policy-id: DeploymentRatelimit-Call,x-ms-region: West Europe,Date: Fri, 01 Dec 2023 13:29:12 GMT,Content-Length: 85,Content-Type: application/json</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    waitForSeconds </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> retryAfterSeconds </span><span class="token operator" style="color:rgb(255, 157, 0)">!=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">int</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Parse</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">retryAfterSeconds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">waitForSeconds </span><span class="token operator" style="color:rgb(255, 157, 0)">==</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> pattern </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">@"Try again in (\d+) seconds"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> match </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> Regex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Match</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">azureRequestFailedException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Message</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> pattern</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// wait for 60 seconds if a specific value is not provided</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        waitForSeconds </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> match</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Success </span><span class="token operator" style="color:rgb(255, 157, 0)">&amp;&amp;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">int</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">TryParse</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">match</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Groups</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token number" style="color:rgb(255, 98, 140)">1</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Value</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">out</span><span class="token plain"> </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">int</span><span class="token plain"> seconds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> seconds </span><span class="token operator" style="color:rgb(255, 157, 0)">+</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">1</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">60</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">azureRequestFailedException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Status </span><span class="token operator" style="color:rgb(255, 157, 0)">==</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">int</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain">System</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Net</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">HttpStatusCode</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">TooManyRequests</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// var headers = response?.Headers.Select(h =&gt; $"{h.Name}: {h.Value}").ToList() ?? new List&lt;string&gt;();</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// _logger.LogWarning(azureRequestFailedException, $"429 - too many requests, will wait {{{nameof(waitForSeconds)}}} seconds - HEADERS: {{{nameof(headers)}}}", waitForSeconds, string.Join(",", headers));</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogWarning</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">azureRequestFailedException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"429 - too many requests, will wait {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">waitForSeconds</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} seconds"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> waitForSeconds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">else</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> headers </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> response</span><span class="token punctuation" style="color:rgb(255, 255, 255)">?.</span><span class="token plain">Headers</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Select</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">h </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> </span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp">h</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">Name</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">: </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp">h</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">Value</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">ToList</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">??</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogError</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">azureRequestFailedException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Azure.RequestFailedException - {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">azureRequestFailedException</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">Status</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} status code, will wait {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">waitForSeconds</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} seconds - HEADERS: {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">headers</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}}"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> azureRequestFailedException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Status</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> waitForSeconds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Join</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">","</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> headers</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> waitForSeconds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// &lt;summary&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// Make a documentId from a fileName; remove all characters except A-Z, a-z, 0-9, ., _, -</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// &lt;/summary&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">static</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">MakeDocumentId</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> fileName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> Regex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Replace</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">fileName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"[^A-Za-z0-9._-]"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">""</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// eg "A Booklet.pdf"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Much of the code above concerns rate limiting / 429s. It's not uncommon when chunking to be hit by 429s - "Too many requests". Chunking documents requires use of Azure Open AI resources, and the level of access we have is typically restricted and controlled via quotas. There's an element of this that we can avoid by controlling the quota available on our Azure Open AI deployments (<a href="https://johnnyreilly.com/azure-open-ai-capacity-quota-bicep">you can read more about this here</a>), and we can implement a certain amount of retry logic also.</p>
<p>The code above tries to handle a number of re-attempts as wisely as it can, and using the information that Azure APIs surface around when re-attempting is allowed. Interestingly you'll see a variety of strategies employed here around retry times, as the way information is surfaced to support this keeps changing! We can likely have less code in future when a final standard is committed to.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="bringing-it-together">Bringing it together<a href="https://johnnyreilly.com/using-kernel-memory-to-chunk-documents-into-azure-ai-search#bringing-it-together" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>We're going to put this all together in a single class called <code>RagGestionService</code>.</p>
<p>You might be puzzled by the name "RagGestion" - this is a term my good friend <a href="https://medium.com/@georgekarsas" target="_blank" rel="noopener noreferrer">George Karsas</a> coined to describe the process of preparing documents for Retrieval Augmented Generation. It's a great term, and I've adopted it!</p>
<p>The <code>RagGestionService</code> will look like this:</p>
<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">Azure</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Storage</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Blobs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">Azure</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Core</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">Azure</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Identity</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">Microsoft</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">KernelMemory</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">OurApp</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Model</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">System</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Diagnostics</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">System</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Text</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">RegularExpressions</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">System</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Text</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Json</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">namespace</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">OurApp</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Services</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">interface</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">IRagGestionService</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">Task</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">Process</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> indexName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> documentUrl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">class</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">RagGestionService</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token type-list class-name" style="color:rgb(250, 208, 0)">IRagGestionService</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">readonly</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">IKernelMemory</span><span class="token plain"> _memory</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">readonly</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">ILogger</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token class-name" style="color:rgb(250, 208, 0)">RagGestionService</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">RagGestionService</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name" style="color:rgb(250, 208, 0)">ILogger</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token class-name" style="color:rgb(250, 208, 0)">RagGestionService</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> logger</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        _logger </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        _memory </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">KernelMemoryBuilder</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">WithAzureOpenAITextEmbeddingGeneration</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">AzureOpenAIConfig</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                APIType </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> AzureOpenAIConfig</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">APITypes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">EmbeddingGeneration</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                Auth </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> AzureOpenAIConfig</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">AuthTypes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">AzureIdentity</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                Endpoint </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"https://cog-ourapp-dev.openai.azure.com/"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                Deployment </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"OpenAi-text-embedding-ada2"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">WithAzureOpenAITextGeneration</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">AzureOpenAIConfig</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                APIType </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> AzureOpenAIConfig</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">APITypes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">ChatCompletion</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                Auth </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> AzureOpenAIConfig</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">AuthTypes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">AzureIdentity</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                Endpoint </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"https://cog-ourapp-dev.openai.azure.com/"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                Deployment </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"OpenAi-gpt-35-turbo-16k"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">WithAzureAISearchMemoryDb</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">AzureAISearchConfig</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                Auth </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> AzureAISearchConfig</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">AuthTypes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">AzureIdentity</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                Endpoint </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"https://srch-ourapp-dev.search.windows.net"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// Only necessary if we want to add Document Intelligence</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">WithAzureAIDocIntel</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">AzureAIDocIntelConfig</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                Auth </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> AzureAIDocIntelConfig</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">AuthTypes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">AzureIdentity</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                Endpoint </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"https://cog-ourapp-dev.cognitiveservices.azure.com/"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Build</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">async</span><span class="token plain"> </span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">Task</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">Process</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> index</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> documentUrl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name" style="color:rgb(250, 208, 0)">TokenCredential</span><span class="token plain"> credential </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> _env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">IsDevelopment</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">AzureCliCredential</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">DefaultAzureCredential</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">DefaultAzureCredentialOptions</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            ManagedIdentityClientId </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"[Managed Identity ClientId Here]"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name" style="color:rgb(250, 208, 0)">BlobServiceClient</span><span class="token plain"> azureBlobServiceClient </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">Uri</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"https://stourappdev.blob.core.windows.net"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> credential</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> containerClient </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> azureBlobServiceClient</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetBlobContainerClient</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">index</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// eg DocumentUrl: https://stourappdev.blob.core.windows.net/my-index/A%20Booklet.pdf</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> fileName </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> System</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Web</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">HttpUtility</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">UrlDecode</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">documentToProcess</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">DocumentUrl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Split</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token char" style="color:rgb(250, 208, 0)">'/'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Last</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> blobClient </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> containerClient</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetBlobClient</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">fileName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name" style="color:rgb(250, 208, 0)">MemoryStream</span><span class="token plain"> documentContent </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> response </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> blobClient</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">DownloadToAsync</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">documentContent</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// example documentUrl:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// Chunking, getting embeddings for and storing for documentUrl consisting of 103469 characters in https://stourappdev.blob.core.windows.net/my-index/A%20Booklet.pdf</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogInformation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Chunking, getting embeddings for and storing for {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">documentUrl</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} consisting of {{count}} characters in {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">index</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}}"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> documentUrl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> documentContent</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Length</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> index</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> documentId </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">MakeDocumentId</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">documentUrl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name" style="color:rgb(250, 208, 0)">TagCollection</span><span class="token plain"> tags </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"DocumentUrl"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> documentUrl </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"FileName"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> fileName </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> stopwatch </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">Stopwatch</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        stopwatch</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Start</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">int</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> waitForSeconds </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">bool</span><span class="token plain"> done </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">false</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">int</span><span class="token plain"> attempt </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">0</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">do</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            attempt</span><span class="token operator" style="color:rgb(255, 157, 0)">++</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">attempt </span><span class="token operator" style="color:rgb(255, 157, 0)">==</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">4</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// if we've tried 3 times, give up</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token keyword" style="color:rgb(255, 157, 0)">throw</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">Exception</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Failed to store document </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp">documentUrl</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)"> after </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp">attempt </span><span class="token interpolation-string interpolation expression language-csharp operator" style="color:rgb(255, 157, 0)">-</span><span class="token interpolation-string interpolation expression language-csharp"> </span><span class="token interpolation-string interpolation expression language-csharp number" style="color:rgb(255, 98, 140)">1</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)"> attempts and </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp">stopwatch</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">Elapsed</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">TotalSeconds</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)"> seconds"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">try</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">waitForSeconds </span><span class="token operator" style="color:rgb(255, 157, 0)">!=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogInformation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Waiting {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">waitForSeconds</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} seconds"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> waitForSeconds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Value</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> Task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Delay</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">TimeSpan</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">FromSeconds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">waitForSeconds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Value</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    waitForSeconds </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogInformation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"Importing documentId {documentId} attempt {attempt}"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> documentId</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> attempt</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> _memory</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">ImportDocumentAsync</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">content</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> documentContent</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">fileName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> fileName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">documentId</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> documentId</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">index</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> index</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">tags</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> tags</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                done </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">Microsoft</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token class-name" style="color:rgb(250, 208, 0)">SemanticKernel</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token class-name" style="color:rgb(250, 208, 0)">HttpOperationException</span><span class="token plain"> e</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">when</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">e</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">InnerException </span><span class="token keyword" style="color:rgb(255, 157, 0)">is</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">Azure</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token class-name" style="color:rgb(250, 208, 0)">RequestFailedException</span><span class="token plain"> azureRequestFailedException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                waitForSeconds </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">HandleRequestFailed</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">azureRequestFailedException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">Azure</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token class-name" style="color:rgb(250, 208, 0)">RequestFailedException</span><span class="token plain"> azureRequestFailedException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                waitForSeconds </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">HandleRequestFailed</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">azureRequestFailedException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">Exception</span><span class="token plain"> ex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token keyword" style="color:rgb(255, 157, 0)">throw</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">Exception</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Error storing document </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp">documentUrl</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)"> on attempt </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp">attempt</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)"> after </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp">stopwatch</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">Elapsed</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">TotalSeconds</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)"> seconds"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> ex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">while</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token operator" style="color:rgb(255, 157, 0)">!</span><span class="token plain">done</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        stopwatch</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Stop</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogInformation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Processed {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">documentId</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} into {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">index</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} index in {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">stopwatch</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">Elapsed</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">TotalSeconds</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} seconds"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> documentId</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> index</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> stopwatch</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Elapsed</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">TotalSeconds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token return-type class-name keyword" style="color:rgb(255, 157, 0)">int</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">HandleRequestFailed</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">Azure</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token class-name" style="color:rgb(250, 208, 0)">RequestFailedException</span><span class="token plain"> azureRequestFailedException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">int</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> waitForSeconds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> response </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> azureRequestFailedException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetRawResponse</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> retryAfterSeconds </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> response</span><span class="token punctuation" style="color:rgb(255, 255, 255)">?.</span><span class="token plain">Headers</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">FirstOrDefault</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">h </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> h</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Name </span><span class="token operator" style="color:rgb(255, 157, 0)">==</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"x-ratelimit-reset-requests"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Value</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token operator" style="color:rgb(255, 157, 0)">??</span><span class="token plain"> response</span><span class="token punctuation" style="color:rgb(255, 255, 255)">?.</span><span class="token plain">Headers</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">FirstOrDefault</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">h </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> h</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Name </span><span class="token operator" style="color:rgb(255, 157, 0)">==</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"Retry-After"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Value</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">//x-ratelimit-reset-requests: 4,x-ms-client-request-id: XXXX,apim-request-id: 69569dd5-2e4a-4bfa-9b52-f3eb08481a83,Strict-Transport-Security: max-age=31536000; includeSubDomains; preload,X-Content-Type-Options: nosniff,policy-id: DeploymentRatelimit-Call,x-ms-region: West Europe,Date: Fri, 01 Dec 2023 13:29:12 GMT,Content-Length: 85,Content-Type: application/json</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        waitForSeconds </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> retryAfterSeconds </span><span class="token operator" style="color:rgb(255, 157, 0)">!=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">int</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Parse</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">retryAfterSeconds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">waitForSeconds </span><span class="token operator" style="color:rgb(255, 157, 0)">==</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> pattern </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">@"Try again in (\d+) seconds"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> match </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> Regex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Match</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">azureRequestFailedException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Message</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> pattern</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// wait for 60 seconds if a specific value is not provided</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            waitForSeconds </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> match</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Success </span><span class="token operator" style="color:rgb(255, 157, 0)">&amp;&amp;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">int</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">TryParse</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">match</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Groups</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token number" style="color:rgb(255, 98, 140)">1</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Value</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">out</span><span class="token plain"> </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">int</span><span class="token plain"> seconds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> seconds </span><span class="token operator" style="color:rgb(255, 157, 0)">+</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">1</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">60</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">azureRequestFailedException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Status </span><span class="token operator" style="color:rgb(255, 157, 0)">==</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">int</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain">System</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Net</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">HttpStatusCode</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">TooManyRequests</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// var headers = response?.Headers.Select(h =&gt; $"{h.Name}: {h.Value}").ToList() ?? new List&lt;string&gt;();</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// _logger.LogWarning(azureRequestFailedException, $"429 - too many requests, will wait {{{nameof(waitForSeconds)}}} seconds - HEADERS: {{{nameof(headers)}}}", waitForSeconds, string.Join(",", headers));</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogWarning</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">azureRequestFailedException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"429 - too many requests, will wait {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">waitForSeconds</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} seconds"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> waitForSeconds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">else</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> headers </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> response</span><span class="token punctuation" style="color:rgb(255, 255, 255)">?.</span><span class="token plain">Headers</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Select</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">h </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> </span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp">h</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">Name</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">: </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp">h</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">Value</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">ToList</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">??</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogError</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">azureRequestFailedException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Azure.RequestFailedException - {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">azureRequestFailedException</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">Status</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} status code, will wait {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">waitForSeconds</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} seconds - HEADERS: {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">headers</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}}"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> azureRequestFailedException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Status</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> waitForSeconds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Join</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">","</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> headers</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> waitForSeconds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// &lt;summary&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// Make a documentId from a fileName; remove all characters except A-Z, a-z, 0-9, ., _, -</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// &lt;/summary&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">static</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">MakeDocumentId</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> fileName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> Regex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Replace</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">fileName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"[^A-Za-z0-9._-]"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">""</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// eg "A Booklet.pdf"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>By the way, I don't advise hard-coding the Azure resources as I have here, but rather passing them in as configuration. Incidentally, we could also use dependency injection to inject a prepared <code>IKernelMemory</code> instance into the service, but again, I'm keeping it simple here for clarity.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="2-our-document-processor-queue">2. Our document processor queue<a href="https://johnnyreilly.com/using-kernel-memory-to-chunk-documents-into-azure-ai-search#2-our-document-processor-queue" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>In order that we have a way to provide documents for chunking, we need a queue. This is a simple queue that we can add documents to, and then process them in the background. We're going to use a <code>ConcurrentQueue</code> for this, with a little wrapper around it so we can encapsulate the queue for sharing between our UI and our background task, and also to do some logging.</p>
<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">System</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Collections</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Concurrent</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">OurApp</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Model</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">namespace</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">OurApp</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Services</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Implementations</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">record</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">DocumentToProcess</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> DocumentUrl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> IndexName</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">interface</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">IDocumentProcessorQueue</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">DocumentToProcess</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">DequeueDocumentUri</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token return-type class-name keyword" style="color:rgb(255, 157, 0)">void</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">EnqueueDocumentUri</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">DocumentToProcess</span><span class="token plain"> documentToProcess</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">class</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">DocumentProcessorQueue</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token type-list class-name" style="color:rgb(250, 208, 0)">IDocumentProcessorQueue</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">readonly</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">ConcurrentQueue</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token class-name" style="color:rgb(250, 208, 0)">DocumentToProcess</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> _documentUrlQueue</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">readonly</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">ILogger</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token class-name" style="color:rgb(250, 208, 0)">DocumentProcessorQueue</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">DocumentProcessorQueue</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">ILogger</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token class-name" style="color:rgb(250, 208, 0)">DocumentProcessorQueue</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        _documentUrlQueue </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        _logger </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:rgb(255, 157, 0)">void</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">EnqueueDocumentUri</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">DocumentToProcess</span><span class="token plain"> documentToProcess</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogInformation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Adding document for background processing onto {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">documentToProcess</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">IndexName</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} index later: {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">documentToProcess</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">DocumentUrl</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} ({{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">_documentUrlQueue</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">Count</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} items on queue)"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> documentToProcess</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">IndexName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> documentToProcess</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">DocumentUrl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> _documentUrlQueue</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Count</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        _documentUrlQueue</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Enqueue</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">documentToProcess</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">DocumentToProcess</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">DequeueDocumentUri</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">_documentUrlQueue</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">TryDequeue</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">out</span><span class="token plain"> </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> documentToProcess</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogInformation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Document picked up for background processing onto {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">documentToProcess</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">IndexName</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} index: {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">documentToProcess</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">DocumentUrl</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} ({{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">_documentUrlQueue</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">Count</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} items remain on queue)"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> documentToProcess</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">IndexName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> documentToProcess</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">DocumentUrl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> _documentUrlQueue</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Count</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> documentToProcess</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The <code>EnqueueDocumentUri</code> method above will be called from the context of our UI - from an ASP.NET controller. This will be invoked when someone uploads a file and will also be responsible for adding the file to a BlobService for storage prior to processing.</p>
<p>By contrast, the <code>DequeueDocumentUri</code> method will be called from the context of our background service; it will call this method to pick up a file for processing.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="3-our-background-service">3. Our background service<a href="https://johnnyreilly.com/using-kernel-memory-to-chunk-documents-into-azure-ai-search#3-our-background-service" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Next, we need a background service to bring together our <code>DocumentProcessorQueue</code> and our <code>RagGestionService</code>. This is a standard ASP.NET hosted service. It will look like this:</p>
<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">OurApp</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Model</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">OurApp</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Services</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">namespace</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">OurApp</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">BackgroundServices</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">class</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">DocumentProcessorBackgroundService</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token type-list class-name" style="color:rgb(250, 208, 0)">BackgroundService</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">readonly</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">ILogger</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token class-name" style="color:rgb(250, 208, 0)">DocumentProcessorBackgroundService</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">readonly</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">IServiceProvider</span><span class="token plain"> _services</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">DocumentProcessorBackgroundService</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">IServiceProvider</span><span class="token plain"> services</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">ILogger</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token class-name" style="color:rgb(250, 208, 0)">DocumentProcessorBackgroundService</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        _services </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> services</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        _logger </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">protected</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">override</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">async</span><span class="token plain"> </span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">Task</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">ExecuteAsync</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">CancellationToken</span><span class="token plain"> stoppingToken</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">try</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogInformation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"Starting RagGestion"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> ragGestionService </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> _services</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token generic-method function" style="color:rgb(250, 208, 0)">GetRequiredService</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token generic-method generic class-name" style="color:rgb(250, 208, 0)">IRagGestionService</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> documentProcessorQueue </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> _services</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token generic-method function" style="color:rgb(250, 208, 0)">GetRequiredService</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token generic-method generic class-name" style="color:rgb(250, 208, 0)">IDocumentProcessorQueue</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">PerformRagGestion</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> chunkerService</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> documentProcessorQueue</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> stoppingToken</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">Exception</span><span class="token plain"> e</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogError</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">e</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Error processing document"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">async</span><span class="token plain"> </span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">Task</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">PerformRagGestion</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">IRagGestionService</span><span class="token plain"> ragGestionService</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">IDocumentProcessorQueue</span><span class="token plain"> documentProcessorQueue</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">CancellationToken</span><span class="token plain"> stoppingToken</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">while</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token operator" style="color:rgb(255, 157, 0)">!</span><span class="token plain">stoppingToken</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">IsCancellationRequested</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> Task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Delay</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">TimeSpan</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">FromSeconds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token number" style="color:rgb(255, 98, 140)">5</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> stoppingToken</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token class-name" style="color:rgb(250, 208, 0)">DocumentToProcess</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> documentToProcess </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> documentProcessorQueue</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">DequeueDocumentUri</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">documentToProcess </span><span class="token operator" style="color:rgb(255, 157, 0)">==</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogDebug</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"No documents to process"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token keyword" style="color:rgb(255, 157, 0)">continue</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">try</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> watch </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> System</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Diagnostics</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Stopwatch</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">StartNew</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogInformation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Processing document: {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">documentToProcess</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">DocumentUrl</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}}"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> documentToProcess</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">DocumentUrl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> ragGestionService</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Process</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">indexName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> documentToProcess</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">IndexName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">documentUrl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> documentToProcess</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">DocumentUrl</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                watch</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Stop</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogInformation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    </span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Chunked and stored {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">documentToProcess</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">DocumentUrl</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} into Azure AI Search {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">documentToProcess</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">IndexName</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} index in {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">watch</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">Elapsed</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">Seconds</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} seconds"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    documentToProcess</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">DocumentUrl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> documentToProcess</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">IndexName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> watch</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Elapsed</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">TotalSeconds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">Exception</span><span class="token plain"> e</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogError</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">e</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Error processing document: {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">documentToProcess</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}}"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> documentToProcess</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This service will run in the background of the ASP.NET application, will pick up documents from the queue (if there are any) and pass them to the <code>RagGestionService</code> for processing. It will trigger every 5 seconds, running for the lifetime of the application.</p>
<p>You'll see we're doing some timing here - this is because it's useful to know how long the process takes. If we're processing a lot of documents, we'll want to know how long it's taking to process each one.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="4-adding-documents-to-the-queue">4. Adding documents to the queue<a href="https://johnnyreilly.com/using-kernel-memory-to-chunk-documents-into-azure-ai-search#4-adding-documents-to-the-queue" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>To add documents to the queue, we'll need to create an endpoint in our ASP.NET application. This endpoint will accept files and add them to the queue. Here's an example of how we might do that:</p>
<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">Microsoft</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">AspNetCore</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Mvc</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">Azure</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Storage</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Blobs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">Azure</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Identity</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">Azure</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Core</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">namespace</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">OurApp</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Controllers</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">record</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">UploadedFile</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> FileName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">bool</span><span class="token plain"> Succeeded</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">long</span><span class="token plain"> Size</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> DocumentUrl</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token attribute class-name" style="color:rgb(250, 208, 0)">ApiController</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">class</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">UploadController</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token type-list class-name" style="color:rgb(250, 208, 0)">ControllerBase</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">readonly</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">IDocumentProcessorQueue</span><span class="token plain"> _documentProcessorQueue</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">readonly</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">ILogger</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token class-name" style="color:rgb(250, 208, 0)">UploadController</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> _log</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">readonly</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">IHostEnvironment</span><span class="token plain"> _env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">UploadController</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name" style="color:rgb(250, 208, 0)">ILogger</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token class-name" style="color:rgb(250, 208, 0)">UploadController</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> log</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name" style="color:rgb(250, 208, 0)">IHostEnvironment</span><span class="token plain"> env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name" style="color:rgb(250, 208, 0)">IDocumentProcessorQueue</span><span class="token plain"> documentProcessorQueue</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        _log </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> log</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        _env </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        _documentProcessorQueue </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> documentProcessorQueue</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token attribute class-name" style="color:rgb(250, 208, 0)">RequestSizeLimit</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token attribute attribute-arguments number" style="color:rgb(255, 98, 140)">104857600</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// For files of up to 100 MB - perhaps larger than you'd want to upload in a single go</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token function" style="color:rgb(250, 208, 0)">HttpPost</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"api/</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">UploadFiles</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token attribute class-name" style="color:rgb(250, 208, 0)">ProducesResponseType</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token attribute attribute-arguments">StatusCodes</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token attribute attribute-arguments">Status200OK</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token attribute attribute-arguments"> Type </span><span class="token attribute attribute-arguments operator" style="color:rgb(255, 157, 0)">=</span><span class="token attribute attribute-arguments"> </span><span class="token attribute attribute-arguments keyword" style="color:rgb(255, 157, 0)">typeof</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token attribute attribute-arguments type-expression class-name" style="color:rgb(250, 208, 0)">List</span><span class="token attribute attribute-arguments type-expression class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token attribute attribute-arguments type-expression class-name" style="color:rgb(250, 208, 0)">UploadedFile</span><span class="token attribute attribute-arguments type-expression class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token attribute class-name" style="color:rgb(250, 208, 0)">ProducesResponseType</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token attribute attribute-arguments">StatusCodes</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token attribute attribute-arguments">Status403Forbidden</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token attribute attribute-arguments"> Type </span><span class="token attribute attribute-arguments operator" style="color:rgb(255, 157, 0)">=</span><span class="token attribute attribute-arguments"> </span><span class="token attribute attribute-arguments keyword" style="color:rgb(255, 157, 0)">typeof</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token attribute attribute-arguments type-expression class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token attribute class-name" style="color:rgb(250, 208, 0)">ProducesResponseType</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token attribute attribute-arguments">StatusCodes</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token attribute attribute-arguments">Status404NotFound</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token attribute attribute-arguments"> Type </span><span class="token attribute attribute-arguments operator" style="color:rgb(255, 157, 0)">=</span><span class="token attribute attribute-arguments"> </span><span class="token attribute attribute-arguments keyword" style="color:rgb(255, 157, 0)">typeof</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token attribute attribute-arguments type-expression class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">async</span><span class="token plain"> </span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">Task</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">ActionResult</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">List</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">UploadedFile</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">UploadFiles</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token attribute class-name" style="color:rgb(250, 208, 0)">FromQuery</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> indexName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name" style="color:rgb(250, 208, 0)">List</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token class-name" style="color:rgb(250, 208, 0)">IFormFile</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> files</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> processedFiles </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">List</span><span class="token constructor-invocation class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">UploadedFile</span><span class="token constructor-invocation class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">try</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">foreach</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> formFile </span><span class="token keyword" style="color:rgb(255, 157, 0)">in</span><span class="token plain"> files</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token keyword" style="color:rgb(255, 157, 0)">try</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    </span><span class="token class-name" style="color:rgb(250, 208, 0)">TokenCredential</span><span class="token plain"> credential </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> _env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">IsDevelopment</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">AzureCliCredential</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">DefaultAzureCredential</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">DefaultAzureCredentialOptions</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                        ManagedIdentityClientId </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"[Managed Identity ClientId Here]"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    </span><span class="token class-name" style="color:rgb(250, 208, 0)">BlobServiceClient</span><span class="token plain"> azureBlobServiceClient </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                        </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">Uri</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"https://stourappdev.blob.core.windows.net"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> credential</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> containerClient </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> azureBlobServiceClient</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetBlobContainerClient</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">indexName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token operator" style="color:rgb(255, 157, 0)">!</span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> containerClient</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">ExistsAsync</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                        </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> containerClient</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">CreateIfNotExistsAsync</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> blobClient </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> containerClient</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetBlobClient</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">formFile</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">FileName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    </span><span class="token class-name" style="color:rgb(250, 208, 0)">StreamReader</span><span class="token plain"> streamReader </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">formFile</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">OpenReadStream</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> uploaded </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> blobClient</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">UploadAsync</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">streamReader</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">BaseStream</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">overwrite</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> uploadedFile </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">UploadedFile</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                        </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">FileName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> formFile</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">FileName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                        </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">Succeeded</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                        </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">Size</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> formFile</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Length</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                        </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">DocumentUrl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> blobClient</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Uri</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">AbsoluteUri</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    processedFiles</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Add</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">uploadedFile</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    _documentProcessorQueue</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">EnqueueDocumentUri</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                        </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">DocumentToProcess</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                            </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">DocumentUrl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> uploadedFile</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">DocumentUrl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                            </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">IndexName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> indexName</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token keyword" style="color:rgb(255, 157, 0)">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">Exception</span><span class="token plain"> ex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    processedFiles</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Add</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">UploadedFile</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                        </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">FileName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> formFile</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">FileName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                        </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">Succeeded</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">false</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                        </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">Size</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> formFile</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Length</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                        </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">DocumentUrl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Empty</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    _log</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogError</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">ex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"Failed to upload {file}"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> formFile</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">FileName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">Ok</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">processedFiles</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">Exception</span><span class="token plain"> ex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            _log</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogError</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">ex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"Problem uploading files"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">BadRequest</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"Problem uploading files"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>As we can see, this endpoint:</p>
<ol>
<li>Accepts files from a POST request with an index name in the querystring</li>
<li>Uploads them to Blob Storage (matching the container name to the index they will be processed into in future)</li>
<li>Adds them to the queue with <code>_documentProcessorQueue.EnqueueDocumentUri</code>. This will then be picked up by the background service and processed.</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="registering-our-services">Registering our services<a href="https://johnnyreilly.com/using-kernel-memory-to-chunk-documents-into-azure-ai-search#registering-our-services" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Finally, we'll need to register our services in the <code>Program.cs</code> file. We'll want to add the following:</p>
<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">builder</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Services</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token generic-method function" style="color:rgb(250, 208, 0)">AddSingleton</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token generic-method generic class-name" style="color:rgb(250, 208, 0)">IRagGestionService</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token generic-method generic class-name" style="color:rgb(250, 208, 0)"> RagGestionService</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token generic-method function" style="color:rgb(250, 208, 0)">AddSingleton</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token generic-method generic class-name" style="color:rgb(250, 208, 0)">IDocumentProcessorQueue</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token generic-method generic class-name" style="color:rgb(250, 208, 0)"> DocumentProcessorQueue</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token generic-method function" style="color:rgb(250, 208, 0)">AddHostedService</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token generic-method generic class-name" style="color:rgb(250, 208, 0)">DocumentProcessorBackgroundService</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>With this in place we have an application that can upload documents and chunk them in the background.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://johnnyreilly.com/using-kernel-memory-to-chunk-documents-into-azure-ai-search#conclusion" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>And that's it! This is an ASP.NET application that can chunk documents (or RagGest üòâ) in the background using Kernel Memory running in serverless mode. I haven't yet had the need to upgrade to the full Kernel Memory service. Perhaps the day will come, but the mileage we can get with this approach is considerable.</p>
<p>Many thanks to <a href="https://github.com/drosevear" target="_blank" rel="noopener noreferrer">David Rosevear</a> and <a href="https://www.linkedin.com/in/george-karsas" target="_blank" rel="noopener noreferrer">George Karsas</a> for their help working on this mechanism. And George for "RagGestion" - I love it!</p>]]></content>
        <author>
            <name>John Reilly</name>
            <uri>https://johnnyreilly.com/about</uri>
        </author>
        <category label="Azure" term="Azure"/>
        <category label="C#" term="C#"/>
        <category label="ASP.NET" term="ASP.NET"/>
        <category label="AI" term="AI"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Text-first MUI Tabs]]></title>
        <id>https://johnnyreilly.com/text-first-mui-tabs</id>
        <link href="https://johnnyreilly.com/text-first-mui-tabs"/>
        <updated>2024-03-20T11:34:49.000Z</updated>
        <summary type="html"><![CDATA[Learn how to use the MUI tabs component in a text first way that remains strongly typed.]]></summary>
        <content type="html"><![CDATA[<p>I love the Material-UI (MUI) library for React. Hand on heart, I'm not very good at making UIs that are attractive. So I always grab for something to paper over the cracks. MUI is awesome for that.</p>
<p>One of the components that I use frequently is the <a href="https://mui.com/material-ui/react-tabs/" target="_blank" rel="noopener noreferrer">tabs component</a>. However, I've found that it can be a little tricky to use in a "text-first" way, that also remains strongly typed. This post documents how to do just that!</p>
<p><img decoding="async" loading="eager" alt="title image reading &amp;quot;Text-first MUI Tabs&amp;quot; with the MUI logo" src="https://johnnyreilly.com/assets/images/title-image-fae370d4476e00436aeda389c5ff8423.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="official-example">Official example<a href="https://johnnyreilly.com/text-first-mui-tabs#official-example" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>What does the tabs component look like? Well, here's a screenshot of it in action:</p>
<p><img decoding="async" loading="lazy" alt="screenshot of the tabs component" src="https://johnnyreilly.com/assets/images/screenshot-mui-tabs-5d4bdd365e8a259d3de2651bec27d630.png" width="690" height="312" class="img_ev3q"></p>
<p>It's very useful if you'd like your users to be able to switch between different views easily. The official MUI documentation provides an example of how to use the tabs component:</p>
<div class="language-tsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-tsx codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports operator" style="color:rgb(255, 157, 0)">*</span><span class="token imports"> </span><span class="token imports keyword module" style="color:rgb(255, 157, 0)">as</span><span class="token imports"> </span><span class="token imports maybe-class-name">React</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'react'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">Tabs</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/material/Tabs'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">Tab</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/material/Tab'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">Typography</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/material/Typography'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">Box</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/material/Box'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">interface</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">TabPanelProps</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  children</span><span class="token operator" style="color:rgb(255, 157, 0)">?</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access maybe-class-name">ReactNode</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  index</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">number</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  value</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">number</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">props</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">TabPanelProps</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> children</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> value</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> index</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token plain">other </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> props</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag" style="color:rgb(255, 157, 0)">div</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">role</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">tabpanel</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">hidden</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">value </span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">!==</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> index</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">id</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token tag script language-javascript template-string string" style="color:rgb(165, 255, 144)">simple-tabpanel-</span><span class="token tag script language-javascript template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token tag script language-javascript template-string interpolation" style="color:rgb(255, 157, 0)">index</span><span class="token tag script language-javascript template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">aria-labelledby</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token tag script language-javascript template-string string" style="color:rgb(165, 255, 144)">simple-tab-</span><span class="token tag script language-javascript template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token tag script language-javascript template-string interpolation" style="color:rgb(255, 157, 0)">index</span><span class="token tag script language-javascript template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token tag spread" style="color:rgb(255, 157, 0)">other</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">value </span><span class="token operator" style="color:rgb(255, 157, 0)">===</span><span class="token plain"> index </span><span class="token operator" style="color:rgb(255, 157, 0)">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">sx</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> p</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript number" style="color:rgb(255, 98, 140)">3</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Typography</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">children</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Typography</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag" style="color:rgb(255, 157, 0)">div</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">a11yProps</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">index</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">number</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">simple-tab-</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">index</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token string-property property" style="color:rgb(255, 157, 0)">'aria-controls'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">simple-tabpanel-</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">index</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">default</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">BasicTabs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">value</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> setValue</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">useState</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token number" style="color:rgb(255, 98, 140)">0</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:rgb(250, 208, 0)">handleChange</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">event</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access maybe-class-name">SyntheticEvent</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> newValue</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">number</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token function" style="color:rgb(250, 208, 0)">setValue</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">newValue</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">sx</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> width</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript string" style="color:rgb(165, 255, 144)">'100%'</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">sx</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> borderBottom</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript number" style="color:rgb(255, 98, 140)">1</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> borderColor</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript string" style="color:rgb(165, 255, 144)">'divider'</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Tabs</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">          </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">value</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">value</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">          </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">onChange</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">handleChange</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">          </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">aria-label</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">basic tabs example</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">        </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Tab</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">label</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">Item One</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token tag spread method function property-access" style="color:rgb(250, 208, 0)">a11yProps</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token tag spread number" style="color:rgb(255, 98, 140)">0</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Tab</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">label</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">Item Two</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token tag spread method function property-access" style="color:rgb(250, 208, 0)">a11yProps</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token tag spread number" style="color:rgb(255, 98, 140)">1</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Tab</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">label</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">Item Three</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token tag spread method function property-access" style="color:rgb(250, 208, 0)">a11yProps</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token tag spread number" style="color:rgb(255, 98, 140)">2</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Tabs</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">value</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">value</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">index</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript number" style="color:rgb(255, 98, 140)">0</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">        Item One</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">value</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">value</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">index</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript number" style="color:rgb(255, 98, 140)">1</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">        Item Two</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">value</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">value</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">index</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript number" style="color:rgb(255, 98, 140)">2</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">        Item Three</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This example is great, but (personally) I find it a little hard to read. There's a direct relationship between the tabs and the tab panels, but it's not immediately obvious. When you see the <code>0</code> passed to <code>a11yProps</code> and the <code>0</code> passed to <code>CustomTabPanel</code>, it's not clear that they're related. And if the <code>a11yProps</code> function call was not present, it would be even less clear.</p>
<p>I'd like to see the tabs and tab panels presented together in a more text-first way, that makes the relationship between tab and tab panel more apparent.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="text-first-tabs">Text-first tabs<a href="https://johnnyreilly.com/text-first-mui-tabs#text-first-tabs" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>The code I'd like to see would look something like this:</p>
<div class="language-tsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-tsx codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">sx</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> width</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript string" style="color:rgb(165, 255, 144)">'100%'</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">  </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">sx</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> borderBottom</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript number" style="color:rgb(255, 98, 140)">1</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> borderColor</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript string" style="color:rgb(165, 255, 144)">'divider'</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Tabs</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">value</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">selectedTab</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">onChange</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">handleChange</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">aria-label</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">basic tabs example</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Tab</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token tag spread method function property-access" style="color:rgb(250, 208, 0)">customTabProps</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token tag spread string" style="color:rgb(165, 255, 144)">'Item One'</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Tab</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token tag spread method function property-access" style="color:rgb(250, 208, 0)">customTabProps</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token tag spread string" style="color:rgb(165, 255, 144)">'Item Two'</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Tab</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token tag spread method function property-access" style="color:rgb(250, 208, 0)">customTabProps</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token tag spread string" style="color:rgb(165, 255, 144)">'Item Three'</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Tabs</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">  </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">  </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">selectedTab</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">selectedTab</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">tab</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">Item One</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">    Item One</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">  </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">  </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">selectedTab</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">selectedTab</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">tab</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">Item Two</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">    Item Two</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">  </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">  </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">selectedTab</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">selectedTab</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">tab</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">Item Three</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">    Item Three</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">  </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text"></span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>In this code snippet, the tabs and tab panels have more of a linkage, in a text-first way. It's hopefully clear that the "Item One" <code>Tab</code> and the "Item One" <code>CustomTabPanel</code> are related.</p>
<p>In the code above, the <code>customTabProps</code> function is used to generate the props for the tabs (it's an evolution of the <code>a11yProps</code> function that handles accessibility props as well as all others). Meanwhile, the <code>CustomTabPanel</code> component is used to render the tab panels. The <code>selectedTab</code> state is used to keep track of the selected tab.</p>
<p>How does this work? And is it strongly typed? Let's find out.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="strongly-typed-tabs">Strongly typed tabs<a href="https://johnnyreilly.com/text-first-mui-tabs#strongly-typed-tabs" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Yes, it's strongly typed! We achieve this by defining a mapping of tab text to tab index:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> tabs </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token string-property property" style="color:rgb(255, 157, 0)">'Item One'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">0</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token string-property property" style="color:rgb(255, 157, 0)">'Item Two'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">1</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token string-property property" style="color:rgb(255, 157, 0)">'Item Three'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">2</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">as</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">type</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">TabText</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">keyof</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">typeof</span><span class="token plain"> tabs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">type</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">TabIndex</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">typeof</span><span class="token plain"> tabs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">TabText</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>So "Item One" is <code>0</code>, "Item Two" is <code>1</code>, and "Item Three" is <code>2</code>.</p>
<p>We then do some TypeScript magic to strongly type this. We use <code>as const</code> to tell TypeScript this is an immutable object. With that done we can then extract the keys and values from the object and use them to create the derived types <code>TabText</code> and <code>TabIndex</code>.</p>
<p><code>TabText</code> is the keys of the <code>tabs</code> object and <code>TabIndex</code> is the values. So <code>TabText</code> is <code>"Item One" | "Item Two" | "Item Three"</code> and <code>TabIndex</code> is <code>0 | 1 | 2</code>. If we should subsequently amend the <code>tabs</code> object in our code, TypeScript will ensure that the <code>TabText</code> and <code>TabIndex</code> types are updated accordingly.</p>
<p>We can then use these types in our components:</p>
<div class="language-tsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-tsx codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">customTabProps</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">tab</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">TabText</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> index </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> tabs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">tab</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">simple-tab-tab-</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">index</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token string-property property" style="color:rgb(255, 157, 0)">'aria-controls'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">simple-tab-tabpanel-</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">index</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    label</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> tab</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">interface</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">CustomTabPanelProps</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  children</span><span class="token operator" style="color:rgb(255, 157, 0)">?</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access maybe-class-name">ReactNode</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  tab</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">TabText</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  selectedTab</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">TabIndex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">props</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">CustomTabPanelProps</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> children</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> selectedTab</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> tab</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token plain">other </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> props</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> index </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> tabs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">tab</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag" style="color:rgb(255, 157, 0)">div</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">role</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">tabpanel</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">hidden</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">selectedTab </span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">!==</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> index</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">id</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token tag script language-javascript template-string string" style="color:rgb(165, 255, 144)">simple-tab-tabpanel-</span><span class="token tag script language-javascript template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token tag script language-javascript template-string interpolation" style="color:rgb(255, 157, 0)">index</span><span class="token tag script language-javascript template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">aria-labelledby</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token tag script language-javascript template-string string" style="color:rgb(165, 255, 144)">simple-tab-tab-</span><span class="token tag script language-javascript template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token tag script language-javascript template-string interpolation" style="color:rgb(255, 157, 0)">index</span><span class="token tag script language-javascript template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token tag spread" style="color:rgb(255, 157, 0)">other</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">selectedTab </span><span class="token operator" style="color:rgb(255, 157, 0)">===</span><span class="token plain"> index </span><span class="token operator" style="color:rgb(255, 157, 0)">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">sx</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> p</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript number" style="color:rgb(255, 98, 140)">3</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Typography</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">children</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Typography</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag" style="color:rgb(255, 157, 0)">div</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Then our final example code looks like this:</p>
<div class="language-tsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-tsx codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">default</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">BasicTabs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">selectedTab</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> setSelectedTab</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">useState</span><span class="token operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token maybe-class-name">TabIndex</span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    tabs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token string" style="color:rgb(165, 255, 144)">'Item One'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:rgb(250, 208, 0)">handleChange</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">event</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access maybe-class-name">SyntheticEvent</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> newValue</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">TabIndex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token function" style="color:rgb(250, 208, 0)">setSelectedTab</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">newValue</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">sx</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> width</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript string" style="color:rgb(165, 255, 144)">'100%'</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">sx</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> borderBottom</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript number" style="color:rgb(255, 98, 140)">1</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> borderColor</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript string" style="color:rgb(165, 255, 144)">'divider'</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Tabs</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">          </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">value</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">selectedTab</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">          </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">onChange</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">handleChange</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">          </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">aria-label</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">basic tabs example</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">        </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Tab</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token tag spread method function property-access" style="color:rgb(250, 208, 0)">customTabProps</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token tag spread string" style="color:rgb(165, 255, 144)">'Item One'</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Tab</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token tag spread method function property-access" style="color:rgb(250, 208, 0)">customTabProps</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token tag spread string" style="color:rgb(165, 255, 144)">'Item Two'</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Tab</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token tag spread method function property-access" style="color:rgb(250, 208, 0)">customTabProps</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token tag spread string" style="color:rgb(165, 255, 144)">'Item Three'</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Tabs</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">selectedTab</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">selectedTab</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">tab</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">Item One</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">        Item One</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">selectedTab</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">selectedTab</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">tab</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">Item Two</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">        Item Two</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">selectedTab</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">selectedTab</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">tab</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">Item Three</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">        Item Three</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Note how we use our <code>TabIndex</code> types to strongly type the <code>selectedTab</code> state and the <code>handleChange</code> function. And also how the <code>TabText</code> type is used to strongly type the <code>tab</code> prop in the <code>CustomTabPanel</code> component and the <code>tab</code> argument in the <code>customTabProps</code> function. With this in place, we cannot provide invalid tab text to the <code>customTabProps</code> function or the <code>CustomTabPanel</code> component. TypeScript would fight us every step of the way if we tried.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://johnnyreilly.com/text-first-mui-tabs#conclusion" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>So now we have a strongly typed, text-first way to use the MUI tabs component. We've used TypeScript to ensure that our tabs and tab panels are related in a way that is clear and easy to understand. This approach makes our code more maintainable and easier to work with. The full code is below:</p>
<div class="language-tsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-tsx codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports operator" style="color:rgb(255, 157, 0)">*</span><span class="token imports"> </span><span class="token imports keyword module" style="color:rgb(255, 157, 0)">as</span><span class="token imports"> </span><span class="token imports maybe-class-name">React</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'react'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">Tabs</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/material/Tabs'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">Tab</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/material/Tab'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">Typography</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/material/Typography'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">Box</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/material/Box'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> tabs </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token string-property property" style="color:rgb(255, 157, 0)">'Item One'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">0</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token string-property property" style="color:rgb(255, 157, 0)">'Item Two'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">1</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token string-property property" style="color:rgb(255, 157, 0)">'Item Three'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">2</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">as</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">type</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">TabText</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">keyof</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">typeof</span><span class="token plain"> tabs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">type</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">TabIndex</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">typeof</span><span class="token plain"> tabs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token maybe-class-name">TabText</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">customTabProps</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">tab</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">TabText</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> index </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> tabs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">tab</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">simple-tab-tab-</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">index</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token string-property property" style="color:rgb(255, 157, 0)">'aria-controls'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">simple-tab-tabpanel-</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">index</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    label</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> tab</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">interface</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">CustomTabPanelProps</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  children</span><span class="token operator" style="color:rgb(255, 157, 0)">?</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access maybe-class-name">ReactNode</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  tab</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">TabText</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  selectedTab</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">TabIndex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">props</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">CustomTabPanelProps</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> children</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> selectedTab</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> tab</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token plain">other </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> props</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> index </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> tabs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">tab</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag" style="color:rgb(255, 157, 0)">div</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">role</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">tabpanel</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">hidden</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">selectedTab </span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">!==</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> index</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">id</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token tag script language-javascript template-string string" style="color:rgb(165, 255, 144)">simple-tab-tabpanel-</span><span class="token tag script language-javascript template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token tag script language-javascript template-string interpolation" style="color:rgb(255, 157, 0)">index</span><span class="token tag script language-javascript template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">aria-labelledby</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token tag script language-javascript template-string string" style="color:rgb(165, 255, 144)">simple-tab-tab-</span><span class="token tag script language-javascript template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token tag script language-javascript template-string interpolation" style="color:rgb(255, 157, 0)">index</span><span class="token tag script language-javascript template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token tag spread" style="color:rgb(255, 157, 0)">other</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">selectedTab </span><span class="token operator" style="color:rgb(255, 157, 0)">===</span><span class="token plain"> index </span><span class="token operator" style="color:rgb(255, 157, 0)">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">sx</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> p</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript number" style="color:rgb(255, 98, 140)">3</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Typography</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">children</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Typography</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag" style="color:rgb(255, 157, 0)">div</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">default</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">BasicTabs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">selectedTab</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> setSelectedTab</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">useState</span><span class="token operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token maybe-class-name">TabIndex</span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    tabs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token string" style="color:rgb(165, 255, 144)">'Item One'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:rgb(250, 208, 0)">handleChange</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">event</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access maybe-class-name">SyntheticEvent</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> newValue</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">TabIndex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token function" style="color:rgb(250, 208, 0)">setSelectedTab</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">newValue</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">sx</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> width</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript string" style="color:rgb(165, 255, 144)">'100%'</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">sx</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> borderBottom</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript number" style="color:rgb(255, 98, 140)">1</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> borderColor</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript string" style="color:rgb(165, 255, 144)">'divider'</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Tabs</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">          </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">value</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">selectedTab</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">          </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">onChange</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">handleChange</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">          </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">aria-label</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">basic tabs example</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">        </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Tab</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token tag spread method function property-access" style="color:rgb(250, 208, 0)">customTabProps</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token tag spread string" style="color:rgb(165, 255, 144)">'Item One'</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Tab</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token tag spread method function property-access" style="color:rgb(250, 208, 0)">customTabProps</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token tag spread string" style="color:rgb(165, 255, 144)">'Item Two'</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Tab</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token tag spread method function property-access" style="color:rgb(250, 208, 0)">customTabProps</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token tag spread string" style="color:rgb(165, 255, 144)">'Item Three'</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Tabs</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">selectedTab</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">selectedTab</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">tab</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">Item One</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">        Item One</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">selectedTab</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">selectedTab</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">tab</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">Item Two</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">        Item Two</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">selectedTab</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">selectedTab</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">tab</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">Item Three</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">        Item Three</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>It's certainly more complicated than the official example (and this may well be why the official example is the way it is), but it matches my preferences.</p>
<p>As an aside, I'd like the code even more if I had the following instead of using <code>Tab</code> with <code>customTabProps</code>:</p>
<div class="language-tsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-tsx codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTab</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">tab</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">Item One</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>I avoided that in this post because it would have made the example more complicated. But I think it would be a nice improvement.</p>]]></content>
        <author>
            <name>John Reilly</name>
            <uri>https://johnnyreilly.com/about</uri>
        </author>
        <category label="React" term="React"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Static Web Apps CLI: improve performance with Vite server proxy]]></title>
        <id>https://johnnyreilly.com/static-web-apps-cli-improve-performance-with-vite-server-proxy</id>
        <link href="https://johnnyreilly.com/static-web-apps-cli-improve-performance-with-vite-server-proxy"/>
        <updated>2024-06-19T05:02:42.000Z</updated>
        <summary type="html"><![CDATA[The Static Web Apps CLI has a slow proxy server. This post shows you how to improve performance by using Vite server proxy instead.]]></summary>
        <content type="html"><![CDATA[<p>I often use the Azure Static Web Apps CLI for local development. It's not only handy when building Azure Static Web Apps, but also when building other types of web app, which also rely upon both a frontend server and some kind of API server. The Azure Static Web Apps CLI is particularly handy if you want to spoof authentication / authorization as well.</p>
<p>Changes in the behaviour of Node.js in version 17 caused issues with the Static Web Apps CLI. You can read a <a href="https://johnnyreilly.com/static-web-apps-cli-node-18-could-not-connect-to-api">previous post which discussed this</a>. However, whilst the issue was fixed in version 1.1.4 of the Static Web Apps CLI, it caused significant performance regressions in the CLIs dev server functionality.</p>
<p>This post shows you how to improve your developer experience by using Vite server proxy instead.</p>
<p><img decoding="async" loading="eager" alt="title image reading &amp;quot;Static Web Apps CLI: improve performance with Vite server proxy&amp;quot; with the Static Web Apps CLI and Vite logos" src="https://johnnyreilly.com/assets/images/title-image-3a4846e7d19616f2d2f9a6d14e3de3bd.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-the-static-web-apps-cli-does">What the Static Web Apps CLI does<a href="https://johnnyreilly.com/static-web-apps-cli-improve-performance-with-vite-server-proxy#what-the-static-web-apps-cli-does" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>The Static Web Apps CLI is a great tool for local development. It spins up a local server which proxies requests to your frontend / backend servers. This is a great way to handle local development without having to work around CORS issues. There's also an extra bonus in the box, in that you can spoof authentication / authorization as well.</p>
<p>So to be clear, for the purposes of local development, the Static Web Apps CLI is a dev server that does three important things:</p>
<ol>
<li>Proxies requests across to your front end dev server (in my case this is Vite, and this will become relevant later)</li>
<li>Proxies requests across to your backend server</li>
<li>Provides an authentication / authorization mechanism</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-issue-with-the-static-web-apps-cli">The issue with the Static Web Apps CLI<a href="https://johnnyreilly.com/static-web-apps-cli-improve-performance-with-vite-server-proxy#the-issue-with-the-static-web-apps-cli" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>All of this is great, but the performance of the proxy server has been poor since version 1.1.4 of the Static Web Apps CLI. So whilst the issue with Node.js 18 was fixed, the performance of the proxy server was impacted. Consider a comment from <a href="https://github.com/Azure/static-web-apps-cli/issues/663#issuecomment-1646061953" target="_blank" rel="noopener noreferrer">this GitHub issue</a>:</p>
<blockquote>
<p>It works for me as well, the main problem is that the performance of the site is terrible when compared not running through swa cli. Pages take long time to load and resources (for example &gt; 1s to load a font)</p>
</blockquote>
<p>Regrettably, performance has not improved significantly since that time. <a href="https://github.com/Azure/static-web-apps-cli/issues/736" target="_blank" rel="noopener noreferrer">You can read more about the performance issues in this issue</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="proxying-with-vite">Proxying with Vite<a href="https://johnnyreilly.com/static-web-apps-cli-improve-performance-with-vite-server-proxy#proxying-with-vite" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>So what can we do about this? Well, for my local development I'm using Vite as my frontend server. Vite has a server proxy feature which is very performant.</p>
<p><a href="https://github.com/bzbetty" target="_blank" rel="noopener noreferrer">Sam "Betty" McKoy</a> suggested that we could use the Vite server proxy instead of the Static Web Apps CLI proxy server <a href="https://github.com/Azure/static-web-apps-cli/issues/736#issuecomment-2143373208" target="_blank" rel="noopener noreferrer">here</a>. This is a great idea, and it's very easy to do.</p>
<p>My <code>package.json</code> file in the frontend app has the following scripts:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"scripts"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token property" style="color:rgb(255, 157, 0)">"dev"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"vite"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token property" style="color:rgb(255, 157, 0)">"start"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"swa start http://localhost:5173 --run \"npm run dev\" --api-location ./api"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Right now, once I've run <code>npm start</code> the Static Web Apps CLI will start up the frontend server and the backend server. I can then browse to <code>http://localhost:4280</code> and see my app running. Front end requests will be proxied to <code>http://localhost:5173</code> and backend requests will be proxied to my API (in my case it's an Azure Function served on <code>http://localhost:7071</code>) - but it could be somewhere else, and <a href="https://azure.github.io/static-web-apps-cli/docs/cli/swa-start/#start-api-server-manually" target="_blank" rel="noopener noreferrer">that's configurable</a>.</p>
<p>To get the Vite server proxy working, I need to change the <code>vite.config.ts</code> to add the following <code>server.proxy</code> configuration:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> defineConfig </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'vite'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// https://vitejs.dev/config/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">default</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">defineConfig</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  server</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    proxy</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token string-property property" style="color:rgb(255, 157, 0)">'/api'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        target</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'http://127.0.0.1:4280'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        changeOrigin</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        autoRewrite</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token string-property property" style="color:rgb(255, 157, 0)">'/.auth'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        target</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'http://127.0.0.1:4280'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        changeOrigin</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        autoRewrite</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>What does this do? Well, for requests that go to Vite (on <code>http://localhost:5173</code>), thanks to this change, requests with the prefix <code>/api</code> and <code>/.auth</code> are now proxied across back to the Static Web App CLI server at <code>http://localhost:4280</code>.</p>
<p>You'll note a few options being set:</p>
<ul>
<li><a href="https://vitejs.dev/config/server-options.html#server-proxy" target="_blank" rel="noopener noreferrer"><code>changeOrigin</code></a> - will change both host and origin headers to match the target</li>
<li><a href="https://github.com/http-party/node-http-proxy#options" target="_blank" rel="noopener noreferrer"><code>autoRewrite</code></a> - rewrites the location host/port on (201/301/302/307/308) redirects based on requested host/port.</li>
</ul>
<p>You'll also note we're using a <code>target</code> of <code>http://127.0.0.1:4280</code> rather than <code>http://localhost:4280</code>. This is because of the changes in Node.js 17 and above which mean that IPv6 is the default DNS instead of IPv4.</p>
<p>If you were to try using a <code>target</code> of <code>http://localhost:4280</code> in the configuration you may see an error like below due to the IPv6 DNS issue:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">run</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">1</span><span class="token plain">:38:29 PM </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">vite</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> http proxy error: /.auth/login/aad</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">run</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> Error: connect ECONNREFUSED ::1:4280</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">run</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain">     at TCPConnectWrap.afterConnect </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">as oncomplete</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">node:net:1555:16</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>If you stick with <code>http://127.0.0.1:4280</code> and you should be fine. I discovered the workaround from <a href="https://github.com/vitejs/vite/discussions/7620#discussioncomment-5689650" target="_blank" rel="noopener noreferrer">this GitHub issue</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="comparing-performance">Comparing performance<a href="https://johnnyreilly.com/static-web-apps-cli-improve-performance-with-vite-server-proxy#comparing-performance" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>With the Vite <code>server.proxy</code> configuration in place, our app is now usable on 2 ports. We can browse to both <code>http://localhost:5173</code> and <code>http://localhost:4280</code> - both ports will show our app running. Going to <code>http://localhost:5173</code> is using Vite directly for static assets and proxying back to <code>http://localhost:4280</code> for API / auth. Going to <code>http://localhost:4280</code> is using the Static Web Apps CLI to proxy to Vite for static assets, uses itself for auth and proxies any API requests.</p>
<p>I'm going to take a medium sized app and run it with both configurations. I'll then use the Chrome DevTools to compare the performance of the two configurations. It'll be a basic test, but it should give us an idea of the performance difference.</p>
<p>The Static Web App CLI (<code>http://localhost:4280</code>) takes just over <strong>10 seconds</strong> to load the app.</p>
<p><img decoding="async" loading="lazy" alt="screenshot of devtools showing 10 seconds finish time" src="https://johnnyreilly.com/assets/images/devtools-performance-static-web-app-cli-2db8559ac8179393f298521d5efcc14f.png" width="1430" height="50" class="img_ev3q"></p>
<p>The Vite server proxy (<code>http://localhost:5173</code>) takes just around <strong>1.5 seconds</strong> to load the app.</p>
<p><img decoding="async" loading="lazy" alt="screenshot of devtools showing 10 seconds finish time" src="https://johnnyreilly.com/assets/images/devtools-performance-vite-server-proxy-cf656f14743a3cdaf651fa1203796072.png" width="1430" height="50" class="img_ev3q"></p>
<p>This is a significant improvement in performance. The Vite server proxy approach is nearly <strong>10x faster</strong> than the Static Web Apps CLI proxy server.</p>
<p>It's worth noting that we're still using the Static Web Apps CLI for authentication / authorization and for hitting the backend server. However, given that static assets are by far the most common request, this change will make a big difference to your local development experience.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="summary">Summary<a href="https://johnnyreilly.com/static-web-apps-cli-improve-performance-with-vite-server-proxy#summary" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>The Static Web Apps CLI is a great tool for local development. However, the performance of the proxy server has been poor since version 1.1.4. This post has shown you how to improve performance by using the Vite server proxy instead. The Vite server proxy is much faster than the Static Web Apps CLI proxy server. This is a simple change to make, and it will make a big difference to your local development experience. Give it a try and see how much faster your app loads!</p>]]></content>
        <author>
            <name>John Reilly</name>
            <uri>https://johnnyreilly.com/about</uri>
        </author>
        <category label="Azure Static Web Apps" term="Azure Static Web Apps"/>
        <category label="Node.js" term="Node.js"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Generate a Word document in ASP.NET]]></title>
        <id>https://johnnyreilly.com/generate-word-doc-in-asp-net</id>
        <link href="https://johnnyreilly.com/generate-word-doc-in-asp-net"/>
        <updated>2024-03-19T18:59:22.000Z</updated>
        <summary type="html"><![CDATA[Learn how to generate a Word document using the Open XML library in ASP.NET.]]></summary>
        <content type="html"><![CDATA[<p>Generating a Word document in the context of an ASP.NET controller is quite simple to do. However, it took me a little experimentation to work out just what was required. This post documents (pun <strong>very</strong> much intended) what we need to do.</p>
<p><img decoding="async" loading="eager" alt="title image reading &amp;quot;Generate a Word document in ASP.NET&amp;quot; with the Word and ASP.NET logos" src="https://johnnyreilly.com/assets/images/title-image-712677834ebf7d35a976a9ef66b32c70.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="open-xml">Open XML<a href="https://johnnyreilly.com/generate-word-doc-in-asp-net#open-xml" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>To generate a Word document in .NET, the most straightforward way is to use the <a href="https://github.com/dotnet/Open-XML-SDK" target="_blank" rel="noopener noreferrer">Open XML library</a>. We can install the library using the following command:</p>
<div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">dotnet </span><span class="token function" style="color:rgb(250, 208, 0)">add</span><span class="token plain"> package DocumentFormat.OpenXml</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="generating-a-word-document-in-an-aspnet-controller">Generating a Word document in an ASP.NET controller<a href="https://johnnyreilly.com/generate-word-doc-in-asp-net#generating-a-word-document-in-an-aspnet-controller" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>With the Open XML library installed, we can create a new Word document in the context of an ASP.NET controller. The following code demonstrates how to do this:</p>
<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">Microsoft</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">AspNetCore</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Mvc</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">DocumentFormat</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">OpenXml</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">DocumentFormat</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">OpenXml</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Packaging</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">DocumentFormat</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">OpenXml</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Wordprocessing</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">namespace</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">MyApp</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Controllers</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token attribute class-name" style="color:rgb(250, 208, 0)">ApiController</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">class</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">WordDocumentController</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> ControllerBase</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token attribute class-name" style="color:rgb(250, 208, 0)">HttpGet</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token attribute attribute-arguments string" style="color:rgb(165, 255, 144)">"api/generate-word-document"</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">IActionResult</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">GetWordDocument</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// Create a new Word document</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> stream </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">MemoryStream</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> document </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> WordprocessingDocument</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Create</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">stream</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> WordprocessingDocumentType</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Document</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> mainPart </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> document</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">AddMainDocumentPart</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        mainPart</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Document </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">Document</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// Add content to the document</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> body </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> mainPart</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Document</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">AppendChild</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">Body</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> paragraph </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> body</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">AppendChild</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">Paragraph</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> run </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> paragraph</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">AppendChild</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">Run</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        run</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">AppendChild</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">Text</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"Hello, World!"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// Save the document to a memory stream</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        document</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Save</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> byteArray </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> stream</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">ToArray</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// Return the document as a file</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">File</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">byteArray</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"application/vnd.openxmlformats-officedocument.wordprocessingml.document"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"document.docx"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>In this example, the <code>GetWordDocument</code> method creates a new Word document and adds the text "Hello, World!" to it. If we navigate to the <code>/api/generate-word-document</code> endpoint, we will receive a Word document with the text "Hello, World!" in it.</p>
<p>The document is then saved to a memory stream and returned as a file. The <code>File</code> method is used to return the document as a file with the MIME type <code>application/vnd.openxmlformats-officedocument.wordprocessingml.document</code> (which basically is the server saying "Hey! This is a Word document!").</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://johnnyreilly.com/generate-word-doc-in-asp-net#conclusion" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Generating a Word document in an ASP.NET controller is quite simple to do using the Open XML library. We can create a new Word document, add content to it, and return it as a file using the <code>File</code> method.</p>
<p>To learn more about how to add content to a Word document using the Open XML library, it's worth reading the <a href="https://learn.microsoft.com/en-us/office/open-xml/word/overview" target="_blank" rel="noopener noreferrer">Open XML SDK documentation</a>.</p>
<p>I hope this post helps you to generate Word documents in your ASP.NET applications!</p>]]></content>
        <author>
            <name>John Reilly</name>
            <uri>https://johnnyreilly.com/about</uri>
        </author>
        <category label="ASP.NET" term="ASP.NET"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Serialising ASP.NET method calls for later execution]]></title>
        <id>https://johnnyreilly.com/serialising-aspnet-method-calls-for-later-execution</id>
        <link href="https://johnnyreilly.com/serialising-aspnet-method-calls-for-later-execution"/>
        <updated>2024-05-14T12:55:48.000Z</updated>
        <summary type="html"><![CDATA[How can we take a method call, serialise it, perhaps store it in a database, and then later rehydrate and execute?]]></summary>
        <content type="html"><![CDATA[<p>Let's start with "why". Imagine you have an operation that you'd like to perform, but before that operation is performed, some other things need to take place first. Maybe it needs to be approved by someone, maybe you need an explicit record of what method is to be executed.</p>
<p>Now you could build a mechanism to manually cater for each scenario that triggered a method call. But that's a lot of boilerplate code for each implementation, and given we might want to cater for many scenarios, it wouldn't scale particularly well as an approach.</p>
<p>So how can we take a method call, serialise it, perhaps store it in a database, and then later rehydrate and execute?</p>
<p><img decoding="async" loading="eager" alt="title image reading &amp;quot;Serialising ASP.NET method calls for later execution&amp;quot; with the C# logo" src="https://johnnyreilly.com/assets/images/title-image-0c2344bb797a565a0d579f3ef0c011c3.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-does-serialising-our-method-call-require">What does serialising our method call require?<a href="https://johnnyreilly.com/serialising-aspnet-method-calls-for-later-execution#what-does-serialising-our-method-call-require" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>To serialise a method call, what do we need to store? Three things:</p>
<ol>
<li>The type of object that contains the method we want to subsequently invoke</li>
<li>The method on that object</li>
<li>The parameter values that will be passed to the method when it is called</li>
</ol>
<p>Pretty simple, right? It's worth highlighting that there is an underlying assumption for this approach:</p>
<p><strong>The method call does not depend on the object being in a specific state for the operation to succeed.</strong></p>
<p>So if, before calling a method on that object, you need to call another method called <code>OpenConnection</code> (for example) then this approach would not work. Likewise if subsequent cleanup is required after a method is called, this approach would not work.</p>
<p>The analogy may not be entirely accurate, but think of each method call as needing to be an atomic operation and you're probably heading in the right direction.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="how-do-we-serialise-our-method-call">How do we serialise our method call?<a href="https://johnnyreilly.com/serialising-aspnet-method-calls-for-later-execution#how-do-we-serialise-our-method-call" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>First of all, we need a data structure to store the information we need. We could use a <code>record</code> like this:</p>
<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">record</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">MethodCall</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> ServiceName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> MethodName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">object</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> Parameters</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This record will store the name of the service, the name of the method, and the parameters that will be passed to the method when it is called.</p>
<p>Next we need an example service that we can call. For instance:</p>
<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">interface</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">IOurService</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">Task</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token return-type class-name keyword" style="color:rgb(255, 157, 0)">bool</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">DoAThing</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">decimal</span><span class="token plain"> amount</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">bool</span><span class="token plain"> isApproved</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>An implementation of this service would be registered with the DI container when the application starts up. We don't need to know anything about the implementation of the service, just that it exists and that we can call methods on it.</p>
<p>If we consider a call to this method, it might look like this:</p>
<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">IOurService</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">DoAThing</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"the name"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">100m</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The above can be represented as a <code>MethodCall</code> like this:</p>
<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token class-name" style="color:rgb(250, 208, 0)">MethodCall</span><span class="token plain"> methodCall </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">ServiceName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">typeof</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token type-expression class-name" style="color:rgb(250, 208, 0)">IOurService</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">FullName </span><span class="token operator" style="color:rgb(255, 157, 0)">??</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">throw</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">InvalidOperationException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"Service name cannot be null"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">MethodName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">IOurService</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">DoAThing</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">Parameters</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"the name"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">100m</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>I'm not going to do so in this post, but the <code>MethodCall</code> could be stored in a database. This is powerful because it means that we can store the method call, and then later rehydrate it and execute it.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="how-do-we-deserialise-our-method-call-and-execute-it">How do we deserialise our method call and execute it?<a href="https://johnnyreilly.com/serialising-aspnet-method-calls-for-later-execution#how-do-we-deserialise-our-method-call-and-execute-it" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Now that we've looked at how to serialise a method call, let's look at how we can deserialise and execute it. We need a class that can take a <code>MethodCall</code> and execute it. Herewith the <code>MethodCallInvoker</code> class that does just that:</p>
<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">class</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">MethodCallInvoker</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name" style="color:rgb(250, 208, 0)">IServiceProvider</span><span class="token plain"> serviceProvider</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name" style="color:rgb(250, 208, 0)">MethodCall</span><span class="token plain"> operation</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">async</span><span class="token plain"> </span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">Task</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token return-type class-name keyword" style="color:rgb(255, 157, 0)">object</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">InvokeAsync</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name" style="color:rgb(250, 208, 0)">Type</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> serviceType </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> Type</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetType</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">operation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">ServiceName </span><span class="token operator" style="color:rgb(255, 157, 0)">??</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">throw</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">InvalidOperationException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"Service name cannot be null"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">object</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> service </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> serviceProvider</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetService</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">serviceType </span><span class="token operator" style="color:rgb(255, 157, 0)">??</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">throw</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">InvalidOperationException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"Service type cannot be null"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name" style="color:rgb(250, 208, 0)">MethodInfo</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> serviceMethod </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> serviceType</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetMethod</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">operation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">MethodName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">??</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">throw</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">InvalidOperationException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"Method info cannot be null"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name" style="color:rgb(250, 208, 0)">List</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">object</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> parameters </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name" style="color:rgb(250, 208, 0)">ParameterInfo</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> requiredParameters </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> serviceMethod</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetParameters</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">for</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">int</span><span class="token plain"> i </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">0</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"> i </span><span class="token operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token plain"> requiredParameters</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Length</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"> i</span><span class="token operator" style="color:rgb(255, 157, 0)">++</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token class-name" style="color:rgb(250, 208, 0)">ParameterInfo</span><span class="token plain"> requiredParameter </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> requiredParameters</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">i</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">object</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> suppliedParameter </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> operation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Parameters</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">i</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">bool</span><span class="token plain"> suppliedValueIsOfCorrectType </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> requiredParameter</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">ParameterType </span><span class="token operator" style="color:rgb(255, 157, 0)">==</span><span class="token plain"> suppliedParameter</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetType</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">suppliedValueIsOfCorrectType</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                parameters</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Add</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">operation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Parameters</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">i</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">else</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// Convert.ChangeType is used to convert the supplied parameter to the required type eg from double to decimal</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                parameters</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Add</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">Convert</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">ChangeType</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">suppliedParameter</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> requiredParameter</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">ParameterType</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> CultureInfo</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">InvariantCulture</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name" style="color:rgb(250, 208, 0)">Task</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> task </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">Task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain">serviceMethod</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Invoke</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">service</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token range operator" style="color:rgb(255, 157, 0)">..</span><span class="token plain">parameters</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">??</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">throw</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">InvalidOperationException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Method </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp">operation</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">MethodName</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)"> did not return a task"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">object</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> result </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetType</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">IsGenericType </span><span class="token operator" style="color:rgb(255, 157, 0)">&amp;&amp;</span><span class="token plain"> task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetType</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetGenericTypeDefinition</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">==</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">typeof</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token type-expression class-name" style="color:rgb(250, 208, 0)">Task</span><span class="token type-expression class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token type-expression class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// Get the result using reflection</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token class-name" style="color:rgb(250, 208, 0)">PropertyInfo</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> resultProperty </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetType</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetProperty</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"Result"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            result </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> resultProperty</span><span class="token punctuation" style="color:rgb(255, 255, 255)">?.</span><span class="token function" style="color:rgb(250, 208, 0)">GetValue</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> result</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The <code>MethodCallInvoker</code> class takes an <code>IServiceProvider</code> and a <code>MethodCall</code> in its constructor. Remember that the <code>IServiceProvider</code> can be used to get a service that has been registered with the DI container. By giving the <code>MethodCallInvoker</code> the <code>IServiceProvider</code>, we can get the service that we need to call the method on. The <code>InvokeAsync</code> method uses reflection to get the service, and the method that needs to be called.</p>
<p>We then do some more reflection gymnastics to ensure that the parameters that are passed to the method are of the correct type. When it deserialises the parameters, the converter will make a best guess on the types of the parameters. If a parameter is not of the correct type, it uses <code>Convert.ChangeType</code> to convert the parameter to the correct type. The canonical example of this is converting a <code>double</code> to a <code>decimal</code>.</p>
<p>With all this done, the <code>MethodCallInvoker</code> is ready to call the method. Because it's likely that the method being invoked will be an <code>async</code> method, we expect them to return a <code>Task</code>. It's possible there may be a value returned as well, and if there is we unwrap it from the <code>Task</code> and return it.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="how-do-we-use-the-methodcallinvoker">How do we use the <code>MethodCallInvoker</code>?<a href="https://johnnyreilly.com/serialising-aspnet-method-calls-for-later-execution#how-do-we-use-the-methodcallinvoker" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Let's do an end to end demonstration of how to serialise a method call, deserialise it and execute it. Here's how you can do it:</p>
<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token class-name" style="color:rgb(250, 208, 0)">MethodCall</span><span class="token plain"> methodCall </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">ServiceName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">typeof</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token type-expression class-name" style="color:rgb(250, 208, 0)">IOurService</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">FullName </span><span class="token operator" style="color:rgb(255, 157, 0)">??</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">throw</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">InvalidOperationException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"Service name cannot be null"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">MethodName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">IOurService</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">DoAThing</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">Parameters</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"the name"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">100m</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> json </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> Newtonsoft</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Json</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">JsonConvert</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">SerializeObject</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">methodCall</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token class-name" style="color:rgb(250, 208, 0)">MethodCall</span><span class="token plain"> deserialized </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> Newtonsoft</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Json</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">JsonConvert</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token generic-method function" style="color:rgb(250, 208, 0)">DeserializeObject</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token generic-method generic class-name" style="color:rgb(250, 208, 0)">MethodCall</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">json</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">??</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">throw</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">Exception</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"Problem deserializing"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">object</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> result </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">MethodCallInvoker</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">_serviceProvider</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> deserialized</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">InvokeAsync</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The above code serialises the <code>MethodCall</code> to a JSON string, deserialises it back to a <code>MethodCall</code>, and then uses the <code>MethodCallInvoker</code> to execute the method.</p>
<p>Why are we using <code>Newtonsoft.Json</code> for our serialisation / deserialisation in this example? We don't have to, but let's say we're persisting this method call to a Cosmos DB, Cosmos uses JSON.NET for JSON handling. So this somewhat simulates what would happen during a potential persistence to a Cosmos container / subsequent loading from a Cosmos container. Otherwise I'd likely use <code>System.Text.Json</code>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://johnnyreilly.com/serialising-aspnet-method-calls-for-later-execution#conclusion" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>In this post, we've looked at how we can serialise a method call (which could be stored in a database), and then later rehydrate and execute it. We've seen how we can use reflection to get the service and method that we need to call, and how we can convert the parameters to the correct type.</p>]]></content>
        <author>
            <name>John Reilly</name>
            <uri>https://johnnyreilly.com/about</uri>
        </author>
        <category label="Azure" term="Azure"/>
        <category label="C#" term="C#"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Multiline strings in .env files]]></title>
        <id>https://johnnyreilly.com/multiline-strings-dot-env-files</id>
        <link href="https://johnnyreilly.com/multiline-strings-dot-env-files"/>
        <updated>2024-03-12T14:13:40.000Z</updated>
        <summary type="html"><![CDATA[Learn how to use multiline strings in .env files.]]></summary>
        <content type="html"><![CDATA[<p>I love using <code>.env</code> files to configure my applications. They're a great way to keep configuration in one place and to keep it out of the codebase. They're also a great way to keep secrets out of the codebase.</p>
<p>But what if you need to use a multiline string in a <code>.env</code> file? How do you do that? You just do it:</p>
<div class="language-env codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-env codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">SINGLE_LINE="you know what..."</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">MULTI_LINE="you know what you did</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">LAST SUMMER"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>That's right, you just use a newline character. It's that simple. Oddly, searching for that on the internet didn't yield the answer I was looking for. So I'm writing it down here for posterity.</p>
<p>With your <code>.env</code> file in place, you can then consume it in your application using a package like <a href="https://www.npmjs.com/package/dotenv" target="_blank" rel="noopener noreferrer"><code>dotenv</code></a>. Or if you'd like to use a bash script to consume the <code>.env</code> file, you can do it like this:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token shebang important">#!/usr/bin/env bash</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(250, 208, 0)">set</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">-a</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(250, 208, 0)">source</span><span class="token plain"> test.env</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(250, 208, 0)">set</span><span class="token plain"> +a</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> run start </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># or whatever you need to do</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>John Reilly</name>
            <uri>https://johnnyreilly.com/about</uri>
        </author>
        <category label="Node.js" term="Node.js"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[MUI React Tree View: check children, uncheck parents]]></title>
        <id>https://johnnyreilly.com/mui-react-tree-view-check-children-uncheck-parents</id>
        <link href="https://johnnyreilly.com/mui-react-tree-view-check-children-uncheck-parents"/>
        <updated>2024-06-11T13:02:41.000Z</updated>
        <summary type="html"><![CDATA[Learn how to use the MUI treeview component with behaviour that selects child nodes when parents are select and deselects parent nodes when children are deselected.]]></summary>
        <content type="html"><![CDATA[<p>Every now and then, I need to use a treeview component in a React application. The Material-UI (MUI) library provides a <a href="https://mui.com/x/react-tree-view/" target="_blank" rel="noopener noreferrer">treeview component</a> that is very useful. However, some of the default behaviours of the component differ from that which you typically find in a treeview component. I'm speaking, of course, about node selection. I'm used to a treeview component that, when a parent node is selected, auto selects the child nodes underneath. And by turn, when nodes are deselected, the parent nodes get deselected.</p>
<p>This post documents how to implement this behaviour with the MUI treeview component.</p>
<p>Since initially writing this, I've learned that it is likely that the kind of behaviour I'm hand-rolling here, will natively land in the component. So, all being well, what follows should become unnecessary! To track native support <a href="https://github.com/mui/mui-x/issues/12883" target="_blank" rel="noopener noreferrer">watch this GitHub issue</a>.</p>
<p><img decoding="async" loading="eager" alt="title image reading &amp;quot;MUI React Tree View: check children, uncheck parents&amp;quot; with the MUI logo" src="https://johnnyreilly.com/assets/images/title-image-0461be933e2465270577c307ebf0afd5.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-default-behaviour-and-the-desired-behaviour">The default behaviour and the desired behaviour<a href="https://johnnyreilly.com/mui-react-tree-view-check-children-uncheck-parents#the-default-behaviour-and-the-desired-behaviour" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>By default, the MUI treeview component checks and unchecks nodes individually. Each node is an island; when a node is selected or deselected, it has no bearing on any other nodes.</p>
<p>What I'd rather is some relationship between parent and child nodes during selection / deselection. The behaviour I'd like has the following characteristics:</p>
<ul>
<li>when a parent node is selected, all child nodes are selected</li>
<li>when a parent node is deselected, all child nodes are deselected</li>
<li>when a child node is deselected, the parent node is deselected, and any children are deselected also</li>
<li>finally, if all children are selected, the parent node should be selected.</li>
</ul>
<p>This is the behaviour that I'm used to in a treeview component. In action it looks like this:</p>
<p><img decoding="async" loading="lazy" alt="animated gif demonstrating new behaviour" src="https://johnnyreilly.com/assets/images/treeview-demo-951556826e0d9183d1fa0aa14e99ec2d.gif" width="2000" height="1360" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-code">The code<a href="https://johnnyreilly.com/mui-react-tree-view-check-children-uncheck-parents#the-code" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>We can implement this behaviour by tracking the selected nodes and then determining which nodes should be selected based on the current selection. The code below demonstrates how to do this:</p>
<div class="language-tsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-tsx codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports operator" style="color:rgb(255, 157, 0)">*</span><span class="token imports"> </span><span class="token imports keyword module" style="color:rgb(255, 157, 0)">as</span><span class="token imports"> </span><span class="token imports maybe-class-name">React</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'react'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">Box</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/material/Box'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">RichTreeView</span><span class="token imports"> </span><span class="token imports punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/x-tree-view/RichTreeView'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">TreeViewBaseItem</span><span class="token imports"> </span><span class="token imports punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/x-tree-view/models'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token constant" style="color:rgb(250, 208, 0)">MUI_X_PRODUCTS</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">TreeViewBaseItem</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'grid'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    label</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'Data Grid'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    children</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'grid-community'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> label</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/x-data-grid'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'grid-pro'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> label</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/x-data-grid-pro'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'grid-premium'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> label</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/x-data-grid-premium'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'pickers'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    label</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'Date and Time Pickers'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    children</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'pickers-community'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> label</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/x-date-pickers'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'pickers-pro'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> label</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/x-date-pickers-pro'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'charts'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    label</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'Charts'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    children</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'charts-community'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> label</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/x-charts'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'tree-view'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    label</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'Tree View'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    children</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'tree-view-community'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> label</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/x-tree-view'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">getParentNode</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  items</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">TreeViewBaseItem</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">TreeViewBaseItem</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">|</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">undefined</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">for</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> item </span><span class="token keyword" style="color:rgb(255, 157, 0)">of</span><span class="token plain"> items</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">item</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">children</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">item</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">children</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">some</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">child</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> child</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">id</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">===</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// The current item is the parent of the supplied id</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> item</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">else</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// Recursively call the function for the children of the current item</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> parentNode </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">getParentNode</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">item</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">children</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">parentNode</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> parentNode</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// No parent found</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">undefined</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">getAllParentIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">items</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">TreeViewBaseItem</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> parentIds</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">let</span><span class="token plain"> parent </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">getParentNode</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">items</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">while</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">parent</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        parentIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">push</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">parent</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        parent </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">getParentNode</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">items</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> parent</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> parentIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">getSelectedIdsAndChildrenIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  items</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">TreeViewBaseItem</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  selectedIds</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> selectedIdIncludingChildrenIds </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">Set</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token plain">selectedIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">for</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> item </span><span class="token keyword" style="color:rgb(255, 157, 0)">of</span><span class="token plain"> items</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">selectedIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">includes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">item</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// Add the current item's id to the result array</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      selectedIdIncludingChildrenIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">add</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">item</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// Recursively call the function for the children of the current item</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">item</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">children</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> childrenIds </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> item</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">children</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">map</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">child</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> child</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> childrenSelectedIds </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">getSelectedIdsAndChildrenIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          item</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">children</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          childrenIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        childrenSelectedIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">forEach</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">selectedId</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          selectedIdIncludingChildrenIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">add</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">selectedId</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">else</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">item</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">children</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// walk the children to see if selections lay in there also</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> childrenSelectedIds </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">getSelectedIdsAndChildrenIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        item</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">children</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        selectedIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      childrenSelectedIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">forEach</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">selectedId</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        selectedIdIncludingChildrenIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">add</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">selectedId</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token known-class-name class-name" style="color:rgb(250, 208, 0)">Array</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">from</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">selectedIdIncludingChildrenIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">determineIdsToSet</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  items</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">TreeViewBaseItem</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  newIds</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  currentIds</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> isDeselectingNode </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> currentIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">length</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain"> newIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">length</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">isDeselectingNode</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> removed </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> currentIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">filter</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">!</span><span class="token plain">newIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">includes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token number" style="color:rgb(255, 98, 140)">0</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> parentIdsToRemove </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">getAllParentIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">items</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> removed</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> childIdsToRemove </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">getSelectedIdsAndChildrenIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">items</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">removed</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> newIdsWithParentsAndChildrenRemoved </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> newIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">filter</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">!</span><span class="token plain">parentIdsToRemove</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">includes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">&amp;&amp;</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">!</span><span class="token plain">childIdsToRemove</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">includes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> newIdsWithParentsAndChildrenRemoved</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> added </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> newIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">filter</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">!</span><span class="token plain">currentIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">includes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token number" style="color:rgb(255, 98, 140)">0</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> idsToSet </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">getSelectedIdsAndChildrenIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">items</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> newIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">let</span><span class="token plain"> parent </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">getParentNode</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">items</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> added</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">while</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">parent</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> childIds </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> parent</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">children</span><span class="token operator" style="color:rgb(255, 157, 0)">?.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">map</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">node</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> node</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">??</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> allChildrenSelected </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> childIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">every</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      idsToSet</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">includes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">allChildrenSelected</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      idsToSet</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">push</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">parent</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      parent </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">getParentNode</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">items</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> parent</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">else</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token keyword" style="color:rgb(255, 157, 0)">break</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> idsToSet</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">default</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">CheckboxSelection</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">selectedIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> setSelectedIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">useState</span><span class="token operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:rgb(250, 208, 0)">handleSelectedItemsChange</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    _event</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access maybe-class-name">SyntheticEvent</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    ids</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token function" style="color:rgb(250, 208, 0)">setSelectedIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token function" style="color:rgb(250, 208, 0)">determineIdsToSet</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token constant" style="color:rgb(250, 208, 0)">MUI_X_PRODUCTS</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> ids</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> selectedIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">sx</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> height</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript number" style="color:rgb(255, 98, 140)">264</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> flexGrow</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript number" style="color:rgb(255, 98, 140)">1</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> maxWidth</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript number" style="color:rgb(255, 98, 140)">400</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">RichTreeView</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">        </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">defaultExpandedItems</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript constant" style="color:rgb(250, 208, 0)">MUI_X_PRODUCTS</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token tag script language-javascript method function property-access" style="color:rgb(250, 208, 0)">map</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">x</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript arrow operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> x</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token tag script language-javascript property-access" style="color:rgb(255, 157, 0)">id</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">        </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">multiSelect</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript boolean" style="color:rgb(255, 98, 140)">true</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">        </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">checkboxSelection</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript boolean" style="color:rgb(255, 98, 140)">true</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">        </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">selectedItems</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">selectedIds</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">        </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">onSelectedItemsChange</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">handleSelectedItemsChange</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">        </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">items</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript constant" style="color:rgb(250, 208, 0)">MUI_X_PRODUCTS</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>You'll see above that we're using the <code>RichTreeView</code> component from <code>@mui/x-tree-view</code>. We're setting it to <code>multiSelect</code> and <code>checkboxSelection</code> to allow for multiple selections and to show checkboxes next to each node. We're also tracking the selected nodes in the <code>selectedIds</code> state variable.</p>
<p>The <code>handleSelectedItemsChange</code> function is called whenever the selection changes. It determines which nodes should be selected based on the current selection and the new selection. The <code>determineIdsToSet</code> function is responsible for this logic.</p>
<p>The first thing it does is determine if a node is being deselected or selected, by comparing the length of the current selection with the new selection. If a node is being deselected, it finds the parent and child nodes of the deselected node and removes them from the new selection. If a node is being selected, it selects all the children of that node. It also finds the parent node and checks if all child nodes are selected. If they are, it selects the parent node.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://johnnyreilly.com/mui-react-tree-view-check-children-uncheck-parents#conclusion" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>The code above demonstrates how to implement a treeview component with parent-child node selection behaviour. This behaviour is, in my opinion, more intuitive and user-friendly than the default behaviour of the MUI treeview component.</p>
<p>You can also see this code in action <a href="https://stackblitz.com/edit/mui-react-tree-view-check-children-uncheck-parents?file=Demo.tsx" target="_blank" rel="noopener noreferrer">on StackBlitz</a>.</p>]]></content>
        <author>
            <name>John Reilly</name>
            <uri>https://johnnyreilly.com/about</uri>
        </author>
        <category label="React" term="React"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Azure Cosmos DB: container items and generics]]></title>
        <id>https://johnnyreilly.com/azure-cosmosdb-container-item-generics</id>
        <link href="https://johnnyreilly.com/azure-cosmosdb-container-item-generics"/>
        <updated>2024-04-11T14:31:06.000Z</updated>
        <summary type="html"><![CDATA[Learn how to use generics to store and retrieve different types of object in an Azure Cosmos DB Container. And how to deserialize the data property into a C# object of a specific type.]]></summary>
        <content type="html"><![CDATA[<p>Cosmos DB is a great database for storing objects. But what if you want to store subtly different types of object in the same container? This post demonstrates how you can use generics to store and retrieve different types of object in an Azure Cosmos DB Container using C#.</p>
<p><img decoding="async" loading="eager" alt="title image reading &amp;quot;Azure Cosmos DB: container items and generics&amp;quot; with the Cosmos DB logo" src="https://johnnyreilly.com/assets/images/title-image-41b07cf9d68421ae65ff7cc2350c46f2.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-problem">The problem<a href="https://johnnyreilly.com/azure-cosmosdb-container-item-generics#the-problem" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>The situation I have in mind isn't entirely different types of object. Rather, it's a standard type of object with a single property that can be of different types. Consider the following record:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"id"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"overview"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"itemName"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"vw-beetle"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"type"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"car"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"data"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"Wheels"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">4</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"Colour"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"blue"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"createdAt"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"2024-03-28T10:55:57.860484+00:00"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"createdBy"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"john.reilly"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"updatedAt"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"2024-03-28T14:31:37.9882095+00:00"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"updatedBy"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"john.reilly"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"_rid"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"NisFAIjrg3wFAAAAAAAAAA=="</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"_self"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"dbs/NisFAA==/colls/NisFAIjrg3w=/docs/NisFAIjrg3wFAAAAAAAAAA==/"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"_etag"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"\"bd005ad6-0000-0c00-0000-66057f4a0000\""</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"_attachments"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"attachments/"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"_ts"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">1711636298</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The <code>data</code> property is a JSON object that can be of any shape. In this case, it's a car with four wheels and a blue colour. But it could just as easily be a house with a number of rooms and a garden. Or a person with a name and an age. Or a book with a title and an author. You get the idea.</p>
<p>How can we store and retrieve these objects in a Cosmos DB container with C#?</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="a-generic-solution">A generic solution<a href="https://johnnyreilly.com/azure-cosmosdb-container-item-generics#a-generic-solution" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>The answer is to use generics. Here's the <code>MyItem</code> record that we're using in the above code:</p>
<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockTitle_Ktv7">MyItem.cs</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">namespace</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">ContainerApp</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Model</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Database</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token preprocessor property" style="color:rgb(255, 157, 0)">#</span><span class="token preprocessor property directive keyword" style="color:rgb(255, 157, 0)">pragma</span><span class="token preprocessor property" style="color:rgb(255, 157, 0)"> warning disable IDE1006</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">record</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">MyItem</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// &lt;summary&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// This is the partition key</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// &lt;/summary&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> itemName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> type</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name" style="color:rgb(250, 208, 0)">DateTimeOffset</span><span class="token plain"> createdAt</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> createdBy</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name" style="color:rgb(250, 208, 0)">DateTimeOffset</span><span class="token plain"> updatedAt</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> updatedBy</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token generic-method function" style="color:rgb(250, 208, 0)">MyItem</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token generic-method generic class-name keyword" style="color:rgb(255, 157, 0)">object</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> creditReviewPackName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> itemName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> type</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> createdAt</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> createdBy</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> updatedAt</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> updatedBy</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">record</span><span class="token plain"> </span><span class="token generic-method function" style="color:rgb(250, 208, 0)">MyItem</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token generic-method generic class-name" style="color:rgb(250, 208, 0)">TData</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// &lt;summary&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// This is the partition key</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// &lt;/summary&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> itemName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> type</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name" style="color:rgb(250, 208, 0)">TData</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> data</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name" style="color:rgb(250, 208, 0)">DateTimeOffset</span><span class="token plain"> createdAt</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> createdBy</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name" style="color:rgb(250, 208, 0)">DateTimeOffset</span><span class="token plain"> updatedAt</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> updatedBy</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token preprocessor property" style="color:rgb(255, 157, 0)">#</span><span class="token preprocessor property directive keyword" style="color:rgb(255, 157, 0)">pragma</span><span class="token preprocessor property" style="color:rgb(255, 157, 0)"> warning restore IDE1006</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The <code>MyItem</code> record is a generic record with a single type parameter <code>TData</code>. The first record is a convenience record that uses <code>object</code> as the type parameter. This is the record that we'll use when we're writing a record that does not have a <code>data</code> property, or when we're reading a record and we don't initially care about the <code>data</code> property.</p>
<p>The <code>type</code> field represents the type of <code>data</code>. This is a string that can be used to distinguish between different types of object. In the example above, the type is "car". In other examples, the type might be "house", "person", or "book". We can use this in future to filter the data by type and to deserialize the <code>data</code> property into the correct C# type; for instance <code>Car</code>. We just need to know how the <code>type</code> string maps to a particular C# type.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="writing-to-and-reading-from-the-cosmos-db-container">Writing to and reading from the Cosmos DB container<a href="https://johnnyreilly.com/azure-cosmosdb-container-item-generics#writing-to-and-reading-from-the-cosmos-db-container" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>In the <code>DatabaseMyItemService</code> class, we have methods to write to and read from the Cosmos DB container:</p>
<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockTitle_Ktv7">DatabaseMyItemService.cs</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">System</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Net</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">Microsoft</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Azure</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Cosmos</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">ContainerApp</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Model</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Database</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">ContainerApp</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Utilities</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">namespace</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">ContainerApp</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Services</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">class</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">DatabaseMyItemService</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token type-list class-name" style="color:rgb(250, 208, 0)">IDatabaseMyItemService</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> DatabaseName </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"my-database"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> ContainerNameMyItems </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"my-items"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">readonly</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">CosmosClient</span><span class="token plain"> _client</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">readonly</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">ILogger</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token class-name" style="color:rgb(250, 208, 0)">DatabaseMyItemService</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">DatabaseMyItemService</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">ILogger</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token class-name" style="color:rgb(250, 208, 0)">DatabaseMyItemService</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">AppSettings</span><span class="token plain"> appSettings</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        _client </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">CosmosClient</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">connectionString</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> appSettings</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">CosmosConnectionString</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        _logger </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">async</span><span class="token plain"> </span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">Task</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">MyItem</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">TData</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> </span><span class="token generic-method function" style="color:rgb(250, 208, 0)">UpsertItem</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token generic-method generic class-name" style="color:rgb(250, 208, 0)">TData</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">MyItem</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token class-name" style="color:rgb(250, 208, 0)">TData</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> myItem</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">try</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogInformation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Upserting </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">MyItem</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)"> with </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">myItem</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">itemName</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">: {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">myItem</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">itemName</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}}"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> myItem</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">itemName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> container </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> _client</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetDatabase</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">DatabaseName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetContainer</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">ContainerNameMyItems</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token class-name" style="color:rgb(250, 208, 0)">MyItem</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token class-name" style="color:rgb(250, 208, 0)">TData</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> savedItem </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> container</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">UpsertItemAsync</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">myItem</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">PartitionKey</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">myItem</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">itemName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> savedItem</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">CosmosException</span><span class="token plain"> ex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogError</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">ex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Problem upserting </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">MyItem</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)"> with </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">myItem</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">itemName</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">: {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">myItem</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">itemName</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}}"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> myItem</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">itemName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">throw</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">Exception</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Problem upserting </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">MyItem</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)"> with </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">myItem</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">itemName</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">: </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp">myItem</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">itemName</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> ex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">async</span><span class="token plain"> </span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">Task</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">MyItem</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">TData</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> </span><span class="token generic-method function" style="color:rgb(250, 208, 0)">GetItem</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token generic-method generic class-name" style="color:rgb(250, 208, 0)">TData</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> itemName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">try</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogInformation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Looking up </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">MyItem</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)"> with </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">itemName</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">: {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">itemName</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}}"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> itemName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> container </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> _client</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetDatabase</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">DatabaseName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetContainer</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">ContainerNameMyItems</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// In this simplified example we're intentionally using id as partition key - https://stackoverflow.com/questions/54636852/implications-of-using-id-for-the-partition-key-in-cosmosdb</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token class-name" style="color:rgb(250, 208, 0)">MyItem</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token class-name" style="color:rgb(250, 208, 0)">TData</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> myItem </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> container</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token generic-method function" style="color:rgb(250, 208, 0)">ReadItemAsync</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token generic-method generic class-name" style="color:rgb(250, 208, 0)">MyItem</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token generic-method generic class-name" style="color:rgb(250, 208, 0)">TData</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">itemName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">PartitionKey</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">itemName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> myItem</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">CosmosException</span><span class="token plain"> ex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">when</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">ex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">StatusCode </span><span class="token operator" style="color:rgb(255, 157, 0)">==</span><span class="token plain"> HttpStatusCode</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">NotFound</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">async</span><span class="token plain"> </span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">Task</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">List</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">MyItem</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">GetItems</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> itemName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">try</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogInformation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Looking up </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">MyItem</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">s by </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">itemName</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">: {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">itemName</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}}"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> itemName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> container </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> _client</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetDatabase</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">DatabaseName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetContainer</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">ContainerNameMyItems</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token class-name" style="color:rgb(250, 208, 0)">List</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token class-name" style="color:rgb(250, 208, 0)">MyItem</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> myItems </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> container</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token generic-method function" style="color:rgb(250, 208, 0)">GetItemQueryIterator</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token generic-method generic class-name" style="color:rgb(250, 208, 0)">MyItem</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">QueryDefinition</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    </span><span class="token string" style="color:rgb(165, 255, 144)">"SELECT * FROM c WHERE c.itemName = @itemName"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">WithParameter</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"@itemName"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> itemName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">ReadAllToListAsync</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> myItems</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">CosmosException</span><span class="token plain"> ex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogError</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">ex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Problem getting </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">MyItem</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">s by </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">itemName</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">: {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">itemName</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}}"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> itemName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">throw</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">Exception</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Problem getting </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">MyItem</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">s by </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">itemName</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">: </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp">itemName</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> ex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>You'll note that the <code>UpsertItem</code> and <code>GetItem</code> methods are generic methods that take and return a <code>MyItem&lt;TData&gt;</code> record respectively. The <code>GetItems</code> method is not generic because it returns a list of <code>MyItem</code> records, which are the non-generic records; where <code>data</code> is of type <code>object?</code>.</p>
<p>Imagine, you might use the <code>GetItems</code> method to get all the items. If you wanted to load a particular item, in a strongly typed fashion, you might subsequently use the <code>GetItem</code> method to load a single item with a particular type, like so:</p>
<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> myCar </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> _databaseMyItemService</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token generic-method function" style="color:rgb(250, 208, 0)">GetItem</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token generic-method generic class-name" style="color:rgb(250, 208, 0)">Car</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"the-car"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="deserializing-the-data-property-with-jsonnet">Deserializing the <code>data</code> property with <code>JSON.NET</code><a href="https://johnnyreilly.com/azure-cosmosdb-container-item-generics#deserializing-the-data-property-with-jsonnet" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>If you want to avoid requerying the database to get the object in strongly typed form, you'll need to convert the <code>data</code> property into a C# object of a specific type. If you've retrieved the non-generic <code>MyItem</code> from Cosmos, as far as C# is concerned, the <code>data</code> property is just an <code>object?</code> at this point. Well, that's not quite true. It's actually a <code>JObject</code> from the <code>Newtonsoft.Json</code> library. (This is because the Cosmos DB SDK uses <code>Newtonsoft.Json</code> internally.)</p>
<p>You can use <code>JObject.ToObject&lt;T&gt;()</code> to convert the <code>data</code> property into a C# object of a specific type. Here's an example of how you might do this:</p>
<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> data </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> item</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">data </span><span class="token keyword" style="color:rgb(255, 157, 0)">is</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">not</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">Newtonsoft</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token class-name" style="color:rgb(250, 208, 0)">Json</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token class-name" style="color:rgb(250, 208, 0)">Linq</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token class-name" style="color:rgb(250, 208, 0)">JObject</span><span class="token plain"> dataJObject</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> dataJObject</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token generic-method function" style="color:rgb(250, 208, 0)">ToObject</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token generic-method generic class-name" style="color:rgb(250, 208, 0)">Car</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="deserializing-the-data-property-with-systemtextjson">Deserializing the <code>data</code> property with <code>System.Text.Json</code><a href="https://johnnyreilly.com/azure-cosmosdb-container-item-generics#deserializing-the-data-property-with-systemtextjson" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>You may well find yourself wanting to send a list of items to the front end. However, because the default serializer of ASP.NET is <code>System.Text.Json.JsonSerializer</code> you'll need a different approach to deal with the <code>JObject</code>, as you can't send a <code>JObject</code> to the front end. You need to deserialize it into a format that can be sent to the front end.</p>
<p>It's quite typical to have a method that converts a domain model to a view model; something like this:</p>
<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">record</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">MyItemViewModel</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> ItemName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> Type</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">object</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> Data</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name" style="color:rgb(250, 208, 0)">DateTimeOffset</span><span class="token plain"> CreatedAt</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> CreatedBy</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name" style="color:rgb(250, 208, 0)">DateTimeOffset</span><span class="token plain"> UpdatedAt</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> UpdatedBy</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Here's an example of how you might convert our domain model to our view model. It includes a mechanism that uses <code>System.Text.Json.JsonSerializer</code> to deserialize the <code>data</code> property into an <code>object?</code> that <strong>can</strong> be sent to the front end:</p>
<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">static</span><span class="token plain"> </span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">MyItemViewModel</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">ItemToItemViewModel</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">MyItem</span><span class="token plain"> item</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> data </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> creditReviewPackItem</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">data </span><span class="token keyword" style="color:rgb(255, 157, 0)">switch</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">Newtonsoft</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">Json</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">Linq</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">JObject</span><span class="token plain"> dataJObject </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> System</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Text</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Json</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">JsonSerializer</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token generic-method function" style="color:rgb(250, 208, 0)">Deserialize</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token generic-method generic class-name keyword" style="color:rgb(255, 157, 0)">object</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">dataJObject</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">ToString</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">Newtonsoft</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">Json</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">Linq</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">JArray</span><span class="token plain"> dataJArray </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> System</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Text</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Json</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">JsonSerializer</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token generic-method function" style="color:rgb(250, 208, 0)">Deserialize</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token generic-method generic class-name keyword" style="color:rgb(255, 157, 0)">object</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">dataJArray</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">ToString</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        _ </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">ItemName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> item</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">itemName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">Type</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> item</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">type</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">Data</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> data</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">CreatedAt</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> item</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">createdAt</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">CreatedBy</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> item</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">createdBy</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">UpdatedAt</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> item</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">updatedAt</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">UpdatedBy</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> item</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">updatedBy</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://johnnyreilly.com/azure-cosmosdb-container-item-generics#conclusion" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>In this post, we've seen how you can use generics to store and retrieve different types of object in an Azure Cosmos DB Container using C#. We've seen how you can use a generic record to store objects with a single property that can be of different types. We've also seen how you can use <code>Newtonsoft.Json</code> to deserialize the <code>data</code> property into a C# object of a specific type. And we've seen how you can use <code>System.Text.Json</code> to deserialize the <code>data</code> property into an <code>object?</code> that can be sent to the front end.</p>]]></content>
        <author>
            <name>John Reilly</name>
            <uri>https://johnnyreilly.com/about</uri>
        </author>
        <category label="Azure" term="Azure"/>
        <category label="C#" term="C#"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Using Bun in Azure Pipelines]]></title>
        <id>https://johnnyreilly.com/using-bun-in-azure-pipelines</id>
        <link href="https://johnnyreilly.com/using-bun-in-azure-pipelines"/>
        <updated>2024-02-11T09:36:05.000Z</updated>
        <summary type="html"><![CDATA[Bun is a fast JavaScript runtime which can be used to speed up the TypeScript / JavaScript you have. This post shows you how to use it in Azure Pipelines.]]></summary>
        <content type="html"><![CDATA[<p>I'm a keen user of <a href="https://bun.sh/" target="_blank" rel="noopener noreferrer">Bun</a>. Bun is a fast TypeScript / JavaScript runtime which can be used to speed up the TypeScript / JavaScript you have. It's a drop-in replacement for Node.js, and it's compatible with the vast majority of the Node.js ecosystem. (There are still rough edges that have issues.) In this post we'll look at how to use it in Azure Pipelines.</p>
<p><img decoding="async" loading="eager" alt="title image reading &amp;quot;Using Bun in Azure Pipelines&amp;quot; with the Bun and Azure Pipelines logos" src="https://johnnyreilly.com/assets/images/title-image-f250426e35ebb5d60e203b601cae0039.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-install-bun">How to install Bun<a href="https://johnnyreilly.com/using-bun-in-azure-pipelines#how-to-install-bun" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>I use Azure Pipelines for much of my day to day work. However, my OSS work is (unsurprisingly) all GitHub oriented. Using Bun in GitHub Actions is straightforward; you just make use of the <a href="https://github.com/marketplace/actions/setup-bun" target="_blank" rel="noopener noreferrer">Setup Bun GitHub Action</a> to install Bun and you're off to the races. There isn't an equivalent for Azure Pipelines <strong>but that doesn't matter</strong>.</p>
<p>It turns out there's a great variety of <a href="https://bun.sh/docs/installation" target="_blank" rel="noopener noreferrer">ways to install Bun</a>. However the simplest of the lot is to install it via npm, like so:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">install</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">-g</span><span class="token plain"> bun</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This installs the <code>bun</code> command globally from the <a href="https://www.npmjs.com/package/bun" target="_blank" rel="noopener noreferrer"><code>bun</code> package</a>. You can then use it to run your TypeScript / JavaScript. This is the approach we'll use in Azure Pipelines.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="using-bun-in-azure-pipelines">Using Bun in Azure Pipelines<a href="https://johnnyreilly.com/using-bun-in-azure-pipelines#using-bun-in-azure-pipelines" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Since there's already a <a href="https://learn.microsoft.com/en-us/azure/devops/pipelines/tasks/reference/npm-v1?view=azure-pipelines" target="_blank" rel="noopener noreferrer">dedicated Azure Pipelines task for npm</a>, we can use that to install Bun. Here's an example of how to do that:</p>
<div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Npm@1</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> setup bun</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">command</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'custom'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">customCommand</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'install -g bun'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">verbose</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token boolean important" style="color:rgb(255, 98, 140)">true</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Now we're able to use Bun in our Azure Pipelines. Here's an example of how to use it to install dependencies and run a build:</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">bash</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> bun install</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'install'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">bash</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> bun run build</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'build'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="summary">Summary<a href="https://johnnyreilly.com/using-bun-in-azure-pipelines#summary" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>We're able to use Bun in Azure Pipelines by installing it via npm and then using it as we would Node.js. This is a great way to speed up your TypeScript / JavaScript builds. I hope you find it useful!</p>]]></content>
        <author>
            <name>John Reilly</name>
            <uri>https://johnnyreilly.com/about</uri>
        </author>
        <category label="Bun" term="Bun"/>
        <category label="Azure Pipelines" term="Azure Pipelines"/>
        <category label="Azure DevOps" term="Azure DevOps"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Configure Azure connection strings and keys in Azure Bicep]]></title>
        <id>https://johnnyreilly.com/configure-azure-connection-strings-keys-in-azure-bicep</id>
        <link href="https://johnnyreilly.com/configure-azure-connection-strings-keys-in-azure-bicep"/>
        <updated>2024-03-10T17:27:19.000Z</updated>
        <summary type="html"><![CDATA[Learn how to configure Azure resources like Azure Static Web Apps and Azure Container Apps with connection strings and access keys in Azure with Bicep.]]></summary>
        <content type="html"><![CDATA[<p>Imagine you're deploying a solution to Azure. It'll feature some resources like a database or a storage account. How do can you configure your application with access to these resources? One approach would be using Managed Identity. Another approach is configuring the connection strings and access keys in our application's configuration store as the Bicep templates are deployed. This is a common approach when working with Azure Functions, Azure Static Web Apps, Azure Container Apps and similar.</p>
<p><img decoding="async" loading="eager" alt="title image reading &amp;quot;Configure Azure connection strings and keys in Azure Bicep&amp;quot; with the Bicep and Azure logos" src="https://johnnyreilly.com/assets/images/title-image-abc46f74075588ff096aed6c166c7ccb.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<p>A wonderful aspect of this approach is that no human need ever get to see the connection strings / access keys. They'll be discovered and consumed by Azure during a deployment, and known to your application at runtime, but untrustworthy humans need never get to see them. This is secure, and therefore <em>good</em>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="configure-an-azure-static-web-app-with-a-connection-string-and-an-access-key">Configure an Azure Static Web App with a connection string and an access key<a href="https://johnnyreilly.com/configure-azure-connection-strings-keys-in-azure-bicep#configure-an-azure-static-web-app-with-a-connection-string-and-an-access-key" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>The blog you are reading this on is hosted on Azure Static Web Apps and deployed with Bicep. It also has an Azure Cosmos DB database and an Application Insights instance. The Azure Static Web App has access to the database via its access key and has access to the Application Insights instance through a connection string. The key and connection string are supplied to the configuration of the SWA during deployment.</p>
<p>Let's look at the Bicep configuration that deploys a database. Here's a snippet of the Bicep template:</p>
<div class="language-bicep codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bicep codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">resource</span><span class="token plain"> databaseAccount </span><span class="token string" style="color:rgb(165, 255, 144)">'Microsoft.DocumentDB/databaseAccounts@2023-04-15'</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">name</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> cosmosDbAccountName</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">kind</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'GlobalDocumentDB'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">location</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> location</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">tags</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> tags</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">properties</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">consistencyPolicy</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> defaultConsistencyLevel</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'Session'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">locations</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> locations</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">enableAutomaticFailover</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">databaseAccountOfferType</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'Standard'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">publicNetworkAccess</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'Enabled'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">ipRules</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token keyword" style="color:rgb(255, 157, 0)">for</span><span class="token plain"> ipAddress </span><span class="token keyword" style="color:rgb(255, 157, 0)">in</span><span class="token plain"> ipAddresses</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">ipAddressOrRange</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> ipAddress</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">backupPolicy</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> type</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'Periodic'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> periodicModeProperties</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> backupIntervalInMinutes</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">240</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> backupRetentionIntervalInHours</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">720</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Here's a snippet of the Bicep template that deploys the Application Insights instance:</p>
<div class="language-bicep codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bicep codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">resource</span><span class="token plain"> appInsights </span><span class="token string" style="color:rgb(165, 255, 144)">'Microsoft.Insights/components@2020-02-02'</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">name</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> appInsightsName</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">location</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> location</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">kind</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'other'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">properties</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">Application_Type</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'web'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">Flow_Type</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'Bluefield'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">WorkspaceResourceId</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> workspace</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">id</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">RetentionInDays</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">90</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">IngestionMode</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'LogAnalytics'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">publicNetworkAccessForIngestion</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'Enabled'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">publicNetworkAccessForQuery</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'Enabled'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Given that both of these resources are deployed, we can reference them subsequently and acquire connection strings / access keys.</p>
<p>So when we're getting ready to deploy the Azure Static Web App, we are able reference both the database and the Application Insights instance. Here's a snippet of the Bicep template that acquires the references:</p>
<div class="language-bicep codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bicep codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">resource</span><span class="token plain"> databaseAccount </span><span class="token string" style="color:rgb(165, 255, 144)">'Microsoft.DocumentDB/databaseAccounts@2023-04-15'</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">existing</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">name</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> cosmosDbAccountName</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">resource</span><span class="token plain"> appInsightsResource </span><span class="token string" style="color:rgb(165, 255, 144)">'Microsoft.Insights/components@2020-02-02'</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">existing</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">name</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> appInsightsName</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>With those references in hand, we can now configure the Azure Static Web App with the connection string and access key. Here's a snippet of the Bicep template that configures the Azure Static Web App with the connection string and access key:</p>
<div class="language-bicep codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bicep codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// deploy the Azure Static Web App</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">resource</span><span class="token plain"> staticWebApp </span><span class="token string" style="color:rgb(165, 255, 144)">'Microsoft.Web/staticSites@2022-09-01'</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">name</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> staticWebAppName</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">location</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> location</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">tags</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> tagsWithHiddenLinks</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">sku</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">name</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'Free'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">tier</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'Free'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">properties</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">repositoryUrl</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'https://github.com/johnnyreilly/blog.johnnyreilly.com'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">repositoryToken</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> repositoryToken</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">branch</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> branch</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">provider</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'GitHub'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">stagingEnvironmentPolicy</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'Enabled'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">allowConfigFileUpdates</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">buildProperties</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">skipGithubActionWorkflowGeneration</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// configure the Azure Static Web App with the connection string and access key</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">resource</span><span class="token plain"> staticWebAppAppSettings </span><span class="token string" style="color:rgb(165, 255, 144)">'Microsoft.Web/staticSites/config@2022-09-01'</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">name</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'appsettings'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">kind</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'config'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">parent</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> staticWebApp</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">properties</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">APPINSIGHTS_INSTRUMENTATIONKEY</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> appInsightsResource</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">properties</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">InstrumentationKey</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">APPLICATIONINSIGHTS_CONNECTION_STRING</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> appInsightsResource</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">properties</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">ConnectionString </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// &lt;-- connection string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">COSMOS_ENDPOINT</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> databaseAccount</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">properties</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">documentEndpoint</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">COSMOS_KEY</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> databaseAccount</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">listKeys</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">primaryMasterKey </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// &lt;-- access key</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>I've slightly tweaked the code to make it more readable, if you'd like to see the full configuration of the Azure Static Web App in the source of my blog, you can find it <a href="https://github.com/johnnyreilly/blog.johnnyreilly.com/blob/df2382e31dab82604e98d91f83967b8b559eb507/infra/static-web-app.bicep#L47C1-L57C2" target="_blank" rel="noopener noreferrer">here</a>.</p>
<p>You can see the effect of this configuration in the Azure Portal. Here's a screenshot of the configured environment variables of the Azure Static Web App:</p>
<p><img decoding="async" loading="lazy" alt="Screenshot of the Azure Static Web App in the Azure Portal" src="https://johnnyreilly.com/assets/images/screenshot-azure-portal-environment-variables-e3e899ec9559b64c65a276a82ef48ce4.png" width="583" height="316" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="configure-an-azure-container-app-with-a-connection-string-and-an-access-key">Configure an Azure Container App with a connection string and an access key<a href="https://johnnyreilly.com/configure-azure-connection-strings-keys-in-azure-bicep#configure-an-azure-container-app-with-a-connection-string-and-an-access-key" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>What's hopefully apparent from the previous section is that in the end this amounts to injecting a string to the appropriate place in the configuration of the resource. This is true for Azure Container Apps as well. Here's a snippet of the Bicep template that configures an Azure Container App with a connection string and access key:</p>
<div class="language-bicep codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bicep codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> appInsightsInstrumentationRef </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'app-insights-instrumentation-key'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> appInsightsConnectionStringRef </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'app-insights-connection-string'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> cosmosKeyRef </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'cosmos-key'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">resource</span><span class="token plain"> webServiceContainerApp </span><span class="token string" style="color:rgb(165, 255, 144)">'Microsoft.App/containerApps@2023-05-01'</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">name</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> webServiceContainerAppName</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">tags</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> tags</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">location</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> location</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">properties</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">configuration</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">secrets</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token property" style="color:rgb(255, 157, 0)">name</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> appInsightsInstrumentationRef</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token property" style="color:rgb(255, 157, 0)">value</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> appInsightsResource</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">properties</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">InstrumentationKey</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token property" style="color:rgb(255, 157, 0)">name</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> appInsightsConnectionStringRef</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token property" style="color:rgb(255, 157, 0)">value</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> appInsightsResource</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">properties</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">ConnectionString </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// &lt;-- connection string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token property" style="color:rgb(255, 157, 0)">name</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> cosmosKeyRef</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token property" style="color:rgb(255, 157, 0)">value</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> databaseAccount</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">listKeys</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">primaryMasterKey </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// &lt;-- access key</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">template</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">containers</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token property" style="color:rgb(255, 157, 0)">env</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">              </span><span class="token property" style="color:rgb(255, 157, 0)">name</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'APPINSIGHTS_INSTRUMENTATIONKEY'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">              </span><span class="token property" style="color:rgb(255, 157, 0)">secretRef</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> appInsightsInstrumentationRef</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">              </span><span class="token property" style="color:rgb(255, 157, 0)">name</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'APPLICATIONINSIGHTS_CONNECTION_STRING'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">              </span><span class="token property" style="color:rgb(255, 157, 0)">secretRef</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> appInsightsConnectionStringRef</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">              </span><span class="token property" style="color:rgb(255, 157, 0)">name</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'COSMOS_ENDPOINT'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">              </span><span class="token property" style="color:rgb(255, 157, 0)">value</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> databaseAccount</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">properties</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">documentEndpoint</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">              </span><span class="token property" style="color:rgb(255, 157, 0)">name</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'COSMOS_KEY'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">              </span><span class="token property" style="color:rgb(255, 157, 0)">secretRef</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> cosmosKeyRef</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The mechanism is slightly different, as befits the different service being used, but the principle is the same. We're injecting the connection string and access key into the configuration of the resource.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://johnnyreilly.com/configure-azure-connection-strings-keys-in-azure-bicep#conclusion" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>In this post we've demonstrated how to deploy resources, acquire reference to them and safely configure Azure Static Web Apps and Azure Container Apps such that they can access the resources.</p>
<p>The pattern we've used here is generally applicable in the Azure world. The same technique can be used to configure Azure Functions, Azure KeyVault, and many other Azure resources. The key is to understand the configuration of the resource you're working with and to understand how to inject the relevant secrets into that configuration.</p>]]></content>
        <author>
            <name>John Reilly</name>
            <uri>https://johnnyreilly.com/about</uri>
        </author>
        <category label="Bicep" term="Bicep"/>
        <category label="Azure" term="Azure"/>
        <category label="Azure Container Apps" term="Azure Container Apps"/>
        <category label="Azure Static Web Apps" term="Azure Static Web Apps"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[ESLint no-unused-vars: _ ignore prefix]]></title>
        <id>https://johnnyreilly.com/typescript-eslint-no-unused-vars</id>
        <link href="https://johnnyreilly.com/typescript-eslint-no-unused-vars"/>
        <updated>2024-03-10T17:27:19.000Z</updated>
        <summary type="html"><![CDATA[ESLints no-unused-vars is more flexible than TypeScript noUnusedLocals and noUnusedParameters. Here is how to make respect the TypeScript default of ignoring variables prefixed with _]]></summary>
        <content type="html"><![CDATA[<p>I'm a longtime user of TypeScripts <a href="https://www.typescriptlang.org/tsconfig#noUnusedLocals" target="_blank" rel="noopener noreferrer"><code>noUnusedLocals</code></a> and <a href="https://www.typescriptlang.org/tsconfig#noUnusedParameters" target="_blank" rel="noopener noreferrer"><code>noUnusedParameters</code></a> settings. I like to avoid leaving unused variables in my code; these compiler options help me do that.</p>
<p>I use ESLint alongside TypeScript. The <a href="https://eslint.org/docs/latest/rules/no-unused-vars" target="_blank" rel="noopener noreferrer"><code>no-unused-vars</code></a> rule provides similar functionality to TypeScripts <code>noUnusedLocals</code> and <code>noUnusedParameters</code> settings, but has more power and more flexibility. For instance, <code>no-unused-vars</code> can catch unused error variables; TypeScript's <code>noUnusedLocals</code> and <code>noUnusedParameters</code> cannot.</p>
<p>One thing that I missed when switching to the ESLint option is that, with <code>noUnusedLocals</code> and <code>noUnusedParameters</code>, you can simply ignore unused variables by prefixing a variable with the <code>_</code> character. That's right, sometimes I want to declare a variable that I know I'm not going to use, and I want to do that without getting shouted at by the linter.</p>
<p>It turns out you can get ESLint to respect the TypeScript default of ignoring variables prefixed with <code>_</code>; <a href="https://github.com/typescript-eslint/typescript-eslint/issues/8464#issuecomment-1943325441" target="_blank" rel="noopener noreferrer">it's just not the default configuration for <code>no-unused-vars</code></a>. But with a little configuration we can have it. This post is a quick guide to how to implement that configuration.</p>
<p><img decoding="async" loading="eager" alt="title image reading &amp;quot;From TypeScript noUnusedLocals and noUnusedParameters to ESLint no-unused-vars (with _ prefix)&amp;quot; with the ESLint and TypeScript logo" src="https://johnnyreilly.com/assets/images/title-image-84e07ec452e3456b556977d64d3c682e.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="when-would-you-want-to-ignore-unused-variables">When would you want to ignore unused variables?<a href="https://johnnyreilly.com/typescript-eslint-no-unused-vars#when-would-you-want-to-ignore-unused-variables" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>There are various scenarios when I want to ignore unused variables. Here are a few:</p>
<ul>
<li>I'm writing a function but I'm not using all of the parameters yet. I plan to use them later, but I want to declare them now so I don't forget about them.</li>
<li>An ignored variable can be a form of documentation. It can be a way to say "I know this is here, but I'm not using it intentionally".</li>
</ul>
<p>Not everyone will agree with these reasons, but they work for me in certain situations.</p>
<p>Just to offer the counterpoint, let me quote <a href="https://github.com/bradzacher" target="_blank" rel="noopener noreferrer">Brad Zacher</a> who works on TypeScript ESLint:</p>
<blockquote>
<p>On the one hand it is nice to have a short-hand to ignore things.</p>
<p>On the other hand it is terrible having a short-hand to ignore things - it's a single character that's easy to miss in code review - so it's easy to sneak into a commit.</p>
<p>For example I recently reviewed a PR where someone innocently did something like</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword module" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token imports"> promisify </span><span class="token imports punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'node:util'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword module" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token imports"> exec </span><span class="token imports keyword module" style="color:rgb(255, 157, 0)">as</span><span class="token imports"> _exec </span><span class="token imports punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'node:child_process'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> exec </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">promisify</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">_exec</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>And they didn't realise that doing this would define a variable that would never get flagged if it's unused! Really bad!</p>
</blockquote>
<p>Brad has a valid point, but let's say you've decided to <code>--ignore-pattern 'brad'</code>, and want to make use of the <code>_</code> prefix anyway. (Sorry Brad!) Here's how you can do it.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-typescript-settings">The TypeScript settings<a href="https://johnnyreilly.com/typescript-eslint-no-unused-vars#the-typescript-settings" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>I mentioned that I like to use the TypeScript <code>noUnusedLocals</code> and <code>noUnusedParameters</code> settings. Here's how they would be configured in a <code>tsconfig.json</code>:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"compilerOptions"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"noUnusedLocals"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"noUnusedParameters"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Given we're moving to ESLint so we'll explicitly turn these off in our <code>tsconfig.json</code> so we can use ESLint to do the same job:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"compilerOptions"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"noUnusedLocals"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">false</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"noUnusedParameters"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-eslint-settings">The ESLint settings<a href="https://johnnyreilly.com/typescript-eslint-no-unused-vars#the-eslint-settings" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>With those off in TypeScript, we can now configure ESLint to respect the <code>_</code> prefix. Here's how you can do that in your <code>.eslintrc.json</code>:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"rules"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"@typescript-eslint/no-unused-vars"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token string" style="color:rgb(165, 255, 144)">"error"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token property" style="color:rgb(255, 157, 0)">"args"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"all"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token property" style="color:rgb(255, 157, 0)">"argsIgnorePattern"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"^_"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token property" style="color:rgb(255, 157, 0)">"caughtErrors"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"all"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token property" style="color:rgb(255, 157, 0)">"caughtErrorsIgnorePattern"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"^_"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token property" style="color:rgb(255, 157, 0)">"destructuredArrayIgnorePattern"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"^_"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token property" style="color:rgb(255, 157, 0)">"varsIgnorePattern"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"^_"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token property" style="color:rgb(255, 157, 0)">"ignoreRestSiblings"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The <code>argsIgnorePattern</code>, <code>caughtErrorsIgnorePattern</code>, <code>destructuredArrayIgnorePattern</code>, and <code>varsIgnorePattern</code> settings are the ones that respect the <code>_</code> prefix. You have to set them all to <code>^_</code> to make it work. <code>^_</code> is a regular expression that matches any string that starts with an underscore. So if you actually had a different convention for ignoring variables, you could change this to match your convention.</p>
<p>Incidentally, you have to explicitly set <code>args</code> to <code>"all"</code> and <code>caughtErrors</code> to <code>"all"</code> to make the <code>argsIgnorePattern</code>/<code>caughtErrorsIgnorePattern</code> settings work. If you don't, the settings are ignored.</p>
<p>There's an <code>ignoreRestSiblings</code> setting specified above that we'll get to in a minute. First of all, let's see how the linting we've activated works in practice. Here's some code that demonstrates the settings in action:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">demoTheProblems</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  unusedAndReportedArg</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">boolean</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  _unusedButIgnoredArg</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">boolean</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// argsIgnorePattern</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  someArray</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">try</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> unusedAndReportedVar </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> _unusedAndButIgnoredVar </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">false</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// varsIgnorePattern</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      unusedAndReportedDestructuredArray</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      _unusedButIgnoredDestructuredArray</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// destructuredArrayIgnorePattern</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> someArray</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// caughtErrors</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">unusedAndReportedErr</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">try</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// caughtErrorsIgnorePattern</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">_unusedButIgnoredErr</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>In this code, the <code>unusedAndReportedArg</code>, <code>unusedAndReportedVar</code>, <code>unusedAndReportedDestructuredArray</code>, and <code>unusedAndReportedErr</code> variables are all reported as unused. ESLint considers them errors and shouts about them.</p>
<p>By contrast, the <code>_unusedButIgnoredArg</code>, <code>_unusedAndButIgnoredVar</code>, <code>_unusedButIgnoredDestructuredArray</code>, and <code>_unusedButIgnoredErr</code> variables are all ignored, because they are prefixed with an underscore. ESLint notices them but lets them past.</p>
<p>If we run ESLint on this code, we get the following output:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">   </span><span class="token number" style="color:rgb(255, 98, 140)">2</span><span class="token plain">:3   error  </span><span class="token string" style="color:rgb(165, 255, 144)">'unusedAndReportedArg'</span><span class="token plain"> is defined but never used. Allowed unused args must match /^_/u                                                             @typescript-eslint/no-unused-vars</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">   </span><span class="token number" style="color:rgb(255, 98, 140)">7</span><span class="token plain">:11  error  </span><span class="token string" style="color:rgb(165, 255, 144)">'unusedAndReportedVar'</span><span class="token plain"> is assigned a value but never used. Allowed unused vars must match /^_/u                                                    @typescript-eslint/no-unused-vars</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token number" style="color:rgb(255, 98, 140)">11</span><span class="token plain">:7   error  </span><span class="token string" style="color:rgb(165, 255, 144)">'unusedAndReportedDestructuredArray'</span><span class="token plain"> is assigned a value but never used. Allowed unused elements of array destructuring patterns must match /^_/u  @typescript-eslint/no-unused-vars</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token number" style="color:rgb(255, 98, 140)">15</span><span class="token plain">:12  error  </span><span class="token string" style="color:rgb(165, 255, 144)">'unusedAndReportedErr'</span><span class="token plain"> is defined but never used. Allowed unused args must match /^_/u                                                             @typescript-eslint/no-unused-vars</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Perfect! This is exactly what we wanted. You can see this in action in the <a href="https://typescript-eslint.io/play/#ts=5.3.3&amp;fileType=.tsx&amp;code=KYDwDg9gTgLgBAMwK4DsDGMCWEVwCbAC2EAKgBbAAKUEARgDZEDOAFALABQccqSTweAIIo8AJWCRYAwVADmALji0IERgEMUAGk7cA%2Br354AQkhgBJWSmjS5i5auAbNcAPQu4auUwtWoVNTAwwFAoOnBMEITAMlBqAJ6KTDBQmCiyANoAupwAlHAA3mHJcQVh3Gg4STwofNIi4pJBeABqnnAAvHDJSMAA3GVwFShV%2BjWGwsamPtYtbZ0IavT8va7uAG6e3pbWlAFBIZwDQ1XpA9wGdWIS0E0AIsBJUEgYSH5CULFx2lzcv6O1k3M2ze90ezxgrxsn1W%2BAe3Rebxi8Wmfl2gWCoR%2B3EyHXCkWiH3i-Q4YQAvoMAmgyHAWBchPVrlI8ABRD55fIwtBqJCyMgwVk0KBMAZuOAAOglZKKUBKhR%2B5K5MCpNP%2BhhMQN8AgF7M53N5-I%2B0C2mrR%2B0xvxhErFUo4pM4QA&amp;eslintrc=N4KABGBEBOCuA2BTAzpAXGUEKQAIBcBPABxQGNoBLY-AWhXkoDt8B6Jge1tidmUQAmtAG4BDaKgwBtcNhyJo0DtEgAaWXKxzskcQHNJUUfHhqN23dAMBJPZ2iIACqPz4FTdFAB6AfTPadMlFYPQALfABRRWVDXRN-AKggkPCopQlbeycXN2gPDEhfBIDIARR8ODJ8WAcBAEFFUUJM5WzXd09Cv3VEqDEMu1bndrzOop7EyEpBhwAlcoBlSgAjRiYDTwrYRHMIAF9zAF1ZA72gA&amp;tsconfig=N4KABGBEDGD2C2AHAlgGwKYCcDyiAuysAdgM6QBcYoEEkRsAqkQK4noAmAMrNAIaplKAM35sANOBp1GLNuwAKvTL3jo8WQWBED0kgL4g9QA&amp;tokens=false" target="_blank" rel="noopener noreferrer">playground</a>.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="the-ignorerestsiblings-setting">The <code>ignoreRestSiblings</code> setting<a href="https://johnnyreilly.com/typescript-eslint-no-unused-vars#the-ignorerestsiblings-setting" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>The <a href="https://eslint.org/docs/latest/rules/no-unused-vars#ignorerestsiblings" target="_blank" rel="noopener noreferrer"><code>ignoreRestSiblings</code></a> setting is also useful. You may find the need to use the rest operator in a destructuring assignment to omit properties from an object and hold onto the rest. Here's an example:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> formattedDate</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> date</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">...</span><span class="token plain">totals </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> payload</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>In this case I don't want to use <code>formattedDate</code> or <code>date</code> but I do want to use <code>totals</code>. I can use the <code>ignoreRestSiblings</code> setting to ignore the unused variables without even needing a <code>_</code> prefix or similar. So I do.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://johnnyreilly.com/typescript-eslint-no-unused-vars#conclusion" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>I hope this post has been helpful. I've shown you how to configure ESLint to respect the TypeScript default of ignoring variables prefixed with <code>_</code>.</p>
<p>Many thanks to Brad Zacher for his input on this post. You can read our discussion on the TypeScript ESLint GitHub repo <a href="https://github.com/typescript-eslint/typescript-eslint/issues/8464" target="_blank" rel="noopener noreferrer">here</a>.</p>]]></content>
        <author>
            <name>John Reilly</name>
            <uri>https://johnnyreilly.com/about</uri>
        </author>
        <category label="TypeScript" term="TypeScript"/>
        <category label="JavaScript" term="JavaScript"/>
        <category label="ESLint" term="ESLint"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Bicep lint with Azure Pipelines and GitHub Actions]]></title>
        <id>https://johnnyreilly.com/bicep-lint-azure-pipelines-github-actions</id>
        <link href="https://johnnyreilly.com/bicep-lint-azure-pipelines-github-actions"/>
        <updated>2024-07-08T15:41:49.000Z</updated>
        <summary type="html"><![CDATA[Bicep lint allows you to lint bicep files to ensure they conform to best practices. In this post we'll look at how to run bicep lint in Azure Pipelines and GitHub Actions.]]></summary>
        <content type="html"><![CDATA[<p>Bicep has had linting <a href="https://github.com/Azure/bicep/releases/tag/v0.4.1" target="_blank" rel="noopener noreferrer">since version 0.4.1</a>. It's a great way to ensure that your bicep files conform to best practices. Interestingly, when the linting feature first shipped, there wasn't an explicit lint command as part of the CLI. Instead, you had to run <code>bicep build</code> and it would run the linter as part of the build process. This was a little confusing as it was not obvious that the linter was running.</p>
<p>As of <a href="https://github.com/Azure/bicep/releases/tag/v0.21.1" target="_blank" rel="noopener noreferrer">version 0.21.1</a> there is a dedicated <a href="https://learn.microsoft.com/en-us/azure/azure-resource-manager/bicep/linter" target="_blank" rel="noopener noreferrer"><code>bicep lint</code></a> command. This is a nice step forwards; it allows you to explicitly lint your your code, rather than have it happen as a side effect of build. And it is useful if you want to run the linter as part of a CI/CD pipeline. What's more the <code>bicep lint</code> command is now available in the Azure CLI as well. You can run <a href="https://docs.microsoft.com/en-us/cli/azure/bicep?view=azure-cli-latest#az-bicep-lint" target="_blank" rel="noopener noreferrer"><code>az bicep lint</code></a> to lint your bicep files.</p>
<p>In this post we'll look at how to run lint Bicep in Azure Pipelines and GitHub Actions, and surface the output in the UI.</p>
<p><img decoding="async" loading="eager" alt="title image reading &amp;quot;Bicep lint with Azure Pipelines and GitHub Actions&amp;quot; with the Bicep logo" src="https://johnnyreilly.com/assets/images/title-image-af67d61370c2d04c19f5f6065b7d64c7.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-general-approach">The general approach<a href="https://johnnyreilly.com/bicep-lint-azure-pipelines-github-actions#the-general-approach" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>The general approach is the same for both Azure Pipelines and GitHub Actions. One way or another, we'll run the Bicep <code>lint</code> command to lint our Bicep files and capture the output. As yet, there is no option to export the results of the lint command as a file. This may come, and <a href="https://github.com/Azure/bicep/issues/11960" target="_blank" rel="noopener noreferrer">there is a discussion about it</a>. However, there is a way to achieve our goal, which came out in discussion with <a href="https://github.com/anthony-c-martin" target="_blank" rel="noopener noreferrer">Anthony Martin</a> of the Bicep team. We can write the output of the <code>lint</code> command to a file like so:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">bicep lint main.bicep --diagnostics-format sarif &gt; lint.sarif</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This will write the output of the <code>lint</code> command to a file called <code>lint.sarif</code>. This is a <a href="https://sarifweb.azurewebsites.net/" target="_blank" rel="noopener noreferrer">SARIF</a> file. SARIF stands for Static Analysis Results Interchange Format. It's a standard for representing the results of static analysis tools. It's a JSON file, easy to parse and has integrations with GitHub Actions / Azure Pipelines. An example SARIF output is below:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"$schema"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"version"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"2.1.0"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"runs"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"tool"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token property" style="color:rgb(255, 157, 0)">"driver"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token property" style="color:rgb(255, 157, 0)">"name"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"bicep"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"results"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token property" style="color:rgb(255, 157, 0)">"ruleId"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"no-unused-vars"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token property" style="color:rgb(255, 157, 0)">"message"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token property" style="color:rgb(255, 157, 0)">"text"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"Variable \"unusedVar\" is declared but never used. [https://aka.ms/bicep/linter/no-unused-vars]"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token property" style="color:rgb(255, 157, 0)">"locations"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">              </span><span class="token property" style="color:rgb(255, 157, 0)">"physicalLocation"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token property" style="color:rgb(255, 157, 0)">"artifactLocation"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                  </span><span class="token property" style="color:rgb(255, 157, 0)">"uri"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"file:///home/runner/work/blog.johnnyreilly.com/blog.johnnyreilly.com/./infra/main.bicep"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token property" style="color:rgb(255, 157, 0)">"region"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                  </span><span class="token property" style="color:rgb(255, 157, 0)">"startLine"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">19</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                  </span><span class="token property" style="color:rgb(255, 157, 0)">"charOffset"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">5</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">              </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"columnKind"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"utf16CodeUnits"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>In the example above we directly used the <code>bicep lint</code> command. An alternative approach is to use the Azure CLI like so:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">az bicep lint --file main.bicep --diagnostics-format sarif &gt; lint.sarif</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This is a little more verbose, but it does mean that you don't need to install the Bicep CLI on your build agent. You can use the Azure CLI instead; and this is already a first class citizen of Azure Pipelines and GitHub Actions, with dedicated support. (That said, there is a slight issue with this approach at the time of writing, which we'll come to later.)</p>
<p>However we generate it, we can take the SARIF file and use it to surface the results of the linting process in Azure Pipelines and GitHub Actions.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="linting-bicep-in-github-actions-with-the-azure-cli">Linting Bicep in GitHub Actions with the Azure CLI<a href="https://johnnyreilly.com/bicep-lint-azure-pipelines-github-actions#linting-bicep-in-github-actions-with-the-azure-cli" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>We'll start off by looking at how to lint Bicep in GitHub Actions with the Azure CLI. But before we do that, we need something to lint. Within your <code>main.bicep</code> file you should have something like this:</p>
<div class="language-bicep codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bicep codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> unusedVar </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">1</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// unused variable</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>As it suggests, this is an unused variable. We're just using this to demonstrate the linting process. And alongside that, we want a <a href="https://aka.ms/bicep/config" target="_blank" rel="noopener noreferrer"><code>bicepconfig.json</code></a> file that looks like this:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"analyzers"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"core"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"rules"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token property" style="color:rgb(255, 157, 0)">"no-unused-vars"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token property" style="color:rgb(255, 157, 0)">"level"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"warning"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This explicitly enables the <a href="https://learn.microsoft.com/en-us/azure/azure-resource-manager/bicep/linter-rule-no-unused-variables" target="_blank" rel="noopener noreferrer"><code>no-unused-vars</code></a> rule, and sets it to <code>warning</code> level. This means that the linter will warn us about unused variables, but it won't fail the build. We could set it to <code>error</code> level, and then the build would fail if there were any unused variables. We'll come back to this later.</p>
<p>In a GitHub workflow in your repository you should have steps like these:</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Lint Bicep</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">uses</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> azure/CLI@v2</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">with</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">inlineScript</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">|</span><span class="token scalar string" style="color:rgb(165, 255, 144)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">      az bicep install</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">      az bicep lint --file ./infra/main.bicep --diagnostics-format sarif &gt; bicep.sarif</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Upload SARIF</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">if</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> (success() </span><span class="token punctuation" style="color:rgb(255, 255, 255)">|</span><span class="token punctuation" style="color:rgb(255, 255, 255)">|</span><span class="token plain"> failure())</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">uses</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> github/codeql</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">action/upload</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">sarif@v3</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">with</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">category</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> bicep</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">sarif_file</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> bicep.sarif</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The above:</p>
<ul>
<li>Installs Bicep to the Azure CLI</li>
<li>Runs the <code>lint</code> command and writes the results to a file called <code>bicep.sarif</code></li>
<li>Uploads the SARIF file to GitHub</li>
</ul>
<p>The <code>upload-sarif</code> action is provided by GitHub. <a href="https://docs.github.com/en/code-security/code-scanning/integrating-with-code-scanning/uploading-a-sarif-file-to-github" target="_blank" rel="noopener noreferrer">It allows surfacing the results of static analysis tools in GitHub</a>. Doing this will show the results of the linting process in the GitHub UI, and it will also show them in the GitHub Security / Code Scanning UI, like so:</p>
<p><img decoding="async" loading="lazy" alt="screenshot of the no-unused-vars rule in GitHub UI" src="https://johnnyreilly.com/assets/images/screenshot-github-actions-no-unused-vars-9c962eb6271f0d866be70b2de97a9928.webp" width="1922" height="726" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="linting-bicep-in-github-actions-with-the-bicep-cli">Linting Bicep in GitHub Actions with the Bicep CLI<a href="https://johnnyreilly.com/bicep-lint-azure-pipelines-github-actions#linting-bicep-in-github-actions-with-the-bicep-cli" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>We can also lint Bicep in GitHub Actions with the Bicep CLI. At the time of writing, there's a reason you might want to favour this approach over the Azure CLI approach. I won't drill into it in depth, but at present if <code>az bicep lint</code> fails / returns a non-0 exit code then no output is produced. We could make this happen by updating the <code>bicepconfig.json</code> to dial up the <code>no-unused-vars</code> rule to <code>error</code> level, like so:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"analyzers"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"core"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"rules"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token property" style="color:rgb(255, 157, 0)">"no-unused-vars"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token property" style="color:rgb(255, 157, 0)">"level"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"error"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Now an unused variable will cause the build to fail. But the output of the <code>lint</code> command will not be surfaced in the GitHub UI. This is because the Azure CLI is not surfacing the output of the <code>lint</code> command when it fails.</p>
<p>The issue with the Azure CLI will hopefully be remedied; <a href="https://github.com/Azure/azure-cli/issues/28259" target="_blank" rel="noopener noreferrer">you can track that here</a>. For now you can use the Bicep CLI directly, where this isn't an issue. We'll do that now.</p>
<p>I'm basing this approach on Anthony Martin's example of <a href="https://github.com/anthony-c-martin/bicep-on-k8s/blob/e6dfa61fe7eae6fd6b148670f940041f3e294b20/.github/workflows/ci.yml#L36-L50" target="_blank" rel="noopener noreferrer">Bicep linting with GitHub Actions</a>:</p>
<div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Setup Bicep</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">uses</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> anthony</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">c</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">martin/setup</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">bicep@v0.3</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Lint Bicep</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">run</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">|</span><span class="token scalar string" style="color:rgb(165, 255, 144)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">    bicep lint ./infra/main.bicep --diagnostics-format sarif &gt; bicep.sarif</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Upload SARIF</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">if</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> always()</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">uses</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> github/codeql</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">action/upload</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">sarif@v3</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">with</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">category</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> bicep</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">sarif_file</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> bicep.sarif</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The above does the same as the Azure CLI approach, but it uses the Bicep CLI directly. The <a href="https://github.com/marketplace/actions/setup-bicep" target="_blank" rel="noopener noreferrer"><code>setup-bicep</code> action</a> is provided by Anthony Martin and installs the Bicep CLI on your build agent.</p>
<p>As I say, right now you may want to favour this approach over the Azure CLI approach to cover both surfacing warnings and errors. But hopefully that will change soon.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="linting-bicep-in-azure-pipelines-with-the-azure-cli">Linting Bicep in Azure Pipelines with the Azure CLI<a href="https://johnnyreilly.com/bicep-lint-azure-pipelines-github-actions#linting-bicep-in-azure-pipelines-with-the-azure-cli" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>We've now seen how to lint Bicep in GitHub Actions with both the Azure CLI and the Bicep CLI. We can do the same in Azure Pipelines; but only the Azure CLI approach (as I'm not sure if there's a <code>setup-bicep</code> equivalent for Azure Pipelines).</p>
<p>How you want to surface the results in Azure Pipelines is up to you. You could surface into the "Scans" portion of Azure Pipelines UI or into "Tests". I'll show you how to do both.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="surface-the-results-in-scans">Surface the results in Scans<a href="https://johnnyreilly.com/bicep-lint-azure-pipelines-github-actions#surface-the-results-in-scans" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>To surface the results in the scans part of Azure Pipelines you need to publish the SARIF file as a build artifact. You can do that like so:</p>
<div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token key atrule">jobs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">job</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> LintInfra</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Lint Infra</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">dependsOn</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">pool</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token key atrule">vmImage</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'ubuntu-latest'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">steps</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> AzureCLI@2</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Lint main.bicep</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">azureSubscription</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> service</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">connection</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">with</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">access</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">to</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">registry </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># you may not need this</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">scriptType</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> bash</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">scriptLocation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> inlineScript</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">inlineScript</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">|</span><span class="token scalar string" style="color:rgb(165, 255, 144)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">            az bicep install</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">            az bicep lint --file infra/main.bicep --diagnostics-format sarif &gt; $(System.DefaultWorkingDirectory)/bicep.sarif</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> PublishBuildArtifacts@1</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">condition</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> always()</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">pathToPublish</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(System.DefaultWorkingDirectory)/bicep.sarif</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">artifactName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> CodeAnalysisLogs </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># required to show up in the scans tab</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The above is essentially the same as the GitHub Actions example, but it uses the Azure CLI instead of the Bicep CLI. The <code>PublishBuildArtifacts</code> task is provided by Azure Pipelines. It allows you to publish build artifacts, which will show up in the Scans part of Azure Pipelines. You can see the results of the linting process in Scans, like so:</p>
<p><img decoding="async" loading="lazy" alt="screenshot of the no-unused-vars rule in Azure Pipelines scans" src="https://johnnyreilly.com/assets/images/screenshot-azure-pipelines-scans-no-unused-vars-02bddbe30ec71064cded5894dbbc70e2.webp" width="2944" height="842" class="img_ev3q"></p>
<p>You'll notice that the path above has a <code>file:///home/vsts/work/1/s</code> prefix before the bicep path report of <code>infra/main.bicep</code>. This is unfortunate and breaks "clickability". You cannot click on this and be taken to the file. It's possible to remedy this behaviour by doing a little find and replace magic on the SARIF file. You don't need to do this, but it does add to the developer experience.</p>
<p>Below is the same portion of the Azure Pipelines yaml file but with some additional bash that will use <code>sed</code> to replace all instances of the <code>file:///home/vsts/work/1/s</code> prefix with an empty string:</p>
<div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token key atrule">jobs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">job</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> LintInfra</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Lint Infra</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">dependsOn</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">pool</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token key atrule">vmImage</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'ubuntu-latest'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">steps</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> AzureCLI@2</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Lint main.bicep</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">azureSubscription</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> service</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">connection</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">with</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">access</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">to</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">registry </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># you may not need this</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">scriptType</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> bash</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">scriptLocation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> inlineScript</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">inlineScript</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">|</span><span class="token scalar string" style="color:rgb(165, 255, 144)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">            az bicep install</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">            az bicep lint --file infra/main.bicep --diagnostics-format sarif &gt; $(System.DefaultWorkingDirectory)/bicep.sarif</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            STRING_TO_REPLACE='file</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain">//$(Build.SourcesDirectory)/'</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            echo "</span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">##[group]Bicep linting results before $STRING_TO_REPLACE replace:"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            cat $(System.DefaultWorkingDirectory)/bicep.sarif</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            echo "</span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">##[endgroup]"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            sed </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">i "s</span><span class="token punctuation" style="color:rgb(255, 255, 255)">|</span><span class="token plain">$STRING_TO_REPLACE</span><span class="token punctuation" style="color:rgb(255, 255, 255)">|</span><span class="token punctuation" style="color:rgb(255, 255, 255)">|</span><span class="token plain">g" $(System.DefaultWorkingDirectory)/bicep.sarif</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            echo "</span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">##[group]Bicep linting results after $STRING_TO_REPLACE replace:"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            cat $(System.DefaultWorkingDirectory)/bicep.sarif</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            echo "</span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">##[endgroup]"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> PublishBuildArtifacts@1</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">condition</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> always()</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">pathToPublish</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(System.DefaultWorkingDirectory)/bicep.sarif</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">artifactName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> CodeAnalysisLogs </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># required to show up in the scans tab</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>And hey presto! Clickability restored.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="surface-the-results-in-tests">Surface the results in Tests<a href="https://johnnyreilly.com/bicep-lint-azure-pipelines-github-actions#surface-the-results-in-tests" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>You can also surface the results in the tests part of Azure Pipelines. To do that we're going to borrow a <a href="https://github.com/Azure/bicep/issues/11960#issuecomment-1737226501" target="_blank" rel="noopener noreferrer">suggestion from Anthony Martin</a> and use the <a href="https://www.npmjs.com/package/sarif-junit" target="_blank" rel="noopener noreferrer"><code>sarif-junit</code></a> package. This package allows us to convert a SARIF file to a JUnit file. JUnit is a standard for representing test results and can be used with the <code>PublishTestResults</code> task.</p>
<div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token key atrule">jobs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">job</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> LintInfra</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Lint Infra</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">dependsOn</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">pool</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token key atrule">vmImage</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'ubuntu-latest'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">steps</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> NodeTool@0</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'Install Node.js'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">versionSpec</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'18.x'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> AzureCLI@2</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Lint main.bicep</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">azureSubscription</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> service</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">connection</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">with</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">access</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">to</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">registry </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># you may not need this</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">scriptType</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> bash</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">scriptLocation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> inlineScript</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">inlineScript</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">|</span><span class="token scalar string" style="color:rgb(165, 255, 144)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">            az bicep install</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">            az bicep lint --file infra/main.bicep --diagnostics-format sarif &gt; $(System.DefaultWorkingDirectory)/bicep.sarif</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">            npx -y sarif-junit -i $(System.DefaultWorkingDirectory)/bicep.sarif -o $(System.DefaultWorkingDirectory)/bicep.xml</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> PublishTestResults@2</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">condition</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> always()</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">testResultsFormat</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'JUnit'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">testResultsFiles</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'$(System.DefaultWorkingDirectory)/bicep.xml'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>So the above is the same approach again but requires Node.js to be installed, and the results end up in the Tests part of Azure Pipelines. You can see the results of the linting process in Tests, like so:</p>
<p><img decoding="async" loading="lazy" alt="screenshot of the no-unused-vars rule in Azure Pipelines tests" src="https://johnnyreilly.com/assets/images/screenshot-azure-pipelines-tests-no-unused-vars-9ca250203edc598ea166d326ad6675d6.webp" width="2944" height="1042" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="summary">Summary<a href="https://johnnyreilly.com/bicep-lint-azure-pipelines-github-actions#summary" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>That's it! We've seen how to lint Bicep in Azure Pipelines and GitHub Actions. We've seen how to surface the results in the scans and tests parts of Azure Pipelines and in GitHub. We've seen how to do it with the Azure CLI and the Bicep CLI. And we've seen how to do it with warnings and errors. Hopefully this will help you to ensure that your Bicep files conform to best practices.</p>
<p>Many thanks to Anthony Martin for his help, which laid the groundwork for much of what we explored in this post.</p>]]></content>
        <author>
            <name>John Reilly</name>
            <uri>https://johnnyreilly.com/about</uri>
        </author>
        <category label="Bicep" term="Bicep"/>
        <category label="GitHub Actions" term="GitHub Actions"/>
        <category label="Azure Pipelines" term="Azure Pipelines"/>
        <category label="Azure DevOps" term="Azure DevOps"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Overview of webpack, a JavaScript bundler]]></title>
        <id>https://johnnyreilly.com/webpack-overview</id>
        <link href="https://johnnyreilly.com/webpack-overview"/>
        <updated>2024-04-06T07:21:54.000Z</updated>
        <summary type="html"><![CDATA[webpack is a JavaScript bundler that helps you bundle your code into a single file. It's a great tool for optimizing your code and improving performance.]]></summary>
        <content type="html"><![CDATA[<p>If you're a JavaScript developer, you've probably heard of webpack. It's a JavaScript bundler that helps you bundle your code into a single file. It's a great tool for optimizing your code and improving performance. This article will give you an overview of webpack, its history and how it works.</p>
<p>It'll be a little different than your typical "what is webpack?" article, in that I write this as the maintainer of <a href="https://github.com/TypeStrong/ts-loader" target="_blank" rel="noopener noreferrer"><code>ts-loader</code></a>, a loader used for integrating TypeScript with webpack. I've worked in the webpack ecosystem for some years now and I'll share some of my experiences with you. I'll go through a little history around bundling, and try to understand why webpack came to be such a popular choice.</p>
<p><img decoding="async" loading="eager" alt="title image reading &amp;quot;Overview of webpack, a JavaScript bundler&amp;quot; with the webpack logo" src="https://johnnyreilly.com/assets/images/title-image-510ccb17fb0abf91a6a1fca2ba757f19.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="a-short-history-of-web-development">A short history of web development<a href="https://johnnyreilly.com/webpack-overview#a-short-history-of-web-development" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>To answer the question "what is webpack?", we need to understand what a bundler is. To grasp that, we first need a little history lesson.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="the-early-days-of-javascript">The early days of JavaScript<a href="https://johnnyreilly.com/webpack-overview#the-early-days-of-javascript" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>If you started web development after 2016, you might not realise that bundling is a relatively new concept.</p>
<p>Let's roll back the clock to the late 2000's. This was when JavaScript development started to go mainstream. Around that time, jQuery was becoming popular and the web was a very different place. We didn't have the same tools we have today. We didn't have npm, we didn't have webpack, we didn't have React, we didn't have TypeScript. We didn't even have ES2015. We were still writing JavaScript in ES5.</p>
<p>So what did building a front end application look like back then? Well, I was a web developer, and I can tell you that it was a lot of work. To make a simple app you would have to:</p>
<ul>
<li>Go to the websites of libraries you wanted to use, usually jQuery and jQuery UI.</li>
<li>Download the library files you needed (both <code>jquery-1.4.4.js</code> and the minified <code>jquery-1.4.4.min.js</code> because there weren't minification tools back then)</li>
<li>Include the library files in your HTML file using <code>script</code> tags, and significantly <strong>before</strong> other JavaScript files that would depend upon jQuery.</li>
<li>For bonus points, you would also download the jQuery UI CSS files and include them in your HTML file.</li>
<li>For extra bonus points, you would figure out a way to serve up non-minified versions of your JavaScript files in development, and minified versions in production.</li>
</ul>
<p>What I'm hoping you can see from this is that it was a lot of work. And it was very error prone. If you forgot to include a library, or included it in the wrong order, or included the wrong version, or forgot to minify your files, or forgot to include the CSS files, your app would break. And it would be very difficult to debug.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="rise-of-the-task-runners">Rise of the task runners<a href="https://johnnyreilly.com/webpack-overview#rise-of-the-task-runners" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>As web development became more popular, people started to realise that there was a lot of repetition in the process. So they started to automate it. Around 2012 we started to see the birth of the task runner. There were two main task runners that became popular: <a href="https://gruntjs.com/" target="_blank" rel="noopener noreferrer">Grunt</a> and <a href="https://gulpjs.com/" target="_blank" rel="noopener noreferrer">Gulp</a>.</p>
<p>These task runners allowed you to automate the process of combining and minifying JavaScript and CSS files, and including them in your HTML file. They also allowed you to automate other tasks, like running tests, linting your code, and deploying your app. They did improve the web development experience, but they didn't solve all the problems.</p>
<p>It was still very easy to make mistakes. You could still forget to include a library, or include it in the wrong order, or get a path wrong, or forget to minify your files, or forget to include the CSS files. And it was still very difficult to debug.</p>
<p>But it was <strong>so much better</strong> than what we had before. So it became very popular.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="the-rise-of-the-module-bundler">The rise of the module bundler<a href="https://johnnyreilly.com/webpack-overview#the-rise-of-the-module-bundler" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>Around 2014, a new tool started to become popular: the module bundler. But what is a module bundler? Well, it's a tool that allows you to write your code in modules, and then bundle those modules into a single file. It also allows you to use other tools, like TypeScript, and CSS preprocessors like Sass and Less.</p>
<p>That's a lot of words, let's unpack them a little. For some time, the defacto way of acquiring JavaScript libraries has been through npm. npm is a package manager for JavaScript. However, it's worth remembering its history. npm started out as the package manager for Node.js. It was originally used to house packages that were used to build Node.js applications. It was never intended to be used for front end development. In fact, for a while there was an alternative front end package manager called <a href="https://bower.io/" target="_blank" rel="noopener noreferrer">Bower</a>.</p>
<p>The thing is, there's a lot of commonality between Node.js and front end development. Both use JavaScript. You're unlikely to need to run a web server in the browser. However, whether running in a browser or on a server, you might want to order an array with lodash, or make use of TypeScript, or perform validation with Zod. So it makes sense to use the same package manager for both.</p>
<p>The first tool that tackled this was <a href="http://browserify.org/" target="_blank" rel="noopener noreferrer">Browserify</a>. As the name suggests, it was a tool that allowed you to use Node.js style modules in the browser. It did this by taking your code, and recursively walking through it, finding all the <code>require</code> calls, and bundling them into a single file.</p>
<p>By doing this, it performed two useful functions:</p>
<ol>
<li>It opened up the ecosystem of Node.js packages to front end developers.</li>
<li>It allowed you to write your code in modules, which made it easier to reason about.</li>
</ol>
<p>Both of these are tremendously significant. The first one is obvious; there's a rich ecosystem of modules which can be used to speed up the task of web development.</p>
<p>The value of modularity is less obvious, but it's very important. It's worth remembering that JavaScript didn't have modules until ES2015. But npm had its own module standard called CommonJS. Given that Browserify and webpack were both created before ES2015, they both used CommonJS modules in the context of the browser. This was a huge improvement over the previous way of doing things, which was to include a bunch of script tags in your HTML file, and writing all your code in a giant global object. The reason it's so wildly different is because the dependencies in your codebase moved from being <strong>implicit</strong> to being <strong>explicit</strong>. Instead of having to remember to include a bunch of script tags in your HTML file, you could just <code>require</code> the modules you needed. This made it much easier to reason about your codebase. What's more, you had a a <code>package.json</code> file that listed all your dependencies, so you could see at a glance what your dependencies were.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-webpack">What is webpack?<a href="https://johnnyreilly.com/webpack-overview#what-is-webpack" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Now we understand a little of the history, we come to webpack. By the way, it's definitely not "Webpack" or "WebPack". It's <a href="https://webpack.js.org/branding/" target="_blank" rel="noopener noreferrer">"webpack"</a>. The person initially behind webpack is <a href="https://github.com/sokra" target="_blank" rel="noopener noreferrer">Tobias Koppers</a>; an engineer from Germany. Many, many people have contributed to the project since then, but Tobias is the person who has done the most work on it.</p>
<p>I mentioned that I was a web developer whilst the web was evolving its developer tooling. In my case I was a longtime user of Gulp, and then Browserify. I moved to webpack in 2015. I can't remember exactly why I moved, but I think it was because I wanted to use TypeScript, and webpack had better TypeScript support than Browserify (more on this later). I also think I was attracted to webpack because it was a more holistic solution than Browserify. It had a plugin system, and it had loaders. I'll talk about those in a moment.</p>
<p>First and foremost, it's worth saying that webpack is a module bundler. It takes your code, and recursively walks through it, finding all the <code>require</code> or <code>import</code> calls, building up a dependency graph, performing preprocessing tasks and producing runnable output, in the form of HTML, CSS and JavaScript. It also allows you to use other tools, like TypeScript, and CSS preprocessors like Sass and Less.</p>
<p>One of the most surprising things about webpack has been both its popularity, and how it has lasted. The web development world is famous for having the attention span of a distracted toddler. Tools replace tools, libraries replace libraries, and frameworks replace frameworks. But webpack has been around for a long time, and it's still the most popular bundler. At the time of writing it still has <strong>110 million downloads a month</strong>. That's a lot! Why is that?</p>
<p>I think there are a few reasons.</p>
<p>Firstly, because of the richness of the ecosystem and the flexibility of the tool, it's possible to solve pretty much all web development problems with webpack. There are newer, shinier, faster tools (and as we'll see later, webpack is starting to be displaced by some of these) but as a reliable tool that can solve all your problems, webpack is hard to beat.</p>
<p>That doesn't mean it's the easiest tool to work with on all occasions. The internet is awash with people bitterly complaining about the scars they bear from configuring webpack. It's true that webpack can be difficult to configure. But it's also true that webpack is a very powerful tool. Once you have it working, you generally don't have to touch it again.</p>
<p>A second reason why webpack is so popular, is that it has become a "primitive". What I mean by that, is that it has become a library that other libraries depend upon. If you use Docusaurus, you're also using webpack as the underlying build tool. Many projects have a need of a build tool and have picked webpack to be that. This has led to a huge ecosystem of plugins and loaders. It's also led to a plethora of tutorials and blog posts. If you have a problem, it's likely that someone else has had the same problem and has written a blog post about it.</p>
<p>By way of example, a <a href="https://johnnyreilly.com/using-webpacks-defineplugin-with-typescript" target="_blank" rel="noopener noreferrer">blog post I wrote in 2016 about the webpack <code>DefinePlugin</code></a> still ranks highly in Google for "use webpack defineplugin with typescript" and is (to my surprise) one of my most popular blog posts. Here's a screenshot of it in the Google search results:</p>
<p><img decoding="async" loading="lazy" alt="screenshot of the blog post in Google search results" src="https://johnnyreilly.com/assets/images/screenshot-google-search-results-webpack-defineplugin-8ae6233274e2dc990b6ff6f98e7c30ea.webp" width="1858" height="652" class="img_ev3q"></p>
<p>This speaks to the level of popularity around all things webpack.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="getting-started">Getting started<a href="https://johnnyreilly.com/webpack-overview#getting-started" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>This article is intended to be an overview of webpack. The documentation, as you might expect from such a big project, is comprehensive and can be found here: <a href="https://webpack.js.org/" target="_blank" rel="noopener noreferrer">https://webpack.js.org</a></p>
<p>Whilst we won't go through every scenario and use case of webpack, we want to give you a sense of what working with webpack looks like. For the purposes of this article, let's get started with a simple example. We'll create a simple "Hello, webpack" app. And we'll enrich it as we go through the piece.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="creating-a-simple-app">Creating a simple app<a href="https://johnnyreilly.com/webpack-overview#creating-a-simple-app" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>First, let's make a folder, create a <code>package.json</code> file and install the webpack dependencies we need:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token function" style="color:rgb(250, 208, 0)">mkdir</span><span class="token plain"> hello-webpack</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(250, 208, 0)">cd</span><span class="token plain"> hello-webpack</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> init </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">-y</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">install</span><span class="token plain"> webpack webpack-cli webpack-dev-server html-webpack-plugin --save-dev</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The dependencies we're installing are:</p>
<ul>
<li>webpack</li>
<li><a href="https://github.com/webpack/webpack-cli" target="_blank" rel="noopener noreferrer"><code>webpack-cli</code></a> - a command line interface for webpack</li>
<li><a href="https://webpack.js.org/configuration/dev-server/" target="_blank" rel="noopener noreferrer"><code>webpack-dev-server</code></a> - a development server that allows you to serve up your app in a browser</li>
<li><a href="https://github.com/jantimon/html-webpack-plugin/" target="_blank" rel="noopener noreferrer"><code>html-webpack-plugin</code></a> - a plugin that allows you to generate an HTML file that includes your bundled JavaScript file(s)</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="configuration-with-webpackconfigjs">Configuration with <code>webpack.config.js</code><a href="https://johnnyreilly.com/webpack-overview#configuration-with-webpackconfigjs" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>Whilst it is possible to use webpack without configuring it, it's more typical to have a configuration file. This file is often called <code>webpack.config.js</code>; where a single configuration file is being used. It's also comon to may have more than one configuration file; perhaps one for development and one for production. We'll create a single <code>webpack.config.js</code> to use with our example app:</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> path </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">require</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'path'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token maybe-class-name">HtmlWebpackPlugin</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">require</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'html-webpack-plugin'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">module</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token literal-property property" style="color:rgb(255, 157, 0)">mode</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'development'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// mode can be "development", "production" or "none" https://webpack.js.org/configuration/mode/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token literal-property property" style="color:rgb(255, 157, 0)">entry</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'./src/index.js'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// the entry point of our app https://webpack.js.org/concepts/entry-points/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token literal-property property" style="color:rgb(255, 157, 0)">devtool</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'inline-source-map'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// the type of sourcemap to generate for debugging https://webpack.js.org/configuration/devtool/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token literal-property property" style="color:rgb(255, 157, 0)">plugins</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">HtmlWebpackPlugin</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// a plugin to generate an HTML file https://github.com/jantimon/html-webpack-plugin</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token literal-property property" style="color:rgb(255, 157, 0)">output</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// where to put the bundled output https://webpack.js.org/concepts/output/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token literal-property property" style="color:rgb(255, 157, 0)">filename</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'[name].[contenthash].js'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token literal-property property" style="color:rgb(255, 157, 0)">path</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> path</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">resolve</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">__dirname</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'dist'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token literal-property property" style="color:rgb(255, 157, 0)">clean</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This may seem a little overwhelming, so we'll through this configuration file property by property in a moment.</p>
<p>The one thing that you might be puzzled by, is the absence of a <code>module</code> section to cover loaders. This is because webpack supports processing JavaScript by default. We'll add a <code>module</code> section later when we want to process other types of files.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="mode"><code>mode</code><a href="https://johnnyreilly.com/webpack-overview#mode" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h4>
<p>This is the mode that webpack will run in, and it essentially tells webpack to provide helpful defaults around how builds are performed. It can be <code>development</code>, <code>production</code> or <code>none</code>. We're using <code>development</code> because we're developing locally. If we were building for production, we'd use <code>production</code>.</p>
<p>Read more about modes here: <a href="https://webpack.js.org/configuration/mode/" target="_blank" rel="noopener noreferrer">https://webpack.js.org/configuration/mode/</a></p>
<p>Incidentally, we can override this on the command line with the <code>--mode</code> flag. And we will.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="entry"><code>entry</code><a href="https://johnnyreilly.com/webpack-overview#entry" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h4>
<p>This is the entry point of our app. It's the file that webpack will start with. In this case, it's <code>src/index.js</code>. It is possible to have multiple entry points, but we'll keep it simple for now.</p>
<p>Read more about entry points here: <a href="https://webpack.js.org/concepts/entry-points/" target="_blank" rel="noopener noreferrer">https://webpack.js.org/concepts/entry-points/</a></p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="devtool"><code>devtool</code><a href="https://johnnyreilly.com/webpack-overview#devtool" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h4>
<p>This is the type of sourcemap that webpack will generate. We're using <code>inline-source-map</code> because we're developing locally and we'd like to be able to debug our source code in the browser. If we were building for production, we might make a different choice.</p>
<p>Read more about sourcemaps here: <a href="https://webpack.js.org/configuration/devtool/" target="_blank" rel="noopener noreferrer">https://webpack.js.org/configuration/devtool/</a> - there are many different types of sourcemap, and they all have different tradeoffs.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="plugins"><code>plugins</code><a href="https://johnnyreilly.com/webpack-overview#plugins" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h4>
<p>This is a list of plugins that we want to use. We're using the <code>HtmlWebpackPlugin</code> to generate an HTML file that includes our bundled JavaScript file(s).</p>
<p>Read more about plugins here: <a href="https://webpack.js.org/concepts/plugins/" target="_blank" rel="noopener noreferrer">https://webpack.js.org/concepts/plugins/</a> - we'll talk more about plugins later.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="output"><code>output</code><a href="https://johnnyreilly.com/webpack-overview#output" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h4>
<p>This is where we want webpack to put the bundled output. We're using <code>dist</code> as the folder name. We're also using a <code>[name].[contenthash].js</code> naming convention for our bundled JavaScript file. This means that webpack will generate a file called <code>main.[contenthash].js</code> in the <code>dist</code> folder. The <code>[contenthash]</code> part is a hash of the contents of the file. This is useful because it means that if the contents of the file change, the hash will change, and the filename will change. This helps because it means that we can cache the file for a long time, and if the contents change, the filename will change and the browser will download the new file.</p>
<p>We're also providing the <a href="https://webpack.js.org/guides/output-management/#cleaning-up-the-dist-folder" target="_blank" rel="noopener noreferrer"><code>clean: true</code></a> option which deletes the contents of our <code>dist</code> folder on each build.</p>
<p>Read more about output here: <a href="https://webpack.js.org/concepts/output/" target="_blank" rel="noopener noreferrer">https://webpack.js.org/concepts/output/</a></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="creating-a-simple-app-1">Creating a simple app<a href="https://johnnyreilly.com/webpack-overview#creating-a-simple-app-1" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>What we need now, is some code to bundle. Let's create a <code>src</code> folder, and a <code>src/index.js</code> file; our first JavaScript file:</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">app</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> element </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token dom variable" style="color:rgb(255, 238, 128)">document</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">createElement</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'div'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  element</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">innerHTML</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'Hello, webpack'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword control-flow" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> element</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token dom variable" style="color:rgb(255, 238, 128)">document</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">body</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">appendChild</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token function" style="color:rgb(250, 208, 0)">app</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="local-development-with-webpack-dev-server">Local development with <code>webpack-dev-server</code><a href="https://johnnyreilly.com/webpack-overview#local-development-with-webpack-dev-server" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>Now we're going to add two scripts to our <code>package.json</code> file. One to build our app, and one to serve it up in a browser whilst we're developing it:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"scripts"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"build"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"webpack build --mode production"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"start"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"webpack serve --open"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>With this in place, we can develop locally with <code>npm start</code>. This will serve up our app in a browser at <code>http://localhost:8080/</code> using <code>webpack-dev-server</code>:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain"> hello-webpack@1.0.0 start</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain"> webpack serve </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">--open</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token plain">i</span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">webpack-dev-server</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> Project is running at:</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token plain">i</span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">webpack-dev-server</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> Loopback: http://localhost:8080/</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token plain">i</span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">webpack-dev-server</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> On Your Network </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">IPv4</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain">: http://172.30.170.28:8080/</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token plain">i</span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">webpack-dev-server</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> On Your Network </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">IPv6</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain">: http://</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">fe80::1</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain">:8080/</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token plain">i</span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">webpack-dev-server</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> Content not from webpack is served from </span><span class="token string" style="color:rgb(165, 255, 144)">'/Users/jreilly/code/github.com/hello-webpack/public'</span><span class="token plain"> directory</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token plain">i</span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">webpack-dev-middleware</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">wait</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">until</span><span class="token plain"> bundle finished: /</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">asset main.4d4379bc3adfa037dc27.js </span><span class="token number" style="color:rgb(255, 98, 140)">621</span><span class="token plain"> KiB </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">emitted</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">immutable</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">name: main</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">asset index.html </span><span class="token number" style="color:rgb(255, 98, 140)">252</span><span class="token plain"> bytes </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">emitted</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">runtime modules </span><span class="token number" style="color:rgb(255, 98, 140)">27.3</span><span class="token plain"> KiB </span><span class="token number" style="color:rgb(255, 98, 140)">12</span><span class="token plain"> modules</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">modules by path ./node_modules/ </span><span class="token number" style="color:rgb(255, 98, 140)">178</span><span class="token plain"> KiB</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  modules by path ./node_modules/webpack-dev-server/client/ </span><span class="token number" style="color:rgb(255, 98, 140)">71.8</span><span class="token plain"> KiB </span><span class="token number" style="color:rgb(255, 98, 140)">16</span><span class="token plain"> modules</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  modules by path ./node_modules/webpack/hot/*.js </span><span class="token number" style="color:rgb(255, 98, 140)">5.3</span><span class="token plain"> KiB</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    ./node_modules/webpack/hot/dev-server.js </span><span class="token number" style="color:rgb(255, 98, 140)">1.94</span><span class="token plain"> KiB </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">built</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">code generated</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    ./node_modules/webpack/hot/log.js </span><span class="token number" style="color:rgb(255, 98, 140)">1.86</span><span class="token plain"> KiB </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">built</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">code generated</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    + </span><span class="token number" style="color:rgb(255, 98, 140)">2</span><span class="token plain"> modules</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  modules by path ./node_modules/html-entities/lib/*.js </span><span class="token number" style="color:rgb(255, 98, 140)">81.8</span><span class="token plain"> KiB</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    ./node_modules/html-entities/lib/index.js </span><span class="token number" style="color:rgb(255, 98, 140)">7.91</span><span class="token plain"> KiB </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">built</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">code generated</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    ./node_modules/html-entities/lib/named-references.js </span><span class="token number" style="color:rgb(255, 98, 140)">73</span><span class="token plain"> KiB </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">built</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">code generated</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    ./node_modules/html-entities/lib/numeric-unicode-map.js </span><span class="token number" style="color:rgb(255, 98, 140)">339</span><span class="token plain"> bytes </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">built</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">code generated</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    ./node_modules/html-entities/lib/surrogate-pairs.js </span><span class="token number" style="color:rgb(255, 98, 140)">537</span><span class="token plain"> bytes </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">built</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">code generated</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  ./node_modules/ansi-html-community/index.js </span><span class="token number" style="color:rgb(255, 98, 140)">4.16</span><span class="token plain"> KiB </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">built</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">code generated</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  ./node_modules/events/events.js </span><span class="token number" style="color:rgb(255, 98, 140)">14.5</span><span class="token plain"> KiB </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">built</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">code generated</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">./src/index.js </span><span class="token number" style="color:rgb(255, 98, 140)">163</span><span class="token plain"> bytes </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">built</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">code generated</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">webpack </span><span class="token number" style="color:rgb(255, 98, 140)">5.89</span><span class="token plain">.0 compiled successfully </span><span class="token keyword" style="color:rgb(255, 157, 0)">in</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">861</span><span class="token plain"> ms</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>If we open the browser at <code>http://localhost:8080</code>, we'll see our "Hello, webpack" message.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="building-for-production">Building for production<a href="https://johnnyreilly.com/webpack-overview#building-for-production" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>We can build our app for production with <code>npm run build</code>:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> run build</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain"> hello-webpack@1.0.0 build</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain"> webpack build </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">--mode</span><span class="token plain"> production</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">asset main.82d3f64b186c8eec8e7c.js </span><span class="token number" style="color:rgb(255, 98, 140)">862</span><span class="token plain"> bytes </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">emitted</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">immutable</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">minimized</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">name: main</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">asset index.html </span><span class="token number" style="color:rgb(255, 98, 140)">235</span><span class="token plain"> bytes </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">emitted</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">./src/index.js </span><span class="token number" style="color:rgb(255, 98, 140)">163</span><span class="token plain"> bytes </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">built</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">code generated</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">webpack </span><span class="token number" style="color:rgb(255, 98, 140)">5.89</span><span class="token plain">.0 compiled successfully </span><span class="token keyword" style="color:rgb(255, 157, 0)">in</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">516</span><span class="token plain"> ms</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This has created a <code>dist</code> folder, and a <code>dist/index.html</code> file. Alongside that, it's created a <code>dist/main.82d3f64b186c8eec8e7c.js</code> file. If you open the <code>index.html</code> file in a browser, you'll see your "Hello, webpack" message.</p>
<p>At this point we have a simple app built with webpack. It's not doing much, but it's a start. And it'll give us a chance to talk about some concepts. Let's add some more features.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="integrating-with-plugins-and-loaders">Integrating with plugins and loaders<a href="https://johnnyreilly.com/webpack-overview#integrating-with-plugins-and-loaders" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>If you want to do anything more than the most basic of apps, you'll need to use plugins and loaders. Let's add some more features to our app, and we'll use plugins and loaders to do it.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="loaders">Loaders<a href="https://johnnyreilly.com/webpack-overview#loaders" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>The first thing we'll do is look at loaders. Loaders allow webpack to process other types of files (for example, TypeScript) and convert them into valid modules that can be consumed by your application and added to the dependency graph. An example of a loader is <a href="https://github.com/TypeStrong/ts-loader" target="_blank" rel="noopener noreferrer"><code>ts-loader</code></a> which allows you to use TypeScript with webpack.</p>
<p>I should not brush past this, I'm the primary maintainer of <code>ts-loader</code> and I'm very proud of it. It gets around 30 million downloads a month at the time of writing. That suggests that roughly a quarter of webpacks users are also <code>ts-loader</code> users. <code>ts-loader</code> is a great loader, and I'm very happy to have worked on it since 2016. There's actually a story behind how I came to work on it, <a href="https://johnnyreilly.com/but-you-cant-die-i-love-you-ts-loader" target="_blank" rel="noopener noreferrer">you can read it here</a>.</p>
<p>Let's install <code>ts-loader</code> and TypeScript, and create a <code>tsconfig.json</code> file:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">install</span><span class="token plain"> typescript ts-loader --save-dev</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">npx tsc </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">--init</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Now we need to configure webpack to use <code>ts-loader</code>. We do this by updating our entry point to be a TypeScript file and adding a <code>module</code> section to our <code>webpack.config.js</code> file:</p>
<div class="language-diff codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-diff codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">const path = require('path');</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">const HtmlWebpackPlugin = require('html-webpack-plugin');</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">module.exports = {</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> mode: 'development', // mode can be "development", "production" or "none" https://webpack.js.org/configuration/mode/</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token deleted-sign deleted prefix deleted" style="color:rgba(239, 83, 80, 0.56)">-</span><span class="token deleted-sign deleted line" style="color:rgba(239, 83, 80, 0.56)">  entry: './src/index.js', // the entry point of our app https://webpack.js.org/concepts/entry-points/</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token deleted-sign deleted line" style="color:rgba(239, 83, 80, 0.56)"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">  entry: './src/index.ts', // the entry point of our app https://webpack.js.org/concepts/entry-points/</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> devtool: 'inline-source-map', // the type of sourcemap to generate for debugging https://webpack.js.org/configuration/devtool/</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> plugins: [</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   new HtmlWebpackPlugin(), // a plugin to generate an HTML file https://github.com/jantimon/html-webpack-plugin</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> ],</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">  module: {</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">    rules: [</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">      {</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">        test: /\.([cm]?ts|tsx)$/,</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">        loader: 'ts-loader',</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">      },</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">    ],</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">  },</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> output: {</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   // where to put the bundled output https://webpack.js.org/concepts/output/</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   filename: '[name].[contenthash].js',</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   path: path.resolve(__dirname, 'dist'),</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   clean: true,</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> },</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token plain">};</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The <code>test</code> property is a regular expression that matches the files we want to process. In this case, we're matching <code>.ts</code>, <code>.tsx</code>, <code>.cts</code> and <code>.cts</code> files. The <code>loader</code> property is the name of the loader we want to use; <code>ts-loader</code>.</p>
<p>Let's rename our <code>src/index.js</code> file to <code>src/index.ts</code> and change the code to use TypeScript:</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">app</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> HTMLDivElement </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// the only TypeScript change we made is to add a return type</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> element </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> document</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">createElement</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'div'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  element</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">innerHTML </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'Hello, webpack'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> element</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">document</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">body</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">appendChild</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token function" style="color:rgb(250, 208, 0)">app</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>And just like that, we can use TypeScript in our app!</p>
<p>What is <code>ts-loader</code> actually doing? Well, it's taking our TypeScript code, and converting it into JavaScript. For each TypeScript file, <code>ts-loader</code> is invoked. It takes the TypeScript code, and passes it to the TypeScript compiler. The TypeScript compiler converts the TypeScript code into JavaScript. <code>ts-loader</code> then takes the JavaScript code and passes it to webpack. webpack then takes the JavaScript code and bundles it.</p>
<p>This is what all loaders do; they take a file, process it, and pass it to webpack. There are many loaders available, and you can even write your own. They aren't restricted to languages that compile to JavaScript. You can find a list of loaders here: <a href="https://webpack.js.org/loaders/" target="_blank" rel="noopener noreferrer">https://webpack.js.org/loaders/</a></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="plugins-1">Plugins<a href="https://johnnyreilly.com/webpack-overview#plugins-1" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>We've covered loaders, now we'll cover plugins. Plugins allow you to do all kinds of things with webpack. The definition in the webpack documentation is delightfully broad:</p>
<blockquote>
<p>Plugins are the backbone of webpack. ... They serve the purpose of doing anything else that a loader cannot do.</p>
</blockquote>
<p>This is helpful when you remind yourself that a loader takes a file, processes it, and passes the output of that processing to webpack. It is single-file-oriented, if you like. A plugin is what you use when you want to do something that isn't single-file-oriented.</p>
<p>So maybe it's easier to give you some examples. We already have one plugin in our app, the <code>HtmlWebpackPlugin</code>. This plugin generates an HTML file that includes our bundled JavaScript file(s).</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="defineplugin"><code>DefinePlugin</code><a href="https://johnnyreilly.com/webpack-overview#defineplugin" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h4>
<p>Let's add another plugin to our app. We'll add the <a href="https://webpack.js.org/plugins/define-plugin/" target="_blank" rel="noopener noreferrer"><code>DefinePlugin</code></a>. This plugin allows you to define global constants that can be used in your code. Let's add it to our <code>webpack.config.js</code> file:</p>
<div class="language-diff codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-diff codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">const path = require("path");</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">const webpack = require("webpack");</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token plain">const HtmlWebpackPlugin = require("html-webpack-plugin");</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">module.exports = {</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> mode: "development",</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> entry: './src/index.ts', // the entry point of our app https://webpack.js.org/concepts/entry-points/</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> devtool: "inline-source-map",</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> plugins: [</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">     new HtmlWebpackPlugin(),</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">      new webpack.DefinePlugin({</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">        'MODE': JSON.stringify("PRODUCTION"),</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">      })</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> ],</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> module: {</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   rules: [</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">     {</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">       test: /\.([cm]?ts|tsx)$/,</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">       loader: 'ts-loader',</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">     },</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   ],</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> },</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> output: {</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   filename: "[name].[contenthash].js",</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   path: path.resolve(__dirname, "dist"),</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   clean: true,</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> },</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token plain">};</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>With the change above, we've added the <code>DefinePlugin</code> to our list of plugins. We've also defined a global constant called <code>MODE</code> that will be available in our code. We've set the value of <code>MODE</code> to be the value of the <code>NODE_ENV</code> environment variable. We'll use this in our code in a moment.</p>
<p>Let's update our <code>src/index.ts</code> file to use the <code>MODE</code> constant, and tell TypeScript about it:</p>
<div class="language-diff codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-diff codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">declare const MODE: string;</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">function app(): HTMLDivElement {</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> const element = document.createElement("div");</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token deleted-sign deleted prefix deleted" style="color:rgba(239, 83, 80, 0.56)">-</span><span class="token deleted-sign deleted line" style="color:rgba(239, 83, 80, 0.56)">  element.innerHTML = 'Hello, webpack';</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token deleted-sign deleted line" style="color:rgba(239, 83, 80, 0.56)"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">  element.innerHTML = `Hello, webpack, we are in ${MODE} mode.`;</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> return element;</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token plain">}</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">document.body.appendChild(app());</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Now if we build our app, we'll see that the <code>MODE</code> constant is available in our code, and we can use it. At runtime it will be replaced with the value we defined in our <code>webpack.config.js</code> file and our app will say:</p>
<blockquote>
<p>Hello, webpack, we are in PRODUCTION mode.</p>
</blockquote>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="fork-ts-checker-webpack-plugin"><code>fork-ts-checker-webpack-plugin</code><a href="https://johnnyreilly.com/webpack-overview#fork-ts-checker-webpack-plugin" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h4>
<p>Before we move on, let's add one more plugin to our app. We're going to add the <a href="https://github.com/TypeStrong/fork-ts-checker-webpack-plugin" target="_blank" rel="noopener noreferrer"><code>fork-ts-checker-webpack-plugin</code></a>. This plugin allows you to run the TypeScript compiler in a separate process, and relieve <code>ts-loader</code> of the responsibility of handling type checking. This is useful because it means that webpack can run in parallel with the TypeScript compiler. This can significantly speed up your build times. I have worked on this plugin, as it has a sibling relationship with <code>ts-loader</code>. It's quite common to use both together; <code>ts-loader</code> to compile your code, and <code>fork-ts-checker-webpack-plugin</code> to type check it.</p>
<p>Let's install <code>fork-ts-checker-webpack-plugin</code>:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">install</span><span class="token plain"> fork-ts-checker-webpack-plugin --save-dev</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>And let's configure it in our <code>webpack.config.js</code> file:</p>
<div class="language-diff codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-diff codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">const path = require("path");</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">const webpack = require("webpack");</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">const HtmlWebpackPlugin = require("html-webpack-plugin");</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">const ForkTsCheckerWebpackPlugin = require('fork-ts-checker-webpack-plugin');</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">module.exports = {</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> mode: "development",</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> entry: './src/index.ts', // the entry point of our app https://webpack.js.org/concepts/entry-points/</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> devtool: "inline-source-map",</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> plugins: [</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">     new HtmlWebpackPlugin(),</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">     new webpack.DefinePlugin({</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">       'MODE': JSON.stringify('PRODUCTION'),</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">     }),</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">      new ForkTsCheckerWebpackPlugin()</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> ],</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> module: {</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   rules: [</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">     {</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">       test: /\.([cm]?ts|tsx)$/,</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">       loader: 'ts-loader',</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">        // we only need to explicitly specify transpileOnly option if you use ts-loader &lt; 9.3.0</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">        options: {</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">          transpileOnly: true</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">        }</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">     },</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   ],</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> },</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> output: {</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   filename: "[name].[contenthash].js",</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   path: path.resolve(__dirname, "dist"),</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   clean: true,</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> },</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token plain">};</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We can see here that we're providing some configuration to <code>ts-loader</code>; setting it to <code>transpileOnly: true</code>. This means that <code>ts-loader</code> will only transpile our code, and not type check it. We're also adding the <code>ForkTsCheckerWebpackPlugin</code> to our list of plugins. This will run the TypeScript compiler in a separate process and perform type checking there.</p>
<p>It's worth noting that because of <a href="https://github.com/TypeStrong/ts-loader/pull/1451" target="_blank" rel="noopener noreferrer">this excellent PR</a> by the primary maintainer <a href="https://github.com/piotr-oles" target="_blank" rel="noopener noreferrer">Piotr Ole≈õ</a>, we don't need to explicitly specify <code>transpileOnly: true</code> anymore. It's the default behaviour of <code>ts-loader</code> when the <code>fork-ts-checker-webpack-plugin</code> is detected. I've left it in the example above to illustrate what configuring a loader looks like.</p>
<p>To test that this is working, let's add a type error to our <code>src/index.ts</code> file:</p>
<div class="language-diff codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-diff codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">declare const MODE: string;</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">function app(): HTMLDivElement {</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> const element = document.createElement("div");</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> element.innerHTML = `Hello, webpack, we are in ${MODE} mode.`;</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token deleted-sign deleted prefix deleted" style="color:rgba(239, 83, 80, 0.56)">-</span><span class="token deleted-sign deleted line" style="color:rgba(239, 83, 80, 0.56)">  return element;</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token deleted-sign deleted line" style="color:rgba(239, 83, 80, 0.56)"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">  return elemen;</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token plain">}</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">document.body.appendChild(app());</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>And let's build our app:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> run build</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain"> hello-webpack@1.0.0 build</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain"> webpack build </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">--mode</span><span class="token plain"> production</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">assets by status </span><span class="token number" style="color:rgb(255, 98, 140)">1.09</span><span class="token plain"> KiB </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">cached</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">2</span><span class="token plain"> assets</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">./src/index.ts </span><span class="token number" style="color:rgb(255, 98, 140)">204</span><span class="token plain"> bytes </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">built</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">code generated</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">ERROR </span><span class="token keyword" style="color:rgb(255, 157, 0)">in</span><span class="token plain"> ./src/index.ts:8:10</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">TS2552: Cannot </span><span class="token function" style="color:rgb(250, 208, 0)">find</span><span class="token plain"> name </span><span class="token string" style="color:rgb(165, 255, 144)">'elemen'</span><span class="token builtin class-name" style="color:rgb(250, 208, 0)">.</span><span class="token plain"> Did you mean </span><span class="token string" style="color:rgb(165, 255, 144)">'element'</span><span class="token plain">?</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">     </span><span class="token number" style="color:rgb(255, 98, 140)">6</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">|</span><span class="token plain">   element.innerHTML </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token variable" style="color:rgb(255, 238, 128)">`</span><span class="token variable" style="color:rgb(255, 238, 128)">Hello, webpack, we are </span><span class="token variable keyword" style="color:rgb(255, 157, 0)">in</span><span class="token variable" style="color:rgb(255, 238, 128)"> $</span><span class="token variable punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token variable" style="color:rgb(255, 238, 128)">MODE</span><span class="token variable punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token variable" style="color:rgb(255, 238, 128)"> mode.</span><span class="token variable" style="color:rgb(255, 238, 128)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">     </span><span class="token number" style="color:rgb(255, 98, 140)">7</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain">  </span><span class="token number" style="color:rgb(255, 98, 140)">8</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">|</span><span class="token plain">   </span><span class="token builtin class-name" style="color:rgb(250, 208, 0)">return</span><span class="token plain"> elemen</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">       </span><span class="token operator" style="color:rgb(255, 157, 0)">|</span><span class="token plain">          ^^^^^^</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">     </span><span class="token number" style="color:rgb(255, 98, 140)">9</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">|</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token number" style="color:rgb(255, 98, 140)">10</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token number" style="color:rgb(255, 98, 140)">11</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">|</span><span class="token plain"> document.body.appendChild</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">app</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">))</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">webpack </span><span class="token number" style="color:rgb(255, 98, 140)">5.89</span><span class="token plain">.0 compiled with </span><span class="token number" style="color:rgb(255, 98, 140)">1</span><span class="token plain"> error </span><span class="token keyword" style="color:rgb(255, 157, 0)">in</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">1710</span><span class="token plain"> ms</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We can see that the TypeScript compiler has picked up our type error. If we remove the <code>fork-ts-checker-webpack-plugin</code> from our list of plugins, we'll see that the type error is no longer picked up:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> run build</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain"> hello-webpack@1.0.0 build</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain"> webpack build </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">--mode</span><span class="token plain"> production</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">asset main.a1d11e49d0129cad93aa.js </span><span class="token number" style="color:rgb(255, 98, 140)">885</span><span class="token plain"> bytes </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">emitted</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">immutable</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">minimized</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">name: main</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">asset index.html </span><span class="token number" style="color:rgb(255, 98, 140)">235</span><span class="token plain"> bytes </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">emitted</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">compared </span><span class="token keyword" style="color:rgb(255, 157, 0)">for</span><span class="token plain"> emit</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">./src/index.ts </span><span class="token number" style="color:rgb(255, 98, 140)">204</span><span class="token plain"> bytes </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">built</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">code generated</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">webpack </span><span class="token number" style="color:rgb(255, 98, 140)">5.89</span><span class="token plain">.0 compiled successfully </span><span class="token keyword" style="color:rgb(255, 157, 0)">in</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">772</span><span class="token plain"> ms</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>So we can see that the <code>fork-ts-checker-webpack-plugin</code> is working.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="using-plugins-and-loaders---some-resources">Using plugins and loaders - some resources<a href="https://johnnyreilly.com/webpack-overview#using-plugins-and-loaders---some-resources" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>We've seen a number of examples of plugins. Almost all customisation of webpack is done through plugins and loaders. If you want to do something with webpack, it's likely that there's a plugin or loader that will help you do it. If you want to learn more about plugins and loaders, I recommend the following resources:</p>
<ul>
<li><a href="https://blog.logrocket.com/how-detect-dead-code-frontend-project/#using-webpack-for-dead-code-detection" target="_blank" rel="noopener noreferrer">How to detect dead code in a frontend project</a></li>
<li><a href="https://blog.logrocket.com/tree-shaking-json-files-webpack/" target="_blank" rel="noopener noreferrer">Tree shaking JSON files with webpack</a></li>
<li><a href="https://blog.logrocket.com/tree-shaking-and-code-splitting-in-webpack/" target="_blank" rel="noopener noreferrer">Tree shaking and code splitting in webpack</a></li>
<li><a href="https://blog.logrocket.com/building-micro-frontends-webpacks-module-federation/" target="_blank" rel="noopener noreferrer">Building micro-frontends with webpack‚Äôs Module Federation</a></li>
<li><a href="https://blog.logrocket.com/speed-up-your-webpack-build-with-the-dll-plugin/" target="_blank" rel="noopener noreferrer">Improve your webpack build with the DLL plugin</a></li>
<li><a href="https://blog.logrocket.com/slimming-down-your-bundle-size/" target="_blank" rel="noopener noreferrer">Slimming down your bundle size</a></li>
<li><a href="https://blog.logrocket.com/parsing-raw-text-inputs-in-web-applications-using-antlr/" target="_blank" rel="noopener noreferrer">Parsing raw text inputs in web applications using ANTLR</a></li>
<li><a href="https://blog.logrocket.com/guide-performance-optimization-webpack/" target="_blank" rel="noopener noreferrer">An in-depth guide to performance optimization with webpack</a></li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="webpack-and-the-competition">webpack and the competition<a href="https://johnnyreilly.com/webpack-overview#webpack-and-the-competition" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>There has been a lot of competition in the bundler space. For a long time, webpack has been the most popular bundler. But it's not the only game in town, and never has been. It's beyond the scope of this article to do a full comparison of webpack and its competitors, but there's some excellent articles out there that do just that:</p>
<ul>
<li><a href="https://blog.logrocket.com/snowpack-vs-webpack-build-tool-comparison/" target="_blank" rel="noopener noreferrer">Snowpack vs. webpack: A build tool comparison</a></li>
<li><a href="https://blog.logrocket.com/migrating-swc-webpack-babel-overview/" target="_blank" rel="noopener noreferrer">Migrating to SWC: A brief overview</a></li>
<li><a href="https://blog.logrocket.com/webpack-or-esbuild-why-not-both/" target="_blank" rel="noopener noreferrer">webpack or esbuild: Why not both?</a></li>
<li><a href="https://blog.logrocket.com/switching-to-parcel-from-webpack/" target="_blank" rel="noopener noreferrer">Switching to Parcel from webpack</a></li>
<li><a href="https://blog.logrocket.com/migrate-rspack-webpack/" target="_blank" rel="noopener noreferrer">Why you should migrate to Rspack from webpack</a></li>
<li><a href="https://blog.logrocket.com/introducing-turbopack-rust-based-successor-webpack/" target="_blank" rel="noopener noreferrer">Introducing Turbopack: A Rust-based successor to webpack</a></li>
<li><a href="https://blog.logrocket.com/benchmarking-bundlers-2020-rollup-parcel-webpack/" target="_blank" rel="noopener noreferrer">Benchmarking bundlers 2020: Rollup vs. Parcel vs. webpack</a></li>
</ul>
<p>For the longest time, webpack has been the most popular bundler. Apparently incapable of being dislodged from that position. However, it looks like that might be changing. If we look at the npm download stats for webpack for the last five years, we can see that, for the first time, its popularity is starting to decrease. It's still the most popular bundler, but it's starting to decrease in popularity and competitors are starting to increase. This chart shows the npm download stats for webpack, esbuild, swc and vite over the last five years:</p>
<p><img decoding="async" loading="lazy" alt="screenshot of a chart comparing webpack, esbuild, swc and vite usage over the years 2018-2023" src="https://johnnyreilly.com/assets/images/screenshot-stats-webpack-vite-esbuild-swc-295249030dd5a3b6ff745b70530ab903.webp" width="2654" height="1070" class="img_ev3q"></p>
<p><a href="https://vitejs.dev/" target="_blank" rel="noopener noreferrer">Vite</a> is a bundler that came out of the Vue ecosystem. It's a very fast bundler that uses esbuild under the hood. <a href="https://esbuild.github.io/" target="_blank" rel="noopener noreferrer">esbuild</a> is a bundler that came out of the Go ecosystem. <a href="https://github.com/swc-project/swc" target="_blank" rel="noopener noreferrer">swc</a> is a super-fast TypeScript / JavaScript compiler written in Rust. All of these compete with webpack in some way.</p>
<p>The thing to note about all these competitors is that they are all faster than webpack. There's a reason for that. webpack is written in JavaScript. For most of the history of bundlers, JavaScript was what bundlers were implemented in. But the next generation of tools are written in other languages. esbuild is written in Go. swc is written in Rust. These languages have allowed massively improved performance. In terms of speed, webpack cannot compete with these tools. It's worth noting that even the creator of webpack, Tobias Koppers is now working on a <a href="https://turbo.build/pack" target="_blank" rel="noopener noreferrer">Rust-based successor to webpack named Turbopack</a>.</p>
<p>Next generation tools keep appearing. <a href="https://blog.logrocket.com/bun-adoption-guide/" target="_blank" rel="noopener noreferrer">Bun</a> is an alternative JavaScript runtime, implemented in Zig. It also ships with its own built in <a href="https://bun.sh/docs/bundler" target="_blank" rel="noopener noreferrer">Bun bundler</a> which is reportedly even faster than esbuild and Rspack! We're likely to see even more of these tools in the future.</p>
<p>Speed is a very attractive proposition, and as we can see, we're starting to see the community move away from webpack. It's not a mass exodus, when people are starting new projects now, they're more than likely to use one of the newer tools. When I've started a new project over the last year I've tended to use Vite. I've not used webpack for a new project for a long time. I'm not alone in this.</p>
<p>To be clear: webpack is not going anywhere. But it's fair to say that it is starting to be displaced by some of the newer tools. This trend is only going to continue.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://johnnyreilly.com/webpack-overview#conclusion" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>In this article we've looked at what webpack is, and why it's so popular. We've looked at its history, and how it came to be the most popular bundler. We've examined how to get started with webpack, some of the high level concepts such as plugins and loaders. We've also considered some of the competition, and how webpack is starting to be displaced by some of the newer tools.</p>
<p><a href="https://blog.logrocket.com/webpack-adoption-guide/" target="_blank" rel="noopener noreferrer">This post was originally published on LogRocket.</a></p>
]]></content>
        <author>
            <name>John Reilly</name>
            <uri>https://johnnyreilly.com/about</uri>
        </author>
        <category label="webpack" term="webpack"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Large Language Models, Open API, View Models and the Backend for Frontend Pattern]]></title>
        <id>https://johnnyreilly.com/large-language-models-view-models-backend-for-frontend</id>
        <link href="https://johnnyreilly.com/large-language-models-view-models-backend-for-frontend"/>
        <updated>2024-05-04T16:42:12.000Z</updated>
        <summary type="html"><![CDATA[To integrate LLMs with APIs, there is a need for the LLM equivalent of view models and the backend for frontend pattern. This discusses it in the context of Semantic Kernel.]]></summary>
        <content type="html"><![CDATA[<p>Of late, I've been involved in work to integrate APIs into LLM interactions, using <a href="https://github.com/microsoft/semantic-kernel" target="_blank" rel="noopener noreferrer">Semantic Kernel</a>. This post is something of a brain dump on the topic. Given how fast this space is moving, I expect what is written here to be out of date, possibly even <em>before</em> I hit publish. But nevertheless, I hope it's useful.</p>
<p><img decoding="async" loading="eager" alt="title image reading &amp;quot;Large Language Models, Open API, View Models and the Backend for Frontend Pattern&amp;quot; with the Azure Open AI / Swagger logos" src="https://johnnyreilly.com/assets/images/title-image-bed363141bbcb8dfb82b1db42671f1d0.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="swagger--open-api-and-semantic-kernel">Swagger / Open API and Semantic Kernel<a href="https://johnnyreilly.com/large-language-models-view-models-backend-for-frontend#swagger--open-api-and-semantic-kernel" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>APIs are awesome. Imagine LLMs could interact with APIs to allow us to chat directly to our data. This is what <a href="https://platform.openai.com/docs/guides/function-calling" target="_blank" rel="noopener noreferrer">function calling</a> provides. It allows us to take some kind of API and integrate it with our LLM. This is a powerful concept, but it's not without its challenges.</p>
<p>APIs are often documented in Swagger / Open API. This is a great way to document APIs, but it's not always the best way to interact with them from an LLM point of view. We'll go into more detail on the problems it can present in a moment, but first let's look at how we can use Semantic Kernel to integrate with APIs.</p>
<p>It's completely possible to plug an LLM into an Open API / Swagger spec described API using Semantic Kernel. Here's an example of how we might do that from the <a href="https://github.com/microsoft/semantic-kernel/blob/9a4450622021ce003234863bcf4def9613ae1153/dotnet/samples/Concepts/Plugins/CreatePluginFromOpenApiSpec_Jira.cs#L69-L77" target="_blank" rel="noopener noreferrer">Semantic Kernel GitHub repository</a>:</p>
<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> apiPluginRawFileURL </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">Uri</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"https://raw.githubusercontent.com/microsoft/PowerPlatformConnectors/dev/certified-connectors/JIRA/apiDefinition.swagger.json"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">jiraFunctions </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> kernel</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">ImportPluginFromOpenApiAsync</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token string" style="color:rgb(165, 255, 144)">"jiraPlugin"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    apiPluginRawFileURL</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">OpenApiFunctionExecutionParameters</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        httpClient</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> tokenProvider</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">AuthenticateRequestAsync</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">serverUrlOverride</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">Uri</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">serverUrl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The code above is creating a Jira plugin from an Open API spec. Brilliant! We didn't have to do any work; Semantic Kernel has done the heavy lifting for us. It's created a plugin that we can use to interact with Jira. Are you ready for the but?</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-problem-with-swagger--open-api-and-llms">The problem with Swagger / Open API and LLMs<a href="https://johnnyreilly.com/large-language-models-view-models-backend-for-frontend#the-problem-with-swagger--open-api-and-llms" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>The example above illustrates the simplicity of integrating. But what it doesn't reveal is the unfortunate reality that <strong>LLMs are not great at ignoring information</strong>. They will mention information we explicitly tell them not to. Just to spite us.</p>
<p>Let's take the Jira plugin as an example. When using direct Swagger / Open API integration I have found myself writing prompts like this:</p>
<blockquote>
<p>Please tell me about stories that are assigned to me. Please never refer to the stories by their ids - use titles instead.</p>
</blockquote>
<p>Only to find that in the responses the LLM will <em>still</em> refer to the stories by their ids.</p>
<p>It's a bit like having a child who you've told not to do something, only to find they've done it anyway. The LLM may even cheekily say something like "I know you told me not too, but I included the id for reference". The scallywag.</p>
<p>Or perhaps, given the variety of endpoints that are available in an API, the LLM will call one that we didn't want it to. Or perhaps our Swagger / Open API spec is poorly documented, and the LLM doesn't think it has an endpoint it can call.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="view-models-and-the-bffs-to-the-rescue">View models and the BFFs to the rescue<a href="https://johnnyreilly.com/large-language-models-view-models-backend-for-frontend#view-models-and-the-bffs-to-the-rescue" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>A useful framing for this problem is remembering when ORMs started to automate access to databases. We could take our ORM, and host it in a web service and, hey presto, our database was now accessible over HTTP. So let's take our React app (or whatever) and have it talk directly to our database.</p>
<p>Except, of course, that's a terrible idea. We don't want our front end talking to our database. There's a number of reasons why:</p>
<ul>
<li>Too much information going backwards and forward between client and server (perhaps including information we'd never like clients to see).</li>
<li>Security; why are we exposing our database to updates directly from the internet? Is that wise?</li>
</ul>
<p>You get the picture. We tend not to integrate our databases directly with our front ends with good reason.</p>
<p>A common approach to tackle these issues is employing the <a href="https://learn.microsoft.com/en-us/azure/architecture/patterns/backends-for-frontends" target="_blank" rel="noopener noreferrer">back end for front ends (BFF) pattern</a>; having something that sits between our front end and our database. One of the things the BFF does is to provide a view of the data that is appropriate for the client. So for example, exposing a <a href="https://en.wikipedia.org/wiki/View_model" target="_blank" rel="noopener noreferrer">view model</a> in the back end to serve the front end. It's a way to ensure that only the necessary information is exposed to the client.</p>
<p>We can take this idea and apply it to building integrations with APIs and LLMs. So rather than plugging a Swagger / Open API spec into Semantic Kernel, instead build a custom plugin that manages access to our API, and have it expose view models for providing data to LLMs.</p>
<p>That way we can ensure that only the necessary information is given to the LLM, and our answers do not contain data we would rather not see.</p>
<p>So rather than giving an LLM a data structure like this:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"stories"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"id"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">1</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"title"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"Story 1"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"description"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"This is the first story"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">//... MANY MORE FIELDS</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"id"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">2</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"title"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"Story 2"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"description"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"This is the second story"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">//... MANY MORE FIELDS</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We give it the trimmed down equivalent:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"stories"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"title"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"Story 1"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"description"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"This is the first story"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"title"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"Story 2"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"description"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"This is the second story"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This has the combined benefit of reducing our token usage / cost (as we're sending less data to the LLM) and reducing the risk of exposing data we'd rather not.</p>
<p>It also has the advantage of allowing us to steer the LLM towards the functions we want it to call. If we only expose the functions we want the LLM to call, then we can ensure that it doesn't call functions we'd rather it didn't.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="but-integrating-with-apis-is-a-lot-of-work">"But integrating with APIs is a lot of work!"<a href="https://johnnyreilly.com/large-language-models-view-models-backend-for-frontend#but-integrating-with-apis-is-a-lot-of-work" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>A common, and quite reasonable, complaint is that integrating with an API involves a lot of work. We have to write some code to interact with the API, and then we have to write the types that we'll use to pass data around. Fortunately there are tools like NSwag that use the Swagger / Open API spec to <a href="https://johnnyreilly.com/generate-typescript-and-csharp-clients-with-nswag">automate creating a client with types to manage API interaction</a>. If we're autogenerating our API clients, then the work of integrating an LLM with an API is significantly reduced.</p>
<p>With Semantic Kernel it effectively is reduced to creating a plugin; and that's quite simple to do. <a href="https://learn.microsoft.com/en-us/semantic-kernel/agents/plugins/using-the-kernelfunction-decorator?tabs=Csharp" target="_blank" rel="noopener noreferrer">There is guidance on how to create a plugin here</a>. So to create a BFF plugin for an API, we'd need to create that plugin, exposing the functions we want to be called. Those functions will internally call into the APIs using the auto-generated Swagger clients and then map that to the view models which we want to expose to the LLM. Imagine something like this:</p>
<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">record</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">JiraStory</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> Title</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> Description</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token attribute class-name" style="color:rgb(250, 208, 0)">KernelFunction</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token attribute class-name" style="color:rgb(250, 208, 0)">Description</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token attribute attribute-arguments string" style="color:rgb(165, 255, 144)">"Provides stories for a given user"</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token attribute target keyword" style="color:rgb(255, 157, 0)">return</span><span class="token attribute punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token attribute"> </span><span class="token attribute class-name" style="color:rgb(250, 208, 0)">Description</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token attribute attribute-arguments string" style="color:rgb(165, 255, 144)">"Jira user stories for the given user"</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">async</span><span class="token plain"> </span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">Task</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">JiraStory</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">GetUsersJiraStories</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token class-name" style="color:rgb(250, 208, 0)">Kernel</span><span class="token plain"> kernel</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token attribute class-name" style="color:rgb(250, 208, 0)">Description</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token attribute attribute-arguments string" style="color:rgb(165, 255, 144)">"Email of user to filter by"</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> userEmail</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> stories </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> _jiraClient</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetStories</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">userEmail</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> stories</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Select</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">story </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">JiraStory</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">title</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> story</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Title</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">description</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> story</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Description</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">ToArray</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The code above exposes a well defined function to the LLM, which will return the stories for a given user. The function internally calls into the Jira API, and then maps the large amount of data returned from the API to a much slimmer view model that is appropriate for the LLM. As we can see, this was very little work indeed!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://johnnyreilly.com/large-language-models-view-models-backend-for-frontend#conclusion" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>The integrated support for consuming Open API / Swagger specs is definitely going to improve over time, both in Semantic Kernel and in the wider ecosystem. However, it's possible that there is fundamental issue that needs to be solved, and that BFFs for LLMs may solve it. It's a way to ensure that only the necessary information is exposed to LLMs, and that the answers they give are appropriate for the context in which they are being used.</p>
<p>I'm not aware of a specific name for this pattern as yet. My colleague, Ryan suggested "Frontend for Language Models" (FLM) which is less of a mouthful than "Backend for Frontends for Language Models". Naming things is hard.</p>
<p>Another colleague (Rick), suggested that perhaps the BFF for LLMs could be built directly into APIs. So rather than having to implement a custom plugin that manages the interaction with API, we could still perhaps use the Swagger / Open API approach and avoid the custom plugin implementation. This is an interesting idea.</p>
<p>Many thanks to <a href="https://github.com/drosevear" target="_blank" rel="noopener noreferrer">David Rosevear</a>, <a href="https://www.linkedin.com/in/george-karsas" target="_blank" rel="noopener noreferrer">George Karsas</a>, <a href="https://www.rickroche.com/" target="_blank" rel="noopener noreferrer">Rick Roch√©</a>, <a href="https://github.com/RyanMatCook" target="_blank" rel="noopener noreferrer">Ryan Cook</a> and <a href="https://uk.linkedin.com/in/alisomer" target="_blank" rel="noopener noreferrer">Ali Somer</a> whose thoughts, ideas and experimentation have fed into the thinking in this post.</p>]]></content>
        <author>
            <name>John Reilly</name>
            <uri>https://johnnyreilly.com/about</uri>
        </author>
        <category label="Azure" term="Azure"/>
        <category label="C#" term="C#"/>
        <category label="AI" term="AI"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Schemar: a GitHub Action to validate structured data]]></title>
        <id>https://johnnyreilly.com/schemar-github-action-to-validate-structured-data</id>
        <link href="https://johnnyreilly.com/schemar-github-action-to-validate-structured-data"/>
        <updated>2024-01-02T12:08:29.000Z</updated>
        <summary type="html"><![CDATA[This post demonstrates how to use Schemar to validate structured data using a GitHub Action.]]></summary>
        <content type="html"><![CDATA[<p>Of late, I've found myself getting more and more into structured data. Structured data is a way of adding machine-readable information to web pages. To entertain myself, I liken it to static typing for websites. I've written about structured data before, but in this post I want to focus on how to validate structured data.</p>
<p>Specifically, how can we validate structured data in the context of a GitHub workflow? I've created a GitHub Action called <a href="https://github.com/marketplace/actions/schemar-ci-action" target="_blank" rel="noopener noreferrer">Schemar</a> that facilitates just that. In this post we'll see how to use it.</p>
<p><img decoding="async" loading="eager" alt="title image reading &amp;quot;Schemar: a GitHub Action to validate structured data&amp;quot; with the GitHub Action logo" src="https://johnnyreilly.com/assets/images/title-image-d26eb86d473a706da54606f51a9101b5.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<p>If you'd like to read more about structured data, you might like to read these posts:</p>
<ul>
<li><a href="https://johnnyreilly.com/structured-data-seo-and-react">Structured data, SEO and React</a></li>
<li><a href="https://johnnyreilly.com/how-we-fixed-my-seo">How we fixed my SEO</a></li>
<li><a href="https://johnnyreilly.com/docusaurus-blogs-adding-breadcrumb-structured-data">Docusaurus blogs: adding breadcrumb structured data</a></li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-schemar">What is Schemar?<a href="https://johnnyreilly.com/schemar-github-action-to-validate-structured-data#what-is-schemar" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Schemar is a GitHub Action that validates structured data. It's a wrapper around the <a href="https://validator.schema.org/" target="_blank" rel="noopener noreferrer">Schema Markup Validator</a> tool.</p>
<p>If you haven't heard of Schema.orgs validator; it originally started at Google as the Structured Data Testing Tool but was <a href="https://developers.google.com/search/blog/2020/12/structured-data-testing-tool-update" target="_blank" rel="noopener noreferrer">repurposed and gifted to the community</a>.</p>
<p>That tool is a website; Schemar is a wrapper around the tool that makes it easy to validate structured data in the context of a GitHub workflow. Let's imagine it's very important to you that your structured data is both present and valid. You could use Schemar to validate your structured data as part of your CI/CD pipeline.</p>
<p>Imagine Schemar to be the structured data equivalent of the <a href="https://github.com/treosh/lighthouse-ci-action" target="_blank" rel="noopener noreferrer"><code>lighthouse-ci-action</code></a> GitHub Action.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="using-schemar">Using Schemar<a href="https://johnnyreilly.com/schemar-github-action-to-validate-structured-data#using-schemar" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>I'm going to take my blog (that's what you're reading right now BTW) and use Schemar to validate the structured data on it. I already have a GitHub Action that builds and deploys my blog to a staging environment in Azure Static Web Apps and <a href="https://johnnyreilly.com/lighthouse-meet-github-actions">validates it with Lighthouse</a>. So I'm going to add Schemar to that.</p>
<p>But before we do that, let's look at simple usage of Schemar. If you were to add a <code>.github/workflows/schemar.yml</code> file to your repo with the following contents:</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token key atrule">jobs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">release</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">runs-on</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> ubuntu</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">latest</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">steps</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">uses</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> johnnyreilly/schemar@v0.1.1</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">with</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">urls</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> https</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain">//johnnyreilly.com</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Validate structured data</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token key atrule">on</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">pull_request</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token null important">~</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">push</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">branches</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> main</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Then you'd have a GitHub workflow that would validate the structured data on <code>https://johnnyreilly.com</code> and fail if it wasn't valid.</p>
<p>The <code>urls</code> input of Schemar is a list of URLs to validate. In this case, we're just validating only one. The results look like this:</p>
<blockquote>
<p>Validating <a href="https://johnnyreilly.com/" target="_blank" rel="noopener noreferrer">https://johnnyreilly.com</a> for structured data...</p>
<p><a href="https://johnnyreilly.com/" target="_blank" rel="noopener noreferrer">https://johnnyreilly.com</a> has structured data of these types:</p>
<ul>
<li>Organization / Brand</li>
<li>WebSite</li>
<li>Blog</li>
</ul>
<p>For more details see <a href="https://validator.schema.org/#url=https%3A%2F%2Fjohnnyreilly.com" target="_blank" rel="noopener noreferrer">https://validator.schema.org/#url=https%3A%2F%2Fjohnnyreilly.com</a></p>
</blockquote>
<p>We can see that the home page of my blog has structured data of the types <code>Organization / Brand</code>, <code>WebSite</code> and <code>Blog</code>. And we can even click into the Schema Markup Validator to see the details.</p>
<p>If at some point I were to omit or break the structured data on my blog, then Schemar would fail the build. This is a great way to ensure that your structured data is always present and valid.</p>
<p>We're going to see what usage looks like in a minute, as we dive into a more sophisticated example.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="surfacing-schemar-results-in-your-pull-requests">Surfacing Schemar results in your pull requests<a href="https://johnnyreilly.com/schemar-github-action-to-validate-structured-data#surfacing-schemar-results-in-your-pull-requests" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Now that we've seen a basic example, let's see what it looks like to use Schemar in a more sophisticated way. We're going to add Schemar to run against my blogs pull request previews, in the same way we're already running Lighthouse against them.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="adding-schemar-to-the-github-action">Adding Schemar to the GitHub Action<a href="https://johnnyreilly.com/schemar-github-action-to-validate-structured-data#adding-schemar-to-the-github-action" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>I won't reiterate the whole GitHub workflow that spins up a preview environment here, but I'll show the key parts. You can see the whole thing in the <a href="https://github.com/johnnyreilly/blog.johnnyreilly.com/blob/main/.github/workflows/build-and-deploy-static-web-app.yml" target="_blank" rel="noopener noreferrer"><code>build-and-deploy-static-web-app.yml</code> of the blog repo</a>. You'll note I'm using Azure Static Web Apps to host my blog - but any web platform will do.</p>
<p>Here is the key part of the GitHub workflow:</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token key atrule">structured_data_report_job</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Structured data report üìù</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">needs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> build_and_deploy_swa_job</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">if</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> github.event_name == 'pull_request' </span><span class="token important">&amp;&amp;</span><span class="token plain"> github.event.action </span><span class="token tag" style="color:rgb(255, 157, 0)">!=</span><span class="token plain"> 'closed'</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">runs-on</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> ubuntu</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">latest</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">steps</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">uses</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> actions/checkout@v4</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Wait for preview $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> needs.build_and_deploy_swa_job.outputs.preview</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">url </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> ‚åö</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token key atrule">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> static_web_app_wait_for_preview</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token key atrule">uses</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> nev7n/wait_for_response@v1</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token key atrule">with</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">url</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'${{ needs.build_and_deploy_swa_job.outputs.preview-url }}'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">responseCode</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">200</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">timeout</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">600000</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">interval</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">1000</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Audit URLs for structured data üßê</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token key atrule">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> structured_data_audit</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token key atrule">uses</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> johnnyreilly/schemar@v0.1.1</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token key atrule">with</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">urls</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">|</span><span class="token scalar string" style="color:rgb(165, 255, 144)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">          ${{ needs.build_and_deploy_swa_job.outputs.preview-url }}</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">          ${{ needs.build_and_deploy_swa_job.outputs.preview-url }}/about</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">          ${{ needs.build_and_deploy_swa_job.outputs.preview-url }}/blog</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">          ${{ needs.build_and_deploy_swa_job.outputs.preview-url }}/definitely-typed-the-movie</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Format structured data results</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token key atrule">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> format_structured_data_results</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token key atrule">if</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> always()</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token key atrule">uses</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> actions/github</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">script@v7</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token key atrule">with</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">script</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">|</span><span class="token scalar string" style="color:rgb(165, 255, 144)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">          const structuredDataCommentMaker = (await import('${{ github.workspace }}/.github/workflows/structuredDataCommentMaker.mjs')).default;</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">          const results = ${{ steps.structured_data_audit.outputs.results }};</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">          core.setOutput("comment", structuredDataCommentMaker('${{ needs.build_and_deploy_swa_job.outputs.preview-url }}', results));</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Add structured data results as comment ‚úçÔ∏è</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token key atrule">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> structured_data_comment_to_pr</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token key atrule">if</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> always()</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token key atrule">uses</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> marocchino/sticky</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">pull</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">request</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">comment@v2</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token key atrule">with</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">number</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> github.event.pull_request.number </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">header</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> structured_data</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">message</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> steps.format_structured_data_results.outputs.comment </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Along with the following <code>structuredDataCommentMaker.mjs</code> script:</p>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockTitle_Ktv7">structuredDataCommentMaker.mjs</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// @ts-check</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/**</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> * </span><span class="token doc-comment comment keyword" style="color:rgb(255, 157, 0);font-style:italic">@typedef</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> </span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">{</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic">Object</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">}</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> </span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic">Result</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> * </span><span class="token doc-comment comment keyword" style="color:rgb(255, 157, 0);font-style:italic">@prop</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> </span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">{</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic">string</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">}</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> url</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> * </span><span class="token doc-comment comment keyword" style="color:rgb(255, 157, 0);font-style:italic">@prop</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> </span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">{</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic">ProcessedValidationResult</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">}</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> processedValidationResult</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/**</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> * </span><span class="token doc-comment comment keyword" style="color:rgb(255, 157, 0);font-style:italic">@typedef</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> </span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">{</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic">Object</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">}</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> </span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic">ProcessedValidationResult</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> * </span><span class="token doc-comment comment keyword" style="color:rgb(255, 157, 0);font-style:italic">@prop</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> </span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">{</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic">boolean</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">}</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> success</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> * </span><span class="token doc-comment comment keyword" style="color:rgb(255, 157, 0);font-style:italic">@prop</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> </span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">{</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic">string</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">}</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> resultText</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/**</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> * </span><span class="token doc-comment comment keyword" style="color:rgb(255, 157, 0);font-style:italic">@param</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> </span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">{</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic">string</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">}</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> </span><span class="token doc-comment comment parameter" style="color:rgb(179, 98, 255);font-style:italic">baseUrl</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> * </span><span class="token doc-comment comment keyword" style="color:rgb(255, 157, 0);font-style:italic">@param</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> </span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">{</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic">Result</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">[</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">]</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">}</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> </span><span class="token doc-comment comment parameter" style="color:rgb(179, 98, 255);font-style:italic">results</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">createStructuredDataReport</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token parameter">baseUrl</span><span class="token parameter punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token parameter"> results</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> comment </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">### üìù Structured data report</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token template-string string" style="display:inline-block;color:rgb(165, 255, 144)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token template-string string" style="color:rgb(165, 255, 144)"></span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">results</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token template-string interpolation">  </span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation method function property-access" style="color:rgb(250, 208, 0)">map</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token template-string interpolation parameter">result</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token template-string interpolation"> </span><span class="token template-string interpolation arrow operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token template-string interpolation"> </span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token template-string interpolation"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token template-string interpolation">    </span><span class="token template-string interpolation keyword" style="color:rgb(255, 157, 0)">const</span><span class="token template-string interpolation"> shortUrl </span><span class="token template-string interpolation operator" style="color:rgb(255, 157, 0)">=</span><span class="token template-string interpolation"> result</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation property-access">url</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation method function property-access" style="color:rgb(250, 208, 0)">replace</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token template-string interpolation">baseUrl</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token template-string interpolation"> </span><span class="token template-string interpolation string" style="color:rgb(165, 255, 144)">''</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token template-string interpolation"> </span><span class="token template-string interpolation operator" style="color:rgb(255, 157, 0)">||</span><span class="token template-string interpolation"> </span><span class="token template-string interpolation string" style="color:rgb(165, 255, 144)">'/'</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token template-string interpolation"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token template-string interpolation">    </span><span class="token template-string interpolation keyword control-flow" style="color:rgb(255, 157, 0)">return</span><span class="token template-string interpolation"> </span><span class="token template-string interpolation template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string interpolation template-string string" style="color:rgb(165, 255, 144)">#### </span><span class="token template-string interpolation template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation template-string interpolation"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token template-string interpolation template-string interpolation">      result</span><span class="token template-string interpolation template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation template-string interpolation property-access">processedValidationResult</span><span class="token template-string interpolation template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation template-string interpolation property-access">success</span><span class="token template-string interpolation template-string interpolation"> </span><span class="token template-string interpolation template-string interpolation operator" style="color:rgb(255, 157, 0)">?</span><span class="token template-string interpolation template-string interpolation"> </span><span class="token template-string interpolation template-string interpolation string" style="color:rgb(165, 255, 144)">'üü¢'</span><span class="token template-string interpolation template-string interpolation"> </span><span class="token template-string interpolation template-string interpolation operator" style="color:rgb(255, 157, 0)">:</span><span class="token template-string interpolation template-string interpolation"> </span><span class="token template-string interpolation template-string interpolation string" style="color:rgb(165, 255, 144)">'üî¥'</span><span class="token template-string interpolation template-string interpolation"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token template-string interpolation template-string interpolation">    </span><span class="token template-string interpolation template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string interpolation template-string string" style="color:rgb(165, 255, 144)"> [</span><span class="token template-string interpolation template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation template-string interpolation">shortUrl</span><span class="token template-string interpolation template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string interpolation template-string string" style="color:rgb(165, 255, 144)">](</span><span class="token template-string interpolation template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation template-string interpolation">result</span><span class="token template-string interpolation template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation template-string interpolation property-access">url</span><span class="token template-string interpolation template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string interpolation template-string string" style="color:rgb(165, 255, 144)">) </span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token template-string interpolation template-string string" style="color:rgb(165, 255, 144)"></span><span class="token template-string interpolation template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation template-string interpolation">result</span><span class="token template-string interpolation template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation template-string interpolation property-access">processedValidationResult</span><span class="token template-string interpolation template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation template-string interpolation property-access">resultText</span><span class="token template-string interpolation template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string interpolation template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token template-string interpolation"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token template-string interpolation">  </span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token template-string interpolation"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token template-string interpolation">  </span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation method function property-access" style="color:rgb(250, 208, 0)">join</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token template-string interpolation string" style="color:rgb(165, 255, 144)">'\n'</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string string" style="color:rgb(165, 255, 144)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token template-string string" style="color:rgb(165, 255, 144)"></span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword control-flow" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> comment</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword module" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(255, 157, 0)">default</span><span class="token plain"> createStructuredDataReport</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Let's break this down:</p>
<ul>
<li>We're using the <a href="https://github.com/nev7n/wait_for_response" target="_blank" rel="noopener noreferrer"><code>nev7n/wait_for_response</code></a> GitHub Action to wait for the preview to be available. This is because the preview URL is not available immediately after the preview is created.</li>
<li>We're running Schemar against four URLs in our pull request preview. These pages should have structured data; and if any fail then it's likely a sign that something has gone wrong with my sites structured data story.</li>
<li>We then take the output of the Schemar run and format it into a comment that we can add to the pull request - to do that we use the <code>structuredDataCommentMaker.mjs</code> script.</li>
<li>Finally, we add the comment to the pull request using the <a href="https://github.com/marocchino/sticky-pull-request-comment" target="_blank" rel="noopener noreferrer"><code>marocchino/sticky-pull-request-comment</code></a> GitHub Action.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="testing-it-out">Testing it out<a href="https://johnnyreilly.com/schemar-github-action-to-validate-structured-data#testing-it-out" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>Let's see what this looks like in action. I've created a pull request that breaks the structured data from my blog. This is what the pull request looks like:</p>
<div class="language-diff codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-diff codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token deleted-sign deleted prefix deleted" style="color:rgba(239, 83, 80, 0.56)">-</span><span class="token deleted-sign deleted line" style="color:rgba(239, 83, 80, 0.56)">'@type': 'Person',</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token deleted-sign deleted line" style="color:rgba(239, 83, 80, 0.56)"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">'@type': 'Blarg', // let's break the schema!</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The question is, what does the pull request look like after the GitHub Action has run? Here's the answer:</p>
<p><img decoding="async" loading="lazy" alt="screenshot of the GitHub Action failing" src="https://johnnyreilly.com/assets/images/screenshot-failed-github-action-fb3a10c6bdbb1bdeb4e1a91f79f7bb06.png" width="1579" height="713" class="img_ev3q"></p>
<p>It failed! And it put a comment on the PR that looks like this:</p>
<p><img decoding="async" loading="lazy" alt="screenshot of the GitHub Action comment on the PR" src="https://johnnyreilly.com/assets/images/screenshot-pull-request-failed-comment-6a8126dfd8bb299bfc7408294f6608cc.png" width="906" height="642" class="img_ev3q"></p>
<p>Let's unbreak the structured data and see what happens:</p>
<div class="language-diff codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-diff codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token deleted-sign deleted prefix deleted" style="color:rgba(239, 83, 80, 0.56)">-</span><span class="token deleted-sign deleted line" style="color:rgba(239, 83, 80, 0.56)">'@type': 'Blarg', // let's break the schema!</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token deleted-sign deleted line" style="color:rgba(239, 83, 80, 0.56)"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">'@type': 'Person',</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><img decoding="async" loading="lazy" alt="screenshot of the GitHub Action failing" src="https://johnnyreilly.com/assets/images/screenshot-succeeded-github-action-7ff041dfd9da1cefddfb1e8d8b56c759.png" width="1575" height="777" class="img_ev3q"></p>
<p>It succeeded! And it put a comment on the PR that looks like this:</p>
<p><img decoding="async" loading="lazy" alt="screenshot of the GitHub Action comment on the PR" src="https://johnnyreilly.com/assets/images/screenshot-pull-request-succeeded-comment-c0bebef5c518e85255b4d7e09e850856.png" width="900" height="508" class="img_ev3q"></p>
<p>This is great! It means that I can be confident that my structured data is always present and valid. And if it isn't, then I'll know about it. I can even click through to the Schema Markup Validator to see the details.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://johnnyreilly.com/schemar-github-action-to-validate-structured-data#conclusion" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>My hope is that Schemar can be used to increase the quality of structured data on the web. I'm using it to increase the quality of structured data on my blog. I hope you'll find it useful too.</p>
<p>I've also <a href="https://github.com/schemaorg/schemaorg/discussions/3432" target="_blank" rel="noopener noreferrer">shared this with the good folk of Schema.org</a> in the hope they'll find it useful too. The <a href="https://github.com/johnnyreilly/schemar" target="_blank" rel="noopener noreferrer">source code of Schemar can be found here</a>.</p>]]></content>
        <author>
            <name>John Reilly</name>
            <uri>https://johnnyreilly.com/about</uri>
        </author>
        <category label="SEO" term="SEO"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[MUI React Tree View: pass data to TreeItem]]></title>
        <id>https://johnnyreilly.com/mui-react-tree-view-pass-data-to-treeitem</id>
        <link href="https://johnnyreilly.com/mui-react-tree-view-pass-data-to-treeitem"/>
        <updated>2024-07-01T10:08:28.000Z</updated>
        <summary type="html"><![CDATA[Learn how to pass arbitrary data to individual nodes in the MUI treeview component so individual nodes can be customised; for instance implementing a loader.]]></summary>
        <content type="html"><![CDATA[<p>I'm a big fan of the Material-UI (MUI) library <a href="https://mui.com/x/react-tree-view/" target="_blank" rel="noopener noreferrer">treeview component</a>. I recently needed to do some customisation of the nodes in the treeview component I was rendering. The application I was working on acquired data for each node in our treeview component asynchronously. I wanted to show a loader for each node that was still loading.</p>
<p>Achieving this required passing data to individual nodes in the treeview component. This appears to not be officially supported by the MUI treeview component. However, it is possible and this post will show you how to do it.</p>
<p>The comment on <a href="https://github.com/mui/material-ui/issues/33175#issuecomment-1469725522" target="_blank" rel="noopener noreferrer">this GitHub issue</a> suggests that this will be directly supported in MUI v6. Until that time, you'll have to slightly hack the component to achieve this.</p>
<p>I've written previously about <a href="https://johnnyreilly.com/mui-react-tree-view-check-children-uncheck-parents">how to check children and uncheck parents in the MUI treeview component</a>. This post builds on that one. But, you need not be using multiselect / checkboxes etc to use the approach in this post. It applies generally to usage of the treeview component.</p>
<p><img decoding="async" loading="eager" alt="title image reading &amp;quot;MUI React Tree View: pass data to TreeItem&amp;quot; with the MUI logo" src="https://johnnyreilly.com/assets/images/title-image-ef2d396d68c885998c2d98d2a0159c32.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-behaviour-we-want-to-implement">The behaviour we want to implement<a href="https://johnnyreilly.com/mui-react-tree-view-pass-data-to-treeitem#the-behaviour-we-want-to-implement" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>In the application I'm working on, we load data for each node in our treeview that is selected. While a nodes data is loading, we want to show a loader so users know that work is being done. We want to achieve something like this:</p>
<p><img decoding="async" loading="lazy" alt="a treeview with a loading spinner" src="https://johnnyreilly.com/assets/images/recording-loader-a75466ee1f74138d6e14dc1474d8509b.gif" width="1338" height="394" class="img_ev3q"></p>
<p>The labels in the above GIF aren't relevant to this post. The key thing to note is that the treeview is showing a loader for nodes that are still loading. Strictly speaking, the loader is a spinner from the MUI library. The <a href="https://mui.com/material-ui/react-progress/#circular" target="_blank" rel="noopener noreferrer"><code>CircularProgress</code></a> component to be precise. However, the loader could be anything you like.</p>
<p>The question is: how do we pass data to individual nodes in the treeview component so we can customise them?</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-code">The code<a href="https://johnnyreilly.com/mui-react-tree-view-pass-data-to-treeitem#the-code" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>We can achieve this by using the <code>slots</code> and <code>slotProps</code> props on the <code>RichTreeView</code> component. (If you're using the <code>SimpleTreeView</code> that should work the same.) The <code>slots</code> prop allows us to customise the rendering of the treeview components. The <code>slotProps</code> prop allows us to pass data to the customised components. "Slots" is a MUI approach to customising components. You can read more about it <a href="https://mui.com/base-ui/getting-started/usage/#slots" target="_blank" rel="noopener noreferrer">here</a>.</p>
<p>The code below demonstrates how to pass data to individual nodes in the treeview component:</p>
<div class="language-tsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-tsx codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">OurComponent</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">RichTreeView</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">defaultExpandedItems</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">initialExpandedItems</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">multiSelect</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript boolean" style="color:rgb(255, 98, 140)">true</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">checkboxSelection</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript boolean" style="color:rgb(255, 98, 140)">true</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">selectedItems</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">selectedIds</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">onSelectedItemsChange</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">handleSelectedItemsChange</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">items</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">treeViewNodes</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag comment" style="color:rgb(179, 98, 255);font-style:italic">// note that we're using the TreeItemWithLoading component here</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">slots</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> item</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript maybe-class-name" style="color:rgb(255, 157, 0)">TreeItemWithLoading</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">slotProps</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">        item</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">          </span><span class="token tag script language-javascript comment" style="color:rgb(179, 98, 255);font-style:italic">//@ts-expect-error this works but MUI doesn't officially support this prior to v6 - see https://github.com/mui/material-ui/issues/33175#issuecomment-1469725522</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">          </span><span class="token tag script language-javascript string-property property" style="color:rgb(255, 157, 0)">'data-still-to-load-ids'</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> data</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token tag script language-javascript property-access" style="color:rgb(255, 157, 0)">stillToLoad</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">        </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">      </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The two key parts of the code above are the <code>slots</code> and <code>slotProps</code> props. In <code>slots</code>, we're passing a <code>TreeItemWithLoading</code> component to customise the rendering - we'll implement that component in moment. We're also passing a <code>data-still-to-load-ids</code> prop to the <code>TreeItemWithLoading</code> component. This is the data we want to pass to the individual nodes in the treeview component. In our case, it's a list of node ids that we're still loading the data for. You could pass any data you like here.</p>
<p>The thing that's probably (hopefully) setting off alarm bells in your head is the <code>//@ts-expect-error</code> comment. This is in place because MUI doesn't officially support passing data to individual nodes in the treeview component, and consequently TypeScript shouts about it. However, passing arbitrary data does work. It will be received by the rendering component and so can be used. The comment is there to acknowledge that this is a hack and to get TypeScript to stop complaining about it.</p>
<p>Now let's look at the <code>TreeItemWithLoading</code> component:</p>
<div class="language-tsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-tsx codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token maybe-class-name">TreeItemWithLoading</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">forwardRef</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">TreeItemWithLoadingInternal</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  props</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">TreeItem2Props</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  ref</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access maybe-class-name">Ref</span><span class="token operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token maybe-class-name">HTMLLIElement</span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">TreeItem2</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">ref</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">ref</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token tag spread" style="color:rgb(255, 157, 0)">props</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">slots</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">        label</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript maybe-class-name" style="color:rgb(255, 157, 0)">TreeItemLabelWithLoading</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">      </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">slotProps</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">        label</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">          </span><span class="token tag script language-javascript comment" style="color:rgb(179, 98, 255);font-style:italic">//@ts-expect-error this works but MUI doesn't officially support this prior to v6 - see https://github.com/mui/material-ui/issues/33175#issuecomment-1469725522</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">          </span><span class="token tag script language-javascript string-property property" style="color:rgb(255, 157, 0)">'data-is-loading'</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> props</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token tag script language-javascript string" style="color:rgb(165, 255, 144)">'data-still-to-load-ids'</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token tag script language-javascript method function property-access" style="color:rgb(250, 208, 0)">includes</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">            props</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token tag script language-javascript property-access" style="color:rgb(255, 157, 0)">itemId</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">          </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">        </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">      </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The <code>TreeItemWithLoading</code> component is a wrapper around the <code>TreeItem2</code> component. You'll note in our code we're using the <a href="https://mui.com/x/react-tree-view/#tree-item-components" target="_blank" rel="noopener noreferrer"><code>TreeItem2</code> component</a>. I won't explicitly discuss this, but it's worth noting that the <code>TreeItem2</code> component is intended to replace the <code>TreeItem</code> component in a future version of MUI; the <code>TreeItem2</code> component is more flexible and allows for more customisation.</p>
<p>Anyway, the <code>TreeItemWithLoading</code> component is where the magic happens. For every node in the treeview, this component will be rendered. All it does is render a <code>TreeItem2</code> component, but with some customisation. Again using the <code>slots</code> / <code>slotProps</code> properties, it customises the underlying label component that is rendered. It replaces the default label component (<code>TreeItem2Label</code>) with a custom one that shows a loader if the node is still loading, that component is named <code>TreeItemLabelWithLoading</code>. We'll implement it in a moment.</p>
<p>The <code>TreeItemWithLoading</code> component is also responsible for passing the <code>data-is-loading</code> prop to the <code>TreeItemLabelWithLoading</code> component. You'll note that we're just passing a <code>boolean</code> this time which we construct by comparing the id of the node to the list of ids that are still loading.</p>
<p>Finally, let's look at the <code>TreeItemLabelWithLoading</code> component:</p>
<div class="language-tsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-tsx codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">TreeItemLabelWithLoading</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">props</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  children</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  className</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token string-property property" style="color:rgb(255, 157, 0)">'data-is-loading'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">boolean</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> children</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string-property property" style="color:rgb(255, 157, 0)">'data-is-loading'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> isLoading</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token plain">other </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> props</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">TreeItem2Label</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token tag spread" style="color:rgb(255, 157, 0)">other</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">children</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">isLoading </span><span class="token operator" style="color:rgb(255, 157, 0)">&amp;&amp;</span><span class="token plain"> </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CircularProgress</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">size</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">1em</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">sx</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> marginLeft</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript number" style="color:rgb(255, 98, 140)">0.5</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">TreeItem2Label</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This is just a wrapper of the <code>TreeItem2Label</code> component that would have been rendered by default. The only difference being: if the <code>data-is-loading</code> value passed is truthy, a loader (<code>CircularProgress</code>) component is rendered next to the label to indicate the loading state.</p>
<p>Consider the image below:</p>
<p><img decoding="async" loading="lazy" alt="screenshot of the treeview" src="https://johnnyreilly.com/assets/images/screenshot-with-loader-b9ebba64715e39d06cf0edbb4cdabbcd.webp" width="680" height="202" class="img_ev3q"></p>
<p>Notice that there are three nodes in this picture. Two without a loader, one with. This is the result of the logic in our <code>TreeItemLabelWithLoading</code> component.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="putting-it-all-together">Putting it all together<a href="https://johnnyreilly.com/mui-react-tree-view-pass-data-to-treeitem#putting-it-all-together" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Now we've walked through how it works, let's put all the code together in one place:</p>
<div class="language-tsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-tsx codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">OurComponent</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">RichTreeView</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">defaultExpandedItems</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">initialExpandedItems</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">multiSelect</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript boolean" style="color:rgb(255, 98, 140)">true</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">checkboxSelection</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript boolean" style="color:rgb(255, 98, 140)">true</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">selectedItems</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">selectedIds</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">onSelectedItemsChange</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">handleSelectedItemsChange</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">items</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">treeViewNodes</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag comment" style="color:rgb(179, 98, 255);font-style:italic">// note that we're using the TreeItemWithLoading component here</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">slots</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> item</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript maybe-class-name" style="color:rgb(255, 157, 0)">TreeItemWithLoading</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">slotProps</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">        item</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">          </span><span class="token tag script language-javascript comment" style="color:rgb(179, 98, 255);font-style:italic">//@ts-expect-error this works but MUI doesn't officially support this prior to v6 - see https://github.com/mui/material-ui/issues/33175#issuecomment-1469725522</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">          </span><span class="token tag script language-javascript string-property property" style="color:rgb(255, 157, 0)">'data-still-to-load-ids'</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> data</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token tag script language-javascript property-access" style="color:rgb(255, 157, 0)">stillToLoad</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">        </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">      </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">TreeItemLabelWithLoading</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">props</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  children</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  className</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token string-property property" style="color:rgb(255, 157, 0)">'data-is-loading'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">boolean</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> children</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string-property property" style="color:rgb(255, 157, 0)">'data-is-loading'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> isLoading</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token plain">other </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> props</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">TreeItem2Label</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token tag spread" style="color:rgb(255, 157, 0)">other</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">children</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">isLoading </span><span class="token operator" style="color:rgb(255, 157, 0)">&amp;&amp;</span><span class="token plain"> </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CircularProgress</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">size</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">1em</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">sx</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> marginLeft</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript number" style="color:rgb(255, 98, 140)">0.5</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">TreeItem2Label</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token maybe-class-name">TreeItemWithLoading</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">forwardRef</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">TreeItemWithLoadingInternal</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  props</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">TreeItem2Props</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  ref</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access maybe-class-name">Ref</span><span class="token operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token maybe-class-name">HTMLLIElement</span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">TreeItem2</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">ref</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">ref</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token tag spread" style="color:rgb(255, 157, 0)">props</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">slots</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">        label</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript maybe-class-name" style="color:rgb(255, 157, 0)">TreeItemLabelWithLoading</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">      </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">slotProps</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">        label</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">          </span><span class="token tag script language-javascript comment" style="color:rgb(179, 98, 255);font-style:italic">//@ts-expect-error this works but MUI doesn't officially support this prior to v6 - see https://github.com/mui/material-ui/issues/33175#issuecomment-1469725522</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">          </span><span class="token tag script language-javascript string-property property" style="color:rgb(255, 157, 0)">'data-is-loading'</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> props</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token tag script language-javascript string" style="color:rgb(165, 255, 144)">'data-still-to-load-ids'</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token tag script language-javascript method function property-access" style="color:rgb(250, 208, 0)">includes</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">            props</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token tag script language-javascript property-access" style="color:rgb(255, 157, 0)">itemId</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">          </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">        </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">      </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The above will allow you to pass data to the components rendering the elements that make up your treeview, and allow you to customise accordingly.</p>
<p>I'm not completely certain this is "the way" that is advised. But it is a way that works. I'm going to follow up with the MUI team to ensure this is good advice.</p>]]></content>
        <author>
            <name>John Reilly</name>
            <uri>https://johnnyreilly.com/about</uri>
        </author>
        <category label="React" term="React"/>
    </entry>
</feed>