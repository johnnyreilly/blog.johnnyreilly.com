<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>I CAN MAKE THIS WORK</title>
        <link>https://johnnyreilly.com/</link>
        <description>The blog of John Reilly ‚ù§Ô∏èüåª</description>
        <lastBuildDate>Fri, 25 Jul 2025 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <copyright>Copyright ¬© 2012 - 2025 John Reilly.</copyright>
        <item>
            <title><![CDATA[Static Web Apps CLI: local authentication emulation with ASP.NET]]></title>
            <link>https://johnnyreilly.com/static-web-apps-cli-local-auth-emulator-with-dotnet-authentication</link>
            <guid>https://johnnyreilly.com/static-web-apps-cli-local-auth-emulator-with-dotnet-authentication</guid>
            <pubDate>Fri, 28 Mar 2025 19:39:57 GMT</pubDate>
            <description><![CDATA[The Static Web Apps CLI has a local authentication emulator. This is a useful tool for local development, and can be used with ASP.NET authentication. This post shows how.]]></description>
            <content:encoded><![CDATA[<p>When developing web applications that have some dependency on authentication, it can be tricky to get a local development setup that allows you to manage authentication effectively. However, there's a way to achieve this, using the Static Web Apps CLI local authentication emulator.</p>
<p><img decoding="async" loading="eager" alt="title image reading &amp;quot;Static Web Apps CLI: improve performance with Vite server proxy&amp;quot; with the Static Web Apps CLI and Vite logos" src="https://johnnyreilly.com/assets/images/title-image-bd0f70a54d087f447ca7b6d544692a83.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<p>I build a lot of SPA style applications that run JavaScript / TypeScript on the front end and C# / ASP.NET on the back end. The majority of those apps require some kind of authentication. In fact I'd struggle to think of many apps that don't. This post will walk through how to integrate ASP.NET authentication with the Static Web Apps CLI local authentication emulator to achieve a great local development setup. Don't worry if that doesn't make sense right now, once we have walked through the setup, it will.</p>
<p>This post builds somewhat on posts I've written about using the Static Web Apps CLI <a href="https://johnnyreilly.com/static-web-apps-cli-improve-performance-with-vite-server-proxy">with the Vite proxy server with for enhanced performance</a> and <a href="https://johnnyreilly.com/static-web-apps-cli-node-18-could-not-connect-to-api">how to use the <code>--api-location</code> argument to connect to a separately running backend API</a>. However, you need not have read either post to understand what we're doing.</p>
<p>We're going to first walk through what we're trying to achieve, and then we'll walk through the steps to get there. When it comes to implementation, we're going to use Vite as our front end server, and ASP.NET as our back end server. The Static Web Apps CLI will be used for local authentication emulation.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="local-authentication-choices">Local authentication choices<a href="https://johnnyreilly.com/static-web-apps-cli-local-auth-emulator-with-dotnet-authentication#local-authentication-choices" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>When we're building an application, let's think about the options that we have, with regards to our local development setup. It's pretty typical for applications to use some kind of third party authentication provider, rather than providing their own. This could be <a href="https://www.okta.com/" target="_blank" rel="noopener noreferrer">Okta</a>, <a href="https://learn.microsoft.com/en-us/entra/identity/authentication/overview-authentication" target="_blank" rel="noopener noreferrer">Microsoft Entra / Azure AD</a>, <a href="https://auth0.com/" target="_blank" rel="noopener noreferrer">Auth0</a> or something else.</p>
<p>It's possible to configure a local development setup which integrates with a third party authentication provider. However, is that wise? Do you want to couple your ability to be able to test scenarios on your local machine, to a server, somewhere out there on the internet? You certainly can. It typically involves setting a redirect URI on the authentication provider to <code>http://localhost:5173</code> (or wherever your local setup runs).</p>
<p>But it is inconvenient to get that set up in the first place. And even once it is set up, you're then coupled to being online whenever you're testing locally. We're offline more than we appreciate. I'm writing these words on an aeroplane which is currently flying over Botswana. I have no internet access right now. But as you've gathered, I'm on my computer and I'm able to do things. How? Because I'm using the Azure Static Web Apps CLI local authentication emulator for local development.</p>
<p>That's what this post is about. How to use the Static Web Apps CLI local authentication emulator with ASP.NET authentication to enable a great (and offline-first) local development setup.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-the-static-web-apps-cli">What is the Static Web Apps CLI?<a href="https://johnnyreilly.com/static-web-apps-cli-local-auth-emulator-with-dotnet-authentication#what-is-the-static-web-apps-cli" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>We should probably talk about what the <a href="https://azure.github.io/static-web-apps-cli/" target="_blank" rel="noopener noreferrer">Static Web Apps CLI</a> is. It describes itself as:</p>
<blockquote>
<p>The Static Web Apps (SWA) CLI is an open-source commandline tool that streamlines local development and deployment for Azure Static Web Apps.</p>
</blockquote>
<p>It's original purpose was to provide a local development server for an Azure service known as <a href="https://learn.microsoft.com/en-us/azure/static-web-apps/" target="_blank" rel="noopener noreferrer">Azure Static Web Apps</a>. However, it has a number of features that make it useful for general web application development. For example, it can be used to <a href="https://azure.github.io/static-web-apps-cli/docs/cli/swa-start#serve-both-the-front-end-app-and-api" target="_blank" rel="noopener noreferrer">proxy requests to a backend API server</a>, and it can also be used to <a href="https://azure.github.io/static-web-apps-cli/docs/cli/local-auth" target="_blank" rel="noopener noreferrer">emulate authentication</a>.</p>
<p>We're going to use the authentication emulator to provide a local authentication server whilst we're developing. Just that piece of functionality; we're intentionally only using a subset of the Static Web Apps CLI functionality.</p>
<p>Incidentally, there are alternatives. I'm aware of one other local authentication emulator, which is the <a href="https://firebase.google.com/docs/emulator-suite/connect_auth" target="_blank" rel="noopener noreferrer">Firebase Authentication Emulator</a>. This could likely be used in a similar way. However, we'll be using the Static Web Apps CLI local authentication emulator.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="how-does-the-static-web-apps-cli-local-authentication-emulator-work">How does the Static Web Apps CLI local authentication emulator work?<a href="https://johnnyreilly.com/static-web-apps-cli-local-auth-emulator-with-dotnet-authentication#how-does-the-static-web-apps-cli-local-authentication-emulator-work" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>When running the Static Web Apps <code>start</code> command, it surfaces login endpoints at this location: <code>http://localhost:4280/.auth/login/&lt;PROVIDER_NAME&gt;</code>. <code>&lt;PROVIDER_NAME&gt;</code> is the name of the authentication provider you want to use. This might be <code>aad</code>, <code>github</code> etc. If you look at the code (<a href="https://github.com/Azure/static-web-apps-cli/blob/062fb288d34126a095be6f3e1dc57fe5adb3f4bf/src/public/auth.html" target="_blank" rel="noopener noreferrer">and you can here</a>) you'll realise that the <code>&lt;PROVIDER_NAME&gt;</code> can actually be any string; it's not limited to the names of the authentication providers that are supported by Azure Static Web Apps. So if you want to use an arbitary name like <code>potato</code> as the provider name, you can do that. In terms of emulation, it doesn't matter what the provider name is.</p>
<p>When started, the CLI will serve a local authentication UI at this endpoint which looks like this:</p>
<p><img decoding="async" loading="lazy" alt="screenshot of Static Web Apps CLI local authentication emulator at work" src="https://johnnyreilly.com/assets/images/swa-cli-local-auth-7a324cc39d640ff7fd8fd5c1f680c293.webp" width="1394" height="1756" class="img_ev3q"></p>
<p>When you hit the <code>Login</code> button, it will use the form data to create a fake user and <a href="https://github.com/Azure/static-web-apps-cli/blob/062fb288d34126a095be6f3e1dc57fe5adb3f4bf/src/public/auth.html#L193-L196" target="_blank" rel="noopener noreferrer">set a cookie in your browser named <code>StaticWebAppsAuthCookie</code></a>. That cookie will look something like this:</p>
<p><img decoding="async" loading="lazy" alt="screenshot of the StaticWebAppsAuthCookie in Chrome Devtools" src="https://johnnyreilly.com/assets/images/screenshot-staticwebappsauthcookie-70b7978c3b4d620c7abbe906859bdff2.webp" width="2360" height="582" class="img_ev3q"></p>
<p>And whilst it looks like a JWT, it isn't. It's actually a base64 encoded string which contains the user information that you provided in the form. In fact you can see what it is by flipping open the browser devtools and running this code in the console after you have hit the <code>Login</code> button:</p>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token known-class-name class-name" style="color:rgb(250, 208, 0)">JSON</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">parse</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token function" style="color:rgb(250, 208, 0)">atob</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token dom variable" style="color:rgb(255, 238, 128)">document</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">cookie</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">split</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'; '</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">find</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token parameter">row</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> row</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">startsWith</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'StaticWebAppsAuthCookie='</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token operator" style="color:rgb(255, 157, 0)">?.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">split</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'='</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token number" style="color:rgb(255, 98, 140)">1</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre></div></div>
<p>This will acquire the cookie that has just been created by the Static Web Apps CLI local authentication emulator from your browser. It then decodes it and parses the JSON string to get the user information that you provided in the form. It produces something like this:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"userId"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"4a27b7326639199f5de91c4b9a62531b"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"userRoles"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token string" style="color:rgb(165, 255, 144)">"anonymous"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"authenticated"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"other-role"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"claims"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> </span><span class="token property" style="color:rgb(255, 157, 0)">"typ"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"MyId"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token property" style="color:rgb(255, 157, 0)">"val"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"123456789"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"identityProvider"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"couldbeanything"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"userDetails"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"megan.s@thing.com"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre></div></div>
<p>This cookie will be sent to your backend API server with every request.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="how-is-our-solution-going-to-work">How is our solution going to work?<a href="https://johnnyreilly.com/static-web-apps-cli-local-auth-emulator-with-dotnet-authentication#how-is-our-solution-going-to-work" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>To make a working development setup, we need three things:</p>
<ol>
<li>A front end server (Vite)</li>
<li>A back end server (ASP.NET)</li>
<li>A local authentication server (Static Web Apps CLI)</li>
</ol>
<p>We'll bring these three things together to create a local development setup that allows us to develop our application locally, with authentication. This diagram shows how the three components will work together:</p>
<!-- -->
<p>From the developer's browser, HTTP requests will be sent to the Vite server running on <code>http://localhost:5173</code>. The Vite server will proxy authentication emulation requests to the Static Web Apps CLI local authentication emulator running on <code>http://localhost:4280</code>. All other requests will be proxied to the ASP.NET backend server running on <code>http://localhost:5000</code>.</p>
<p>This setup means that the cookie that is set by the Static Web Apps CLI local authentication emulator will be shared with the ASP.NET backend server through the Vite proxy mechanism. So to make the ASP.NET authentication work, we need to make sure that the ASP.NET server is configured to accept this cookie and use it to authenticate the user.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="time-to-implement">Time to implement<a href="https://johnnyreilly.com/static-web-apps-cli-local-auth-emulator-with-dotnet-authentication#time-to-implement" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Now that we've talked about what we're trying to achieve, let's walk through the steps to get there. We'll need both the .NET SDK and Node.js installed on our machine. From here on out it's code. The full example can be found in <a href="https://github.com/johnnyreilly/swa-local-auth-emulator-and-dotnet" target="_blank" rel="noopener noreferrer">this GitHub repository</a>.</p>
<p>We'll start by creating a new Vite project in a folder we'll call <code>AppFrontEnd</code>. We'll use the React + TypeScript template. You can use whatever template you like:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> create vite@latest AppFrontEnd -- </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">--template</span><span class="token plain"> react-ts</span><br></span></code></pre></div></div>
<p>Next we'll create a new ASP.NET project in a folder we'll call <code>AppBackEnd</code>:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">dotnet new web </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">-n</span><span class="token plain"> AppBackEnd</span><br></span></code></pre></div></div>
<p>And we'll initialise a <code>package.json</code> in the root of our project:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> init </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">-y</span><br></span></code></pre></div></div>
<p>This <code>package.json</code> will be used as a general purpose task runner later on.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="setting-up-the-back-end">Setting up the back end<a href="https://johnnyreilly.com/static-web-apps-cli-local-auth-emulator-with-dotnet-authentication#setting-up-the-back-end" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>We'd first like to adjust the port that our ASP.NET server runs on in development. We'll update the <code>launchSettings.json</code> file to look like this:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"$schema"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"https://json.schemastore.org/launchsettings.json"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"profiles"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"http"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"commandName"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"Project"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"dotnetRunMessages"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"launchBrowser"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">false</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"applicationUrl"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"http://localhost:5000"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"environmentVariables"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token property" style="color:rgb(255, 157, 0)">"ASPNETCORE_ENVIRONMENT"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"Development"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre></div></div>
<p>This will set the ASP.NET server to run on <code>http://localhost:5000</code> in development. You can run the server with <code>dotnet run</code>.</p>
<p>We need to build an <code>AuthenticationHandler</code> that will accept the cookie set by the Static Web Apps CLI local authentication emulator. This is a custom authentication handler that will be used to authenticate users based on the cookie set by the Static Web Apps CLI local authentication emulator. So here the <code>StaticWebAppsCLIAuthentication.cs</code> in all its glory:</p>
<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">System</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Security</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Claims</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">System</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Text</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Encodings</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Web</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">System</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Text</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Json</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">System</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Text</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Json</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Serialization</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">Microsoft</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">AspNetCore</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Authentication</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">Microsoft</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Extensions</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Options</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">namespace</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">AppBackEnd</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">static</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">class</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">StaticWebAppsCLIAuthentication</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> STATICWEBAPPSCLIAUTH_SCHEMENAME </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"StaticWebAppsCLIAuthScheme"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">static</span><span class="token plain"> </span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">AuthenticationBuilder</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">AddStaticWebAppsCLIAuth</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">this</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">AuthenticationBuilder</span><span class="token plain"> builder</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name" style="color:rgb(250, 208, 0)">Action</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token class-name" style="color:rgb(250, 208, 0)">AuthenticationSchemeOptions</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> configure </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">configure </span><span class="token operator" style="color:rgb(255, 157, 0)">==</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> configure </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> o </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> builder</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token generic-method function" style="color:rgb(250, 208, 0)">AddScheme</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token generic-method generic class-name" style="color:rgb(250, 208, 0)">AuthenticationSchemeOptions</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token generic-method generic class-name" style="color:rgb(250, 208, 0)"> StaticWebAppsCLIAuthenticationHandler</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            STATICWEBAPPSCLIAUTH_SCHEMENAME</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            STATICWEBAPPSCLIAUTH_SCHEMENAME</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            configure</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">class</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">StaticWebAppsCLIAuthenticationHandler</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token type-list class-name" style="color:rgb(250, 208, 0)">AuthenticationHandler</span><span class="token type-list class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token type-list class-name" style="color:rgb(250, 208, 0)">AuthenticationSchemeOptions</span><span class="token type-list class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">StaticWebAppsCLIAuthenticationHandler</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name" style="color:rgb(250, 208, 0)">IOptionsMonitor</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token class-name" style="color:rgb(250, 208, 0)">AuthenticationSchemeOptions</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> options</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name" style="color:rgb(250, 208, 0)">ILoggerFactory</span><span class="token plain"> logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name" style="color:rgb(250, 208, 0)">UrlEncoder</span><span class="token plain"> encoder</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">base</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">options</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> encoder</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">protected</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">override</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">async</span><span class="token plain"> </span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">Task</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">AuthenticateResult</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">HandleAuthenticateAsync</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">try</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> principal </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">MakeClaimsPrincipalFromHeaderOrCookie</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// eg eyJ1c2VySWQiOiIwMTA2ZWMwYmU2MjAwNDM5YjY5ODc3NTFiOGJmNmU3YSIsInVzZXJSb2xlcyI6WyJhbm9ueW1vdXMiLCJhdXRoZW50aWNhdGVkIl0sImNsYWltcyI6W3sidHlwIjoibmFtZSIsInZhbCI6IkF6dXJlIFN0YXRpYyBXZWIgQXBwcyJ9XSwiaWRlbnRpdHlQcm92aWRlciI6ImFhZCIsInVzZXJEZXRhaWxzIjoiam9obm55cmVpbGx5In0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                Context</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Request</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Cookies</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token string" style="color:rgb(165, 255, 144)">"StaticWebAppsAuthCookie"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">??</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// eg eyJ1c2VySWQiOiIwMTA2ZWMwYmU2MjAwNDM5YjY5ODc3NTFiOGJmNmU3YSIsInVzZXJSb2xlcyI6WyJhbm9ueW1vdXMiLCJhdXRoZW50aWNhdGVkIl0sImlkZW50aXR5UHJvdmlkZXIiOiJhYWQiLCJ1c2VyRGV0YWlscyI6ImpvaG5ueXJlaWxseSJ9</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// for reasons that are unclear, the X-MS-CLIENT-PRINCIPAL header presently excludes claims; see https://github.com/Azure/static-web-apps-cli/blob/062fb288d34126a095be6f3e1dc57fe5adb3f4bf/src/msha/handlers/function.handler.ts#L38-L42</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                Context</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Request</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Headers</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token string" style="color:rgb(165, 255, 144)">"X-MS-CLIENT-PRINCIPAL"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">FirstOrDefault</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">principal </span><span class="token operator" style="color:rgb(255, 157, 0)">==</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> AuthenticateResult</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">NoResult</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            Context</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">User </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> principal</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> AuthenticateResult</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Success</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">AuthenticationTicket</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">principal</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> principal</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Identity</span><span class="token punctuation" style="color:rgb(255, 255, 255)">?.</span><span class="token plain">AuthenticationType </span><span class="token operator" style="color:rgb(255, 157, 0)">??</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"unknown"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">Exception</span><span class="token plain"> ex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> AuthenticateResult</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Fail</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">ex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">async</span><span class="token plain"> </span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">Task</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">ClaimsPrincipal</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">MakeClaimsPrincipalFromHeaderOrCookie</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> headerOrCookie</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">IsNullOrEmpty</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">headerOrCookie</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> decodedBytes </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> Convert</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">FromBase64String</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">headerOrCookie</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> memoryStream </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">MemoryStream</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">decodedBytes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> staticWebAppClientPrinciple </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> JsonSerializer</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token generic-method function" style="color:rgb(250, 208, 0)">DeserializeAsync</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token generic-method generic class-name" style="color:rgb(250, 208, 0)">StaticWebAppsCLIClientPrinciple</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">memoryStream</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">staticWebAppClientPrinciple </span><span class="token operator" style="color:rgb(255, 157, 0)">==</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">||</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">IsNullOrWhiteSpace</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">staticWebAppClientPrinciple</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">UserDetails</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">||</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">IsNullOrWhiteSpace</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">staticWebAppClientPrinciple</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">UserId</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> claims </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">DefaultMapClaims</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">staticWebAppClientPrinciple</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> principal </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">ClaimsPrincipal</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        principal</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">AddIdentity</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">ClaimsIdentity</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            claims</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">authenticationType</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> staticWebAppClientPrinciple</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">IdentityProvider </span><span class="token operator" style="color:rgb(255, 157, 0)">??</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"unknown"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">nameType</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> ClaimTypes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Email</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">roleType</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> ClaimTypes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Role</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> principal</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// &lt;summary&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// Method takes the StaticWebAppClientPrinciple and produces a list of claims constructed</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// from the claims, user details and user roles</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// &lt;/summary&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">static</span><span class="token plain"> </span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">Claim</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">DefaultMapClaims</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">StaticWebAppsCLIClientPrinciple</span><span class="token plain"> staticWebAppClientPrinciple</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> claims </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">List</span><span class="token constructor-invocation class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">StaticWebAppsCLIClaim</span><span class="token constructor-invocation class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token operator" style="color:rgb(255, 157, 0)">!</span><span class="token keyword" style="color:rgb(255, 157, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">IsNullOrWhiteSpace</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">staticWebAppClientPrinciple</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">UserDetails</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            claims</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Add</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">StaticWebAppsCLIClaim</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                Type </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"preferred_username"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                Value </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> staticWebAppClientPrinciple</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">UserDetails</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            claims</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Add</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">StaticWebAppsCLIClaim</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                Type </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> ClaimTypes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Email</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                Value </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> staticWebAppClientPrinciple</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">UserDetails</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            claims</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Add</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">StaticWebAppsCLIClaim</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                Type </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> ClaimTypes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                Value </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> staticWebAppClientPrinciple</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">UserDetails</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">staticWebAppClientPrinciple</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Claims </span><span class="token operator" style="color:rgb(255, 157, 0)">!=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            claims</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">AddRange</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">staticWebAppClientPrinciple</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Claims</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> mappedClaims </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> claims</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Select</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">claim </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">Claim</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">claim</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Type</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> claim</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Value</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// translate the user roles into claims with the type ClaimTypes.Role</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// eg "userRoles": ["anonymous", "authenticated"]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> userRoleClaims </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> staticWebAppClientPrinciple</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">UserRoles</span><span class="token punctuation" style="color:rgb(255, 255, 255)">?.</span><span class="token function" style="color:rgb(250, 208, 0)">Select</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">role </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">Claim</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">ClaimTypes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Role</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> role</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">??</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name" style="color:rgb(250, 208, 0)">Claim</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> combinedClaims </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token range operator" style="color:rgb(255, 157, 0)">..</span><span class="token plain">mappedClaims</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token range operator" style="color:rgb(255, 157, 0)">..</span><span class="token plain">userRoleClaims</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> combinedClaims</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// &lt;summary&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// This is the JSON object that is decoded from either the</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// StaticWebAppsAuthCookie cookie or the X-MS-CLIENT-PRINCIPAL header</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// when working with the Static Web Apps CLI local authentication emulator.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">///</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// The claims element is not present on the X-MS-CLIENT-PRINCIPAL header</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">///</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// {</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">///     "userId": "9b516349fcf5caf60f715703d8804aa7",</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">///     "userRoles": [</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">///         "anonymous",</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">///         "authenticated"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">///     ],</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">///     "claims": [{"typ":"blarg","val":"Azure Static Web Apps"}],</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">///     "identityProvider": "aad",</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">///     "userDetails": "someone.name@company.com"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// }</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// &lt;/summary&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">class</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">StaticWebAppsCLIClientPrinciple</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// &lt;summary&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// User Id</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// &lt;/summary&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token function" style="color:rgb(250, 208, 0)">JsonPropertyName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"userId"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> UserId </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">get</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">set</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// &lt;summary&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// User roles</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// &lt;/summary&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token function" style="color:rgb(250, 208, 0)">JsonPropertyName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"userRoles"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">IEnumerable</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token return-type class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> UserRoles </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">get</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">set</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// &lt;summary&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// Identity provider typically "aad"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// &lt;/summary&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token function" style="color:rgb(250, 208, 0)">JsonPropertyName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"identityProvider"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> IdentityProvider </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">get</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">set</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// &lt;summary&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// User details typically email address</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// &lt;/summary&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token function" style="color:rgb(250, 208, 0)">JsonPropertyName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"userDetails"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> UserDetails </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">get</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">set</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// &lt;summary&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// Claims for the user</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// &lt;/summary&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token function" style="color:rgb(250, 208, 0)">JsonPropertyName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"claims"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">IEnumerable</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">StaticWebAppsCLIClaim</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> Claims </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">get</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">set</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">class</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">StaticWebAppsCLIClaim</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// &lt;summary&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// Type of claim eg "name"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// &lt;/summary&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token function" style="color:rgb(250, 208, 0)">JsonPropertyName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"typ"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> Type </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">get</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">set</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Empty</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// &lt;summary&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// Value of claim eg "Someone Name"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// &lt;/summary&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token function" style="color:rgb(250, 208, 0)">JsonPropertyName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"val"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> Value </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">get</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">set</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Empty</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre></div></div>
<p>Whilst there's a good amount of code here, what we're actually doing is relatively simple:</p>
<ul>
<li>We define a custom authentication scheme called <code>StaticWebAppsCLIAuthScheme</code></li>
<li>We define a custom authentication handler called <code>StaticWebAppsCLIAuthenticationHandler</code>. The handler will decode the cookie and create a <code>ClaimsPrincipal</code> object that contains the user information it. This will be used to authenticate users based on the cookie that has been set by the Static Web Apps CLI local authentication emulator. If the <code>StaticWebAppsAuthCookie</code> cookie is not detected, the handler will fallback to the <code>X-MS-CLIENT-PRINCIPAL</code> header. (This should never happen in practice, but it's there for completeness.)</li>
</ul>
<p>With our handler in place, we need to update the <code>Program.cs</code> file in the <code>AppBackEnd</code> project to use it. We'll also add a <code>/api/me</code> endpoint to test the authentication. So the modified <code>Program.cs</code> file looks like this:</p>
<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">AppBackEnd</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> builder </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> WebApplication</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">CreateBuilder</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">args</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">builder</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Environment</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">IsDevelopment</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// in development, we want to use the Static Web Apps CLI authentication scheme</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    builder</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Services</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">AddAuthentication</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">StaticWebAppsCLIAuthentication</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">STATICWEBAPPSCLIAUTH_SCHEMENAME</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">AddStaticWebAppsCLIAuth</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">else</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// in production we will use an alternative authentication scheme</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">builder</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Services</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">AddAuthorization</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> app </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> builder</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Build</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">app</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">UseAuthentication</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">app</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">UseAuthorization</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">app</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">MapGet</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"/"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"Hello World!"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">app</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">MapGet</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"/api/me"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">context</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> user </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> context</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">User</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> roleClaimType </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> user</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Identities</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">First</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">RoleClaimType</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> userDetails </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        user</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Identity</span><span class="token punctuation" style="color:rgb(255, 255, 255)">?.</span><span class="token plain">Name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        user</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Identity</span><span class="token punctuation" style="color:rgb(255, 255, 255)">?.</span><span class="token plain">IsAuthenticated</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        Claims </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> user</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Claims</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Select</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">claim </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> claim</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Type</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> claim</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Value </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">ToArray</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> context</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Response</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">WriteAsJsonAsync</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">userDetails</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">app</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Run</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre></div></div>
<p>I haven't included the production authentication scheme here; that will be specific to your application. The important part is that we are using the <code>StaticWebAppsCLIAuthentication</code> scheme in only in development.</p>
<p>Let's test this works. We'll start the ASP.NET server with <code>dotnet run</code>. Then we'll use the <code>curl</code> command to call the <code>/api/me</code> endpoint:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token function" style="color:rgb(250, 208, 0)">curl</span><span class="token plain"> http://localhost:5000/api/me </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">--cookie</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"StaticWebAppsAuthCookie=eyJ1c2VySWQiOiIxNDdmMTVjNmFiODBhNmY3NjJhOWQyZDRmNzczNzUwOSIsInVzZXJSb2xlcyI6WyJhbm9ueW1vdXMiLCJhdXRoZW50aWNhdGVkIiwib3RoZXItcm9sZSJdLCJjbGFpbXMiOlt7InR5cCI6Ik15SWQiLCJ2YWwiOiIxMjM0NTY3ODkifV0sImlkZW50aXR5UHJvdmlkZXIiOiJjb3VsZGJlYW55dGhpbmciLCJ1c2VyRGV0YWlscyI6Im1lZ2FuLnNAdGhpbmcuY29tIn0="</span><br></span></code></pre></div></div>
<p>This will return the user information that was set in the cookie by the Static Web Apps CLI local authentication emulator:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"name"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"megan.s@thing.com"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"isAuthenticated"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"claims"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"type"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"preferred_username"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"value"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"megan.s@thing.com"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"type"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"value"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"megan.s@thing.com"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"type"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"value"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"megan.s@thing.com"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"type"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"MyId"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"value"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"123456789"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"type"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"http://schemas.microsoft.com/ws/2008/06/identity/claims/role"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"value"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"anonymous"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"type"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"http://schemas.microsoft.com/ws/2008/06/identity/claims/role"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"value"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"authenticated"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"type"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"http://schemas.microsoft.com/ws/2008/06/identity/claims/role"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"value"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"other-role"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre></div></div>
<p>So our authentication mechanism works! Now we just need to set up the Vite server and the Static Web Apps CLI local authentication emulator to provide the full local development experience.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="setting-up-the-front-end">Setting up the front end<a href="https://johnnyreilly.com/static-web-apps-cli-local-auth-emulator-with-dotnet-authentication#setting-up-the-front-end" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Now we'll move over to the <code>AppFrontEnd</code> folder.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="set-up-the-static-web-apps-cli">Set up the Static Web Apps CLI<a href="https://johnnyreilly.com/static-web-apps-cli-local-auth-emulator-with-dotnet-authentication#set-up-the-static-web-apps-cli" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>We'll install the Static Web Apps CLI as a development dependency:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">install</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">-D</span><span class="token plain"> @azure/static-web-apps-cli</span><br></span></code></pre></div></div>
<p>And we'll add a <code>start</code> script to the <code>package.json</code> file to start the Static Web Apps CLI and the Vite server. The <code>start</code> script will look like this:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"scripts"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"start"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"swa start http://localhost:5173 --run \"npm run dev\" --api-devserver-url http://127.0.0.1:5000"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre></div></div>
<p>When run, this will start the Static Web App CLI and the Vite server. The <code>--run</code> argument will start the Vite server, and the <code>--api-devserver-url</code> argument will set the URL of the ASP.NET backend server. We'll create a mechanism for starting the ASP.NET server alongside the front end shortly.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="set-up-the-vite-server">Set up the Vite server<a href="https://johnnyreilly.com/static-web-apps-cli-local-auth-emulator-with-dotnet-authentication#set-up-the-vite-server" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>We already have the Vite server in place, but it needs a little configuration.</p>
<p>I'm now going to borrow from <a href="https://johnnyreilly.com/static-web-apps-cli-improve-performance-with-vite-server-proxy">this post on using the Vite proxy server with for enhanced performance</a>. We'll update the <code>vite.config.ts</code> file to add a proxy configuration. The <code>vite.config.ts</code> file will look like this:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> defineConfig </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'vite'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// https://vitejs.dev/config/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">default</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">defineConfig</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  server</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    proxy</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token string-property property" style="color:rgb(255, 157, 0)">'/api'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// our .NET application is running on port 5000</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        target</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'http://127.0.0.1:5000'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        changeOrigin</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        autoRewrite</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token string-property property" style="color:rgb(255, 157, 0)">'/.auth'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// the Static Web Apps local auth emulator is running on port 4280</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        target</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'http://127.0.0.1:4280'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        changeOrigin</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        autoRewrite</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre></div></div>
<p>The code above is responsible for ensuring that requests to the Vite server with the prefix <code>/.auth</code> are proxied to the Static Web Apps CLI local authentication emulator. Requests with the prefix <code>/api</code> (most requests) are proxied to the ASP.NET backend server.</p>
<p>With this in place, the Static Web Apps CLI local authentication emulator will be able to set the <code>StaticWebAppsAuthCookie</code> cookie in the browser, and the Vite server will proxy requests with that cookie to the ASP.NET backend server for use.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="bringing-front-end-and-back-end-together">Bringing front end and back end together<a href="https://johnnyreilly.com/static-web-apps-cli-local-auth-emulator-with-dotnet-authentication#bringing-front-end-and-back-end-together" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>We now have a back end and a front end in place. We need both to be running for local development. We mentioned earlier we'd be using the <code>package.json</code> in the root of the project as a task runner.</p>
<p>We'll use the <a href="https://github.com/open-cli-tools/concurrently" target="_blank" rel="noopener noreferrer"><code>concurrently</code></a> package to allow us to run both the ASP.NET server and the Static Web Apps CLI local authentication emulator at the same time.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">install</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">-D</span><span class="token plain"> concurrently</span><br></span></code></pre></div></div>
<p>And we'll update the <code>scripts</code> section of the <code>package.json</code> as follows:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"scripts"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"postinstall"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"npm run install:frontend &amp;&amp; npm run install:backend"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"install:frontend"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"cd AppFrontEnd &amp;&amp; npm install"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"install:backend"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"cd AppBackEnd &amp;&amp; dotnet restore"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"start"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"concurrently -n \"FE,BE\" -c \"bgBlue.bold,bgMagenta.bold\" \"npm run start:frontend\" \"npm run start:backend\""</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"start:frontend"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"cd AppFrontEnd &amp;&amp; npm run start"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"start:backend"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"cd AppBackEnd &amp;&amp; dotnet watch run"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre></div></div>
<p>We can now install all our dependencies (front end and backend) with a single command:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">install</span><br></span></code></pre></div></div>
<p>Then we can start the local development server with:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> start</span><br></span></code></pre></div></div>
<p>If we then go to <code>http://localhost:5173</code>, we should see the Vite server running:</p>
<p><img decoding="async" loading="lazy" alt="screenshot of Vite server running" src="https://johnnyreilly.com/assets/images/screenshot-vite-server-06ee838b6ca49ff9619b840c6e296186.webp" width="1272" height="1348" class="img_ev3q"></p>
<p>So far, this is just the Vite server. Time to get our login mechanism in place.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="testing-the-authentication">Testing the authentication<a href="https://johnnyreilly.com/static-web-apps-cli-local-auth-emulator-with-dotnet-authentication#testing-the-authentication" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>We're going to replace the contents of the <code>src/App.tsx</code> file in the <code>AppFrontEnd</code> project with code that will call the <code>/api/me</code> endpoint on the ASP.NET backend server to get the user information from the cookie set by the Static Web Apps CLI local authentication emulator and display it in the browser. If the user is not authenticated, it will show a login link.</p>
<p>A reminder, we're using React and TypeScript for our front end. But that's just because it's my preference; this technique is front end agnostic. You can use whatever framework (or none) that you like.</p>
<p>Our implementation will look like this:</p>
<div class="language-tsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-tsx codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token imports"> useState</span><span class="token imports punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token imports"> useEffect </span><span class="token imports punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'react'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'./App.css'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">interface</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">UserData</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  name</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">|</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  isAuthenticated</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">boolean</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  claims</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> type</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"> value</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">App</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">userData</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> setUserData</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token generic-function function" style="color:rgb(250, 208, 0)">useState</span><span class="token generic-function generic class-name operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token generic-function generic class-name" style="color:rgb(250, 208, 0)">UserData</span><span class="token generic-function generic class-name operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token function" style="color:rgb(250, 208, 0)">useEffect</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">fetchData</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token keyword" style="color:rgb(255, 157, 0)">try</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> response </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">fetch</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'/api/me'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token operator" style="color:rgb(255, 157, 0)">!</span><span class="token plain">response</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">ok</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token keyword" style="color:rgb(255, 157, 0)">throw</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">Error</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'Failed to fetch user data'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> data </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> response</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">json</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token function" style="color:rgb(250, 208, 0)">setUserData</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">data</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">error</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token console class-name" style="color:rgb(250, 208, 0)">console</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">error</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'Error fetching user data:'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> error</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token function" style="color:rgb(250, 208, 0)">fetchData</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag" style="color:rgb(255, 157, 0)">h1</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text">Static Web Apps CLI:</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag" style="color:rgb(255, 157, 0)">h1</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag" style="color:rgb(255, 157, 0)">h2</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text">local authentication emulation with ASP.NET</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag" style="color:rgb(255, 157, 0)">h2</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">userData </span><span class="token operator" style="color:rgb(255, 157, 0)">?</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        userData</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">isAuthenticated</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">?</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag" style="color:rgb(255, 157, 0)">p</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">style</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> textAlign</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript string" style="color:rgb(165, 255, 144)">'left'</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">            You are logged in </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">userData</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain-text"> |</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token string" style="color:rgb(165, 255, 144)">' '</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag" style="color:rgb(255, 157, 0)">a</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">href</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">/.auth/logout</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text">Log out</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag" style="color:rgb(255, 157, 0)">a</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag" style="color:rgb(255, 157, 0)">pre</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token known-class-name class-name" style="color:rgb(250, 208, 0)">JSON</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">stringify</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">userData</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">2</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag" style="color:rgb(255, 157, 0)">pre</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag" style="color:rgb(255, 157, 0)">p</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag" style="color:rgb(255, 157, 0)">p</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag" style="color:rgb(255, 157, 0)">a</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">href</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">/.auth/login/aad</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text">Log in</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag" style="color:rgb(255, 157, 0)">a</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag" style="color:rgb(255, 157, 0)">p</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag" style="color:rgb(255, 157, 0)">p</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text">Loading user data...</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag" style="color:rgb(255, 157, 0)">p</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">default</span><span class="token plain"> </span><span class="token maybe-class-name">App</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre></div></div>
<p>Let's test it! First we'll start our local dev setup with <code>npm start</code>. When we browse to <code>http://localhost:5173</code>, we should see the Vite server running:</p>
<p><img decoding="async" loading="lazy" alt="screenshot of the browser when not logged in" src="https://johnnyreilly.com/assets/images/screenshot-not-logged-in-7f95bc0b6967fef77a1b090aba01aab2.webp" width="1294" height="1618" class="img_ev3q"></p>
<p>If we click the <code>Login</code> link, we'll be taken to the Static Web Apps CLI local authentication emulator. We'll fill in the form and hit <code>Login</code>. This will set the <code>StaticWebAppsAuthCookie</code> cookie in our browser.</p>
<p><img decoding="async" loading="lazy" alt="screenshot of the Static Web Apps CLI local auth emulator" src="https://johnnyreilly.com/assets/images/screenshot-swa-cli-auth-0cb8d333b83d6796d90edf262dbe8ee6.webp" width="1294" height="1618" class="img_ev3q"></p>
<p>We'll be redirected back to the Vite server, and the cookie will be sent to the ASP.NET backend server. The ASP.NET backend server will use the cookie to authenticate the user and return the user information when the browser calls the <code>/api/me</code> endpoint. This will be displayed in the browser:</p>
<p><img decoding="async" loading="lazy" alt="screenshot of the browser when logged in" src="https://johnnyreilly.com/assets/images/screenshot-logged-in-cb3e296fdd9bf86d97bbac7440e2764a.png" width="1294" height="1618" class="img_ev3q"></p>
<p>It works!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="summing-up">Summing up<a href="https://johnnyreilly.com/static-web-apps-cli-local-auth-emulator-with-dotnet-authentication#summing-up" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>This has been a long post, but hopefully it has been useful. We've walked through how to set up a local development environment that uses the Static Web Apps CLI local authentication emulator with ASP.NET authentication. This allows us to develop our application locally, with authentication, without being coupled to a third party authentication provider.</p>
<p>The code built in this post <a href="https://github.com/johnnyreilly/swa-local-auth-emulator-and-dotnet" target="_blank" rel="noopener noreferrer">can be found here</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="credits">Credits<a href="https://johnnyreilly.com/static-web-apps-cli-local-auth-emulator-with-dotnet-authentication#credits" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<ul>
<li>Server icon by Konstantin Velichko from <a href="https://thenounproject.com/browse/icons/term/server/" target="_blank" rel="noopener noreferrer">Noun Project</a> (CC BY 3.0)</li>
<li>Browser icon by syahruni from <a href="https://thenounproject.com/browse/icons/term/browser/" target="_blank" rel="noopener noreferrer">Noun Project</a> (CC BY 3.0)</li>
</ul>]]></content:encoded>
            <category>Azure Static Web Apps</category>
            <category>Node.js</category>
            <category>ASP.NET</category>
            <category>Static Web Apps CLI</category>
        </item>
        <item>
            <title><![CDATA[Smuggling .gitignore, .npmrc and friends in npm packages]]></title>
            <link>https://johnnyreilly.com/smuggling-gitignore-npmrc-in-npm-packages</link>
            <guid>https://johnnyreilly.com/smuggling-gitignore-npmrc-in-npm-packages</guid>
            <pubDate>Sat, 28 Dec 2024 17:51:36 GMT</pubDate>
            <description><![CDATA[The npm publish command will not just package up .gitignore and .npmrc files. This post shows how to use zipping and unzipping with postinstall and prepare scripts to include these files into your npm package.]]></description>
            <content:encoded><![CDATA[<p>I recently needed to include a number of <code>.gitignore</code> and <code>.npmrc</code> files in an npm package. I was surprised to find that the <code>npm publish</code> command strips these out of the published package by default. As a consequence, This broke my package, and so I needed to find a way to get round this shortcoming.</p>
<p>I ended up using zipping and unzipping with <code>postinstall</code> and <code>prepare</code> scripts to include these files into my npm package.</p>
<p><img decoding="async" loading="eager" alt="title image reading &amp;quot;Smuggling dotfiles in npm packages&amp;quot; with the Node.js and npm logos" src="https://johnnyreilly.com/assets/images/title-image-8561ca58b004dee58e58697a4bf27a8e.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<p>This post shows how to use zipping and unzipping with <code>postinstall</code> and <code>prepare</code> scripts to include these files into your npm package.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="a-little-backstory">A little backstory<a href="https://johnnyreilly.com/smuggling-gitignore-npmrc-in-npm-packages#a-little-backstory" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>I'm currently beavering away on a "create-*-app" tool that generates new projects from a number of available templates. That tool takes the form of a CLI tool built with TypeScript, published as a package to an npm registry and consumed with <code>npx</code>. Significantly, the templates that ship with the CLI take the form of a <code>templates</code> folder in the package, and the folders in those templates include <code>.npmrc</code> and <code>.gitignore</code> files; which are key to the functionality of the templates.</p>
<p>When publishing my npm package, I discovered that the <code>.npmrc</code> and <code>.gitignore</code> files in subfolders were being stripped from the package. After a little research, I happened upon this <a href="https://github.com/npm/npm/issues/3763" target="_blank" rel="noopener noreferrer">GitHub issue about npm</a> which describes some of the behaviour I was seeing. After a touch more digging, I came to understand that this behaviour is a result of npm treating the <code>.gitignore</code> and <code>.npmrc</code> files as configuration files rather than part of the package's intended content.</p>
<p>However, given these files are essential to the templates' functionality, I needed to find a way to include them in the package.</p>
<p>I mused with explicitly including the specific files in the <code>files</code> section of the <code>package.json</code> file, but this would have been a maintenance headache. I wanted a more automated solution. Given that I have a single "special" folder called <code>templates</code> that contains all the templates, I pondered whether I could zip the folder on publish and unzip it on install. This would allow me to include the <code>.gitignore</code> and <code>.npmrc</code> files in the templates and have them copied into the new project when the template was used. And if there was another other curious behaviour around publishing, this solution should cover that too.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="prepare-and-postinstall-scripts"><code>prepare</code> and <code>postinstall</code> scripts<a href="https://johnnyreilly.com/smuggling-gitignore-npmrc-in-npm-packages#prepare-and-postinstall-scripts" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>I achieved this by using <code>prepare</code> and <code>postinstall</code> scripts in the <code>package.json</code> file.</p>
<p>The <code>prepare</code> and <code>postinstall</code> scripts are two of the lifecycle scripts that npm runs when installing a package. The <code>prepare</code> script runs before the package is packaged and published, and the <code>postinstall</code> script runs after the package is installed. I opted to use these scripts to zip and unzip the <code>templates</code> folder in my package.</p>
<p>I performed the actual zipping and unzipping with some Node.js scripts. We'll look into the implementation of these scripts in a moment, but first please note the scripts we added to the <code>package.json</code> file:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"scripts"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"postinstall"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"node ./scripts/postinstall.js"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"prepare"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"node ./scripts/prepare.js"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><br></span></code></pre></div></div>
<p>These scripts contain the paths to the Node.js scripts that perform the zipping and unzipping. The <code>postinstall</code> script runs after the package is installed, and the <code>prepare</code> script runs before the package is packaged and published.</p>
<p>When it comes to zipping and unzipping, I used the <a href="https://github.com/cthackers/adm-zip" target="_blank" rel="noopener noreferrer"><code>adm-zip</code></a> package. This package provides a simple API for zipping and unzipping files and folders.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="preparejs"><code>prepare.js</code><a href="https://johnnyreilly.com/smuggling-gitignore-npmrc-in-npm-packages#preparejs" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>We'll first look at the <code>prepare.js</code> script. This script zips the <code>templates</code> folder in the package into a <code>templates.zip</code> file. The script then writes the zip file to the package's root directory.</p>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword module" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">AdmZip</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'adm-zip'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword module" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports">fs</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'node:fs'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword module" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token imports"> fileURLToPath </span><span class="token imports punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'node:url'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">packTemplates</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token console class-name" style="color:rgb(250, 208, 0)">console</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">log</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'prepare running - packing templates'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> templatesZipPath </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">fileURLToPath</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">URL</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'../templates.zip'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(255, 157, 0)">import</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">meta</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">url</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> templatesDir </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">fileURLToPath</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">URL</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'../templates'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(255, 157, 0)">import</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">meta</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">url</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> zip </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">AdmZip</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token console class-name" style="color:rgb(250, 208, 0)">console</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">log</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">removing existing </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">templatesZipPath</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  fs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">rmSync</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">templatesZipPath</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token literal-property property" style="color:rgb(255, 157, 0)">force</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token console class-name" style="color:rgb(250, 208, 0)">console</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">log</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">adding </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">templatesDir</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string string" style="color:rgb(165, 255, 144)"> to zip file</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  zip</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">addLocalFolder</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">templatesDir</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token console class-name" style="color:rgb(250, 208, 0)">console</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">log</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">writing zip to </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">templatesZipPath</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  zip</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">writeZip</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">templatesZipPath</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token function" style="color:rgb(250, 208, 0)">packTemplates</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre></div></div>
<p>It also removes any existing <code>templates.zip</code> file in the package's root directory before creating a new one. This is to ensure that the zip file is always up to date.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="postinstalljs"><code>postinstall.js</code><a href="https://johnnyreilly.com/smuggling-gitignore-npmrc-in-npm-packages#postinstalljs" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Now we'll look at the <code>postinstall.js</code> script. This script unzips the <code>templates.zip</code> file in the package into a <code>templates</code> folder. The script then writes the unzipped folder to the package's root directory.</p>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword module" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">AdmZip</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'adm-zip'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword module" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports">fs</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'node:fs'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword module" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token imports"> fileURLToPath </span><span class="token imports punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'node:url'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">extractTemplates</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token console class-name" style="color:rgb(250, 208, 0)">console</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">log</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'postinstall running - extracting templates'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> templatesZipPath </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">fileURLToPath</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">URL</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'../templates.zip'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(255, 157, 0)">import</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">meta</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">url</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> templatesDir </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">fileURLToPath</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">URL</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'../templates'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(255, 157, 0)">import</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">meta</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">url</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">let</span><span class="token plain"> templatesExistsAlready </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword control-flow" style="color:rgb(255, 157, 0)">try</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    fs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">accessSync</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">templatesDir</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:rgb(255, 157, 0)">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    templatesExistsAlready </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">false</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword control-flow" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">templatesExistsAlready</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token console class-name" style="color:rgb(250, 208, 0)">console</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">log</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'templates already extracted'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword control-flow" style="color:rgb(255, 157, 0)">return</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token console class-name" style="color:rgb(250, 208, 0)">console</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">log</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">extracting from </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">templatesZipPath</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string string" style="color:rgb(165, 255, 144)"> to </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">templatesDir</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> extractZip </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">AdmZip</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">templatesZipPath</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  extractZip</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">extractAllTo</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">templatesDir</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/* overwrite */</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">false</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token console class-name" style="color:rgb(250, 208, 0)">console</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">log</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'templates extracted'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token function" style="color:rgb(250, 208, 0)">extractTemplates</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre></div></div>
<p>You'll notice that the script checks whether the <code>templates</code> folder already exists before unzipping the <code>templates.zip</code> file. This is to ensure that the folder is only unzipped once.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://johnnyreilly.com/smuggling-gitignore-npmrc-in-npm-packages#conclusion" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>So here we have a method for including <code>.gitignore</code> and <code>.npmrc</code> files in an npm package. By using zipping and unzipping with <code>postinstall</code> and <code>prepare</code> scripts, we can include these files in the package and have them copied into the new project when the package is installed.</p>
<p>My example is a <code>templates</code> folder - yours could be anything. And likewise if you have other files that are being stripped from your package, you could use this method to include them too.</p>]]></content:encoded>
            <category>Node.js</category>
        </item>
        <item>
            <title><![CDATA[Azure DevOps: pull requests and dynamic required reviewers]]></title>
            <link>https://johnnyreilly.com/azure-devops-pull-requests-dynamic-required-reviewers</link>
            <guid>https://johnnyreilly.com/azure-devops-pull-requests-dynamic-required-reviewers</guid>
            <pubDate>Fri, 27 Jun 2025 19:30:08 GMT</pubDate>
            <description><![CDATA[How to have dynamically assigned required reviewers for a pull request in Azure DevOps using build validations and the Azure DevOps Client for Node.js.]]></description>
            <content:encoded><![CDATA[<p>Have you ever wanted to have required reviewers for a pull request in Azure DevOps? Probably. And that's an inbuilt feature of Azure DevOps. By using <a href="https://learn.microsoft.com/en-us/azure/devops/repos/git/branch-policies?view=azure-devops&amp;tabs=browser#automatically-include-code-reviewers" target="_blank" rel="noopener noreferrer">branch policies, you can set required reviewers for a pull request</a>. If you want to ensure the code is reviewed by the appropriate people before it is merged into the main branch, this can prove very useful.</p>
<p><img decoding="async" loading="eager" alt="title image reading &amp;quot;Azure DevOps: pull requests and dynamic required reviewers&amp;quot; with an Azure DevOps logo" src="https://johnnyreilly.com/assets/images/title-image-d9d792feb68580211ffd5ef79efee6b6.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<p>However, the required reviewers are static. You can set them up in the branch policies, but they don't change dynamically based on the code being altered or the people involved in the pull request. I spent many moons trawling the internet for an answer to this question, <a href="https://stackoverflow.com/questions/64754998/how-do-i-add-a-required-reviewer-when-people-of-a-given-team-create-a-pull-reque" target="_blank" rel="noopener noreferrer">and I found that many people were asking the same question</a>. The answer was always the same: "You can't do that."</p>
<p>However, there is a way. It is, hand on heart, marginally clunky. But the clunk is marginal, and more than acceptable. It involves co-opting build validations to achieve the desired effect. In this post, I'll show you how to do that.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="build-validations-and-required-reviewers">Build validations and required reviewers<a href="https://johnnyreilly.com/azure-devops-pull-requests-dynamic-required-reviewers#build-validations-and-required-reviewers" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Build validations in Azure DevOps are a way to ensure that code meets certain criteria before it is merged into the main branch. They are, crucially, Azure DevOps pipelines that run when a pull request is created or updated. They are typically used to ensure that the code builds successfully, tests pass, linting succeeds etc. Build validations are set up in the branch policies for a repository. It's pretty typical for a repository to have a build validations.</p>
<p>The crucial thing to note is that, typically, <strong>build validations must pass before a pull request can be completed</strong>. That's how they provide their value; as a control to prevent changes breaking the codebase. What we're going to do, is use this blocking aspect to our advantage. We'll include a new stage in our build validation pipeline that, each time it runs, does one of the following:</p>
<ol>
<li>Dynamically adds a required reviewer to the pull request, if appropriate. The way we decide which reviewers are dynamically added, if any, is down to us to determine. It's entirely flexible. It could be based on the code being changed or the people involved in the pull request, or indeed something else. If no reviewer is added, the pipeline will pass. But if a reviewer is added to the pull request, the pipeline will be made to fail.</li>
<li>If a reviewer is determined as required, and has already been assigned, check if the reviewer has approved the pull request. If they have approved, the pipeline will pass. If they haven't approved the pull request, the pipeline will fail.</li>
</ol>
<p>The thing to pay attention to is that the pipeline will fail if dynamically assigned required reviewers have not given their approval by the end of the pipeline run. This applies equally if the pipeline is running for the first time against a pull request and assigning the reviewers. <strong>This means that the pull request cannot be completed until any dynamically assigned required reviewers have approved it.</strong></p>
<p>This is the part that makes your risk and audit teams happy. You cannot circumvent the required reviewers; the pipeline failing will prevent the pull request from being merged / completed until the required reviewers have approved it. This is a way to ensure that the code is reviewed by the appropriate people before it is merged into the main branch.</p>
<p>I mentioned "clunky" earlier. The clunkiness comes from the need to rerun the build validation pipeline in the Azure DevOps UI when the approval has been given. This is because there is no way (that I'm aware of) to trigger the build validation pipeline when a reviewer approval has been provided. So, if the required reviewers approve the pull request, you will need to rerun the build validation pipeline to ensure that it passes and the pull request can be completed.</p>
<p>As long as the failing pipeline provides a clear message about what is required, this is a small price to pay for the ability to have dynamic required reviewers.</p>
<p>Now I've convinced you that this is a good idea, let's look at how to implement it.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="co-opting-your-existing-build-validation-pipeline">Co-opting your existing build validation pipeline<a href="https://johnnyreilly.com/azure-devops-pull-requests-dynamic-required-reviewers#co-opting-your-existing-build-validation-pipeline" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>I'm making an assumption that you already have a build validation pipeline set up for your repository. If you don't, you'll need to set one up first.</p>
<p>To your existing build validation pipeline, you'll need to add a new stage that will run the code to dynamically assign required reviewers:</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">stage</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> DynamicRequiredReviewers</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Dynamic required reviewers</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">dependsOn</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># This stage does not depend on any other stages and so will run in parallel with the others</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">jobs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">job</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token key atrule">steps</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> NodeTool@0</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token key atrule">versionSpec</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">22</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Install Node.js</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">bash</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> npm ci</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'Install dependencies'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">workingDirectory</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'scripts/dynamic-required-reviewers'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">bash</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> npm test</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'Run tests'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">workingDirectory</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'scripts/dynamic-required-reviewers'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">bash</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> npm start </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">sat $(System.AccessToken) </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">pullRequestId $(System.PullRequest.PullRequestId) </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">organization $(System.CollectionUri) </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">repositoryName $(Build.Repository.Name) </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">projectName $(System.TeamProject)'</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'Validate claims'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">workingDirectory</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'scripts/dynamic-required-reviewers'</span><br></span></code></pre></div></div>
<p>You can see reference to the <code>scripts/dynamic-required-reviewers</code> directory. This is where we'll put the code that will dynamically assign required reviewers. The code will run in a Node.js environment, so we'll need to install Node.js and the dependencies for the code to run.</p>
<p>You can also see that we're using the <code>System.AccessToken</code> and <code>System.PullRequest.PullRequestId</code> variables. The <code>System.AccessToken</code> is a token that allows the code to interact with the Azure DevOps API, and the <code>System.PullRequest.PullRequestId</code> is the ID of the pull request that the build validation pipeline is running against. We'll use these in our code to dynamically assign required reviewers to the pull request.</p>
<p>We also use the <code>System.CollectionUri</code>, <code>Build.Repository.Name</code>, and <code>System.TeamProject</code> variables to get the organization, repository name, and project name respectively. These will be used to make API calls to Azure DevOps with our token.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="setting-up-the-code-to-dynamically-assign-required-reviewers">Setting up the code to dynamically assign required reviewers<a href="https://johnnyreilly.com/azure-devops-pull-requests-dynamic-required-reviewers#setting-up-the-code-to-dynamically-assign-required-reviewers" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>You'll need to create the <code>scripts/dynamic-required-reviewers</code> directory. In there we're going to add a <code>package.json</code> file to manage our dependencies:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"name"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"dynamic-required-reviewers"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"version"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"1.0.0"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"scripts"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"build"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"tsc"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"start"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"npm run build &amp;&amp; node dist/index.js"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"license"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"ISC"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"type"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"module"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"dependencies"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"azure-devops-node-api"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"^15.1.0"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"devDependencies"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"@types/node"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"^22.0.0"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"typescript"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"^5.8.3"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre></div></div>
<p>We also need a <code>tsconfig.json</code> file to configure TypeScript:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"compilerOptions"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"allowJs"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"declaration"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"declarationMap"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"esModuleInterop"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"module"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"NodeNext"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"moduleResolution"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"NodeNext"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"noEmit"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">false</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"resolveJsonModule"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"skipLibCheck"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"sourceMap"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"strict"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"target"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"ES2022"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"outDir"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"dist"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"include"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token string" style="color:rgb(165, 255, 144)">"src"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre></div></div>
<p>Now we'll add our <code>src/index.ts</code> file where we'll put our code to dynamically assign required reviewers.</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> parseArgs </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'node:util'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">*</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">as</span><span class="token plain"> nodeApi </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'azure-devops-node-api'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">type</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> GitPullRequest </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'azure-devops-node-api/interfaces/GitInterfaces.js'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">type</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> IGitApi </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'azure-devops-node-api/GitApi.js'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">main</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> args </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">parseArgs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    options</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      pat</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> type</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'string'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> short</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'p'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">default</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> process</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token constant" style="color:rgb(250, 208, 0)">ADO_PAT</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      sat</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> type</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'string'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> short</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'s'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">default</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> process</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token constant" style="color:rgb(250, 208, 0)">ADO_SAT</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      pullRequestId</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        type</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'string'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        short</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'i'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">default</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> process</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token constant" style="color:rgb(250, 208, 0)">ADO_PULL_REQUEST_ID</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      organization</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        type</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'string'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        short</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'o'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">default</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      repositoryName</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> type</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'string'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> short</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'r'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">default</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      projectName</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> type</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'string'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> short</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'j'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">default</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> pullRequestId </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">parseInt</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">args</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">values</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">pullRequestId </span><span class="token operator" style="color:rgb(255, 157, 0)">??</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'0'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">10</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> pat </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> args</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">values</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">pat </span><span class="token operator" style="color:rgb(255, 157, 0)">??</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> sat </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> args</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">values</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">sat </span><span class="token operator" style="color:rgb(255, 157, 0)">??</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// https://dev.azure.com/johnnyreilly/ -&gt; johnnyreilly</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> organization </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">args</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">values</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">organization </span><span class="token operator" style="color:rgb(255, 157, 0)">??</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">""</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">replace</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"https://dev.azure.com/"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">""</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">replace</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"/"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">""</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> repositoryName </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> args</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">values</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">repositoryName </span><span class="token operator" style="color:rgb(255, 157, 0)">??</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> projectName </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> args</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">values</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">projectName </span><span class="token operator" style="color:rgb(255, 157, 0)">??</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> webApi </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">makeWebApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    pat</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    sat</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    organization</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> gitApi </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> webApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">getGitApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> pullRequest </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> gitApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">getPullRequest</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/* repositoryId */</span><span class="token plain"> repositoryName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/* pullRequestId */</span><span class="token plain"> pullRequestId</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/* project */</span><span class="token plain"> projectName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/* maxCommentLength */</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">undefined</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/* skip */</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">undefined</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/* top */</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">undefined</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/* includeCommits */</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/* includeWorkItemRefs */</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">false</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> requiredReviewerName </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">determineRequiredReviewerName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">pullRequest</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token operator" style="color:rgb(255, 157, 0)">!</span><span class="token plain">requiredReviewerName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token builtin" style="color:rgb(250, 208, 0)">console</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">log</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token string" style="color:rgb(165, 255, 144)">'‚úÖ No required reviewer was deemed necessary. No action needed.'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> requiredReviewer </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">searchIdentityForReviewer</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    pat</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    sat</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    organization</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    searchTerm</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> requiredReviewerName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token operator" style="color:rgb(255, 157, 0)">!</span><span class="token plain">requiredReviewer</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> errorMessage </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">‚ùå Failed to look up reviewer: </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">requiredReviewerName</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">throw</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">Error</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">errorMessage</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">determineAction</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    requiredReviewer</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    pullRequest</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    gitApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    projectName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    repositoryName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">determineRequiredReviewerName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  pullRequest</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> GitPullRequest</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">Promise</span><span class="token operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">|</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">undefined</span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// This is a placeholder function. You should implement your logic to determine the required reviewer name.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'Required Reviewer Name'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// Replace with actual logic</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">makeWebApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  organization</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  pat</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  sat</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  organization</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  pat</span><span class="token operator" style="color:rgb(255, 157, 0)">?</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  sat</span><span class="token operator" style="color:rgb(255, 157, 0)">?</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token operator" style="color:rgb(255, 157, 0)">!</span><span class="token plain">pat </span><span class="token operator" style="color:rgb(255, 157, 0)">&amp;&amp;</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">!</span><span class="token plain">sat</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">throw</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">Error</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token string" style="color:rgb(165, 255, 144)">'Either a Personal Access Token (PAT) or a Service Account Token (SAT) must be provided.'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> webApi </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">nodeApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">WebApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">https://dev.azure.com/</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">organization</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    pat</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token operator" style="color:rgb(255, 157, 0)">?</span><span class="token plain"> nodeApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">getPersonalAccessTokenHandler</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          pat</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/** allowCrossOriginAuthentication */</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> nodeApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">getHandlerFromToken</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          sat </span><span class="token operator" style="color:rgb(255, 157, 0)">??</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/** allowCrossOriginAuthentication */</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> webApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">interface</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">Identity</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  providerDisplayName</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/**</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> * This searches the organization's identity system directly</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> * based on https://learn.microsoft.com/en-us/rest/api/azure/devops/ims/identities/read-identities?view=azure-devops-rest-7.1&amp;tabs=HTTP</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">searchIdentityForReviewer</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  pat</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  sat</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  searchTerm</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  organization</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  pat</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  sat</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  searchTerm</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  organization</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">Promise</span><span class="token operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token plain">Identity </span><span class="token operator" style="color:rgb(255, 157, 0)">|</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">undefined</span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">try</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// Use the identities API endpoint for broader search</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> searchUrl </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">https://vssps.dev.azure.com/</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">organization</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string string" style="color:rgb(165, 255, 144)">/_apis/identities?searchFilter=General&amp;filterValue=</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation function" style="color:rgb(250, 208, 0)">encodeURIComponent</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token template-string interpolation"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token template-string interpolation">      searchTerm</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token template-string interpolation"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token template-string interpolation">    </span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string string" style="color:rgb(165, 255, 144)">&amp;api-version=7.1-preview.1</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> response </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">fetch</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">searchUrl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      method</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'GET'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      headers</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        Authorization</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">Basic </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">Buffer</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation function" style="color:rgb(250, 208, 0)">from</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token template-string interpolation template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string interpolation template-string string" style="color:rgb(165, 255, 144)">PAT:</span><span class="token template-string interpolation template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation template-string interpolation">pat </span><span class="token template-string interpolation template-string interpolation operator" style="color:rgb(255, 157, 0)">||</span><span class="token template-string interpolation template-string interpolation"> sat</span><span class="token template-string interpolation template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string interpolation template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation function" style="color:rgb(250, 208, 0)">toString</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token template-string interpolation"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token template-string interpolation">          </span><span class="token template-string interpolation string" style="color:rgb(165, 255, 144)">'base64'</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token template-string interpolation"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token template-string interpolation">        </span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        Accept</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'application/json'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token string-property property" style="color:rgb(255, 157, 0)">'Content-Type'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'application/json'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token operator" style="color:rgb(255, 157, 0)">!</span><span class="token plain">response</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">ok</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token builtin" style="color:rgb(250, 208, 0)">console</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">warn</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">Identity search failed: </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">response</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation">status</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string string" style="color:rgb(165, 255, 144)"> </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">response</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation">statusText</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">undefined</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> data </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> response</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">json</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">data</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">value </span><span class="token operator" style="color:rgb(255, 157, 0)">&amp;&amp;</span><span class="token plain"> data</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">value</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">length </span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">0</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> identity</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> Identity </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> data</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">value</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token number" style="color:rgb(255, 98, 140)">0</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// Take the first match</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token builtin" style="color:rgb(250, 208, 0)">console</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">log</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">‚úÖ Found identity via search:</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token builtin" style="color:rgb(250, 208, 0)">console</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">log</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">   ID: </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">identity</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation">id</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token builtin" style="color:rgb(250, 208, 0)">console</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">log</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">   Display Name: </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">identity</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation">providerDisplayName</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> identity</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token builtin" style="color:rgb(250, 208, 0)">console</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">warn</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">‚ö†Ô∏è  No identities found for: </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">searchTerm</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">undefined</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">error</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token builtin" style="color:rgb(250, 208, 0)">console</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">error</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">‚ùå Error searching identities for </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">searchTerm</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string string" style="color:rgb(165, 255, 144)">:</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> error</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">undefined</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> voteValues </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  approved</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">10</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  approvedWithSuggestions</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">5</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  noVote</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">0</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  waitingForAuthor</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">-</span><span class="token number" style="color:rgb(255, 98, 140)">5</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  rejected</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">-</span><span class="token number" style="color:rgb(255, 98, 140)">10</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">as</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">determineAction</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  requiredReviewer</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  pullRequest</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  gitApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  projectName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  repositoryName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  requiredReviewer</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> Identity</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  pullRequest</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> GitPullRequest</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  gitApi</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> IGitApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  projectName</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  repositoryName</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">Promise</span><span class="token operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token keyword" style="color:rgb(255, 157, 0)">void</span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> assignedReviewer </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> pullRequest</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">reviewers</span><span class="token operator" style="color:rgb(255, 157, 0)">?.</span><span class="token function" style="color:rgb(250, 208, 0)">find</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">reviewer</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> reviewer</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">id </span><span class="token operator" style="color:rgb(255, 157, 0)">===</span><span class="token plain"> requiredReviewer</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> requiredReviewIsAssigned </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    assignedReviewer </span><span class="token operator" style="color:rgb(255, 157, 0)">&amp;&amp;</span><span class="token plain"> assignedReviewer</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">isRequired</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> hasBeenApprovedByRequiredReviewer </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    assignedReviewer </span><span class="token operator" style="color:rgb(255, 157, 0)">&amp;&amp;</span><span class="token plain"> assignedReviewer</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">vote </span><span class="token operator" style="color:rgb(255, 157, 0)">===</span><span class="token plain"> voteValues</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">approved</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">requiredReviewIsAssigned </span><span class="token operator" style="color:rgb(255, 157, 0)">&amp;&amp;</span><span class="token plain"> hasBeenApprovedByRequiredReviewer</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token builtin" style="color:rgb(250, 208, 0)">console</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">log</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">‚úÖ Reviewer with ID </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token template-string interpolation">        assignedReviewer</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation">displayName </span><span class="token template-string interpolation operator" style="color:rgb(255, 157, 0)">??</span><span class="token template-string interpolation"> assignedReviewer</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation">id</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token template-string interpolation">      </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string string" style="color:rgb(165, 255, 144)"> is already assigned and has approved the pull request. No action needed.</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">else</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">requiredReviewIsAssigned</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> errorMessage </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">‚ö†Ô∏è Reviewer with ID </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token template-string interpolation">      assignedReviewer</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation">displayName </span><span class="token template-string interpolation operator" style="color:rgb(255, 157, 0)">??</span><span class="token template-string interpolation"> assignedReviewer</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation">id</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token template-string interpolation">    </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string string" style="color:rgb(165, 255, 144)"> is already assigned but has not approved the pull request.</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">throw</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">Error</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">errorMessage</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">else</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token builtin" style="color:rgb(250, 208, 0)">console</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">log</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">‚ö†Ô∏è Reviewer with ID </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">requiredReviewer</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation">providerDisplayName</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string string" style="color:rgb(165, 255, 144)"> is not yet assigned. Will assign them.</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> reviewerToBeAssigned </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> requiredReviewer</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      vote</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> voteValues</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">noVote</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      isRequired</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">try</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> gitApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">createPullRequestReviewer</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        reviewerToBeAssigned</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/** repositoryId */</span><span class="token plain"> repositoryName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        pullRequest</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">pullRequestId</span><span class="token operator" style="color:rgb(255, 157, 0)">!</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/** reviewerId */</span><span class="token plain"> reviewerToBeAssigned</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/** project */</span><span class="token plain"> projectName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token builtin" style="color:rgb(250, 208, 0)">console</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">log</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'‚úÖ Successfully added reviewer to pull request'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">error</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> errorMessage </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">‚ùå Failed to add reviewer to pull request</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token keyword" style="color:rgb(255, 157, 0)">throw</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">Error</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">errorMessage</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> cause</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> error </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> errorMessage </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">Added reviewer </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">requiredReviewer</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation">providerDisplayName</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string string" style="color:rgb(165, 255, 144)"> to pull request for review and approval. Once approved, please re-run the build validation and it should pass.</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">try</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> gitApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">createThread</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/** commentThread */</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          comments</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">              parentCommentId</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">0</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">              content</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> errorMessage</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">              commentType</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> CommentType</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Text</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          status</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> CommentThreadStatus</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Active</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/** repositoryId */</span><span class="token plain"> repositoryName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/** pullRequestId */</span><span class="token plain"> pullRequest</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">pullRequestId</span><span class="token operator" style="color:rgb(255, 157, 0)">!</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/** project */</span><span class="token plain"> projectName</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token builtin" style="color:rgb(250, 208, 0)">console</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">log</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"‚úÖ Successfully add comment to pull request"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">error</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> errorMessage </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">‚ùå Failed to add comment to pull request</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token keyword" style="color:rgb(255, 157, 0)">throw</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">Error</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">errorMessage</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> cause</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> error </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">throw</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">Error</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">errorMessage</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token function" style="color:rgb(250, 208, 0)">main</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre></div></div>
<p>There's a good bit of code here, so let's break it down:</p>
<ul>
<li>The <code>main</code> function is the entry point of the script. It parses the command line arguments and sets up the Azure DevOps API client.</li>
<li>The <code>makeWebApi</code> function creates an instance of the Azure DevOps Web API client using either a Personal Access Token (PAT) or a Service Account Token (SAT). You'll use a PAT for local development and a SAT in the build validation pipeline. If using a PAT it requires the scopes: <code>vso.code</code> and <code>vso.identity</code>.</li>
<li>The <code>getRequiredReviewerName</code> function is a placeholder for your logic to determine the name of your required reviewer, if any. You should implement your logic here to determine when dynamically assigned reviewers are appropriate.</li>
<li>The <code>searchIdentityForReviewer</code> function searches for the required reviewer in the Azure DevOps identity system. It uses the Azure DevOps REST API to search for identities based on a search term. Rather frustratingly, you can't directly use the Azure AD / Entra ID Graph API to search for users in Azure DevOps.</li>
<li>The <code>determineAction</code> function checks if the required reviewer is already assigned to the pull request and whether they have approved it.<!-- -->
<ul>
<li>If they have, it logs a success message.</li>
<li>If they haven't, it throws an error with a message indicating that the required reviewer needs to approve the pull request.</li>
<li>If the required reviewer is not assigned, it assigns them to the pull request and throws an error with a message indicating that the pull request requires their approval. It also adds a comment on the PR to make the required action obvious to anyone looking at the PR.</li>
</ul>
</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="running-the-code">Running the code<a href="https://johnnyreilly.com/azure-devops-pull-requests-dynamic-required-reviewers#running-the-code" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>You can run the code locally to test it. You'll need to set up a Personal Access Token (PAT) with the required scopes and set the environment variables accordingly. You can then run the code using:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> start -- </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">--pat</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">YOUR_PAT</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">--pullRequestId</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">PULL_REQUEST_ID</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">--organization</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">ORGANISATION</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">--repositoryName</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">ADO_REPOSITORY_NAME</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">--projectName</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">ADO_PROJECT_NAME</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://johnnyreilly.com/azure-devops-pull-requests-dynamic-required-reviewers#conclusion" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>In this post, we've seen how to dynamically assign required reviewers for a pull request in Azure DevOps using build validations and the Azure DevOps API brought together with a little TypeScript. By co-opting your existing build validation pipeline, you can ensure that the code is reviewed by the appropriate people before it is merged into the main branch.</p>
<p>Use this. Make your risk and audit teams happy!</p>]]></content:encoded>
            <category>TypeScript</category>
            <category>Azure DevOps</category>
            <category>Node.js</category>
        </item>
        <item>
            <title><![CDATA[Using AZD for faster incremental Azure Static Web App deployments in GitHub Actions]]></title>
            <link>https://johnnyreilly.com/using-azd-for-faster-incremental-azure-static-web-app-deployments-in-github-actions</link>
            <guid>https://johnnyreilly.com/using-azd-for-faster-incremental-azure-static-web-app-deployments-in-github-actions</guid>
            <pubDate>Tue, 27 Aug 2024 19:48:33 GMT</pubDate>
            <description><![CDATA[Learn how to speed up deployments of Azure Static Web Apps in GitHub Actions using the AZD command.]]></description>
            <content:encoded><![CDATA[<p>This post is a follow on from the post <a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops">Using AZD for faster incremental Azure Container App deployments in Azure DevOps</a>. In that post, we looked at how to speed up deployments of Azure Container Apps in Azure DevOps using the <a href="https://learn.microsoft.com/en-us/azure/developer/azure-developer-cli/" target="_blank" rel="noopener noreferrer">Azure Developer CLI (<code>azd</code>)</a>. In this post, we're going to look at how to speed up deployments of Azure Static Web Apps in GitHub Actions using <code>azd</code>.</p>
<p><img decoding="async" loading="eager" alt="title image reading &amp;quot;Using AZD for faster incremental Azure Static Web App deployments in GitHub Actions&amp;quot; with the Azure Static Web Apps logo" src="https://johnnyreilly.com/assets/images/title-image-7a98185b6742dae247aecbbc096eac82.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<p>There's going to be some overlap between the last post and this one. I don't want to force you to read them both, so I'll duplicate some of the content from the previous post here. But I'll also add some new content that's specific to deploying Azure Static Web Apps in GitHub Actions with <code>azd</code>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="faster-deployments-from-azd-14-and-beyond">Faster deployments from <code>azd</code> 1.4 and beyond<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-static-web-app-deployments-in-github-actions#faster-deployments-from-azd-14-and-beyond" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>The <code>azd</code> v1.4.0 release contained a significant feature: <code>azd provision</code> is now faster when there are no infrastructure changes.</p>
<p>To quote a trimmed down version of the <a href="https://devblogs.microsoft.com/azure-sdk/azure-developer-cli-azd-october-2023-release/#azd-provision-is-now-faster-when-there-are-no-infrastructure-changes" target="_blank" rel="noopener noreferrer">announcement</a>:</p>
<blockquote>
<p>If you‚Äôve been using the Azure Developer CLI for a while, you may have noticed that sometimes <code>azd provision</code> takes a long time to complete when it may not need to. The wait time was because, prior to version 1.4.0, <code>azd provision</code> would always reprovision regardless of whether the underlying Infrastructure as Code had changed... As of today‚Äôs 1.4.0 release, <code>azd provision</code> now checks the most recent deployment upstream on Azure to see if the state is the same as what‚Äôs represented in the Infrastructure as Code that‚Äôs been used to provision. If the state is the same, the provision is skipped... with this new experience, you should also notice improved performance when running <code>azd up</code> in a CI/CD pipeline as provisioning will be automatically skipped when there are no changes.</p>
</blockquote>
<p>This can help us speed up deployments of Azure Static Web Apps in GitHub Actions.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="background">Background<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-static-web-app-deployments-in-github-actions#background" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>You're reading this post on my blog, which, at the time of writing, runs using Azure Static Web Apps. And has done for years. Every time I push a change, a deployment pipeline runs that deploys the changes to Azure. There's two distinct parts to the deployment pipeline:</p>
<ol>
<li>deploying infrastructure (the Azure resources that the blog relies upon such as the Azure Static Web App, a Cosmos DB etc)</li>
<li>building and deploying the application code (the blog itself)</li>
</ol>
<p>It takes around <strong>3 minutes</strong> to deploy the infrastructure. And this is happening every time we update the site. But most of the time, there are no changes to be made to the infrastructure of the site; just the content. So it's a waste of time. I want to speed this up and <code>azd</code> can help me do that.</p>
<p>Specifically, I want to switch my usage of <code>az deployment group create</code> to <code>azd provision</code> because <code>azd provision</code> is faster when there are no infrastructure changes. We will drop the infrastructure deployment job time from <strong>3 minutes</strong> to <strong>20 seconds</strong> when there are no infrastructure changes.</p>
<p>Now when I started trying to see if doing faster deployments of Static Web Apps was possible with <code>azd</code>, I couldn't discover any documentation. So I've found myself writing the documentation I wish had existed. Please forgive me any mistakes I make along the way.</p>
<p>To be clear on scope, my intention here is only to speed up how we handle the deployment of the infrastructure. I don't want to deploy infrastructure if there are no changes; so I'll use <code>azd</code> to accomplish this goal. I'm not going all in on <code>azd</code> for the deployment of the application code as well. For now, we'll focus solely on the infrastructure piece. Maybe we'll come back to the application code in a future post.</p>
<p>From here on out, we'll go through the changes we need to make to our project to replace <code>az deployment group create</code> with <code>azd provision</code> for faster incremental Azure Static Web App deployments in GitHub Actions.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="hello-azureyml">Hello <code>azure.yml</code><a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-static-web-app-deployments-in-github-actions#hello-azureyml" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>To make use of <code>azd</code>, we'll requires an <code>azure.yml</code> file in our project. This file is going to contain the configuration for our <code>azd</code> project. Here's what it looks like:</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># yaml-language-server: $schema=https://raw.githubusercontent.com/Azure/azure-dev/main/schemas/v1.0/azure.yaml.json</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> my</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">static</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">web</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">app</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token key atrule">metadata</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">template</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> azd</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">init@1.9.6</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token key atrule">services</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">web</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">host</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> staticwebapp</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">resourceName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">STATIC_WEB_APP_NAME</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">project</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> ./blog</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">website</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">language</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> js</span><br></span></code></pre></div></div>
<p>The particular things to note in this file are:</p>
<ul>
<li>we have one service - <code>web</code> - this is the service that represents our Static Web App</li>
<li>our host is <code>staticwebapp</code> - this means we're deploying a Static Web App</li>
<li>we provide the resource name of our static web app name in the <code>STATIC_WEB_APP_NAME</code> environment variable - this allows <code>azd</code> to identify it. (The <code>resourceName</code> parameter supports environment variable substitution and will plug in the name of the resource when it is used.)</li>
<li>we provide the path to the project that contains the code for our Static Web App in the <code>project</code> parameter and specify it is <code>js</code> code in the <code>language</code> parameter. Neither of these parameters are used by <code>azd</code> during provisioning, but they are required.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="bicep-modifications">Bicep modifications<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-static-web-app-deployments-in-github-actions#bicep-modifications" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>The feature we want to consume from <code>azd</code> is the ability to avoid provisioning infrastructure when there are no changes. To do this, we need to make some modifications to our Bicep files in order that <code>azd</code> can determine whether there are changes or not.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="using-resource-group-scoped-deployments-with-azd">Using resource group scoped deployments with azd<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-static-web-app-deployments-in-github-actions#using-resource-group-scoped-deployments-with-azd" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>We're going to start off with a minor tweak to our <code>main.bicep</code> file; the entry point to our Bicep deployments.</p>
<div class="language-bicep codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bicep codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">targetScope</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'resourceGroup'</span><br></span></code></pre></div></div>
<p>The change above allows us to use <code>azd</code> deployments targeted at existing resource groups. The default mode of operation for <code>azd</code> deployments is deploying a resource group to a subscription. We are seeking to <a href="https://learn.microsoft.com/en-us/azure/developer/azure-developer-cli/resource-group-scoped-deployments" target="_blank" rel="noopener noreferrer">deploy to an existing resource group</a>.</p>
<p>Now, strictly speaking, this isn't necessary for speeding up deployments with <code>azd</code>. But if you're not one for creating a resource group per deployment (as I am not), then this is a good idea. This kind of deployment requires less permissions and aligns with the principle of least privilege.</p>
<p>We'll need to opt into using this feature with <code>azd</code> later on when we update our workflow as at present resource group scoped deployments are considered "alpha".</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="new-parameters-in-mainbicep">New parameters in <code>main.bicep</code><a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-static-web-app-deployments-in-github-actions#new-parameters-in-mainbicep" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>We're going to add an <code>envName</code> parameter that will be used to populate <code>azd-env-name</code> tags on resources:</p>
<div class="language-bicep codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bicep codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token decorator">@description</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'Environment eg dev, prod'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> envName </span><span class="token datatype class-name" style="color:rgb(250, 208, 0)">string</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="tagging-resources-with-the-azd-tags">Tagging resources with the azd tags<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-static-web-app-deployments-in-github-actions#tagging-resources-with-the-azd-tags" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>Now that we've passed the <code>envName</code> parameter to our <code>main.bicep</code> file, we're going to use it to tag our resources with the environment name. This allows <code>azd</code> to determine the environment of a given resource. We already have a <code>tags</code> object, let's add the value of the <code>envName</code> parameter to it with the special property name of <code>azd-env-name</code>:</p>
<div class="language-bicep codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bicep codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> combinedTags </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">union</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">tags</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'azd-env-name'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> envName </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><br></span></code></pre></div></div>
<p>We'll make use of the <code>combinedTags</code> object as we tag our resources instead of the <code>tags</code> object. We will also add an extra tag to the static web app resource to identify it as our <code>web</code> service:</p>
<div class="language-bicep codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bicep codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> tagsForStaticWebApp </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">union</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">'azd-service-name'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'web'</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// note the "web" matches the service name in azure.yml</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> combinedTags</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">resource</span><span class="token plain"> staticWebApp </span><span class="token string" style="color:rgb(165, 255, 144)">'Microsoft.Web/staticSites@2022-09-01'</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">name</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> staticWebAppName</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">location</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> location</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">tags</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> tagsForStaticWebApp</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="migrating-to-mainbicepparam">Migrating to <code>main.bicepparam</code><a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-static-web-app-deployments-in-github-actions#migrating-to-mainbicepparam" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>Prior to using <code>azd</code>, we were using a <code>main.bicep</code> file to deploy our infrastructure and we provided parameters to this file via our GitHub Actions workflow. We're going to make a change to our pipeline to use a <a href="https://learn.microsoft.com/en-us/azure/azure-resource-manager/bicep/parameter-files?tabs=Bicep" target="_blank" rel="noopener noreferrer"><code>main.bicepparam</code></a> file instead.</p>
<p>The <code>main.bicepparam</code> file is going to contain the parameters that we were previously providing directly to our <code>main.bicep</code> file. It's going to pick these up from environment variables that we'll declare and from environment variables provided by <code>azd</code>; such as the one to drive environment name. So there's a little more indirection in our parameter passing now. It used to be:</p>
<p><em>GitHub Actions -&gt; <code>main.bicep</code></em></p>
<p>Now it will be:</p>
<p><em>GitHub Actions -&gt; <code>main.bicepparam</code> -&gt; <code>main.bicep</code></em></p>
<p>Consider the following (cut down) <code>main.bicepparam</code> file:</p>
<div class="language-bicep codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bicep codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">using </span><span class="token string" style="color:rgb(165, 255, 144)">'./main.bicep'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> envName </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">readEnvironmentVariable</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'AZURE_ENV_NAME'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> location </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">readEnvironmentVariable</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'AZURE_LOCATION'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> branch </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">readEnvironmentVariable</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'REPOSITORY_BRANCH'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> staticWebAppName </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">readEnvironmentVariable</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'STATIC_WEB_APP_NAME'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> tags </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">owner</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">readEnvironmentVariable</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'TAGS_OWNER'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">emain</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">readEnvironmentVariable</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'TAGS_EMAIL'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre></div></div>
<p>This should pick up the values we need from environment values provided both by us and <code>azd</code>. Later we'll update the GitHub Actions workflow to ensure these are provided.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="updating-our-github-actions-workflow-to-use-azd">Updating our GitHub Actions workflow to use <code>azd</code><a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-static-web-app-deployments-in-github-actions#updating-our-github-actions-workflow-to-use-azd" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>We need to install and configure <code>azd</code> in our GitHub Actions workflow:</p>
<div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Install azd üîß</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">uses</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Azure/setup</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">azd@v1.0.0</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Set `azd` config options üîß</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">run</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">|</span><span class="token scalar string" style="color:rgb(165, 255, 144)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">    azd config set auth.useAzCliAuth "true"</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">    azd config set alpha.resourceGroupDeployments on</span><br></span></code></pre></div></div>
<p>As well as installing <code>azd</code>, we're setting two configuration options. The <code>auth.useAzCliAuth</code> option tells <code>azd</code> to use the Azure CLI for authentication - we already have the <a href="https://github.com/marketplace/actions/azure-login" target="_blank" rel="noopener noreferrer">Azure Login Action</a> in our workflow, authenticating our pipeline so it can use the Azure CLI. With the <code>useAzCliAuth</code> option set, <code>azd</code> can make use of that existing authentication rather than needing us to authenticate it independently. The <code>alpha.resourceGroupDeployments</code> option enables resource group scoped deployments because we're using resource group scoped deployments in our Bicep files as we discussed earlier.</p>
<p>Now we have <code>azd</code> in place and authenticated, we're ready to swap out <code>az deployment group create</code> for <code>azd provision</code>. We're going to remove the following job from our workflow:</p>
<div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Infra </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> provision üîß</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">uses</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> azure/CLI@v2</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">with</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">inlineScript</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">|</span><span class="token scalar string" style="color:rgb(165, 255, 144)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">      az deployment group create \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">        --resource-group ${{ env.RESOURCE_GROUP }} \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">        --name "${{ steps.deployment_name.outputs.DEPLOYMENT_NAME }}" \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">        --template-file ./infra/main.bicep \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">        --parameters \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">            branch='main' \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">            location='${{ env.LOCATION }}' \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">            staticWebAppName='${{ env.STATICWEBAPPNAME }}' \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">            tags='${{ env.TAGS }}' \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">            rootCustomDomainName='${{ env.ROOTCUSTOMDOMAINNAME }}' \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">            blogCustomDomainName='${{ env.BLOGCUSTOMDOMAINNAME }}'</span><br></span></code></pre></div></div>
<p>And in it's place we'll add the following:</p>
<div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Infra </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> provision üîß</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">run</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> azd provision </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">no</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">prompt</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># See https://learn.microsoft.com/en-gb/azure/developer/azure-developer-cli/configure-devops-pipeline?tabs=azdo</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">AZURE_LOCATION</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> env.AZURE_LOCATION </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">AZURE_SUBSCRIPTION_ID</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> vars.AZURE_SUBSCRIPTION_ID </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">AZURE_ENV_NAME</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> prod </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># I only have one environment - you might have more</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># https://learn.microsoft.com/en-us/azure/developer/azure-developer-cli/manage-environment-variables#user-provided-environment-variables</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">AZURE_RESOURCE_GROUP</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> env.AZURE_RESOURCE_GROUP </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># Define the additional variables or secrets that are required only for provision - see main.bicepparam</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">REPOSITORY_BRANCH</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> main </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># we only provision for the main branch</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">STATIC_WEB_APP_NAME</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> env.STATIC_WEB_APP_NAME </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">TAGS_OWNER</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> env.TAGS_OWNER </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">TAGS_EMAIL</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> env.TAGS_EMAIL </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">ROOT_CUSTOM_DOMAIN_NAME</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> env.ROOT_CUSTOM_DOMAIN_NAME </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">BLOG_CUSTOM_DOMAIN_NAME</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> env.BLOG_CUSTOM_DOMAIN_NAME </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre></div></div>
<p>The above amounts simply to a <code>azd provision --no-prompt</code> command, but it works because we are first authenticated and because we supply a number of environment variables to the job.</p>
<p>You'll see that we're populating environment variables that will be picked up by our <code>main.bicepparam</code> file. These were the same variables that were being passed explicitly to our <code>main.bicep</code> file when we were using <code>az deployment group create</code>. Now it will be <code>azd</code> that will be responsible for passing these values to our <code>main.bicep</code> file, using <code>main.bicepparam</code> as the connective tissue.</p>
<p>When <code>azd provision</code> runs, it will look at the existing infrastructure and determine whether there are changes to be made. If there are no changes, then the deployment will be skipped. This is the magic of <code>azd</code>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-does-it-look-like-when-it-works">What does it look like when it works?<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-static-web-app-deployments-in-github-actions#what-does-it-look-like-when-it-works" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Well, once the initial workflow has run (to tag the resources accordingly), a subsequent no-infra-change will look like this:</p>
<p><img decoding="async" loading="lazy" alt="screenshot of azd detecting no changes and so not provisioning" src="https://johnnyreilly.com/assets/images/screenshot-of-azd-detecting-no-changes-7eb0fe0adb96a8060b8f21f009db79ea.webp" width="793" height="579" class="img_ev3q"></p>
<p>The <code>Skipped: Didn't find new changes</code> message is a sign that we're now no longer deploying in full each time. Only when we need to. This is us dropping infrastructure deployment job time from <strong>3 minutes</strong> to <strong>20 seconds</strong> when there are no infrastructure changes.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-static-web-app-deployments-in-github-actions#conclusion" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>It is actually fairly straightforward to get the benefits of faster deployments with <code>azd</code> for Static Web Apps. In fact it's even more straightforward than with Container Apps, because you can choose to continue with your own preferred method of app code deployment. You're not obliged to use <code>azd deploy</code> as well as <code>azd provision</code>. So even if you might want to make the switch later, you can choose to do it gradually.</p>
<p>If you're interested in the PR that implemented this for my blog <a href="https://github.com/johnnyreilly/blog.johnnyreilly.com/pull/913/files" target="_blank" rel="noopener noreferrer">you can find it here</a> - though I should warn you that I did some general refactoring in there as well, so please ignore tweaks to blog content etc.</p>]]></content:encoded>
            <category>Azure</category>
            <category>Bicep</category>
            <category>GitHub Actions</category>
            <category>Azure Static Web Apps</category>
        </item>
        <item>
            <title><![CDATA[Azure DevOps: merging pull requests and setting autocomplete with the API]]></title>
            <link>https://johnnyreilly.com/azure-devops-api-pull-requests-merge-set-autocomplete</link>
            <guid>https://johnnyreilly.com/azure-devops-api-pull-requests-merge-set-autocomplete</guid>
            <pubDate>Fri, 25 Jul 2025 19:09:25 GMT</pubDate>
            <description><![CDATA[How to have merge a pull request in Azure DevOps or set it to autocomplete using the Azure DevOps Client for Node.js.]]></description>
            <content:encoded><![CDATA[<p>Have you ever wanted to merge a pull request in Azure DevOps using the Azure DevOps API? Or set a pull request to autocomplete, so it automatically merges when all policies are satisfied? If so, you're in the right place. In this post, I'll show you how to do just that using the Azure DevOps Client for Node.js.</p>
<p><img decoding="async" loading="eager" alt="title image reading &amp;quot;Azure DevOps: merging pull requests and setting autocomplete with the API&amp;quot; with an Azure DevOps logo" src="https://johnnyreilly.com/assets/images/title-image-b2838d56371d45367fd75b197cc2f5e2.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<p>I'm using the Azure DevOps Client for Node.js; but if you want to use the REST API directly, you can do that too. The principles are the same, but you'll need to make HTTP requests instead of using the client library.</p>
<p>To get up and running with the Azure DevOps Client for Node.js, you can <a href="https://johnnyreilly.com/azure-devops-pull-requests-dynamic-required-reviewers">see how we work with it in this post on dynamic required reviewers in Azure DevOps</a> post. This will help you set up your environment and authenticate with Azure DevOps.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="merging-a-pull-request">Merging a pull request<a href="https://johnnyreilly.com/azure-devops-api-pull-requests-merge-set-autocomplete#merging-a-pull-request" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>To merge a pull request with the API, you need to use the <code>GitApi</code> class from the Azure DevOps Client for Node.js. Here's what merging a pull request looks like:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">mergePullRequest</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  gitApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  repositoryName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  pullRequest</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  projectName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  gitApi</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> IGitApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  repositoryName</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  pullRequest</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> GitPullRequest</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  projectName</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">Promise</span><span class="token operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token keyword" style="color:rgb(255, 157, 0)">void</span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">try</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> gitApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">updatePullRequest</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        status</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> PullRequestStatus</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Completed</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        lastMergeSourceCommit</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> pullRequest</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">lastMergeSourceCommit</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        completionOptions</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          mergeStrategy</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> GitPullRequestMergeStrategy</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Squash</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/** repositoryId */</span><span class="token plain"> repositoryName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      pullRequest</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">pullRequestId</span><span class="token operator" style="color:rgb(255, 157, 0)">!</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/** project */</span><span class="token plain"> projectName</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token builtin" style="color:rgb(250, 208, 0)">console</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">log</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">‚úÖ Successfully merged pull request </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">pullRequest</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation">pullRequestId</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">error</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> errorMessage </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">‚ùå Failed to merge pull request </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">pullRequest</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation">pullRequestId</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token builtin" style="color:rgb(250, 208, 0)">console</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">error</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">errorMessage</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> error</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre></div></div>
<p>This expects that you provide the <code>gitApi</code> instance, the name of the repository, the pull request object, and the project name. The <code>mergeStrategy</code> is set to <code>Squash</code>, but you can change it to <code>Rebase</code> or <code>NoFastForward</code> if you prefer those strategies.</p>
<p>If you have policies that restrict your merge type, you must pick the merge strategy that complies with those policies. For example, if your project requires squash merges, you should use <code>GitPullRequestMergeStrategy.Squash</code>. AKA the one true merge strategy.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="setting-a-pull-request-to-autocomplete">Setting a pull request to autocomplete<a href="https://johnnyreilly.com/azure-devops-api-pull-requests-merge-set-autocomplete#setting-a-pull-request-to-autocomplete" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Setting a pull request to autocomplete means that it will automatically merge when all policies are satisfied. This is useful for ensuring that the pull request is merged without manual intervention once it meets the requirements. For example when build validations have passed, and the required reviewers have approved.</p>
<p>Here's how you can set a pull request to autocomplete:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">setPullRequestToAutocomplete</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  gitApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  locationsApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  repositoryName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  pullRequest</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  projectName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  gitApi</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> IGitApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  locationsApi</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> ILocationsApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  repositoryName</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  pullRequest</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> GitPullRequest</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  projectName</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">Promise</span><span class="token operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token keyword" style="color:rgb(255, 157, 0)">void</span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">pullRequest</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">autoCompleteSetBy</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">try</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> authenticatedUser </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> locationsApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">getConnectionData</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token builtin" style="color:rgb(250, 208, 0)">console</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">log</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">Setting pull request </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">pullRequest</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation">pullRequestId</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string string" style="color:rgb(165, 255, 144)"> to auto-complete with squash merge as </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">authenticatedUser</span><span class="token template-string interpolation operator" style="color:rgb(255, 157, 0)">?.</span><span class="token template-string interpolation">providerDisplayName</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string string" style="color:rgb(165, 255, 144)"> (</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">authenticatedUser</span><span class="token template-string interpolation operator" style="color:rgb(255, 157, 0)">?.</span><span class="token template-string interpolation">id</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string string" style="color:rgb(165, 255, 144)">)</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> gitApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">updatePullRequest</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        autoCompleteSetBy</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> authenticatedUser</span><span class="token operator" style="color:rgb(255, 157, 0)">?.</span><span class="token plain">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        completionOptions</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          mergeStrategy</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> GitPullRequestMergeStrategy</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Squash</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/** repositoryId */</span><span class="token plain"> repositoryName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      pullRequest</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">pullRequestId</span><span class="token operator" style="color:rgb(255, 157, 0)">!</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/** project */</span><span class="token plain"> projectName</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token builtin" style="color:rgb(250, 208, 0)">console</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">log</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">‚úÖ Successfully set pull request </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">pullRequest</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation">pullRequestId</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string string" style="color:rgb(165, 255, 144)"> to auto-complete</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">error</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> errorMessage </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">‚ùå Failed to set pull request </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">pullRequest</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation">pullRequestId</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string string" style="color:rgb(165, 255, 144)"> to auto-complete</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token builtin" style="color:rgb(250, 208, 0)">console</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">error</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">errorMessage</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> error</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre></div></div>
<p>What might be surprising about this code is that you have explicitly provide your user id when setting the pull request to autocomplete. The unlovely aspect of this is that you need to discover that id somehow.  We achieve it here by fetching the authenticated user from the <code>locationsApi</code>.</p>
<p>Once you have the user id, you can set the <code>autoCompleteSetBy</code> property of the pull request to that user id. This will allow the pull request to be set to autocomplete. Again we must specify the <code>mergeStrategy</code> so it knows how to merge when the time comes.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://johnnyreilly.com/azure-devops-api-pull-requests-merge-set-autocomplete#conclusion" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>In this post, we've seen how to merge a pull request and set it to autocomplete using the Azure DevOps Client for Node.js. This can be a powerful way to automate your workflow and ensure that pull requests are merged when they meet the necessary criteria.</p>
<p>I'm personally using this in build validation pipelines to ensure that pull requests are merged automatically when all policies are satisfied. This helps to streamline the development process and reduce manual intervention.</p>]]></content:encoded>
            <category>TypeScript</category>
            <category>Azure DevOps</category>
            <category>Node.js</category>
        </item>
        <item>
            <title><![CDATA[Get Service Connections with the Azure DevOps API (REST and TypeScript)]]></title>
            <link>https://johnnyreilly.com/get-service-connections-with-azure-devops-api</link>
            <guid>https://johnnyreilly.com/get-service-connections-with-azure-devops-api</guid>
            <pubDate>Sat, 25 Jan 2025 08:37:30 GMT</pubDate>
            <description><![CDATA[Learn how to get service connections with the Azure DevOps REST API using both curl and TypeScript.]]></description>
            <content:encoded><![CDATA[<p>If you work with Azure Pipelines, you'll likely have come upon the need to create service connections. These are the connections to external services that your pipelines need to run. You can interrogate these connections using the Azure DevOps REST API. This post goes through how to do this; both using curl and using TypeScript.</p>
<p><img decoding="async" loading="eager" alt="title image reading &amp;quot;Get Service Connections with the Azure DevOps API&amp;quot; with the Azure DevOps logo" src="https://johnnyreilly.com/assets/images/title-image-635c8f7f7f2a2d2d6d61b3c45040d683.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<p>I'm writing this post because when I attempted to use the <a href="https://github.com/microsoft/azure-devops-node-api" target="_blank" rel="noopener noreferrer">Azure DevOps Client for Node.js</a> package to acquire them I found it lacking, and <a href="https://johnnyreilly.com/create-pipeline-with-azure-devops-api">not for the first time</a>. I am going to allow myself a little moan here; ever since Microsoft acquired GitHub, the Azure DevOps ecosystem feels like it has had insufficient investment.</p>
<p>However, as is often the case, there is a way. The Azure DevOps REST API is there for us, and with a little <code>fetch</code> we can get the job done.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="service-connections-vs-service-endpoints">Service connections vs service endpoints<a href="https://johnnyreilly.com/get-service-connections-with-azure-devops-api#service-connections-vs-service-endpoints" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Before we get into the code, let's clarify the terminology. In Azure DevOps, service connections are the connections to external services that your pipelines need to run. However, the Azure DevOps REST API refers to these as "service endpoints".</p>
<p><img decoding="async" loading="lazy" alt="Screenshot of service connections in the Azure DevOps UI" src="https://johnnyreilly.com/assets/images/screenshot-azure-devops-service-connections-37041c60f0e692bbe10d70aa3510280a.webp" width="2066" height="762" class="img_ev3q"></p>
<p>So when you're looking the screenshot above and you see "service connections", remember that in the API they're referred to as "service endpoints". If there is an actual distinction between "service connections" and "service endpoints" I'm not aware of it. If you know, please do let me know!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="curling-service-connections">Curling service connections<a href="https://johnnyreilly.com/get-service-connections-with-azure-devops-api#curling-service-connections" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Once you know that service connections are referred to as "service endpoints" in the Azure DevOps REST API, you can use the <a href="https://learn.microsoft.com/en-us/rest/api/azure/devops/serviceendpoint/endpoints/get-service-endpoints?view=azure-devops-rest-7.2&amp;tabs=HTTP" target="_blank" rel="noopener noreferrer">documentation</a> to get them. Here's a curl to get you started:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token function" style="color:rgb(250, 208, 0)">curl</span><span class="token plain">  </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">--user</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token builtin class-name" style="color:rgb(250, 208, 0)">:</span><span class="token string" style="color:rgb(165, 255, 144)">'PERSONAL_ACCESS_TOKEN'</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">--header</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"Content-Type: application/json"</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">--header</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"Accept:application/json"</span><span class="token plain"> https://dev.azure.com/</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">organization</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain">/</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">project</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain">/_apis/serviceendpoint/endpoints?api-version</span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token number" style="color:rgb(255, 98, 140)">7.1</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-if-i-want-to-use-typescript">What if I want to use TypeScript?<a href="https://johnnyreilly.com/get-service-connections-with-azure-devops-api#what-if-i-want-to-use-typescript" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Now that we can see there's a way to get service connections with curl, let's look at how we can do this with TypeScript. Effectively we'll want to <code>fetch</code> (instead of using curl) and statically type the response with some interfaces. Here's a function that will retrieve service connections:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">getAzureDevOpsServiceConnections</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  personalAccessToken</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  organization</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  projectName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/** requires the vso.serviceendpoint scope which grants the ability to read service endpoints / service connections */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  personalAccessToken</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/** eg "johnnyreilly" */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  organization</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/** eg "blog-demos" */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  projectName</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">Promise</span><span class="token operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token plain">ServiceConnection</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// https://learn.microsoft.com/en-us/rest/api/azure/devops/serviceendpoint/endpoints/get-service-endpoints?view=azure-devops-rest-7.1&amp;tabs=HTTP</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> url </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">https://dev.azure.com/</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">organization</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string string" style="color:rgb(165, 255, 144)">/</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">projectName</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string string" style="color:rgb(165, 255, 144)">/_apis/serviceendpoint/endpoints?api-version=7.1</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> response </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">fetch</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">url</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    method</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'GET'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    headers</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      Accept</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'application/json'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token string-property property" style="color:rgb(255, 157, 0)">'Content-Type'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'application/json'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      Authorization</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">Basic </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">Buffer</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation function" style="color:rgb(250, 208, 0)">from</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token template-string interpolation template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string interpolation template-string string" style="color:rgb(165, 255, 144)">PAT:</span><span class="token template-string interpolation template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation template-string interpolation">personalAccessToken</span><span class="token template-string interpolation template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string interpolation template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation function" style="color:rgb(250, 208, 0)">toString</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token template-string interpolation string" style="color:rgb(165, 255, 144)">'base64'</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token string-property property" style="color:rgb(255, 157, 0)">'X-TFS-FedAuthRedirect'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'Suppress'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token operator" style="color:rgb(255, 157, 0)">!</span><span class="token plain">response</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">ok</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">throw</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">Error</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">HTTP error! status: </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">response</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation">status</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation function" style="color:rgb(250, 208, 0)">toString</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> data </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> response</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">json</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">as</span><span class="token plain"> Wrapper</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> data</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">value</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">interface</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">Wrapper</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  count</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">number</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  value</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> ServiceConnection</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">interface</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">ServiceConnection</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  authorization</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> Authorization</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  createdBy</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> CreatedBy</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  data</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> Record</span><span class="token operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">|</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  description</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  isOutdated</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">boolean</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  isReady</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">boolean</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  isShared</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">boolean</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  modificationDate</span><span class="token operator" style="color:rgb(255, 157, 0)">?</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  modifiedBy</span><span class="token operator" style="color:rgb(255, 157, 0)">?</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> ModifiedBy</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  name</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  owner</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  serviceEndpointProjectReferences</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> ServiceEndpointProjectReference</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  serviceManagementReference</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  type</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  url</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">interface</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">CreatedBy</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  _links</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> Links</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  descriptor</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  displayName</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  imageUrl</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  uniqueName</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  url</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">interface</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">Links</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  avatar</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> Avatar</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">interface</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">Avatar</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  href</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">interface</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">Authorization</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  parameters</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> Record</span><span class="token operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">|</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  scheme</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">interface</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">ServiceEndpointProjectReference</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  description</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  name</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  projectReference</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> ProjectReference</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">interface</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">ProjectReference</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  name</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">interface</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">ModifiedBy</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  displayName</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">|</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre></div></div>
<p>The function <code>getAzureDevOpsServiceConnections</code> is the one you'll want to call. It takes the following inputs:</p>
<ul>
<li><code>personalAccessToken</code>: the personal access token you've created in Azure DevOps with the <code>vso.serviceendpoint</code> scope. You could equally use the <a href="https://learn.microsoft.com/en-us/azure/devops/pipelines/build/variables?view=azure-devops&amp;tabs=yaml#systemaccesstoken" target="_blank" rel="noopener noreferrer"><code>System.AccessToken</code></a> that's available in your pipeline if that was appropriate.</li>
<li><code>organization</code>: the name of your Azure DevOps organization</li>
<li><code>projectName</code>: the name of the project you're interested in</li>
</ul>
<p>The function returns an array of <code>ServiceConnection</code> objects. You'll note that the API actually returns a <code>Wrapper</code> object that contains a <code>count</code> and an array of <code>ServiceConnection</code> objects. This isn't actually useful for my purposes, so I've just returned the array of <code>ServiceConnection</code> objects.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://johnnyreilly.com/get-service-connections-with-azure-devops-api#conclusion" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Honestly the hardest part about writing this post was being sure that "service connections" and "service endpoints" were the same thing. Truly naming things is hard.</p>
<p>Hopefully this post has helped you get the service connections you need. And as I mentioned earlier, if you know an actual distinction between "service connections" and "service endpoints" please do let me know!</p>]]></content:encoded>
            <category>Azure Pipelines</category>
            <category>Azure DevOps</category>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[typescript-eslint with JSDoc JavaScript]]></title>
            <link>https://johnnyreilly.com/typescript-eslint-with-jsdoc-js</link>
            <guid>https://johnnyreilly.com/typescript-eslint-with-jsdoc-js</guid>
            <pubDate>Sat, 21 Sep 2024 17:44:46 GMT</pubDate>
            <description><![CDATA[You can use typescript-eslint with JSDoc JavaScript to get the benefits of linting powered by type information in a JavaScript codebase; this post shows you how.]]></description>
            <content:encoded><![CDATA[<p>It's possible to statically type check a JavaScript codebase with TypeScript with JSDoc annotations. Going a little further, and using <code>typescript-eslint</code> to lint your codebase with the benefits of type information can improve your code quality even more. This post will show you how to set this up and talk about some of the gotchas.</p>
<p><img decoding="async" loading="eager" alt="title image reading &amp;quot;typescript-eslint with JSDoc JavaScript&amp;quot; with a typescript-eslint logo and TypeScript logo" src="https://johnnyreilly.com/assets/images/title-image-b1fd8bccc2a13baa3adb03e186110f25.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<p>We'll also talk a little about how to use TypeScript in combination with JSDoc annotations in a JavaScript codebase.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="background">Background<a href="https://johnnyreilly.com/typescript-eslint-with-jsdoc-js#background" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>I recently worked on a project where we had a five year old React JavaScript codebase. There wasn't time to convert the codebase to TypeScript, but we wanted to see if we could get some of the benefits of TypeScript by using JSDoc annotations. The codebase also didn't have linting in place. So we thought we'd see if we could use <code>typescript-eslint</code> to lint our codebase. This was a little tricky to set up, so I thought I'd write a post to help others who might be in the same situation.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="setting-up-typescript">Setting up TypeScript<a href="https://johnnyreilly.com/typescript-eslint-with-jsdoc-js#setting-up-typescript" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>First things first, you'll need to set up TypeScript in your project. You can do this by running:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">install</span><span class="token plain"> --save-dev typescript</span><br></span></code></pre></div></div>
<p>We now have TypeScript installed in our project. We'll need to create a <code>tsconfig.json</code> file to configure TypeScript to work with our JavaScript codebase:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"compilerOptions"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/* Visit https://aka.ms/tsconfig to read more about this file */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/* Language and Environment */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"lib"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token string" style="color:rgb(165, 255, 144)">"DOM"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token string" style="color:rgb(165, 255, 144)">"DOM.Iterable"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token string" style="color:rgb(165, 255, 144)">"ESNext"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/* Specify a set of bundled library declaration files that describe the target runtime environment. */</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"jsx"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"preserve"</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/* Specify what JSX code is generated. */</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"target"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"ESNext"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/* Modules */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"module"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"preserve"</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/* Specify what module code is generated. */</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"resolveJsonModule"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/* Enable importing .json files. */</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/* JavaScript Support */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"checkJs"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/* Enable error reporting in type-checked JavaScript files. Implicitly sets `allowJs: true` */</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// "maxNodeModuleJsDepth": 1,                        /* Specify the maximum folder depth used for checking JavaScript files from 'node_modules'. Only applicable with 'allowJs'. */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/* Emit */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"noEmit"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/* Disable emitting files from a compilation. */</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/* Type Checking */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"strict"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/* Enable all strict type-checking options. */</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/* Completeness */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"skipLibCheck"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/* Skip type checking all .d.ts files. */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"include"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token string" style="color:rgb(165, 255, 144)">"src"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"eslint.config.mjs"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre></div></div>
<p>The main things to draw from the above <code>tsconfig.json</code> are:</p>
<ul>
<li>it enables type checking of JavaScript files with JSDoc annotations with the <code>allowJs</code> / <code>checkJs</code> options</li>
<li>it tells the TypeScript compiler to expect a modern browser environment with the <code>lib</code> option</li>
<li>it tells the TypeScript compiler to expect React JSX with the <code>jsx</code> option</li>
<li>it tells the TypeScript compiler not to emit any files with the <code>noEmit</code> option (as we're only using TypeScript for type checking - we will not be transpiling TypeScript into JavaScript)</li>
<li>it tells the TypeScript compiler to run in strict mode with the <code>strict</code> option - I'm going all in on type checking; you may want to be more selective</li>
</ul>
<p>Finally we need to add a script to our <code>package.json</code> to typecheck our codebase with the TypeScript compiler:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"scripts"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"typecheck"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"tsc --noEmit"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre></div></div>
<p>You could omit the <code>--noEmit</code> flag given we've set <code>noEmit</code> to <code>true</code> in our <code>tsconfig.json</code>, but I like to be explicit.</p>
<p>We can now run <code>npm run typecheck</code> to type check our JavaScript codebase with TypeScript. This will check all the JavaScript files in our <code>src</code> directory. At this point, you'll almost certainly see a lot of errors. Without some JSDoc annotations, TypeScript will struggle to infer some types for your codebase. Particularly parameters of functions.</p>
<p>Your mission now is to add JSDoc annotations to your codebase to help TypeScript out. This is a bit of a grind, but it's worth it. You'll get a lot of the benefits of TypeScript without having to convert your codebase to TypeScript. Should you reach the point where all the errors are dealt with, you can include the <code>typecheck</code> script in your CI pipeline to ensure that new code is type checked / existing code doesn't regress.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="jsdoc-and-the-type-annotations-ecmascript-proposal">JSDoc and the Type Annotations ECMAScript proposal<a href="https://johnnyreilly.com/typescript-eslint-with-jsdoc-js#jsdoc-and-the-type-annotations-ecmascript-proposal" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>If you're looking for references on how to write JSDoc annotations, the <a href="https://www.typescriptlang.org/docs/handbook/jsdoc-supported-types.html" target="_blank" rel="noopener noreferrer">TypeScript handbook</a> is a great place to start. It's also worth reading Gil Tayar's post on <a href="https://gils-blog.tayar.org/posts/jsdoc-typings-all-the-benefits-none-of-the-drawbacks/" target="_blank" rel="noopener noreferrer">JSDoc typings</a>.</p>
<p><a href="https://gils-blog.tayar.org/about/" target="_blank" rel="noopener noreferrer">Gil</a>, it's worth noting, is one of the people working on the <a href="https://github.com/tc39/proposal-type-annotations" target="_blank" rel="noopener noreferrer">Type Annotations ECMAScript proposal</a> for adding support for type annotations to JavaScript. I've written <a href="https://johnnyreilly.com/type-annotations-proposal-strong-types-weakly-held">a post about that proposal</a> which you might find useful.</p>
<p>The fact that the proposal exists in the first place, points to how much the community would rather write TypeScript rather than JavaScript. At the time I write this, Bun, Deno and even Node.js now support running TypeScript directly; without a transpilation stage. And should the Type Annotations proposal one day reach Stage 4, then hopefully we can all move to that in browsers as well.</p>
<p>This is subjective, but it feels like a fairly common view that writing JSDoc is less fun than writing TypeScript.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="playing-jsdoc-on-easy-mode-jsdoc-js--ts">Playing JSDoc on easy mode (JSDoc <code>.js</code> + <code>.ts</code>)<a href="https://johnnyreilly.com/typescript-eslint-with-jsdoc-js#playing-jsdoc-on-easy-mode-jsdoc-js--ts" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>But in the situation I'm in now, I have to write JSDoc. But I can combine writing JSDoc with also writing TypeScript, <strong>when the code in question is type only</strong>. Confused? Let me explain.</p>
<p>In our codebase we have a <code>logger.js</code> file which contains the following JavaScript function:</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">function createLogger(</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    sessionId,</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    authToken,</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    durableSessionId</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">) {</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    return {</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        error: (message, context, exception) =&gt; void logMessage('error', message, {sessionId, durableSessionId, ...context}, exception, authToken),</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        warn: (message, context, exception) =&gt; void logMessage('warn', message, {sessionId, durableSessionId, ...context}, exception, authToken),</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        info: (message, context, exception) =&gt; void logMessage('info', message, {sessionId, durableSessionId, ...context}, exception, authToken),</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        debug: (message, context, exception) =&gt; void logMessage('debug', message, {sessionId, durableSessionId, ...context}, exception, authToken)</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">}</span><br></span></code></pre></div></div>
<p>This function is a factory function that returns a logger object. The logger object has four methods: <code>error</code>, <code>warn</code>, <code>info</code>, and <code>debug</code>. Each method logs a message at a different level. The <code>logMessage</code> function is a private function that does the actual logging (and it logs asynchronously hence the <code>void</code>).</p>
<p>Now to provide that level of information in JSDoc, we'd write something like this:</p>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/**</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> * </span><span class="token doc-comment comment keyword" style="color:rgb(255, 157, 0);font-style:italic">@typedef</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> </span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">{</span><span class="token doc-comment comment class-name keyword" style="color:rgb(255, 157, 0);font-style:italic">function</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">(</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic">string</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">,</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic"> object</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">=</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">,</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic"> unknown</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">=</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">)</span><span class="token doc-comment comment class-name operator" style="color:rgb(255, 157, 0);font-style:italic">:</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic"> </span><span class="token doc-comment comment class-name keyword" style="color:rgb(255, 157, 0);font-style:italic">void</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">}</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> </span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic">LogMethod</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/**</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> * </span><span class="token doc-comment comment keyword" style="color:rgb(255, 157, 0);font-style:italic">@typedef</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> </span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">{</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic">Object</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">}</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> </span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic">Logger</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> * </span><span class="token doc-comment comment keyword" style="color:rgb(255, 157, 0);font-style:italic">@property</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> </span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">{</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic">LogMethod</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">}</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> </span><span class="token doc-comment comment parameter" style="color:rgb(179, 98, 255);font-style:italic">warn</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> * </span><span class="token doc-comment comment keyword" style="color:rgb(255, 157, 0);font-style:italic">@property</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> </span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">{</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic">LogMethod</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">}</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> </span><span class="token doc-comment comment parameter" style="color:rgb(179, 98, 255);font-style:italic">error</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> * </span><span class="token doc-comment comment keyword" style="color:rgb(255, 157, 0);font-style:italic">@property</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> </span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">{</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic">LogMethod</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">}</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> </span><span class="token doc-comment comment parameter" style="color:rgb(179, 98, 255);font-style:italic">info</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> * </span><span class="token doc-comment comment keyword" style="color:rgb(255, 157, 0);font-style:italic">@property</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> </span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">{</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic">LogMethod</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">}</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> </span><span class="token doc-comment comment parameter" style="color:rgb(179, 98, 255);font-style:italic">debug</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/**</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> * </span><span class="token doc-comment comment keyword" style="color:rgb(255, 157, 0);font-style:italic">@typedef</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> </span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">{</span><span class="token doc-comment comment class-name keyword" style="color:rgb(255, 157, 0);font-style:italic">function</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">(</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic">string</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">,</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic"> string</span><span class="token doc-comment comment class-name operator" style="color:rgb(255, 157, 0);font-style:italic">|</span><span class="token doc-comment comment class-name keyword" style="color:rgb(255, 157, 0);font-style:italic">null</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">,</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic"> string</span><span class="token doc-comment comment class-name operator" style="color:rgb(255, 157, 0);font-style:italic">|</span><span class="token doc-comment comment class-name keyword" style="color:rgb(255, 157, 0);font-style:italic">null</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">)</span><span class="token doc-comment comment class-name operator" style="color:rgb(255, 157, 0);font-style:italic">:</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic"> Logger</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">}</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> </span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic">LoggerFactory</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/**</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> * </span><span class="token doc-comment comment keyword" style="color:rgb(255, 157, 0);font-style:italic">@typedef</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> </span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">{</span><span class="token doc-comment comment class-name string" style="color:rgb(165, 255, 144);font-style:italic">"debug"</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic"> </span><span class="token doc-comment comment class-name operator" style="color:rgb(255, 157, 0);font-style:italic">|</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic"> </span><span class="token doc-comment comment class-name string" style="color:rgb(165, 255, 144);font-style:italic">"info"</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic"> </span><span class="token doc-comment comment class-name operator" style="color:rgb(255, 157, 0);font-style:italic">|</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic"> </span><span class="token doc-comment comment class-name string" style="color:rgb(165, 255, 144);font-style:italic">"warn"</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic"> </span><span class="token doc-comment comment class-name operator" style="color:rgb(255, 157, 0);font-style:italic">|</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic"> </span><span class="token doc-comment comment class-name string" style="color:rgb(165, 255, 144);font-style:italic">"error"</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">}</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> </span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic">LogLevel</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> */</span><br></span></code></pre></div></div>
<p>For my money, this is not that readable. I would much rather write it in TypeScript:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">type</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">LogMethod</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  message</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  context</span><span class="token operator" style="color:rgb(255, 157, 0)">?</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> object</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  exception</span><span class="token operator" style="color:rgb(255, 157, 0)">?</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">unknown</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">void</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">interface</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">Logger</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  warn</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> LogMethod</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  error</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> LogMethod</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  info</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> LogMethod</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  debug</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> LogMethod</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">type</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">LoggerFactory</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  sessionId</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  authToken</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">|</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  durableSessionId</span><span class="token operator" style="color:rgb(255, 157, 0)">?</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">|</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> Logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">type</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">LogLevel</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'debug'</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">|</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'info'</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">|</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'warn'</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">|</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'error'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre></div></div>
<p>This is pure TypeScript code. The tremendous news is that we can write type-only TypeScript and we can consume it in a JSDoc JavaScript file <strong>because there is no runtime code in here</strong>. It's purely type information. We'll write this in a <code>.ts</code> file and then we can <code>import</code> it into in our JS files.</p>
<p>So let's imagine we have a <code>loggerTypes.ts</code> file with the above TypeScript code in it. We can then import the <code>LoggerFactory</code> into our <code>logger.js</code> file like this:</p>
<div class="language-diff codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-diff codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">/** @type {import('./loggerTypes').LoggerFactory} */</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token plain">function createLogger(</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   sessionId,</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   authToken,</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   durableSessionId</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token plain">) {</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   return {</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">       error: (message, context, exception) =&gt; void logMessage('error', message, {sessionId, durableSessionId, ...context}, exception, authToken),</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">       warn: (message, context, exception) =&gt; void logMessage('warn', message, {sessionId, durableSessionId, ...context}, exception, authToken),</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">       info: (message, context, exception) =&gt; void logMessage('info', message, {sessionId, durableSessionId, ...context}, exception, authToken),</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">       debug: (message, context, exception) =&gt; void logMessage('debug', message, {sessionId, durableSessionId, ...context}, exception, authToken)</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   }</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token plain">}</span><br></span></code></pre></div></div>
<p>And with this single line addition to our <code>logger.js</code> file, we've now got type information for our <code>createLogger</code> function. This is what it looks like in VS Code once you've added that JSDoc annotation:</p>
<p><img decoding="async" loading="lazy" alt="Screenshot of type information in VS Code" src="https://johnnyreilly.com/assets/images/screenshot-jsdoc-in-vscode-3c6c54ebd2d37c29e8bdf1b3c62d8229.png" width="2180" height="548" class="img_ev3q"></p>
<p>So here we've had one line of JSDoc and we've got all the type information we need <strong>using TypeScript</strong>. Our runtime code is still JavaScript, but our type information is TypeScript. This is a great way to get the benefits of TypeScript without having to write all your type information in JSDoc.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="a-note-on-ts-file-naming">A note on <code>.ts</code> file naming<a href="https://johnnyreilly.com/typescript-eslint-with-jsdoc-js#a-note-on-ts-file-naming" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>I was intentional around the naming of the <code>.ts</code> file. I've called it <code>loggerTypes.ts</code> because I want to make it clear that this file is all about types. It's not a (runtime) <code>.js</code> file, it's a <code>.ts</code> file - relevant for compile time. The <code>Types</code> suffix is deliberate too; it's not <code>logger.ts</code> entirely as planned.</p>
<p>The TypeScript compiler doesn't understand a world in which there is a <code>logger.js</code> file which imports types from a <code>logger.ts</code> file. Expect difficulty if you should try to use that approach. Particularly in a world in which ESM has lead to all imports being from <code>.js</code> files even when they are actually <code>.ts</code> source files.</p>
<p>What's more, you would not typically see code like that in a TypeScript (or JavaScript) codebase. It would invite head scratching from anyone who came across it. So having <code>Types</code> in the name means that the compiler is not confused, and hopefully neither are your colleagues. You are unambiguously importing a different file. (By the way, having a 1-1 relationship between <code>.ts</code> and <code>.js</code> files as I'm doing isn't mandatory, but I've found it to be a useful pattern.)</p>
<p>I did also consider the idea that the files I wrote should be <code>.d.ts</code> files rather than <code>.ts</code> files. After a <a href="https://twitter.com/robpalmer2/status/1829856562422124734" target="_blank" rel="noopener noreferrer">healthy discussion on Twitter</a> I was directed by <a href="https://twitter.com/robpalmer2" target="_blank" rel="noopener noreferrer">Rob Palmer</a> to what's probably the definitive answer on this from <a href="https://github.com/andrewbranch" target="_blank" rel="noopener noreferrer">Andrew Branch</a> of the TypeScript team:</p>
<p>As ever in life, I find I cannot improve on <a href="https://github.com/microsoft/TypeScript/issues/52593#issuecomment-1419505081" target="_blank" rel="noopener noreferrer">Andrew's guidance</a> and so I'll quote his views on the use of <code>.d.ts</code> files for storing hand-written utility types in full:</p>
<blockquote>
<p>I would say it‚Äôs discouraged or even harmful (though it won‚Äôt be ‚Äúdeprecated‚Äù). At best, it‚Äôs a technique with serious pitfalls that can be leveraged by people who understand them enough to set up additional tooling and safeguards to make it viable. Because <code>.d.ts</code> files only occur ‚Äúnaturally‚Äù as a pair with a <code>.js</code> file, together as outputs of a <code>.ts</code> file, a <code>.d.ts</code> file always implies the existence of a <code>.js</code> file. So the potential harm is readily apparent: if you hand-author <code>only-types.d.ts</code> and then write <code>import {} from "./only-types.js"</code>, this resolves and is legal in all settings, but in <code>verbatimModuleSyntax</code>, the import will be preserved and crash at runtime. While TypeScript has type-only imports and exports, it lacks the analogous concept of a type-only module, one which exists for type information purposes but is known to not exist at runtime, though I‚Äôve casually suggested multiple times that such a concept could be useful.</p>
<p>But the main reason I personally avoid this is just because it doesn‚Äôt copy into <code>outDir</code>. For my purposes, I‚Äôd rather just eat the cost of the empty JS file (which also protects you from crashes should you accidentally import it at runtime).</p>
</blockquote>
<p>Thanks also to <a href="https://remcohaszing.nl/" target="_blank" rel="noopener noreferrer">Remco Haszing</a> for sharing that <a href="https://twitter.com/remcohaszing/status/1829808165459804330" target="_blank" rel="noopener noreferrer">even local <code>.d.ts</code> files should not be validated if you use <code>skipLibCheck</code></a>. (Oddly, I didn't see that behaviour in my own testing, but I wouldn't be surprised if I was doing something quirky.)</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="setting-up-typescript-eslint">Setting up <code>typescript-eslint</code><a href="https://johnnyreilly.com/typescript-eslint-with-jsdoc-js#setting-up-typescript-eslint" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>But you didn't come here to just type check your codebase, you want to lint it too! Let's set up <a href="https://typescript-eslint.io/" target="_blank" rel="noopener noreferrer"><code>typescript-eslint</code></a> to lint our codebase with the benefits of type information. We're going to need to install a few more packages:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">install</span><span class="token plain"> --save-dev eslint @eslint/js @types/eslint__js typescript typescript-eslint eslint-plugin-react globals</span><br></span></code></pre></div></div>
<p>We'll also need to create an <code>eslint.config.mjs</code> file to configure <code>eslint</code> to work with TypeScript (the eagle eyed amongst you will have noticed that we included this file in our <code>tsconfig.json</code> earlier). Here's what that file looks like:</p>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/* eslint-disable @typescript-eslint/no-unsafe-member-access */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword module" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports">eslint</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@eslint/js'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword module" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports">globals</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'globals'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword module" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports">tseslint</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'typescript-eslint'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">//@ts-expect-error no type definitions for eslint-plugin-react</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword module" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports">pluginReact</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'eslint-plugin-react'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword module" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(255, 157, 0)">default</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:rgb(255, 157, 0)">files</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token string" style="color:rgb(165, 255, 144)">'**/*.{js,mjs,cjs,ts,jsx,tsx}'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:rgb(255, 157, 0)">languageOptions</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:rgb(255, 157, 0)">globals</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> globals</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">browser</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  eslint</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">configs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">recommended</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token plain">tseslint</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">configs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">recommendedTypeChecked</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// yes we are using type checked</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token literal-property property" style="color:rgb(255, 157, 0)">languageOptions</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token literal-property property" style="color:rgb(255, 157, 0)">parserOptions</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token literal-property property" style="color:rgb(255, 157, 0)">project</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token literal-property property" style="color:rgb(255, 157, 0)">projectService</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token literal-property property" style="color:rgb(255, 157, 0)">tsconfigRootDir</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(255, 157, 0)">import</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">meta</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">dirname</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  pluginReact</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">configs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">flat</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">recommended</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token literal-property property" style="color:rgb(255, 157, 0)">settings</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token literal-property property" style="color:rgb(255, 157, 0)">react</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token literal-property property" style="color:rgb(255, 157, 0)">version</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'detect'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token literal-property property" style="color:rgb(255, 157, 0)">rules</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// Not compatible with JSDoc according to @bradzacher and https://github.com/typescript-eslint/typescript-eslint/issues/8955#issuecomment-2097518639</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token string-property property" style="color:rgb(255, 157, 0)">'@typescript-eslint/explicit-function-return-type'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'off'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token string-property property" style="color:rgb(255, 157, 0)">'@typescript-eslint/explicit-module-boundary-types'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'off'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token string-property property" style="color:rgb(255, 157, 0)">'@typescript-eslint/parameter-properties'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'off'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token string-property property" style="color:rgb(255, 157, 0)">'@typescript-eslint/typedef'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'off'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre></div></div>
<p>A common misconception is that you cannot use <a href="https://typescript-eslint.io/getting-started/typed-linting" target="_blank" rel="noopener noreferrer"><code>typescript-eslint</code>s linting with type information</a> in JSDoc. You can. And here we are. However, there are some rules that are not compatible with JSDoc. We're turning those off in the <code>rules</code> section of the above <code>eslint.config.mjs</code> file.</p>
<p>The four rules we're turning off are rules that are not compatible with JSDoc according to <a href="https://github.com/typescript-eslint/typescript-eslint/issues/8955" target="_blank" rel="noopener noreferrer">this thread on GitHub</a>. In general, this is because the syntax required to satisfy the rule is not compatible with JS / JSDoc.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://johnnyreilly.com/typescript-eslint-with-jsdoc-js#conclusion" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>In this post we've set up a JavaScript project to be type checked with JSDoc and the TypeScript compiler. We've also set up <code>typescript-eslint</code> to lint the codebase, including using type information. Hopefully this will help increase the type safety of JavaScript projects of your own.</p>
<p>I should say, it's been a learning exercise writing this post, and as I continue working on enriching the type safety of this particular codebase I'm likely to learn more. I'll be updating this post as I do.</p>
<p><a href="https://johnnyreilly.com/typescript-vs-jsdoc-javascript">To read more on TypeScript vs JavaScript with JSDoc, you may want to read this post.</a></p>]]></content:encoded>
            <category>JavaScript</category>
            <category>TypeScript</category>
            <category>JSDoc</category>
        </item>
        <item>
            <title><![CDATA[Azure DevOps: using DefaultAzureCredential in an Azure Pipeline with AzureCLI@2]]></title>
            <link>https://johnnyreilly.com/azure-devops-with-defaultazurecredential</link>
            <guid>https://johnnyreilly.com/azure-devops-with-defaultazurecredential</guid>
            <pubDate>Sat, 19 Jul 2025 14:03:16 GMT</pubDate>
            <description><![CDATA[How to use DefaultAzureCredential in an Azure DevOps pipeline in the same way as you can locally.]]></description>
            <content:encoded><![CDATA[<p>I frequently build scripts that work against Azure resources using the <a href="https://github.com/Azure/azure-sdk-for-js" target="_blank" rel="noopener noreferrer">Azure SDK for JavaScript</a>. I use the <a href="https://learn.microsoft.com/en-gb/dotnet/azure/sdk/authentication/credential-chains?tabs=dac#defaultazurecredential-overview" target="_blank" rel="noopener noreferrer"><code>DefaultAzureCredential</code></a> to authenticate against Azure resources - this is also available in other platforms such as .NET.</p>
<p><img decoding="async" loading="eager" alt="title image reading &amp;quot;Azure DevOps: using DefaultAzureCredential in an Azure Pipeline with AzureCLI@2&amp;quot; with an Azure / Azure DevOps logos" src="https://johnnyreilly.com/assets/images/title-image-c5f5559b43b1b3e7c3219905fa5e92ae.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<p>The <code>DefaultAzureCredential</code> is a great way to authenticate locally; I can <code>az login</code> and then run my script, safe in the knowledge that the <code>DefaultAzureCredential</code> will authenticate successfully. However, how can I use the <code>DefaultAzureCredential</code> in an Azure DevOps pipeline?</p>
<p>This post will show you how to use the <code>DefaultAzureCredential</code> in an Azure DevOps pipeline, specifically by using the <code>AzureCLI@2</code> task.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-defaultazurecredential">What is <code>DefaultAzureCredential</code>?<a href="https://johnnyreilly.com/azure-devops-with-defaultazurecredential#what-is-defaultazurecredential" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>To quote the documentation:</p>
<blockquote>
<p><code>DefaultAzureCredential</code> is an opinionated, preconfigured chain of credentials. It's designed to support many environments, along with the most common authentication flows and developer tools. In graphical form, the underlying chain looks like this:</p>
<p><img decoding="async" loading="lazy" alt="an image representing the various entries in the chain" src="https://johnnyreilly.com/assets/images/defaultazurecredentialauthflow-548aef2d21b3b534c26973884635b9f1.svg" width="1445" height="274" class="img_ev3q"></p>
</blockquote>
<p>The first credential in the chain is <a href="https://learn.microsoft.com/en-us/dotnet/api/azure.identity.environmentcredential?view=azure-dotnet&amp;preserve-view=true" target="_blank" rel="noopener noreferrer"><code>EnvironmentCredential</code></a>, which looks for environment variables to authenticate. This means that if you set the right environment variables, you can use <code>DefaultAzureCredential</code> and it will authenticate with them.</p>
<p>The specific environment variables that <code>DefaultAzureCredential</code> looks for are:</p>
<ul>
<li><code>AZURE_TENANT_ID</code> - The Microsoft Entra tenant (directory) ID.</li>
<li><code>AZURE_CLIENT_ID</code> - The client (application) ID of an App Registration in the tenant.</li>
<li><code>AZURE_CLIENT_SECRET</code> - A client secret that was generated for the App Registration.</li>
</ul>
<p>The fifth credential in the chain is <a href="https://learn.microsoft.com/en-us/dotnet/api/azure.identity.azureclicredential?view=azure-dotnet&amp;preserve-view=true" target="_blank" rel="noopener noreferrer"><code>AzureCliCredential</code></a>, which uses the Azure CLI to authenticate. This means that if you have already authenticated using <code>az login</code>, you can use <code>DefaultAzureCredential</code> without setting any environment variables.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="why-have-you-told-me-about-environmentcredential-and-azureclicredential">Why have you told me about <code>EnvironmentCredential</code> and <code>AzureCliCredential</code>?<a href="https://johnnyreilly.com/azure-devops-with-defaultazurecredential#why-have-you-told-me-about-environmentcredential-and-azureclicredential" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Great question! When I'm developing locally, I can use <code>DefaultAzureCredential</code> without thinking further about it. I run <code>az login</code> and then run my script. <code>DefaultAzureCredential</code> will do what I need.</p>
<p>You can make use of <code>AzureCliCredential</code>, both locally and in an Azure DevOps pipeline, and it can be used for authentication as long as you have a service connection set up in Azure DevOps that uses the same credentials as your local <code>az login</code>. Should you need it, <code>EnvironmentCredential</code> is another option, and we'll demonstrate it too.</p>
<p>The nice thing about <code>DefaultAzureCredential</code> is that it supports both approaches, so you can use it in your code without having to specifically cater for the credential type being used.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="using-the-azurecli2-task-with-azureclicredential">Using the <code>AzureCLI@2</code> task with <code>AzureCliCredential</code><a href="https://johnnyreilly.com/azure-devops-with-defaultazurecredential#using-the-azurecli2-task-with-azureclicredential" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>To use the Azure CLI in an Azure DevOps pipeline, you can use the <a href="https://learn.microsoft.com/en-us/azure/devops/pipelines/tasks/reference/azure-cli-v2?view=azure-pipelines" target="_blank" rel="noopener noreferrer"><code>AzureCLI@2</code></a> task. This task allows you to run Azure CLI commands in your pipeline, given it is configured to use a service connection that has the necessary permissions to access your Azure resources.</p>
<p>Consider the following example pipeline YAML:</p>
<div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> AzureCLI@2</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Run with AzureCliCredential</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">azureSubscription</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> myServiceConnection </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># this is the name of your Azure service connection in Azure DevOps</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">scriptType</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> bash</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">scriptLocation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> inlineScript</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">inlineScript</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> npm start </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># where `npm start` is your command that uses DefaultAzureCredential</span><br></span></code></pre></div></div>
<p>The above will run the <code>npm start</code> command in the context of the Azure CLI. We won't document it here, but imagine the <code>npm start</code> command runs a Node.js script which makes use of <code>DefaultAzureCredential</code>. The supplied service connection will authenticate using the credentials of the  associated service principal. When the code runs and <code>DefaultAzureCredential</code> is used, the <code>AzureCliCredential</code> will be used to authenticate, as at this point the pipeline is effectively a logged user with the Azure CLI.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="using-the-azurecli2-task-with-environmentcredential">Using the <code>AzureCLI@2</code> task with <code>EnvironmentCredential</code><a href="https://johnnyreilly.com/azure-devops-with-defaultazurecredential#using-the-azurecli2-task-with-environmentcredential" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>If, for whatever reason, you want to use <code>EnvironmentCredential</code> in your Azure DevOps pipeline, you can do so by setting the necessary environment variables in the pipeline. I don't have a specific reason to do this, but you may. To achieve this, you can modify the approach as follows:</p>
<div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> AzureCLI@2</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Set service principal variables</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">azureSubscription</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> myServiceConnection </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># this is the name of your Azure service connection in Azure DevOps</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">scriptType</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> bash</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">scriptLocation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> inlineScript</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">addSpnToEnvironment</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token boolean important" style="color:rgb(255, 98, 140)">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">inlineScript</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">|</span><span class="token scalar string" style="color:rgb(165, 255, 144)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">      echo "##vso[task.setvariable variable=AZURE_CLIENT_ID;issecret=true]${servicePrincipalId}"</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">      echo "##vso[task.setvariable variable=AZURE_CLIENT_SECRET;issecret=true]${servicePrincipalKey}"</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">      echo "##vso[task.setvariable variable=AZURE_SUBSCRIPTION_ID;issecret=true]$(az account show --query 'id' -o tsv)"</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">      echo "##vso[task.setvariable variable=AZURE_TENANT_ID;issecret=true]${tenantId}"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">bash</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> npm start</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'Run with EnvironmentCredential'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">#&nbsp;see https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/identity/Azure.Identity/README.md#environment-variables</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">AZURE_CLIENT_ID</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(AZURE_CLIENT_ID)</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">AZURE_CLIENT_SECRET</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(AZURE_CLIENT_SECRET)</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">AZURE_SUBSCRIPTION_ID</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(AZURE_SUBSCRIPTION_ID)</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">AZURE_TENANT_ID</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(AZURE_TENANT_ID) </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># this is optional and not necessary for EnvironmentCredential to work</span><br></span></code></pre></div></div>
<p>You can see this is a little different from the previous example. We're now using the <code>AzureCLI@2</code> task to set the necessary environment variables for <code>DefaultAzureCredential</code> to work. Specifically, <code>AZURE_CLIENT_ID</code>, <code>AZURE_CLIENT_SECRET</code> and <code>AZURE_SUBSCRIPTION_ID</code>.</p>
<p>The <code>addSpnToEnvironment</code> input of the task is set to <code>true</code>, which ensures that the service principal's credentials are added to the environment. We then map those credentials to the names that the <code>DefaultAzureCredential</code> expects and write them to the pipeline to be used in the next task.</p>
<p>The second task is a simple bash task that runs <code>npm start</code>, but it now has an <code>env</code> section that sets the necessary environment variables for <code>DefaultAzureCredential</code> to work. The environment variables are set using the variables exposed by the previous task.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://johnnyreilly.com/azure-devops-with-defaultazurecredential#conclusion" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>In this post, we explored how to use <code>DefaultAzureCredential</code> in an Azure DevOps pipeline, specifically when using the <code>AzureCLI@2</code> task. We discussed the two main approaches: using <code>AzureCliCredential</code> and <code>EnvironmentCredential</code>, and how to configure the pipeline to support both.</p>
<p>It's worth noting that whilst my own use case is JavaScript / TypeScript, the same principles apply to other languages that support <code>DefaultAzureCredential</code>, such as .NET. The key takeaway is that you can use <code>DefaultAzureCredential</code> in an Azure DevOps pipeline just as easily as you can locally, allowing for a consistent development and deployment experience.</p>]]></content:encoded>
            <category>TypeScript</category>
            <category>Azure DevOps</category>
            <category>Node.js</category>
        </item>
        <item>
            <title><![CDATA[TypeScript is going Go: Why it‚Äôs the pragmatic choice]]></title>
            <link>https://johnnyreilly.com/typescript-go-pragmatic-choice</link>
            <guid>https://johnnyreilly.com/typescript-go-pragmatic-choice</guid>
            <pubDate>Mon, 19 May 2025 21:12:41 GMT</pubDate>
            <description><![CDATA[TypeScript is being ported to Go. This is a reflection on the port, and what it means for the TypeScript ecosystem.]]></description>
            <content:encoded><![CDATA[<p>TypeScript is <a href="https://devblogs.microsoft.com/typescript/typescript-native-port/" target="_blank" rel="noopener noreferrer">being ported to Go</a>. This is known as "TypeScript 7" (it is currently on 5.8). It's quite likely that you know this by now, as there have been excellent communications from the TypeScript team in a variety of forums. In fact, hats off to the team; it's been an object lesson in how to communicate well; straightforward, clear and open.</p>
<p><img decoding="async" loading="eager" alt="title image showing TypeScript and Go logos" src="https://johnnyreilly.com/assets/images/title-image-e57aba955c5a744128f89d00321ce4db.avif" width="895" height="597" fetchpriority="high" class="img_ev3q"></p>
<p>There's no shortage of content out there detailing what is known about the port. This piece is not that. Rather, it's the reflections of two people in the TypeScript community. What our thoughts, feelings and reflections on the port are.</p>
<p>It's going to be a somewhat unstructured wander through our reactions and hopes. Buckle up for opinions and feelings.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="who-are-john-reilly-and-ashley-claymore">Who are John Reilly and Ashley Claymore?<a href="https://johnnyreilly.com/typescript-go-pragmatic-choice#who-are-john-reilly-and-ashley-claymore" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>John Reilly is a software engineer and an early adopter of TypeScript. He worked on Definitely Typed, the home of high quality type definitions which allow the integration of TypeScript and JavaScript. John wrote the <a href="https://johnnyreilly.com/definitely-typed-the-movie" target="_blank" rel="noopener noreferrer">history of Definitely Typed</a> and featured in the TypeScript documentary. He also worked (and works) on <code>ts-loader</code>, the webpack loader for TypeScript. In his day job, he works at Investec, a South African bank and is based in London. The greatest city on earth (in his opinion).</p>
<p>Ashley is a software engineer who has the pleasure of living not too far from John, occasionally joining him on his morning walks, where we can kick start our day talking about TypeScript together. Ashley first started writing TypeScript when it was on version 1.8 and has thoroughly enjoyed following its evolution. He has <a href="https://github.com/microsoft/TypeScript/pulls?q=author%3Aacutmore+is%3Aclosed" target="_blank" rel="noopener noreferrer">contributed to TypeScript</a> and works at Bloomberg as part of the 'JavaScript Infrastructure &amp; Tooling' team. Opinions are his own.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="was-a-port-necessary">Was a port necessary?<a href="https://johnnyreilly.com/typescript-go-pragmatic-choice#was-a-port-necessary" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>I mean, weren't we happy with each other anyway? Just as we were? Yes, but also no.</p>
<p>If you're in the JavaScript / TypeScript ecosystem, recent years have been notable for the number of projects that have appeared to support JavaScript related development, but built in non-JavaScript languages. We've had <a href="https://esbuild.github.io/" target="_blank" rel="noopener noreferrer">esbuild</a>, written in Go. We've had <a href="https://swc.rs/" target="_blank" rel="noopener noreferrer">SWC</a>, written in Rust. We've had <a href="https://bun.sh/" target="_blank" rel="noopener noreferrer">Bun</a>, written in Zig. We've had <a href="https://deno.com/" target="_blank" rel="noopener noreferrer">Deno</a>, written in Rust.</p>
<p>The list goes on, and was getting longer and longer. All of these increased performance, which was and is a wonderful thing. We'll talk more about performance later. One hold-out was TypeScript. It remained being written in TypeScript. Whilst performance improvements did happen, and were an area of focus for the team, the level of improvements that happened were incremental; not transformative.</p>
<p>You could see the impatience in the community, as people started making their own efforts to speed up TypeScript by building their own implementations. Most notable here was <a href="https://github.com/kdy1/" target="_blank" rel="noopener noreferrer">DongYoon Kang</a>; the creator of SWC. SWC, amongst other things, implemented the transpilation aspect of TypeScript. Donny decided to see if he could implement the type checker as well, again using Rust. He then switched to <a href="https://kdy1.dev/2022-1-26-porting-tsc-to-go" target="_blank" rel="noopener noreferrer">attempting a port using Go</a>. After some time he then switched back to <a href="https://kdy1.dev/2022-10-27-open-sourcing-stc" target="_blank" rel="noopener noreferrer">trying to implement in Rust</a>.</p>
<p>It didn't end up succeeding, but the fact there were people out there willing to try this demonstrated the desire for performance in the community. At some point a port was likely to succeed, and if it wasn't driven by the actual TypeScript team it would probably have landed the ecosystem in a tricky situation. A port of TypeScript, to a language other than TypeScript, seemed to be inevitable. And here we are.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="performance">Performance<a href="https://johnnyreilly.com/typescript-go-pragmatic-choice#performance" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>It's useful to think about what the Go port meaningfully changes about TypeScript. Josh Goldberg has <a href="https://www.learningtypescript.com/articles/what-is-typescript" target="_blank" rel="noopener noreferrer">provided a useful framing on different aspects of TypeScript</a>. It's four things:</p>
<ol>
<li>Language</li>
<li>Type Checker</li>
<li>Compiler</li>
<li>Language services</li>
</ol>
<p>The language is unaffected by the port. Syntax is unchanged. You'll still be writing <code>type</code>s and <code>interfaces</code>s as you were before. No difference.</p>
<p>The same applies to the checks that the type checker is performing. The code that was detected as an error before will still fail to type check with TypeScript 7:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> i</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">number</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'not actually a number'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ts: Type 'string' is not assignable to type 'number'</span><br></span></code></pre></div></div>
<p>This is where the differences begin. The type checker, compiler, and the language services do change. They become an order of magnitude faster.</p>
<p>Put your hands up if you don't care about performance. That's right, no hands went up. We all care about performance. If you ever have the misfortune to work with technology that lags, which breaks you out of flow as you are working, you notice it. It's almost the only thing you can notice.</p>
<p>The TypeScript team has always cared about performance, particularly in the area of development tooling. Anders Hejlsberg in particular has mentioned in interviews, the need for language servers to provide fast feedback as people work. Something measured in milliseconds and not seconds.</p>
<p>What are the implications of these changes to the TypeScript ecosystem? Put simply: a faster VS Code and faster builds.</p>
<p>Where John works, at Investec, there are many engineers who use VS Code, and spend part of their engineering life writing TypeScript and JavaScript. All those engineers will benefit from a snappier development experience. When they open up a project in VS Code, the time taken for the language service to wake up will drop dramatically. As they refactor their code, the experience will be faster. The "time to red squiggly line" metric will decrease. And that's a good thing.</p>
<p>As a consequence, engineers should be incrementally more effective, given that there are fewer pauses in their workflow.</p>
<p>The same incremental gain applies to builds. As our engineers build applications, they run TypeScript builds on their machines and in a Continuous Integration context. These will all be faster than they were before. We'll continually experience a performance improvement which is a benefit.</p>
<p>This, of course, is not Investec specific. Rather this is a general improvement that everyone will benefit from. Across the world, wherever anyone writes and builds TypeScript, they will do so faster.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-typescript-team-will-write-less-typescript">The TypeScript team will write less TypeScript<a href="https://johnnyreilly.com/typescript-go-pragmatic-choice#the-typescript-team-will-write-less-typescript" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Many languages have <a href="https://en.wikipedia.org/wiki/Bootstrapping_(compilers)" target="_blank" rel="noopener noreferrer">bootstrapping compilers</a>. This means the compiler is written in the program language that it is the compiler for. TypeScript has been an example of this since it was first open sourced. That is about to change; the compiler will stop being written in TypeScript and will start being written in Go. This is possibly the first example of a language moving away from having a bootstrapping compiler. This is done in the name of performance.</p>
<p>Of all the aspects about the Go port, this one was the one that gave John most anxiety. (It's John writing this by the way, writing in the third person feels very strange.) The TypeScript team will be moving away from writing TypeScript in their day to day lives. They won't abandon it of course, but they will certainly write less TypeScript and more Go. An implication of this is that there will be reduced <a href="https://en.wikipedia.org/wiki/Eating_your_own_dog_food" target="_blank" rel="noopener noreferrer">dogfooding</a> - which means less direct feedback to the makers of TypeScript about what it's like to write TypeScript.</p>
<p>Given how broad the TypeScript community is, this is perhaps not the concern that it might be. The team are very connected with the community and even if they are writing TypeScript less, people who are writing more will be sure to be vocal. It's maybe worth remembering that for most of the time TypeScript has been around, the team has often written TypeScript in a style that is not necessarily representative of the broader community. We're thinking here of classes (talked about below), and until recently modules. Before Jake Bailey's mammoth work to <a href="https://devblogs.microsoft.com/typescript/typescripts-migration-to-modules/" target="_blank" rel="noopener noreferrer">migrate the TypeScript codebase to use modules</a>, the codebase used namespaces. This didn't stop TypeScript working with on improving support for these JavaScript features at all. So it seems reasonable we need not fear.</p>
<p>Another angle on this, is wondering if the TypeScript team might become less involved with TC39 (the committee that develops the JavaScript language specification). TypeScript have been instrumental in language development over the years, from optional chaining to decorators and beyond. As the TypeScript team will be writing less TypeScript, there's a view that they might become less directly involved in influencing the development of JavaScript.</p>
<p>Ashley, who is one of Bloomberg's TC39 delegates, is not at all worried about this. The Principal Product Manager of TypeScript, Daniel Rosenwasser, recently became one of the <a href="https://github.com/tc39/agendas/blob/main/2025/TC39%20Chair%20Group%20Election%20-%20106th%20Meeting.pdf" target="_blank" rel="noopener noreferrer">two incoming TC39 Facilitators</a>. There is also Ron Buckton, another TC39 delegate from the TypeScript team, who continues to champion multiple exciting proposals such as <a href="https://github.com/tc39/proposal-explicit-resource-management" target="_blank" rel="noopener noreferrer">Explicit Resource Management</a>. The importance of having the TypeScript team's input into the evolution of JavaScript remains the same regardless of which language is used to implement TypeScript's analysis of JavaScript.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="interacting-with-typescript">Interacting with TypeScript<a href="https://johnnyreilly.com/typescript-go-pragmatic-choice#interacting-with-typescript" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>There are four primary ways to interact with the TypeScript package. Let's have a think about how these might change.</p>
<ul>
<li>Via its command line interface <code>tsc</code>
<ul>
<li>There will still be a CLI and it sounds like the goal will be very close compatibility. The implementation may change to be Go, but you would still be able to interact with the CLI in the same way</li>
</ul>
</li>
<li>Via its JavaScript API, importing it as a module <code>import ts from "typescript"</code>
<ul>
<li>The TypeScript team are still working on this part. There will still be a JavaScript API, though it's almost certain that there will be changes here, but exactly how different they are is not yet known.</li>
<li>One core question is if the currently synchronous API will need to become asynchronous due to calling Go, as this can be <a href="https://journal.stuffwithstuff.com/2015/02/01/what-color-is-your-function/" target="_blank" rel="noopener noreferrer">a difficult change to migrate to</a>. The good news here is that <a href="https://github.com/microsoft/typescript-go/pull/711" target="_blank" rel="noopener noreferrer">it looks like it will be able to retain a synchronous API</a>.</li>
</ul>
</li>
<li>Via the language server <code>tsserver</code>
<ul>
<li>Editors such as VSCode, and even linters, can interact with TypeScript via its language server.</li>
<li>Interestingly even though TypeScript helped inspire the LSP specification it <a href="https://github.com/microsoft/TypeScript/issues/39459" target="_blank" rel="noopener noreferrer">currently doesn't actually implement it</a>. The TypeScript team are using the port as an opportunity to align with the LSP specification. This is a positive change.</li>
</ul>
</li>
<li>Via another tool that uses TypeScript internally<!-- -->
<ul>
<li>Tools use one or a combination of the above to use TypeScript on their user's behalf. There will be work for the tools, but this might be done transparently to the end developer.</li>
</ul>
</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="ecosystem-tools">Ecosystem tools<a href="https://johnnyreilly.com/typescript-go-pragmatic-choice#ecosystem-tools" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Let's drill further into tools that use TypeScript internally. There will be an impact. John is the maintainer of <a href="https://github.com/TypeStrong/ts-loader" target="_blank" rel="noopener noreferrer"><code>ts-loader</code></a>, a widely used webpack loader for TypeScript. This loader depends upon TypeScript APIs which have been unchanged in years.</p>
<p>In fact, in John went so far as to comment as such on <a href="https://bsky.app/profile/johnnyreilly.com/post/3ljexijnmdk2m" target="_blank" rel="noopener noreferrer">Bluesky in early March</a>:</p>
<p><img decoding="async" loading="lazy" alt="screenshot of Bluesky post talking about TypeScript stability" src="https://johnnyreilly.com/assets/images/screenshot-typescript-is-rock-solid-edfc3caff7b9ee871a23e647bdb96484.png" width="1079" height="1129" class="img_ev3q"></p>
<p>Only to have the TypeScript team effectively come out and say "hold my beer".</p>
<p>It's very early days, but we know for sure that the internal APIs of TypeScript (that <code>ts-loader</code> depends upon) will <a href="https://github.com/microsoft/typescript-go/discussions/455#discussion-8063819" target="_blank" rel="noopener noreferrer">change</a>. To quote Daniel Rosenwasser of the TypeScript team:</p>
<blockquote>
<p>While we are porting most of the existing TypeScript compiler and language service, that does not necessarily mean that all APIs will be ported over.</p>
</blockquote>
<p><code>ts-loader</code> has two modes of operation:</p>
<ol>
<li>With type checking</li>
<li>Without type checking; transpilation only</li>
</ol>
<p>It's very unlikely that TypeScript 7 will work with <code>ts-loader</code>s type checking mode, without significant refactoring. However, it's quite likely that <code>ts-loader</code> might be able to support transpilation only mode with minimal changes. This mode only really depends on the <a href="https://github.com/TypeStrong/ts-loader/blob/847a24936aa12fa18dab21ca8ec37595cadc72c6/src/index.ts#L644-L650" target="_blank" rel="noopener noreferrer"><code>transpileModule</code></a> API of TypeScript. If the <code>transpileModule</code> API lands, then the transpilation only mode of <code>ts-loader</code> should just work. On the other hand, this might be the natural end of the road for the type checking mode of <code>ts-loader</code>.</p>
<p>Ashley is the author of <a href="https://github.com/bloomberg/ts-blank-space" target="_blank" rel="noopener noreferrer"><code>ts-blank-space</code></a> (an open source TypeScript to JavaScript transform published by Bloomberg that avoids the need for source maps). It also depends on TypeScript's API so may be affected by the port. It's too early to say but the change here may turn into an opportunity. A not uncommon request of <code>ts-blank-space</code> is to investigate using a different parser. This is because while <code>ts-blank-space</code> itself is very small and only uses TypeScript's parsing API, this is not an isolated part of TypeScript so still ends up importing the whole type checker. For projects that already depend on TypeScript there is no added cost, but it makes <code>ts-blank-space</code> less appealing for use-cases that are not already importing TypeScript as a library.</p>
<p>Some tooling will have a natural path forwards. For instance, <code>typescript-eslint</code> will continue onwards with TypeScript 7. The TypeScript team are planning to help with typed linting with the new, faster APIs. So this means that ESLint (which many people are used to using), will become faster, as TypeScript becomes faster.</p>
<p>However, it's likely that tooling that depends upon internal TypeScript APIs which are going to radically change, may cease to be in their current forms. This will vary project by project, but expect change. And this is fine. Change is a constant.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="was-go-a-good-language-choice">Was Go a good language choice?<a href="https://johnnyreilly.com/typescript-go-pragmatic-choice#was-go-a-good-language-choice" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Given that TypeScript decided to move away from being written with TypeScript, many people had and have opinions on the language being picked: Go. The folk who like C# wish that the team had picked C#. Particularly given Anders' involvement with C#. Those people that like Rust would very much have liked for the team to have picked Rust. The good news for Rust fans is that there is a chance that the Node.js bindings for TypeScript 7 will use <a href="https://github.com/microsoft/libsyncrpc" target="_blank" rel="noopener noreferrer">a package that was written in Rust</a>.</p>
<p>If John was to guess what the team might have picked he would have either said Rust or Zig (what Bun is built with). Go felt like a slightly leftfield choice, but upon reflection it completely makes sense. ESBuild is written in Go, so there's prior art. Go has a garbage collector (Rust does not) which means the work of porting the code is significantly reduced. Likewise, C# is all about <code>class</code>es and so a port from TypeScript (which makes only light use of <code>class</code>es in the compiler codebase) to C# would be uphill work.</p>
<p>The Go choice represents pragmatism; which is very much a TypeScript ethos. In fact if you look at the <a href="https://github.com/microsoft/TypeScript/wiki/TypeScript-Design-Goals" target="_blank" rel="noopener noreferrer">TypeScript Design goals</a>, you can see how TypeScript has always espoused a pragmatic approach. Perhaps most famously by having soundness as a "non-goal". Instead, striking a balance between correctness and productivity.</p>
<p>Pragmatism is the TypeScript way. Go is a pragmatic choice.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="is-this-evidence-that-javascript-is-slow">Is this evidence that JavaScript is slow?<a href="https://johnnyreilly.com/typescript-go-pragmatic-choice#is-this-evidence-that-javascript-is-slow" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>This is evidence that JavaScript can be a slow language to implement a type-checker. To re-purpose a quote from Anders in this <a href="https://github.com/microsoft/typescript-go/discussions/411#discussioncomment-12476218a" target="_blank" rel="noopener noreferrer">'why Go' post</a>:</p>
<blockquote>
<p>No single language is perfect for every task</p>
</blockquote>
<p>The task of type-checking is an intensive one. One way to think of type-checking is that it is taking the program it is checking, emulating executing every line of code, and detecting when the emulation breaks a rule. So the larger a program is, the more work there is to do. When the type-checker is written in a dynamic language this means that it requires another program to run it. For TypeScript this means we effectively have a JavaScript engine, running the TypeScript checker which is running an emulation of another program. It's not a surprise that if the type-checker itself can be run natively that it will run noticeable faster.</p>
<p>Going ten times faster with Go has been attributed to roughly 3.5 times faster by being native, and another speed up comes from being able to run more in parallel (<a href="https://youtu.be/10qowKUW82U?t=538" target="_blank" rel="noopener noreferrer">source</a>).</p>
<p>Considering how much more work it is to execute a dynamic language like JavaScript than to execute a pre-compiled native binary, if anything it's amazing that the switch to native isn't a larger difference. This shows how much work has gone into V8, the JavaScript engine used by Node.js, to execute JavaScript very effectively.</p>
<p>It is possible to write JavaScript programs that do work in parallel today, but the APIs to do this efficiently are things like the low-level <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer" target="_blank" rel="noopener noreferrer"><code>SharedArrayBuffer</code></a>, where you are now dealing with the raw bytes. There is a Stage 2 proposal to add <a href="https://github.com/tc39/proposal-structs" target="_blank" rel="noopener noreferrer">"Shared Structs"</a> to JavaScript - if this progresses it will be interesting to see JavaScript programs more easily benefit from using multiple cores.</p>
<p>There are still many benefits to using JavaScript for other tasks. Just some of the benefits:</p>
<ul>
<li>tend to be smaller in size, due to having higher-level concepts</li>
<li>easier to combine together dynamically, great for 3rd party plugin ecosystems</li>
<li>easier to modify while they are still running, which is great for UI development</li>
<li>are not specific to a particular operating systems and CPU architecture</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://johnnyreilly.com/typescript-go-pragmatic-choice#conclusion" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>The ecosystem demanded a faster TypeScript. Performance cannot be ignored these days. As a consequence, some kind of port of TypeScript was bound to happen. If we accept that view, then what next? Well, the way that the TypeScript team has started executing on the migration fills us with confidence. The TypeScript team are talented, they are pragmatists and their choices are wise.</p>
<p>This is going to Go well.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="credits">Credits<a href="https://johnnyreilly.com/typescript-go-pragmatic-choice#credits" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Thanks to Jake Bailey, of the TypeScript team, for reviewing this piece - greatly appreciated! Also to Josh Goldberg to writing up his classification of what makes up TypeScript; many thanks!</p>
<p><a href="https://blog.logrocket.com/typescript-go-pragmatic-choice/" target="_blank" rel="noopener noreferrer">This post was originally published on LogRocket.</a></p>
]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[npx and Azure Artifacts: the secret CLI delivery mechanism]]></title>
            <link>https://johnnyreilly.com/npx-and-azure-artifacts-the-secret-cli-delivery-mechanism</link>
            <guid>https://johnnyreilly.com/npx-and-azure-artifacts-the-secret-cli-delivery-mechanism</guid>
            <pubDate>Wed, 18 Dec 2024 07:43:47 GMT</pubDate>
            <description><![CDATA[By combining npx and Azure Artifacts, you can deliver your command line application to consumers in a way that is easy to use and secure.]]></description>
            <content:encoded><![CDATA[<p>The <a href="https://docs.npmjs.com/cli/v8/commands/npx" target="_blank" rel="noopener noreferrer"><code>npx</code> command</a> is a powerful tool for running CLI tools shipped as npm packages, without having to install them globally. <code>npx</code> is typically used to run packages on the public npm registry. However, if you have a private npm feed, you can also use <code>npx</code> to run packages available on that feed.</p>
<p>Azure Artifacts is a feature of Azure DevOps that supports publishing npm packages to a feed for consumption. (You might want to read <a href="https://johnnyreilly.com/azure-artifacts-publish-private-npm-package-with-azure-devops">this guide on publishing npm packages to Azure Artifacts</a>.) By combining <code>npx</code> and Azure Artifacts, you can deliver your CLI tool to consumers in a way that's easy to use and secure.</p>
<p><img decoding="async" loading="eager" alt="title image reading &amp;quot;Azure Artifacts: Publish a private npm package with Azure DevOps&amp;quot; with an Azure DevOps and npm logos" src="https://johnnyreilly.com/assets/images/title-image-d0c6ea44c850de93c1f5bc9b5dc3861f.png" width="1600" height="900" fetchpriority="high" class="img_ev3q"></p>
<p>This post shows how to use <code>npx</code> and Azure Artifacts to deliver your private CLI tool to consumers.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="why-is-combining-npx-with-private-npm-feeds-useful">Why is combining <code>npx</code> with private npm feeds useful?<a href="https://johnnyreilly.com/npx-and-azure-artifacts-the-secret-cli-delivery-mechanism#why-is-combining-npx-with-private-npm-feeds-useful" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>If you've ever found a need to deliver a private CLI tool to consumers, you'll know that it can be a challenge.</p>
<p>I work for a large organization and we need to share internal tools with our colleagues. The problem is, that it's hard to get people to install tools. Either you need to provide detailed instructions on how to acquire and install the tool, or you need to work out some kind of internal distribution mechanism. You also have to think about how to update the tool. It's not simple.</p>
<p>By combining <code>npx</code> and Azure Artifacts it becomes much simpler. You can publish your CLI tool to a private npm feed and then consumers can run it with a single command. They don't need to install anything up front (apart from Node.js which they likely already have), and they don't need to worry about updates.</p>
<p>A typical usecase is the one I've mentioned; sharing tools internally in an organisation. But, broader than that, if you want to deliver a private CLI tool to consumers, this is a great way to do it.</p>
<p>We're going to look at how we'd achieve this with Azure Artifacts as the host of the npm package. But, you could use any private npm feed that you have access to.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="publishing-a-package-to-azure-artifacts">Publishing a package to Azure Artifacts<a href="https://johnnyreilly.com/npx-and-azure-artifacts-the-secret-cli-delivery-mechanism#publishing-a-package-to-azure-artifacts" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Before you can use <code>npx</code> to run your CLI tool, you need to publish it to a private npm feed. Here is a guide on <a href="https://johnnyreilly.com/azure-artifacts-publish-private-npm-package-with-azure-devops">how to publish a private npm package with Azure Artifacts</a>. In that example we published a package to a feed called <code>npmrc-script-organization</code> in the <code>johnnyreilly</code> organization of Azure DevOps / Azure Artifacts.</p>
<p>For the sake of this post, we'll say that our package is a CLI tool with the name <code>@johnnyreilly/my-cli-tool</code>.</p>
<p>Remember, an npm package which houses a CLI tool is merely an npm package with a <a href="https://docs.npmjs.com/cli/v10/configuring-npm/package-json#bin" target="_blank" rel="noopener noreferrer"><code>bin</code> entry in the <code>package.json</code></a>. This post is not about how to create a CLI tool, but rather how to deliver one to private consumers. If you would like to see an example of what a CLI tool package looks like, you can check out the <a href="https://github.com/johnnyreilly/azdo-npm-auth" target="_blank" rel="noopener noreferrer"><code>azdo-npm-auth</code> package on GitHub</a>. (In fact, we'll use <code>azdo-npm-auth</code> later in this post - it's an example of a CLI tool published to the <strong>public</strong> npm registry.)</p>
<p>The question now is, how we can run the (private) <code>@johnnyreilly/my-cli-tool</code> package with <code>npx</code>?</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-registry-config-setting-of-npm--npx">The <code>registry</code> config setting of <code>npm</code> / <code>npx</code><a href="https://johnnyreilly.com/npx-and-azure-artifacts-the-secret-cli-delivery-mechanism#the-registry-config-setting-of-npm--npx" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>The secret sauce of running a CLI tool from a private npm feed with <code>npx</code> is the <a href="https://docs.npmjs.com/cli/v8/using-npm/config#registry" target="_blank" rel="noopener noreferrer"><code>registry</code> config setting of <code>npm</code> / <code>npx</code></a>. The <code>registry</code> option allows you to specify the URL of the npm feed that you want to use.</p>
<p>For our case, we grabbed the registry URL from the Azure DevOps UI by clicking on the "Connect to Feed" button in the Azure Artifacts section:</p>
<p><img decoding="async" loading="lazy" alt="Screenshot of &amp;quot;connect to feed&amp;quot; in Azure DevOps" src="https://johnnyreilly.com/assets/images/screenshot-connect-to-feed-9420465335c838a5365e11888ea36437.webp" width="1016" height="118" class="img_ev3q"></p>
<p>When we selected <code>npm</code>, ADO displayed instructions for setting up an <code>.npmrc</code> file for private consumption:</p>
<p><img decoding="async" loading="lazy" alt="Screenshot of the instructions for setting up the .npmrc file" src="https://johnnyreilly.com/assets/images/screenshot-npmrc-e8b46fa648b27148f109ea8fbf6ba807.png" width="2240" height="678" class="img_ev3q"></p>
<p>We don't need to set up an <code>.npmrc</code> file to run the CLI tool with <code>npx</code>, but we do need to grab the registry URL, which we can see in the example <code>.npmrc</code> file above. In our case, the URL is <code>https://pkgs.dev.azure.com/johnnyreilly/_packaging/npmrc-script-organization/npm/registry/</code>. This is the URL of the registry (private npm feed) that we want to use.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="running-the-cli-tool-with-npx">Running the CLI tool with <code>npx</code><a href="https://johnnyreilly.com/npx-and-azure-artifacts-the-secret-cli-delivery-mechanism#running-the-cli-tool-with-npx" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Equipped with the registry URL, we can now run our CLI tool with <code>npx</code>:</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">npx </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">-y</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">--registry</span><span class="token plain"> https://pkgs.dev.azure.com/johnnyreilly/_packaging/npmrc-script-organization/npm/registry/ @johnnyreilly/my-cli-tool</span><br></span></code></pre></div></div>
<p>This command will download the <code>@johnnyreilly/my-cli-tool</code> package from the private npm feed and run it. The <code>--registry</code> option tells <code>npx</code> to use the specified registry URL to download the package and the <code>-y</code> option tells <code>npx</code> to answer "yes" to the installation prompt.</p>
<p>If you need to pass arguments to the CLI tool, you can simply add them to the end of the command as you would with any CLI tool: (I'll put this over multiple lines for readability, but you can run it as a single line)</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">npx </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">-y</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">--registry</span><span class="token plain"> https://pkgs.dev.azure.com/johnnyreilly/_packaging/npmrc-script-organization/npm/registry/ </span><span class="token punctuation" style="color:rgb(255, 255, 255)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  @johnnyreilly/my-cli-tool </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">--arg1</span><span class="token plain"> hello</span><br></span></code></pre></div></div>
<p>There is another way to specify the registry URL, which is to use the <code>npm_config_registry</code> environment variable. This approach is more verbose and is not cross platform (it won't work on Windows). But, if you prefer this approach, you can use this style of command:</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token assign-left variable" style="color:rgb(255, 238, 128)">npm_config_registry</span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain">https://pkgs.dev.azure.com/johnnyreilly/_packaging/npmrc-script-organization/npm/registry/ npx </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">-y</span><span class="token plain"> @johnnyreilly/my-cli-tool</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-about-authentication">What about authentication?<a href="https://johnnyreilly.com/npx-and-azure-artifacts-the-secret-cli-delivery-mechanism#what-about-authentication" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>If you encounter an error like this:</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> error code E401</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> error Unable to authenticate, your authentication token seems to be invalid.</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> error To correct this please try logging </span><span class="token keyword" style="color:rgb(255, 157, 0)">in</span><span class="token plain"> again with:</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> error </span><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> login</span><br></span></code></pre></div></div>
<p>Then npm is telling you to authenticate with the private npm feed / registry. This is because the feed is private and requires authentication. This is a good thing; it means that your package is secure; just as you'd hoped.</p>
<p>You may have your own way of authenticating with the feed. If so, great! Do that now and skip the next section.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="using-azdo-npm-auth-to-authenticate-with-azure-artifacts">Using <code>azdo-npm-auth</code> to authenticate with Azure Artifacts<a href="https://johnnyreilly.com/npx-and-azure-artifacts-the-secret-cli-delivery-mechanism#using-azdo-npm-auth-to-authenticate-with-azure-artifacts" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>On the other hand, if you're using Azure Artifacts (<a href="https://learn.microsoft.com/en-us/azure/devops/organizations/accounts/connect-organization-to-azure-ad?view=azure-devops" target="_blank" rel="noopener noreferrer">and your Azure DevOps organisation is connected with your Azure account / Microsoft Entra ID</a>), you can use <a href="https://github.com/johnnyreilly/azdo-npm-auth" target="_blank" rel="noopener noreferrer"><code>azdo-npm-auth</code></a> to solve your authentication needs. You can run <code>azdo-npm-auth</code> like this:</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">npx </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">-y</span><span class="token plain"> azdo-npm-auth </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">--registry</span><span class="token plain"> https://pkgs.dev.azure.com/johnnyreilly/_packaging/npmrc-script-organization/npm/registry/</span><br></span></code></pre></div></div>
<p>The above command will acquire a PAT (Personal Access Token) from Azure DevOps and use it to create a user <code>.npmrc</code> file, which will be used by <code>npx</code> to authenticate with the feed subsequently.</p>
<p>If you encounter a <code>npm error code E401</code> as you run the <code>azdo-npm-auth</code> command, it's possible that you have a local <code>.npmrc</code> file that is tripping <code>npx</code> up. You can get around that by explicitly passing the <code>--registry</code> of the public npm feed / registry to <code>npx</code>:</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">npx </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">-y</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">--registry</span><span class="token plain"> https://registry.npmjs.org azdo-npm-auth </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">--registry</span><span class="token plain"> https://pkgs.dev.azure.com/johnnyreilly/_packaging/npmrc-script-organization/npm/registry/</span><br></span></code></pre></div></div>
<p>That's right; we're passing the public npm registry to <code>npx</code>'s <code>--registry</code> and we're passing our private npm feed / registry to <code>azdo-npm-auth</code>'s <code>--registry</code>. This gets around the <code>npm error code E401</code> issue.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="running-the-original-command-again">Running the original command again<a href="https://johnnyreilly.com/npx-and-azure-artifacts-the-secret-cli-delivery-mechanism#running-the-original-command-again" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Whichever way you authenticated, you should now be ready. You can now run the original command again; it should work this time. For example:</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">npx </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">-y</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">--registry</span><span class="token plain"> https://pkgs.dev.azure.com/johnnyreilly/_packaging/npmrc-script-organization/npm/registry/ @johnnyreilly/my-cli-tool</span><br></span></code></pre></div></div>
<p>And that's it! You've successfully run your CLI tool from a private npm feed with <code>npx</code>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://johnnyreilly.com/npx-and-azure-artifacts-the-secret-cli-delivery-mechanism#conclusion" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>In this post we've used Azure Artifacts as the host of the npm package, but you could use any npm feed that you have access to. The key is to use the <code>registry</code> option of <code>npm</code> / <code>npx</code> to specify the URL of the npm feed.</p>
<p>By combining <code>npx</code> and private npm feeds, you can deliver your CLI tool to consumers in a way that's easy to use and secure. Consumers can run your tool with a single command, without having to install anything up front. This is a powerful way to share private CLI tools.</p>]]></content:encoded>
            <category>Azure DevOps</category>
            <category>Node.js</category>
        </item>
        <item>
            <title><![CDATA[Node.js, Azure Application Insights, and Fastify]]></title>
            <link>https://johnnyreilly.com/nodejs-azure-appinsights-fastify</link>
            <guid>https://johnnyreilly.com/nodejs-azure-appinsights-fastify</guid>
            <pubDate>Mon, 17 Feb 2025 21:05:48 GMT</pubDate>
            <description><![CDATA[Learn how to set up a Node.js with Azure Application Insights and Fastify.]]></description>
            <content:encoded><![CDATA[<p>If you deploy a Node.js application to Azure, you might want to use Azure Application Insights to monitor it. This post shows you how to set up a Node.js application with Azure Application Insights. It also includes a Fastify plugin to automatically track requests. (Given the out of the box mechanism for tracking requests does not work with Fastify.)</p>
<p><img decoding="async" loading="lazy" alt="title image reading &amp;quot;Node.js, Azure Application Insights, and Fastify&amp;quot; with the relevant logos" src="https://johnnyreilly.com/assets/images/title-image-09b4aad04d867b07bb095e561694e59d.png" width="800" height="450" class="img_ev3q"></p>
<p>This is one of those posts that gathers together information I found doing research and puts it in one place.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="setting-up-azure-application-insights-with-nodejs">Setting up Azure Application Insights with Node.js<a href="https://johnnyreilly.com/nodejs-azure-appinsights-fastify#setting-up-azure-application-insights-with-nodejs" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Setting up Azure Application Insights with Node.js is straightforward. You need to install the <a href="https://github.com/microsoft/ApplicationInsights-node.js" target="_blank" rel="noopener noreferrer"><code>applicationinsights</code></a> package which integrates Node.js and Azure Application Insights:</p>
<div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">install</span><span class="token plain"> applicationinsights </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">--save</span><br></span></code></pre></div></div>
<p>Then configure it with your connection string. You want to do this as early as possible when your application starts, so if there are issues, you know as soon as possible. Here's how you can do this:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> appInsights </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'applicationinsights'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">let</span><span class="token plain"> client</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> appInsights</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">TelemetryClient </span><span class="token operator" style="color:rgb(255, 157, 0)">|</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">undefined</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">process</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token constant" style="color:rgb(250, 208, 0)">APPLICATIONINSIGHTS_CONNECTION_STRING</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// https://github.com/microsoft/applicationinsights-node.js?tab=readme-ov-file#configuration</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  appInsights</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">setup</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">process</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token constant" style="color:rgb(250, 208, 0)">APPLICATIONINSIGHTS_CONNECTION_STRING</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">setAutoCollectRequests</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">setAutoCollectPerformance</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">setAutoCollectExceptions</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">setAutoCollectDependencies</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">setAutoCollectConsole</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// this will enable console logging</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">setAutoCollectPreAggregatedMetrics</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">setSendLiveMetrics</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token boolean" style="color:rgb(255, 98, 140)">false</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">setInternalLogging</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token boolean" style="color:rgb(255, 98, 140)">false</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">enableWebInstrumentation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token boolean" style="color:rgb(255, 98, 140)">false</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">start</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  client </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> appInsights</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">defaultClient</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre></div></div>
<p>The above code does two things of interest:</p>
<ol>
<li>It sets up Azure Application Insights with the connection string you provide. For Node.js applications, the connection string tends to be stored in the environment variable <code>APPLICATIONINSIGHTS_CONNECTION_STRING</code> and I see no reason to deviate from that.</li>
<li>It configures the telemetry client to collect various types of telemetry data. You can see the full list of options <a href="https://github.com/microsoft/applicationinsights-node.js?tab=readme-ov-file#configuration" target="_blank" rel="noopener noreferrer">here</a>. In the example above, all the defaults are used with one exception. That exception is <code>setAutoCollectConsole(true, true)</code> which enables console logging. This is in response to this part of the docs:</li>
</ol>
<blockquote>
<p>Note that by default <code>setAutoCollectConsole</code> is configured to <em>exclude</em> calls to <code>console.log</code>
(and other <code>console</code> methods). By default, only calls to supported third-party loggers
(e.g. <code>winston</code>, <code>bunyan</code>) will be collected. You can change this behavior to <em>include</em> calls
to <code>console</code> methods by using <code>setAutoCollectConsole(true, true)</code>.</p>
</blockquote>
<p>I'm not using a third-party logger in this example, so I want to include calls to <code>console</code> methods.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="setting-up-fastify-with-azure-application-insights">Setting up Fastify with Azure Application Insights<a href="https://johnnyreilly.com/nodejs-azure-appinsights-fastify#setting-up-fastify-with-azure-application-insights" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>If you're not a <a href="https://fastify.dev/" target="_blank" rel="noopener noreferrer">Fastify</a> user you can stop here. But if you are a Fastify user, you may have discovered that <code>setAutoCollectRequests</code> appears not to be be working. There's a <a href="https://github.com/microsoft/ApplicationInsights-node.js/issues/627" target="_blank" rel="noopener noreferrer">GitHub issue to track this</a>, but no discernible sign that it's going to be fixed soon. So, I've created a Fastify plugin to track requests manually based upon <a href="https://github.com/microsoft/ApplicationInsights-node.js/issues/627#issuecomment-2194527018" target="_blank" rel="noopener noreferrer">@stefanpeer's comment</a>:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> FastifyInstance</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> FastifyPluginOptions </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'fastify'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> fp </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'fastify-plugin'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> appInsights </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'applicationinsights'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">declare</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">module</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'fastify'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">interface</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">FastifyRequest</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// here we augment FastifyRequest interface as advised here: https://fastify.dev/docs/latest/Reference/Hooks/#using-hooks-to-inject-custom-properties</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    app</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> start</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">number</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// based on https://github.com/microsoft/ApplicationInsights-node.js/issues/627#issuecomment-2194527018</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> appInsightsPlugin </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">fp</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">async</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">fastify</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> FastifyInstance</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> options</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> FastifyPluginOptions</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token operator" style="color:rgb(255, 157, 0)">!</span><span class="token plain">options</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">client</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token builtin" style="color:rgb(250, 208, 0)">console</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">log</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'App Insights not configured'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> client</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> appInsights</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">TelemetryClient </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> options</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">client</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> urlsToIgnore </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> options</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">urlsToIgnore </span><span class="token operator" style="color:rgb(255, 157, 0)">||</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    fastify</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">addHook</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token string" style="color:rgb(165, 255, 144)">'onRequest'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token keyword" style="color:rgb(255, 157, 0)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">this</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> FastifyInstance</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> request</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> _reply</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// store the start time of the request</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> start </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> Date</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">now</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        request</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">app </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> start </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    fastify</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">addHook</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token string" style="color:rgb(165, 255, 144)">'onResponse'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token keyword" style="color:rgb(255, 157, 0)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">this</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> FastifyInstance</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> request</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> reply</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">urlsToIgnore</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">includes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">request</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">raw</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">url</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> duration </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> Date</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">now</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">-</span><span class="token plain"> request</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">app</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">start</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        client</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">trackRequest</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          name</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> request</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">raw</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">method </span><span class="token operator" style="color:rgb(255, 157, 0)">+</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">' '</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">+</span><span class="token plain"> request</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">raw</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">url</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          url</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> request</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">raw</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">url</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          duration</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> duration</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          resultCode</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> reply</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">statusCode</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">toString</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          success</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> reply</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">statusCode </span><span class="token operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">400</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          properties</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            method</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> request</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">raw</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">method</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            url</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> request</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">raw</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">url</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          measurements</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            duration</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> duration</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre></div></div>
<p>The above code creates a Fastify plugin that tracks requests manually. It does this by adding two hooks to Fastify:</p>
<ul>
<li><code>onRequest</code> - This hook stores the start time of the request.</li>
<li><code>onResponse</code> - This hook calculates the duration of the request and sends it to Azure Application Insights.</li>
</ul>
<p>It also includes an <code>urlsToIgnore</code> option. This is an array of URLs that you don't want to track. For example, you might not want to track requests to the root of your application. You can pass this option when you register the plugin.</p>
<p>To make the code play nicely with TypeScript, we augment the <code>FastifyRequest</code> interface to include a <code>start</code> property. This is where we store the start time of the request that we supply to the <code>onResponse</code> hook and read from the <code>onRequest</code> hook to calculate the duration of the request.</p>
<p>To consume the plugin in a Fastify application, you can do something like this:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> appInsights </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'applicationinsights'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> Fastify</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> FastifyInstance </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'fastify'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> appInsightsPlugin </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'./appInsightsPlugin.js'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">let</span><span class="token plain"> client</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> appInsights</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">TelemetryClient </span><span class="token operator" style="color:rgb(255, 157, 0)">|</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">undefined</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">process</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token constant" style="color:rgb(250, 208, 0)">APPLICATIONINSIGHTS_CONNECTION_STRING</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// https://github.com/microsoft/applicationinsights-node.js?tab=readme-ov-file#configuration</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  appInsights</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">setup</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">process</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token constant" style="color:rgb(250, 208, 0)">APPLICATIONINSIGHTS_CONNECTION_STRING</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">setAutoCollectRequests</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">setAutoCollectPerformance</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">setAutoCollectExceptions</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">setAutoCollectDependencies</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">setAutoCollectConsole</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// this will enable console logging</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">setAutoCollectPreAggregatedMetrics</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">setSendLiveMetrics</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token boolean" style="color:rgb(255, 98, 140)">false</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">setInternalLogging</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token boolean" style="color:rgb(255, 98, 140)">false</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">enableWebInstrumentation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token boolean" style="color:rgb(255, 98, 140)">false</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">start</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  client </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> appInsights</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">defaultClient</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> fastify</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> FastifyInstance </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">Fastify</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  logger</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">fastify</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">register</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">appInsightsPlugin</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> client</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> urlsToIgnore</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token string" style="color:rgb(165, 255, 144)">'/'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre></div></div>
<p>This both sets up Azure Application Insights and registers the Fastify plugin. The <code>urlsToIgnore</code> option is set to <code>['/']</code> which means that requests to the root of the application will not be tracked.</p>
<p>With this in place you'll see traffic in Azure Application Insights:</p>
<p><img decoding="async" loading="lazy" alt="Screenshot of requests showing up in Application Insights" src="https://johnnyreilly.com/assets/images/screenshot-app-insights-requests-9ec422c7488951e303c5f5d1b4aab056.png" width="835" height="588" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://johnnyreilly.com/nodejs-azure-appinsights-fastify#conclusion" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Using Azure Application Insights with Node.js is straightforward. However, if you're using Fastify, you'll need to track requests manually. This post shows you how to do that with a Fastify plugin. I hope you find it useful!</p>]]></content:encoded>
            <category>Azure</category>
            <category>Node.js</category>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[module ws does not provide an export named WebSocketServer]]></title>
            <link>https://johnnyreilly.com/module-ws-does-not-provide-an-export-named-websocketserver</link>
            <guid>https://johnnyreilly.com/module-ws-does-not-provide-an-export-named-websocketserver</guid>
            <pubDate>Tue, 15 Oct 2024 14:21:15 GMT</pubDate>
            <description><![CDATA[Resolve the ws npm issue: SyntaxError: The requested module ws does not provide an export named WebSocketServer]]></description>
            <content:encoded><![CDATA[<p>I use Playwright for testing and mock Web Socket calls with the <a href="https://github.com/websockets/ws" target="_blank" rel="noopener noreferrer">ws</a> package. I recently did an <code>npm upgrade</code> and found myself hitting this error message when I tried to run tests:</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">SyntaxError: The requested module 'ws' does not provide an export named 'WebSocketServer'</span><br></span></code></pre></div></div>
<p>It was caused by the following code:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> WebSocketServer </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"ws"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// this goes bang!</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> mockWsServer </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">WebSocketServer</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> port</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">5000</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre></div></div>
<p>The fix was surprisingly simple to implement but hard to search for.  That's why I'm writing this.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="resolving-the-requested-module-ws-does-not-provide">Resolving "The requested module 'ws' does not provide"...<a href="https://johnnyreilly.com/module-ws-does-not-provide-an-export-named-websocketserver#resolving-the-requested-module-ws-does-not-provide" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>This fix is as simple switching the code to:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> ws </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"ws"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> mockWsServer </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">ws</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Server</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> port</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">5000</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre></div></div>
<p>And that should resolve the issue.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Microsoft Graph client: how to filter by endswith]]></title>
            <link>https://johnnyreilly.com/microsoft-graphclient-filter-endswith-consistencylevel-eventual-header</link>
            <guid>https://johnnyreilly.com/microsoft-graphclient-filter-endswith-consistencylevel-eventual-header</guid>
            <pubDate>Sun, 11 May 2025 13:21:31 GMT</pubDate>
            <description><![CDATA[Learn how to filter by endswith using the Microsoft Graph client. This is a common use case when working with Azure AD groups.]]></description>
            <content:encoded><![CDATA[<p>In this post we're going to look at filtering using an <code>endswith</code> filter with the <a href="https://learn.microsoft.com/en-us/graph/sdks/create-client?tabs=typescript" target="_blank" rel="noopener noreferrer">Microsoft Graph client</a>. This falls into the category of "Advanced query capabilities on Microsoft Entra ID objects" and I found tricky to get working.</p>
<p><img decoding="async" loading="eager" alt="title image reading &amp;quot;Microsoft Graph client: how to filter by endswith&amp;quot; with the relevant logos" src="https://johnnyreilly.com/assets/images/title-image-1afae25123c0c6e5a4c154eece7cc110.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<p>Performing an <code>endsWith</code> or similar filter shouldn't be difficult. But the method of how to do so isn't obvious. If you've ever encountered a message like this:</p>
<blockquote>
<p>Operator 'endsWith' is not supported because the 'ConsistencyLevel<!-- -->:eventual<!-- -->' header is missing. Refer to <a href="https://aka.ms/graph-docs/advanced-queries" target="_blank" rel="noopener noreferrer">https://aka.ms/graph-docs/advanced-queries</a> for more information</p>
</blockquote>
<p>Then this blog post is for you.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="related-posts">Related posts<a href="https://johnnyreilly.com/microsoft-graphclient-filter-endswith-consistencylevel-eventual-header#related-posts" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>I've written before about the Microsoft Graph client, and how to use it with Azure AD groups. You can find those posts here:</p>
<ul>
<li><a href="https://johnnyreilly.com/azure-ad-claims-static-web-apps-azure-functions">Azure AD Claims with Static Web Apps and Azure Functions</a></li>
<li><a href="https://johnnyreilly.com/graph-api-ad-users-group-name-ids-csharp-sdk">Graph API: getting users Active Directory group names and ids with the C# SDK</a></li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="advanced-query-capabilities-on-microsoft-entra-id-objects">Advanced query capabilities on Microsoft Entra ID objects<a href="https://johnnyreilly.com/microsoft-graphclient-filter-endswith-consistencylevel-eventual-header#advanced-query-capabilities-on-microsoft-entra-id-objects" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>First let's quote from the documentation around <a href="https://learn.microsoft.com/en-us/graph/aad-advanced-queries?tabs=javascript" target="_blank" rel="noopener noreferrer">advanced query capabilities on Microsoft Entra ID objects</a>:</p>
<blockquote>
<p>Microsoft Graph supports advanced query capabilities on various Microsoft Entra ID objects, also called directory objects, to help you efficiently access data. For example, the addition of <strong>not</strong> (<code>not</code>), <strong>not equals</strong> (<code>ne</code>), and <strong>ends with</strong> (<code>endsWith</code>) operators on the <code>$filter</code> query parameter.</p>
</blockquote>
<p>Let's say we have a need for the <code>endsWith</code> operator or similar, for example: when querying for Entra ID / Azure AD groups. We may want to filter for groups that end with a certain string. And you can do that, but it does not work by default.</p>
<p>This is quite disappointing, and the documentation explains why this is the case:</p>
<blockquote>
<p>The Microsoft Graph query engine uses an index store to fulfill query requests. To add support for additional query capabilities on some properties, those properties might be indexed in a separate store. This separate indexing improves query performance. However, these advanced query capabilities aren't available by default but, the requestor must set the <code>ConsistencyLevel</code> header to eventual and, except for <code>$search</code>, use the <code>$count</code> query parameter. The <code>ConsistencyLevel</code> header and <code>$count</code> are referred to as advanced query parameters.</p>
</blockquote>
<p>I find this quite surprising. Essentially, the implementation of the <code>endsWith</code> and similar operators are bleeding through into the API design. This is quite clunky, and not something that I would expect from a modern API. It feels like a design decision that is more about performance than usability. Even if you do want to discourage the use of the <code>endsWith</code> operator, it would be nice to have a more user-friendly way of doing so. For example, you could have a separate endpoint for advanced queries, or simple query parameter that enables advanced queries without having to set headers and a seemingly arbitrary query parameter.</p>
<p>However, the good news is that it is possible to use the <code>endsWith</code> operator (and others like it) with the Microsoft Graph client. The bad news is the way you have to do it.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="failing-to-use-the-endswith-operator-with-the-microsoft-graph-client">Failing to use the <code>endsWith</code> operator with the Microsoft Graph client<a href="https://johnnyreilly.com/microsoft-graphclient-filter-endswith-consistencylevel-eventual-header#failing-to-use-the-endswith-operator-with-the-microsoft-graph-client" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>We'll make what we're looking into concrete in this post, by having a meaningful example of querying the Graph client. We'll query for Entra ID / Azure AD groups. First let's see what a broken example looks like:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> Client</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">type</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">PageCollection</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@microsoft/microsoft-graph-client'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">getAzureADGroups</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  graphClient</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> Client</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">Promise</span><span class="token operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token plain">PageCollection</span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> graphClient</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">api</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'/groups'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">filter</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">startsWith(displayName, 'startfilter-')</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">filter</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">endsWith(displayName, '-endfilter')</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">select</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token string" style="color:rgb(165, 255, 144)">'displayName'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'id'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">get</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">as</span><span class="token plain"> PageCollection</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre></div></div>
<p>The above code is intended to query for Azure AD groups that start with <code>startfilter-</code> and end with <code>-endfilter</code>. However, it will fail with this error:</p>
<blockquote>
<p>Operator 'endsWith' is not supported because the 'ConsistencyLevel<!-- -->:eventual<!-- -->' header is missing. Refer to <a href="https://aka.ms/graph-docs/advanced-queries" target="_blank" rel="noopener noreferrer">https://aka.ms/graph-docs/advanced-queries</a> for more information</p>
</blockquote>
<p>This error is at least helpful in that it points you to the documentation. But it doesn't mention the <code>$count</code> query parameter. And it doesn't suggest how you might use the query parameter and header with the Microsoft Graph client.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="successfully-using-the-endswith-operator-with-the-microsoft-graph-client">Successfully using the <code>endsWith</code> operator with the Microsoft Graph client<a href="https://johnnyreilly.com/microsoft-graphclient-filter-endswith-consistencylevel-eventual-header#successfully-using-the-endswith-operator-with-the-microsoft-graph-client" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>To use the <code>endsWith</code> operator with the Microsoft Graph client, you need to set the <code>ConsistencyLevel</code> header to <code>eventual</code> and use the <code>$count</code> query parameter as you make your call.</p>
<p>I pieced together how to do this with the Microsoft Graph client based upon these two pieces of documentation:</p>
<ul>
<li><a href="https://learn.microsoft.com/en-us/graph/sdks/create-requests?tabs=typescript#use-http-headers-to-control-request-behavior" target="_blank" rel="noopener noreferrer">https://learn.microsoft.com/en-us/graph/sdks/create-requests?tabs=typescript#use-http-headers-to-control-request-behavior</a></li>
<li><a href="https://learn.microsoft.com/en-us/graph/sdks/create-requests?tabs=typescript#provide-custom-query-parameters" target="_blank" rel="noopener noreferrer">https://learn.microsoft.com/en-us/graph/sdks/create-requests?tabs=typescript#provide-custom-query-parameters</a></li>
</ul>
<p>Based upon this, I was able to produce the following code:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> Client</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">type</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">PageCollection</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@microsoft/microsoft-graph-client'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">getAzureADGroups</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  graphClient</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> Client</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">Promise</span><span class="token operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token plain">PageCollection</span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> graphClient</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">api</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'/groups'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">query</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      $count</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'true'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">header</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'ConsistencyLevel'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'eventual'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">filter</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">startsWith(displayName, 'startfilter-')</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">filter</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">endsWith(displayName, '-endfilter')</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">select</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token string" style="color:rgb(165, 255, 144)">'displayName'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'id'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">get</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">as</span><span class="token plain"> PageCollection</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre></div></div>
<p>This code sets the <code>ConsistencyLevel</code> header to <code>eventual</code> and uses the <code>$count</code> query parameter. This allows you to use the <code>endsWith</code> operator in your query. It works as expected and returns the groups that start with <code>startfilter-</code> and end with <code>-endfilter</code>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="a-complete-example">A complete example<a href="https://johnnyreilly.com/microsoft-graphclient-filter-endswith-consistencylevel-eventual-header#a-complete-example" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>To make this a complete example, let's look at how you might use this in a real application. We'll create a function that retrieves Azure AD groups using the Microsoft Graph client. This function will use the <code>endsWith</code> operator and the <code>ConsistencyLevel</code> header.</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> DefaultAzureCredential </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@azure/identity'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> Client</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">type</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">PageCollection</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@microsoft/microsoft-graph-client'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">interface</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">AzureADGroup</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/** eg name-of-group */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  displayName</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/** eg GUID-GUID-GUID-GUID-GUID */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">getMyAzureADGroups</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">Promise</span><span class="token operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token plain">AzureADGroup</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">getAzureADGroupsImpl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token function-variable function" style="color:rgb(250, 208, 0)">queryProvider</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">async</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">graphClient</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> Client</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> graphClient</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">api</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'/me/memberOf'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">select</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token string" style="color:rgb(165, 255, 144)">'displayName'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'id'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">get</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">as</span><span class="token plain"> PageCollection</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">getAzureADGroups</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">Promise</span><span class="token operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token plain">AzureADGroup</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">getAzureADGroupsImpl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token function-variable function" style="color:rgb(250, 208, 0)">queryProvider</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">async</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">graphClient</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> Client</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> graphClient</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">api</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'/groups'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">query</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          $count</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'true'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">header</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'ConsistencyLevel'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'eventual'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">filter</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">startsWith(displayName, 'startfilter-')</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">filter</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">endsWith(displayName, '-endfilter')</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">select</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token string" style="color:rgb(165, 255, 144)">'displayName'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'id'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">get</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">as</span><span class="token plain"> PageCollection</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">getAzureADGroupsImpl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  queryProvider</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token function-variable function" style="color:rgb(250, 208, 0)">queryProvider</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">graphClient</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> Client</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">Promise</span><span class="token operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token plain">PageCollection</span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">Promise</span><span class="token operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token plain">AzureADGroup</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// Use DefaultAzureCredential to authenticate</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> credential </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">DefaultAzureCredential</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// Initialize the Graph client</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> graphClient </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> Client</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">initWithMiddleware</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    authProvider</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token function-variable function" style="color:rgb(250, 208, 0)">getAccessToken</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">async</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> tokenResponse </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> credential</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">getToken</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token string" style="color:rgb(165, 255, 144)">'https://graph.microsoft.com/.default'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> tokenResponse</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">token</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> groups</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> AzureADGroup</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">try</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">let</span><span class="token plain"> response </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">queryProvider</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">graphClient</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">while</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">response</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">value</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">length </span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">0</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token keyword" style="color:rgb(255, 157, 0)">for</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> group </span><span class="token keyword" style="color:rgb(255, 157, 0)">of</span><span class="token plain"> response</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">value </span><span class="token keyword" style="color:rgb(255, 157, 0)">as</span><span class="token plain"> AzureADGroup</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// {</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">//   '@odata.type': '#microsoft.graph.group',</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">//   displayName: 'azure-our-engteam',</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">//   id: 'GUID-GUID-GUID-GUID-GUID'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// }</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        groups</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">push</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">group</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">response</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token string" style="color:rgb(165, 255, 144)">'@odata.nextLink'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        response </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> graphClient</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">api</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">response</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token string" style="color:rgb(165, 255, 144)">'@odata.nextLink'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">get</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">as</span><span class="token plain"> PageCollection</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">else</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">break</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> data</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> groups </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">err</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> errorMessage </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">Error listing Entra ID / Azure AD groups: </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">err </span><span class="token template-string interpolation keyword" style="color:rgb(255, 157, 0)">instanceof</span><span class="token template-string interpolation"> </span><span class="token template-string interpolation class-name" style="color:rgb(250, 208, 0)">Error</span><span class="token template-string interpolation"> </span><span class="token template-string interpolation operator" style="color:rgb(255, 157, 0)">?</span><span class="token template-string interpolation"> err</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation">message </span><span class="token template-string interpolation operator" style="color:rgb(255, 157, 0)">:</span><span class="token template-string interpolation"> </span><span class="token template-string interpolation string" style="color:rgb(165, 255, 144)">'UNKNOWN'</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token builtin" style="color:rgb(250, 208, 0)">console</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">error</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">errorMessage</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">throw</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">Error</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">errorMessage</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> cause</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> err </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre></div></div>
<p>This code has an implementation method <code>getAzureADGroupsImpl</code> that takes a <code>queryProvider</code> function. This function is responsible for providing the query to the Microsoft Graph client. The <code>getAzureADGroupsImpl</code> function handles the pagination of the results. It uses the <code>@odata.nextLink</code> property to retrieve the next page of results until there are no more pages left.</p>
<p>The <code>getAzureADGroups</code> and <code>getMyAzureADGroups</code> functions call this <code>getAzureADGroupsImpl</code> function method with their respective queries.</p>
<p>The <code>getMyAzureADGroups</code> function queries for the groups that the signed-in user is a member of. It does <strong>not</strong> use the <code>endsWith</code> operator. It simply queries for all groups that the user is a member of. This will work just fine without the <code>ConsistencyLevel</code> header or the <code>$count</code> query parameter.</p>
<p>The <code>getAzureADGroups</code> function queries for all groups that start with <code>startfilter-</code> and end with <code>-endfilter</code>. It uses the <code>endsWith</code> operator and consequently needs the <code>ConsistencyLevel</code> header and the <code>$count</code> query parameter. If it doesn't have these, it will fail with the error we saw earlier.</p>
<p>This code is a complete example of how to use the Microsoft Graph client to query for Azure AD groups using the <code>endsWith</code> operator. It handles authentication, pagination, and error handling. You can use this code as a starting point for your own applications that need to query Azure AD groups using the Microsoft Graph client.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://johnnyreilly.com/microsoft-graphclient-filter-endswith-consistencylevel-eventual-header#conclusion" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>In this post, we looked at how to use the <code>endsWith</code> operator (and similar "advanced query" operators) with the Microsoft Graph client. We saw that it is possible to use advanced query operators with the Microsoft Graph client, but it requires setting the <code>ConsistencyLevel</code> header to <code>eventual</code> and using the <code>$count</code> query parameter.</p>]]></content:encoded>
            <category>Microsoft Graph</category>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[Introducing azdo-npm-auth (Azure DevOps npm auth)]]></title>
            <link>https://johnnyreilly.com/introducing-azdo-npm-auth</link>
            <guid>https://johnnyreilly.com/introducing-azdo-npm-auth</guid>
            <pubDate>Sun, 08 Dec 2024 08:21:50 GMT</pubDate>
            <description><![CDATA[Azure DevOps npm auth eases setting up local authentication to Azure DevOps npm feeds, particularly for non Windows users.]]></description>
            <content:encoded><![CDATA[<p>Azure DevOps has a feature called Azure Artifacts that supports publishing npm packages to a feed for consumption. Typically those npm packages are intended to be consumed by a restricted audience. To install a package published to a private feed you need to configure authentication, and for non Windows users this is a convoluted process.</p>
<p><img decoding="async" loading="eager" alt="title image reading &amp;quot;Introducing Azure DevOps npm auth&amp;quot; with an Azure DevOps and npm logos" src="https://johnnyreilly.com/assets/images/title-image-20d2fea1b99047c4bfb7a058a01ab1fb.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<p><a href="https://github.com/johnnyreilly/azdo-npm-auth" target="_blank" rel="noopener noreferrer"><code>azdo-npm-auth</code></a> exists to ease the setting up of local authentication to Azure DevOps npm feeds, particularly for non Windows users.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-problem-are-we-solving">What problem are we solving?<a href="https://johnnyreilly.com/introducing-azdo-npm-auth#what-problem-are-we-solving" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Consider the onboarding process for a Windows user for consuming an Azure Artifact npm feed:</p>
<p><img decoding="async" loading="lazy" alt="screenshot of the onboarding process for Windows users" src="https://johnnyreilly.com/assets/images/screenshot-onboarding-with-windows-f829c5e94b4ccdc17ec2c9c325cfaca5.png" width="2168" height="592" class="img_ev3q"></p>
<p>Now consider the onboarding process for a non Windows user:</p>
<p><img decoding="async" loading="lazy" alt="screenshot of the onboarding process for non Windows users" src="https://johnnyreilly.com/assets/images/screenshot-onboarding-with-other-f763bbba47f0835be032ce1bdeb202bb.png" width="2168" height="1606" class="img_ev3q"></p>
<p>As we can see, there is a significant difference in the onboarding experience between operating systems. Windows users can use a tool named <a href="https://www.npmjs.com/package/vsts-npm-auth" target="_blank" rel="noopener noreferrer"><code>vsts-npm-auth</code></a> which automates onboarding. Non Windows users have a longer road to follow. The instructions walk through manually creating an <code>.npmrc</code> file in a users home directory which contains information including a base 64 encoded Azure DevOps Personal Access Token with the Packaging read and write scopes. It is tedious to do.</p>
<p><code>azdo-npm-auth</code> aims to automate the toil, and make the onboarding experience for non Windows users as simple as it is for Windows users.</p>
<p>There is an official package named <a href="https://github.com/microsoft/ado-npm-auth" target="_blank" rel="noopener noreferrer"><code>ado-npm-auth</code></a>. However, <a href="https://github.com/microsoft/ado-npm-auth/issues/50" target="_blank" rel="noopener noreferrer">due to issues I experienced in using the <code>ado-npm-auth</code> package</a>, I found myself creating <code>azdo-npm-auth</code>. By the way, the package was briefly named <code>ado-npm-auth-lite</code>; I renamed it as I felt <code>azdo-npm-auth</code> was a better name.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="when-do-i-need-to-run-azdo-npm-auth">When do I need to run <code>azdo-npm-auth</code>?<a href="https://johnnyreilly.com/introducing-azdo-npm-auth#when-do-i-need-to-run-azdo-npm-auth" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Should you encounter the following message when you try to <code>npm i</code>:</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> error code E401</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> error Unable to authenticate, your authentication token seems to be invalid.</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> error To correct this please try logging </span><span class="token keyword" style="color:rgb(255, 157, 0)">in</span><span class="token plain"> again with:</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> error </span><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> login</span><br></span></code></pre></div></div>
<p>OR</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> error code E401</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> error Incorrect or missing password.</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> error If you were trying to login, change your password, create an</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> error authentication token or </span><span class="token builtin class-name" style="color:rgb(250, 208, 0)">enable</span><span class="token plain"> two-factor authentication </span><span class="token keyword" style="color:rgb(255, 157, 0)">then</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> error that means you likely typed your password </span><span class="token keyword" style="color:rgb(255, 157, 0)">in</span><span class="token plain"> incorrectly.</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> error Please try again, or recover your password at:</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> error   https://www.npmjs.com/forgot</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> error</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> error If you were doing some other operation </span><span class="token keyword" style="color:rgb(255, 157, 0)">then</span><span class="token plain"> your saved credentials are</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> error probably out of date. To correct this please try logging </span><span class="token keyword" style="color:rgb(255, 157, 0)">in</span><span class="token plain"> again with:</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> error   </span><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> login</span><br></span></code></pre></div></div>
<p>That means either:</p>
<ul>
<li>You have no user <code>.npmrc</code> file <strong>OR</strong></li>
<li>The token in your user <code>.npmrc</code> file is out of date</li>
</ul>
<p>In either case, running <code>azdo-npm-auth</code> should resolve the issue. But the way you run it is important. To get <code>azdo-npm-auth</code> to create the necessary user <code>.npmrc</code> file for local development, run the following command:</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">npx </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">-y</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">--registry</span><span class="token plain"> https://registry.npmjs.org azdo-npm-auth</span><br></span></code></pre></div></div>
<p>It is possible to use environment variables to control the <code>registry</code> setting as well; consider the following (non-Windows compatible) example:</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token assign-left variable" style="color:rgb(255, 238, 128)">npm_config_registry</span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain">https://registry.npmjs.org npx azdo-npm-auth</span><br></span></code></pre></div></div>
<p>You might be wondering what the <code>--registry https://registry.npmjs.org</code> part is for. It is a way to ensure that the <code>npx</code> command uses the <strong>public</strong> npm registry to install <code>azdo-npm-auth</code>. Without this, you might encounter a <code>npm error code E401</code> error like those above.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="configuration">Configuration<a href="https://johnnyreilly.com/introducing-azdo-npm-auth#configuration" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p><code>azdo-npm-auth</code> requires that a project <code>.npmrc</code> file exists in order that it can acquire the information to run.</p>
<p>There is an optional <code>config</code> parameter which allows selection of a specific project <code>.npmrc</code> file. If the <code>config</code> parameter is not supplied, <code>azdo-npm-auth</code> will default to use the <code>.npmrc</code> in the current project directory.</p>
<p>Should you not have one of these files already, there will be information in your Azure DevOps Artifacts section for connecting to the npm feed around creating a project <code>.npmrc</code> file. The required file should look something like this:</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token assign-left variable" style="color:rgb(255, 238, 128)">registry</span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain">https://pkgs.dev.azure.com/johnnyreilly/_packaging/npmrc-script-organization/npm/registry/</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">always-auth</span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain">true</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="authenticating-to-azure">Authenticating to Azure<a href="https://johnnyreilly.com/introducing-azdo-npm-auth#authenticating-to-azure" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>If you would like <code>azdo-npm-auth</code> to acquire a token on your behalf, then it requires that your <a href="https://learn.microsoft.com/en-us/azure/devops/organizations/accounts/connect-organization-to-azure-ad?view=azure-devops" target="_blank" rel="noopener noreferrer">Azure DevOps organisation is connected with your Azure account / Microsoft Entra ID</a>. Then, assuming you are authenticated with Azure, it can acquire an Azure DevOps Personal Access Token on your behalf. To authenticate, run <code>az login</code>. <a href="https://learn.microsoft.com/en-us/cli/azure/install-azure-cli" target="_blank" rel="noopener noreferrer">If you need to install the Azure CLI, follow these instructions</a>. It is not necessary to run <code>az login</code> if you are already authenticated with Azure.</p>
<p>If you would like to acquire a PAT token manually, there is a <code>--pat</code> option for that very circumstance.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="integration-with-packagejson">Integration with <code>package.json</code><a href="https://johnnyreilly.com/introducing-azdo-npm-auth#integration-with-packagejson" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="using-a-preinstall-script">Using a <code>preinstall</code> script<a href="https://johnnyreilly.com/introducing-azdo-npm-auth#using-a-preinstall-script" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>A great way to integrate <code>azdo-npm-auth</code> is by using it in a <code>preinstall</code> script in your <code>package.json</code>:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token property" style="color:rgb(255, 157, 0)">"scripts"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"preinstall"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"npx --yes azdo-npm-auth --config ./subdirectory-with-another-package-json/.npmrc"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><br></span></code></pre></div></div>
<p>The <code>--yes</code> flag above simply skips having npm challenge the user as to whether to download the package.</p>
<p>However, as you're probably noticing, this requires having multiple <code>package.json</code>s and only having the <code>.npmrc</code> file in the nested one. Assuming that works for you, brilliant. It may not - no worries. We'll talk about that in a second.</p>
<p>With the above <code>preinstall</code> script in place, when the user performs <code>npm i</code> or similar, before attempting to install, the relevant user <code>.npmrc</code> file will be put in place so that installation just works‚Ñ¢Ô∏è. This is a <strong>great</strong> developer experience.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="using-an-auth-script">Using an <code>auth</code> script<a href="https://johnnyreilly.com/introducing-azdo-npm-auth#using-an-auth-script" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>If the complexity of nested <code>package.json</code>s doesn't work for you, we generally advise setting up a script like the one below:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token property" style="color:rgb(255, 157, 0)">"scripts"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"auth"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"npx -y --registry https://registry.npmjs.org azdo-npm-auth"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><br></span></code></pre></div></div>
<p>And running <code>npm run auth</code> when a <code>npm error code E401</code> is encountered. (Your script doesn't have to be called <code>auth</code> necessarily - if you like you could call it <code>fix-code-e401</code>, or something else entirely.)</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-about-ci">What about CI?<a href="https://johnnyreilly.com/introducing-azdo-npm-auth#what-about-ci" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>You might be worried about <code>azdo-npm-auth</code> trying to create user <code>.npmrc</code> files when running CI builds. Happily this does not happen; it detects whether it is running in a CI environment and does <strong>not</strong> create a user <code>.npmrc</code> file in that case.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="summary">Summary<a href="https://johnnyreilly.com/introducing-azdo-npm-auth#summary" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>If you're a Mac or a Linux user, hopefully <code>azdo-npm-auth</code> can significantly ease the friction experienced doing local development with Azure DevOps npm feeds. You can see the <a href="https://github.com/johnnyreilly/azdo-npm-auth" target="_blank" rel="noopener noreferrer">project code on GitHub here</a>.</p>]]></content:encoded>
            <category>Azure DevOps</category>
            <category>Node.js</category>
        </item>
        <item>
            <title><![CDATA[Static Typing for MUI React Data Grid Columns]]></title>
            <link>https://johnnyreilly.com/static-typing-for-mui-react-data-grid-columns</link>
            <guid>https://johnnyreilly.com/static-typing-for-mui-react-data-grid-columns</guid>
            <pubDate>Tue, 08 Oct 2024 10:33:54 GMT</pubDate>
            <description><![CDATA[The MUI React Data Grid can be used with static typing to ensure the columns you pass to the component are correct. This post will show you how to do that.]]></description>
            <content:encoded><![CDATA[<p>The <a href="https://mui.com/x/react-data-grid/" target="_blank" rel="noopener noreferrer">MUI X Data Grid</a> is a really handy component for rendering tabular data in React applications. But one thing that is not immediately obvious is how to use TypeScript to ensure that the columns you pass to the component are correct. This post will show you how to do that.</p>
<p><img decoding="async" loading="eager" alt="title image reading &amp;quot;Static Typing for MUI React Data Grid Columns&amp;quot; with a TypeScript logo and MUI logos" src="https://johnnyreilly.com/assets/images/title-image-b1343f3a033f2c8fa62e544fa2ae894d.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<p>Why does it matter? Well look at this screenshot of the Data Grid with incorrect column names:</p>
<p><img decoding="async" loading="lazy" alt="screenshot of a grid with incorrect columns" src="https://johnnyreilly.com/assets/images/screenshot-incorrect-columns-272e7f87c6f465e5f98c0c4453958089.png" width="2600" height="870" class="img_ev3q"></p>
<p>Interestingly, the <code>User</code> column is blank. Given the code, we'd probably expect to see a users name there.</p>
<p>Let's take look at the code for that screenshot:</p>
<div class="language-tsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-tsx codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports operator" style="color:rgb(255, 157, 0)">*</span><span class="token imports"> </span><span class="token imports keyword module" style="color:rgb(255, 157, 0)">as</span><span class="token imports"> </span><span class="token imports maybe-class-name">React</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'react'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">Box</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/material/Box'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">DataGrid</span><span class="token imports"> </span><span class="token imports punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/x-data-grid'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">default</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">BasicColumnsGrid</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> rows </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">1</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      username</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@MUI'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      age</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">20</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> columns </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> field</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'user-name'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> headerName</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'User'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> field</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'age'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> headerName</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'Age'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">sx</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> height</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript number" style="color:rgb(255, 98, 140)">250</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> width</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript string" style="color:rgb(165, 255, 144)">'100%'</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">DataGrid</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">columns</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">columns</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">rows</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">rows</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre></div></div>
<p>The issue is that the <code>field</code> property in the column definition is incorrect. It should be <code>username</code> not <code>user-name</code>. We know that, but the TypeScript compiler doesn't. And the Data Grid doesn't appear to know that either; there's no error in the console surfacing an issue.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="using-typescript-to-extract-type-information-from-the-rows">Using TypeScript to extract type information from the rows<a href="https://johnnyreilly.com/static-typing-for-mui-react-data-grid-columns#using-typescript-to-extract-type-information-from-the-rows" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>It's possible to use TypeScript to ensure that the columns you pass to the Data Grid are valid. What we want, is TypeScript to say: "Hey, you've passed the wrong column name to the Data Grid" (in it's own inimitable way). We can do that.</p>
<p>What we want to do, is use TypeScript to analyse the <code>rows</code> array and extract type information. We can do that like so:</p>
<div class="language-diff codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-diff codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> const rows = [</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   {</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">     id: 1,</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">     username: '@MUI',</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">     age: 20,</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   },</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> ];</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">  type ValidRow = (typeof rows)[number];</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">  type ValidField = keyof ValidRow;</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">  type ColumnWithValidField = { field: ValidField };</span><br></span></code></pre></div></div>
<p>The <code>ValidRow</code> type is the type of an element in the <code>rows</code> array:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">type</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">ValidRow</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">number</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  username</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  age</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">number</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre></div></div>
<p>The <code>ValidField</code> type is derived from the <code>ValidRow</code> type; it is the keys of the <code>ValidRow</code> type. So, the <code>ValidField</code> type is:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">type</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">ValidField</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'id'</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">|</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'username'</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">|</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'age'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre></div></div>
<p>Finally, we can create a type that represents a column with a valid field in the form of the <code>ColumnWithValidField</code> type:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">type</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">ColumnWithValidField</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  field</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'id'</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">|</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'username'</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">|</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'age'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre></div></div>
<p>The type above says explicitly that the <code>field</code> property of a column must be one of the keys of the <code>ValidRow</code> type. This is the type information we require to ensure that the columns we pass to the Data Grid are correct.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="applying-the-type-information-to-the-columns">Applying the type information to the columns<a href="https://johnnyreilly.com/static-typing-for-mui-react-data-grid-columns#applying-the-type-information-to-the-columns" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Now we have this type information, we can then use that information to type the <code>columns</code> array. We can do that like so:</p>
<div class="language-diff codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-diff codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> const columns = [</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   { field: 'username', headerName: 'User' },</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   { field: 'age', headerName: 'Age' },</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token deleted-sign deleted prefix deleted" style="color:rgba(239, 83, 80, 0.56)">-</span><span class="token deleted-sign deleted line" style="color:rgba(239, 83, 80, 0.56)">  ];</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token deleted-sign deleted line" style="color:rgba(239, 83, 80, 0.56)"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">  ] satisfies GridColDef&lt;ValidRow&gt;[] &amp; ColumnWithValidField[];</span><br></span></code></pre></div></div>
<p>Whereas previously the <code>columns</code> array was not explicitly typed. Now it is with the <code>satisfies</code> operator. (For an excellent explanation of <code>satifies</code> read <a href="https://www.totaltypescript.com/clarifying-the-satisfies-operator" target="_blank" rel="noopener noreferrer">Matt Pocock's post</a>.)</p>
<p>We are saying that <code>columns</code> is an array of <code>GridColDef&lt;ValidRow&gt;</code> <strong>and</strong> that the <code>field</code> property of each element in the array is definitely one of the provided fields in the <code>rows</code> data. We need both of these conditions to be true:</p>
<ul>
<li>Using <code>GridColDef&lt;ValidRow&gt;</code> ensures that the general columns schema matches what the Data Grid component needs.</li>
<li>Using <code>ColumnWithValidField</code> ensures that the <code>field</code> property of each column is correct; based upon the <code>rows</code> field.</li>
</ul>
<p>Let's validate this approach works, trying to use our buggy input with this new approach:</p>
<p><img decoding="async" loading="lazy" alt="screenshot of a grid with incorrect columns and TypeScript surfacing the issue" src="https://johnnyreilly.com/assets/images/screenshot-incorrect-columns-with-helpful-error-9bfd0e2a98ffbb73bbf44f329eef9dff.png" width="2600" height="1024" class="img_ev3q"></p>
<p>We can now see an error from the TypeScript compiler in VS Code: <code>Type '"user-name"' is not assignable to type '"id" | "username" | "age"'. Did you mean '"username"'?</code> It's even an actionable error, suggesting the correct field name!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="putting-it-all-together">Putting it all together<a href="https://johnnyreilly.com/static-typing-for-mui-react-data-grid-columns#putting-it-all-together" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Here's the full code (with the error corrected):</p>
<div class="language-tsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-tsx codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports operator" style="color:rgb(255, 157, 0)">*</span><span class="token imports"> </span><span class="token imports keyword module" style="color:rgb(255, 157, 0)">as</span><span class="token imports"> </span><span class="token imports maybe-class-name">React</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'react'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">Box</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/material/Box'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">DataGrid</span><span class="token imports punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token imports"> </span><span class="token imports maybe-class-name">GridColDef</span><span class="token imports"> </span><span class="token imports punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/x-data-grid'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">default</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">BasicColumnsGrid</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> rows </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">1</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      username</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@MUI'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      age</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">20</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">type</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">ValidRow</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">typeof</span><span class="token plain"> rows</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token builtin" style="color:rgb(250, 208, 0)">number</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">type</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">ValidField</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">keyof</span><span class="token plain"> </span><span class="token maybe-class-name">ValidRow</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">type</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">ColumnWithValidField</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> field</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">ValidField</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> columns </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> field</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'username'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> headerName</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'User'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> field</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'age'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> headerName</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'Age'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> satisfies </span><span class="token maybe-class-name">GridColDef</span><span class="token operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token maybe-class-name">ValidRow</span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">&amp;</span><span class="token plain"> </span><span class="token maybe-class-name">ColumnWithValidField</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">sx</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> height</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript number" style="color:rgb(255, 98, 140)">250</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> width</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript string" style="color:rgb(165, 255, 144)">'100%'</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">DataGrid</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">columns</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">columns</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">rows</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">rows</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre></div></div>
<p>With this approach, you can be confident that the columns you pass to the Data Grid are correct. This is a great way to ensure that your code is correct and that you are using the Data Grid component as intended.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-importance-of-memoizing-columns">The importance of memoizing columns<a href="https://johnnyreilly.com/static-typing-for-mui-react-data-grid-columns#the-importance-of-memoizing-columns" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>The <a href="https://mui.com/x/react-data-grid/column-definition/" target="_blank" rel="noopener noreferrer">MUI docs say</a>:</p>
<blockquote>
<p>The <code>columns</code> prop should keep the same reference between two renders. The columns are designed to be definitions, to never change once the component is mounted. Otherwise, you take the risk of losing elements like column width or order. You can create the array outside the render function or memoize it.</p>
</blockquote>
<p>My own experience has been that I noticed no ill effects on my own use cases by <strong>not</strong> memoizing. When I asked the question I was advised this was still important <a href="https://github.com/mui/mui-x/issues/14862" target="_blank" rel="noopener noreferrer">when you use a big number of columns and rows</a>. To apply that to the example we've been working with, it would look like this:</p>
<div class="language-tsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-tsx codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports operator" style="color:rgb(255, 157, 0)">*</span><span class="token imports"> </span><span class="token imports keyword module" style="color:rgb(255, 157, 0)">as</span><span class="token imports"> </span><span class="token imports maybe-class-name">React</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'react'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">Box</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/material/Box'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">DataGrid</span><span class="token imports punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token imports"> </span><span class="token imports maybe-class-name">GridColDef</span><span class="token imports"> </span><span class="token imports punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/x-data-grid'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">default</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">BasicColumnsGrid</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> rows </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">1</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      username</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@MUI'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      age</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">20</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">type</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">ValidRow</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">typeof</span><span class="token plain"> rows</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token builtin" style="color:rgb(250, 208, 0)">number</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">type</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">ValidField</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">keyof</span><span class="token plain"> </span><span class="token maybe-class-name">ValidRow</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">type</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">ColumnWithValidField</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> field</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">ValidField</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> columns </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">useMemo</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> field</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'username'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> headerName</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'User'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> field</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'age'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> headerName</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'Age'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> satisfies </span><span class="token maybe-class-name">GridColDef</span><span class="token operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token maybe-class-name">ValidRow</span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">&amp;</span><span class="token plain"> </span><span class="token maybe-class-name">ColumnWithValidField</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">sx</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> height</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript number" style="color:rgb(255, 98, 140)">250</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> width</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript string" style="color:rgb(165, 255, 144)">'100%'</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">DataGrid</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">columns</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">columns</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">rows</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">rows</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre></div></div>]]></content:encoded>
            <category>React</category>
            <category>TypeScript</category>
            <category>MUI</category>
        </item>
        <item>
            <title><![CDATA[List Pipelines with the Azure DevOps API]]></title>
            <link>https://johnnyreilly.com/list-pipelines-with-azure-devops-api</link>
            <guid>https://johnnyreilly.com/list-pipelines-with-azure-devops-api</guid>
            <pubDate>Sun, 06 Apr 2025 18:53:41 GMT</pubDate>
            <description><![CDATA[Learn how to list the Azure Pipelines in a project using the Azure DevOps REST API with TypeScript and the continuation token.]]></description>
            <content:encoded><![CDATA[<p>Listing the Azure Pipelines using the Azure DevOps REST API and TypeScript is possible, but if you use the official <a href="https://github.com/microsoft/azure-devops-node-api" target="_blank" rel="noopener noreferrer">Azure DevOps Client for Node.js</a>, you might have issues. This is because it does not support pagination. So if you have a project with a large number of pipelines, then using the official client might mean you cannot retrieve it.</p>
<p><img decoding="async" loading="eager" alt="title image reading &amp;quot;List Pipelines with the Azure DevOps API&amp;quot; with the relevant logos" src="https://johnnyreilly.com/assets/images/title-image-235c4c0ac8257bde8337e841a0992919.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<p>This post implements an alternative mechanism, directly using the Azure DevOps API and thus handling pagination. If you're curious as to how to create a pipeline, then check out my post on <a href="https://johnnyreilly.com/list-pipelines-with-azure-devops-api">creating a pipeline with the Azure DevOps API</a>.</p>
<p>Here's the TypeScript code:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">interface</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">AzureDevOpsPipeline</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  _links</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    self</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/** eg "https://dev.azure.com/my-ado-organisation/87cf415b-a062-4f62-93e2-b37c26aa268b/_apis/pipelines/6805?revision=1" */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      href</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    web</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/** eg "https://dev.azure.com/my-ado-organisation/87cf415b-a062-4f62-93e2-b37c26aa268b/_build/definition?definitionId=6805" */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      href</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/** eg "\\my-app" or "\\" */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  folder</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/** eg 25978 */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">number</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/** eg "pipeline-name" */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  name</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/** eg 1 */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  revision</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">number</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/** eg "https://dev.azure.com/my-ado-organisation/87cf415b-a062-4f62-93e2-b37c26aa268b/_apis/pipelines/25978?revision=1" */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  url</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">getAzureDevOpsPipelines</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  personalAccessToken</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  organization</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  projectName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  personalAccessToken</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/** eg "my-ado-organisation" */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  organization</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/** eg "my-ado-project" */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  projectName</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> batchSize </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">100</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">let</span><span class="token plain"> continuationToken </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> pipelines</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> AzureDevOpsPipeline</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">while</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// https://learn.microsoft.com/en-us/rest/api/azure/devops/pipelines/pipelines/list?view=azure-devops-rest-7.1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> url </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">https://dev.azure.com/</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">organization</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string string" style="color:rgb(165, 255, 144)">/</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">projectName</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string string" style="color:rgb(165, 255, 144)">/_apis/pipelines?api-version=7.1&amp;$top=</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">batchSize</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation function" style="color:rgb(250, 208, 0)">toString</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string string" style="color:rgb(165, 255, 144)">&amp;continuationToken=</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">continuationToken</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">try</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> response </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">fetch</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">url</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        method</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'GET'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        headers</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          Accept</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'application/json'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token string-property property" style="color:rgb(255, 157, 0)">'Content-Type'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'application/json'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          Authorization</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">Basic </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">Buffer</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation function" style="color:rgb(250, 208, 0)">from</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token template-string interpolation template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string interpolation template-string string" style="color:rgb(165, 255, 144)">PAT:</span><span class="token template-string interpolation template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation template-string interpolation">personalAccessToken</span><span class="token template-string interpolation template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string interpolation template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation function" style="color:rgb(250, 208, 0)">toString</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token template-string interpolation string" style="color:rgb(165, 255, 144)">'base64'</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token string-property property" style="color:rgb(255, 157, 0)">'X-TFS-FedAuthRedirect'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'Suppress'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token operator" style="color:rgb(255, 157, 0)">!</span><span class="token plain">response</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">ok</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">throw</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">Error</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">HTTP error! status: </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">response</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation">status</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation function" style="color:rgb(250, 208, 0)">toString</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// this will be the name of the next pipeline or not present if there are no more pipelines</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      continuationToken </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> response</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">headers</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">get</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'x-ms-continuationtoken'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">??</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> json </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> response</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">json</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> nextPipelines </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> json </span><span class="token keyword" style="color:rgb(255, 157, 0)">as</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> value</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> AzureDevOpsPipeline</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// TODO: validate with Zod</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">nextPipelines</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">value</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">length </span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">0</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        pipelines</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">push</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token operator" style="color:rgb(255, 157, 0)">...</span><span class="token plain">nextPipelines</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">value</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> noMorePipelines </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        nextPipelines</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">value</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">length </span><span class="token operator" style="color:rgb(255, 157, 0)">===</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">0</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">||</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">!</span><span class="token plain">continuationToken</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">noMorePipelines</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">break</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">error</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token builtin" style="color:rgb(250, 208, 0)">console</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">error</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'Error:'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> error</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token keyword" style="color:rgb(255, 157, 0)">throw</span><span class="token plain"> error</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> pipelines</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre></div></div>
<p>The above code uses the <code>fetch</code> API to list the Azure DevOps pipelines, but significantly, it takes the <code>x-ms-continuationtoken</code> from the response headers, so you can keep paginating if the number of pipelines exceeds the page size.</p>]]></content:encoded>
            <category>Azure Pipelines</category>
            <category>Azure DevOps</category>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[Using AZD for faster incremental Azure Container App deployments in Azure DevOps]]></title>
            <link>https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops</link>
            <guid>https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops</guid>
            <pubDate>Wed, 04 Dec 2024 16:14:40 GMT</pubDate>
            <description><![CDATA[Learn how to speed up deployments of Azure Container Apps in GitHub Actions using the AZD command.]]></description>
            <content:encoded><![CDATA[<p>When deploying Azure Container Apps from Azure DevOps, you can use the <code>azd</code> command to speed up deployments that do not affect infrastructure. Given that when you're deploying, it's far more common to be making a code and / or content change and not an infrastructure one, this can be a significant time saver.</p>
<p><img decoding="async" loading="eager" alt="title image reading &amp;quot;Using AZD for faster incremental Azure Container App deployments in Azure DevOps&amp;quot; with the Azure Container Apps logo" src="https://johnnyreilly.com/assets/images/title-image-ca63b951ef232f0eede02c6a48f0d39b.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<p>If you're looking for information on how to use <code>azd</code> to speed up deployments of Azure Static Web Apps in GitHub Actions, then you might want to read <a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-static-web-app-deployments-in-github-actions">this post</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="faster-deployments-from-azd-14-and-beyond">Faster deployments from <code>azd</code> 1.4 and beyond<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops#faster-deployments-from-azd-14-and-beyond" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>The <code>azd</code> v1.4.0 release contained a significant feature: <code>azd provision</code> is now faster when there are no infrastructure changes.</p>
<p>To quote a trimmed down version of the <a href="https://devblogs.microsoft.com/azure-sdk/azure-developer-cli-azd-october-2023-release/#azd-provision-is-now-faster-when-there-are-no-infrastructure-changes" target="_blank" rel="noopener noreferrer">announcement</a>:</p>
<blockquote>
<p>If you‚Äôve been using the Azure Developer CLI for a while, you may have noticed that sometimes <code>azd provision</code> takes a long time to complete when it may not need to. The wait time was because, prior to version 1.4.0, <code>azd provision</code> would always reprovision regardless of whether the underlying Infrastructure as Code had changed... As of today‚Äôs 1.4.0 release, <code>azd provision</code> now checks the most recent deployment upstream on Azure to see if the state is the same as what‚Äôs represented in the Infrastructure as Code that‚Äôs been used to provision. If the state is the same, the provision is skipped... with this new experience, you should also notice improved performance when running <code>azd up</code> in a CI/CD pipeline as provisioning will be automatically skipped when there are no changes.</p>
</blockquote>
<p>I want this. We're going to unpack how to use this feature in the context of an Azure DevOps pipeline with Azure Container Apps. It turns out that there's a little more to it than just running <code>azd provision</code> and hoping for the best. In fact, there's gotchas aplenty - but it's totally achievable.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-about-bicep-what-if">What about Bicep <code>what-if</code>?<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops#what-about-bicep-what-if" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>You might be thinking at this point: "What about Bicep <code>what-if</code>?" It's a good question. <code>what-if</code> is a feature of the Azure CLI that allows you to see what changes would be made if you were to deploy a Bicep file. Unfortunately, my own experience of using <code>what-if</code> has been that it's quite unreliable. It will detect changes where there are none, and it will fail to detect changes where there are some. I'd love to use it, but I can't trust it. If you'd like to watch a more in depth discussion of the issue, <a href="https://www.youtube.com/watch?v=jlkwH-fP--M" target="_blank" rel="noopener noreferrer">this video is a good place to start</a>.</p>
<p>There appear to be some known issues with <code>what-if</code> that you can follow the progress of here:</p>
<ul>
<li><a href="https://github.com/Azure/arm-template-whatif/issues/83" target="_blank" rel="noopener noreferrer">https://github.com/Azure/arm-template-whatif/issues/83</a></li>
<li><a href="https://github.com/Azure/arm-template-whatif/issues/157" target="_blank" rel="noopener noreferrer">https://github.com/Azure/arm-template-whatif/issues/157</a></li>
</ul>
<p>Given that <code>what-if</code> is not reliable, we're going to use <code>azd</code> to speed up our deployments.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="embracing-azd-in-an-existing-azure-devops-pipeline">Embracing <code>azd</code> in an existing Azure DevOps pipeline<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops#embracing-azd-in-an-existing-azure-devops-pipeline" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>I'm going to start with a pre-existing Azure Pipeline that deploys an Azure Container App. It uses the classic <a href="https://learn.microsoft.com/en-us/azure/devops/pipelines/tasks/reference/azure-resource-manager-template-deployment-v3?view=azure-pipelines" target="_blank" rel="noopener noreferrer"><code>AzureResourceManagerTemplateDeployment@3</code> ARM template deployment v3 task</a> to deploy our infrastructure in the form of a <code>main.bicep</code> (and it's submodules) file.</p>
<p>This existing pipeline and infrastructure as code payload is in a good state. But it's slow. Every time the pipeline runs, the bicep section takes <strong>8 minutes</strong>. We're going to make it faster. Spoiler: we're going to get it down to <strong>1 minute</strong>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="hello-azureyml">Hello <code>azure.yml</code><a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops#hello-azureyml" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Our project has no integration with <code>azd</code>. But we need <code>azd</code> to take advantage of the new <code>azd provision</code> feature. We're going to add a new file to our project: <code>azure.yml</code>. This file is going to contain the configuration for our <code>azd</code> project.</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># yaml-language-server: $schema=https://raw.githubusercontent.com/Azure/azure-dev/main/schemas/v1.0/azure.yaml.json</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> my</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">container</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">app</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token key atrule">metadata</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">template</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> azd</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">init@1.9.4</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token key atrule">services</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">app</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">image</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> myregistry.azurecr.io/$</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">CONTAINER_IMAGE_NAME</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain">$</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">APP_VERSION_TAG</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">host</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> containerapp</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">resourceName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">CONTAINER_APP_NAME</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre></div></div>
<p>The yaml above describes a container app service called <code>app</code> that uses an image from an Azure Container Registry. The <code>APP_VERSION_TAG</code> is a variable that we'll need to provide in our Azure DevOps pipeline. It's worth noticing the link at the top to the schema for the <code>azure.yml</code> file: <a href="https://raw.githubusercontent.com/Azure/azure-dev/main/schemas/v1.0/azure.yaml.json" target="_blank" rel="noopener noreferrer">https://raw.githubusercontent.com/Azure/azure-dev/main/schemas/v1.0/azure.yaml.json</a> - much of the work around figuring out how to use <code>azd</code> was achieved by looking at the schema for the <code>azure.yml</code> file.</p>
<p>One thing we learned, as we looked at the schema, was that many parameters support environment variable substitution at runtime:</p>
<p><img decoding="async" loading="lazy" alt="screenshot of schema file" src="https://johnnyreilly.com/assets/images/screenshot-azure-yml-schema-993e66df439d83bf81c6e6439f964776.png" width="1996" height="1834" class="img_ev3q"></p>
<p>The screenshot above is taken from the Docker section of the configuration where environment variable substitution is widely supported. Originally the <code>image</code> parameter <a href="https://github.com/Azure/azure-dev/issues/4124" target="_blank" rel="noopener noreferrer">did not support substitution</a>. It does as of <a href="https://github.com/Azure/azure-dev/releases/tag/azure-dev-cli_1.10.0" target="_blank" rel="noopener noreferrer">v1.10.0</a>.</p>
<p>You'll notice that we pass <code>resourceName: ${CONTAINER_APP_NAME}</code>. You'll see later that we supply the <code>CONTAINER_APP_NAME</code> and this will be consumed by the <code>azd deploy</code> stage.</p>
<p>Incidentally, we're using an approach whereby the image is built and pushed to the registry independently of <code>azd</code>. You could equally use <code>azd</code> to build and push the image. But we're not doing that here.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="bicep-modifications">Bicep modifications<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops#bicep-modifications" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>I mentioned that we're adding a level of <code>azd</code> support to an existing pipeline. As part of that, we need to make modifications to our existing Bicep modules.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="using-resource-group-scoped-deployments-with-azd">Using resource group scoped deployments with azd<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops#using-resource-group-scoped-deployments-with-azd" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>We're going to start off with a minor tweak to our <code>main.bicep</code> file; the entry point to our Bicep deployments.</p>
<div class="language-bicep codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bicep codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">targetScope</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'resourceGroup'</span><br></span></code></pre></div></div>
<p>The change above allows us to use <code>azd</code> deployments targeted at existing resource groups. The default mode of operation for <code>azd</code> deployments is deploying a resource group to a subscription. We are seeking to <a href="https://learn.microsoft.com/en-us/azure/developer/azure-developer-cli/resource-group-scoped-deployments" target="_blank" rel="noopener noreferrer">deploy to an existing resource group</a>.</p>
<p>Now, strictly speaking, this isn't necessary for speeding up deployments with <code>azd</code>. But if you're not one for creating a resource group per deployment (as I am not), then this is a good idea. This kind of deployment requires less permissions and may well better align with your organisation's security posture.</p>
<p>We'll need to opt into using this feature with <code>azd</code> later on in the pipeline; at present resource group scoped deployments are considered "beta".</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="the-does-your-service-exist-parameter">The "does your service exist?" parameter<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops#the-does-your-service-exist-parameter" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>We're going to add a "magic" parameter to our <code>main.bicep</code> file. This parameter is going to be used to determine whether the container app we're deploying already exists. This is important because if the container app already exists, we will reuse the existing deployed container image during the <code>azd provision</code> stage. If it does not, then we'll deploy a new container image.</p>
<div class="language-bicep codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bicep codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token decorator">@description</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'Specifies if the container app exists - azd will provide this'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> containerAppExists </span><span class="token datatype class-name" style="color:rgb(250, 208, 0)">bool</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">false</span><br></span></code></pre></div></div>
<p>We'll look later at where this value comes from, but for now, we're just adding it to our <code>main.bicep</code> file. How do we use this parameter? In the module where we deploy our container app, we're going to make a couple of changes:</p>
<div class="language-bicep codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bicep codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">module</span><span class="token plain"> fetchLatestImage </span><span class="token string" style="color:rgb(165, 255, 144)">'../modules/fetch-container-image.bicep'</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">name</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token interpolated-string string" style="color:rgb(165, 255, 144)">'</span><span class="token interpolated-string interpolation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token interpolated-string interpolation expression">name</span><span class="token interpolated-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolated-string string" style="color:rgb(165, 255, 144)">-fetch-image'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">params</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">exists</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> containerAppExists</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">name</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> name</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">resource</span><span class="token plain"> app </span><span class="token string" style="color:rgb(165, 255, 144)">'Microsoft.App/containerApps@2023-05-01'</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">name</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> name</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">location</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> location</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">tags</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">union</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">tags</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token string" style="color:rgb(165, 255, 144)">'azd-service-name'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain">  </span><span class="token string" style="color:rgb(165, 255, 144)">'web'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// note the "web" matches the service name in azure.yml</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">properties</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">template</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">containers</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token property" style="color:rgb(255, 157, 0)">image</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> fetchLatestImage</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">outputs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token operator" style="color:rgb(255, 157, 0)">?</span><span class="token plain">containers</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token operator" style="color:rgb(255, 157, 0)">?</span><span class="token number" style="color:rgb(255, 98, 140)">0</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token operator" style="color:rgb(255, 157, 0)">?</span><span class="token plain">image </span><span class="token operator" style="color:rgb(255, 157, 0)">??</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'mcr.microsoft.com/azuredocs/containerapps-helloworld:latest'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre></div></div>
<p>You can see we tag the container app with the service name from the <code>azure.yml</code> file (<code>web</code>). This is important because it allows <code>azd</code> to determine whether the container app already exists and so power the <code>containerAppExists</code> parameter we added to our <code>main.bicep</code> file.</p>
<p>We're using the <code>containerAppExists</code> parameter to determine whether we should fetch the currently deployed image from the existing container app. If the container app exists, we'll use the existing image. If it does not, we'll use a default image. We'd typically only expect to use the default image when we're deploying the container app to an environment for the first time. (You might be wondering how the new version of the application gets deployed; given that we're not using the new container image. It turns out that <code>azd deploy</code> is the command responsible for deploying the new image; we'll get to that later.)</p>
<p>You'll have noticed that we're using a new module called <code>fetch-container-image.bicep</code>. This module is responsible for attempting to fetch the existing image from the currently deployed container app:</p>
<div class="language-bicep codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bicep codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> exists </span><span class="token datatype class-name" style="color:rgb(250, 208, 0)">bool</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> name </span><span class="token datatype class-name" style="color:rgb(250, 208, 0)">string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">resource</span><span class="token plain"> existingApp </span><span class="token string" style="color:rgb(165, 255, 144)">'Microsoft.App/containerApps@2023-05-01'</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">existing</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">exists</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">name</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> name</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">output</span><span class="token plain"> containers </span><span class="token datatype class-name" style="color:rgb(250, 208, 0)">array</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> exists </span><span class="token operator" style="color:rgb(255, 157, 0)">?</span><span class="token plain"> existingApp</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">properties</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">template</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">containers </span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><br></span></code></pre></div></div>
<p>This is based on what files are generated when you perform an <code>azd init</code>, but has been customised for the specific version of the <code>Microsoft.App/containerApps</code> resource we're using.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="tagging-resources-with-the-environment-name">Tagging resources with the environment name<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops#tagging-resources-with-the-environment-name" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>Another addition we're going to make to our <code>main.bicep</code> file is to tag our resources with the environment name. This allows <code>azd</code> to determine the environment of a given resource. It's achieved by using the our already existing <code>envName</code> parameter and adding it to the tags of our resources:</p>
<div class="language-bicep codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bicep codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token decorator">@description</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'Environment eg dev, prod'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> envName </span><span class="token datatype class-name" style="color:rgb(250, 208, 0)">string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> combinedTags </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">union</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">tags</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'azd-env-name'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> envName </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="parameters-in-mainbicep-must-be-immutable-per-environment">Parameters in <code>main.bicep</code> must be immutable per environment<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops#parameters-in-mainbicep-must-be-immutable-per-environment" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>It's gotcha time! One thing we learned the hard way is that parameters in <code>main.bicep</code> must be <strong>immutable per environment</strong>. This means that you can't change the value of a parameter in a <code>main.bicep</code> file between deployments to an environment. This is because <code>azd</code> uses the <code>main.bicep</code> file to determine whether a deployment is incremental or not. If the parameters change, then <code>azd</code> will assume that the deployment requires infrastructure changes, and will reprovision the resources.</p>
<p>What's more, as things stand, <code>azd</code> only has the ability to <strong>fully</strong> reprovision your resources. If your app consists of a database and a container app, and you only want to deploy a new version of the container app, you're out of luck. <code>azd</code> will deploy the database again too. This is a limitation of <code>azd</code> at the time of writing.</p>
<p>I've <a href="https://github.com/Azure/azure-dev/issues/4123" target="_blank" rel="noopener noreferrer">raised a GitHub issue</a> in the hope that this feature might one day land. Perhaps it's super hard - quite possibly.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="welcome-mainbicepparam">Welcome <code>main.bicepparam</code><a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops#welcome-mainbicepparam" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Prior to using <code>azd</code>, we were using a <code>main.bicep</code> file to deploy our infrastructure and we provided parameters to this file via our Azure DevOps pipeline. We're going to make a change to our pipeline to use a <a href="https://learn.microsoft.com/en-us/azure/azure-resource-manager/bicep/parameter-files?tabs=Bicep" target="_blank" rel="noopener noreferrer"><code>main.bicepparam</code></a> file instead.</p>
<p>The <code>main.bicepparam</code> file is going to contain the parameters that we were previously providing to our <code>main.bicep</code> file. It's going to pick these up from environment variables that we'll declare. We're also going to add our new <code>containerAppExists</code> parameter to this file, which will also collect its value from an environment variable. But it won't be us that provides that value; it will be <code>azd</code>.</p>
<p>Consider the following (cut down) <code>main.bicepparam</code> file:</p>
<div class="language-bicep codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bicep codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">using </span><span class="token string" style="color:rgb(165, 255, 144)">'./main.bicep'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> envName </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">readEnvironmentVariable</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'AZURE_ENV_NAME'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> location </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">readEnvironmentVariable</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'AZURE_LOCATION'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> serviceConnectionPrincipalId </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">readEnvironmentVariable</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'AZURE_PRINCIPAL_ID'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> tags </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">branch</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">readEnvironmentVariable</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'TAGS_BRANCH'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">repo</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">readEnvironmentVariable</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'TAGS_REPO'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// azd will provide the following parameters</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> containerAppExists </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">bool</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token function" style="color:rgb(250, 208, 0)">readEnvironmentVariable</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'SERVICE_APP_RESOURCE_EXISTS'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'false'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><br></span></code></pre></div></div>
<p>The <code>containerAppExists</code> parameter is determined by the <code>SERVICE_APP_RESOURCE_EXISTS</code> environment variable to provide this value. What's happening here is that we're picking up on a convention that <code>azd</code> uses to provide confirmation that a service already exists. <code>SERVICE_[SERVICENAME]_RESOURCE_EXISTS</code> is the pattern that <code>azd</code> uses to provide this information; where <code>[SERVICENAME]</code> is the name of the service as defined in the <code>azure.yml</code> file. In our case, it's <code>app</code> (or rather <code>APP</code>).</p>
<p>If you're curious about how this actually works <a href="https://github.com/Azure/azure-dev/blob/837d4e8592c53375c7d9aa6df8b134c23cdeb487/cli/azd/pkg/project/service_target_containerapp.go#L174-L190" target="_blank" rel="noopener noreferrer">you can read the source code here</a> in the <code>azd</code> project. Here's the relevant code snippet:</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">func</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">at </span><span class="token operator" style="color:rgb(255, 157, 0)">*</span><span class="token plain">containerAppTarget</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">addPreProvisionChecks</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">ctx context</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Context</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> serviceConfig </span><span class="token operator" style="color:rgb(255, 157, 0)">*</span><span class="token plain">ServiceConfig</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">error</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// Attempt to retrieve the target resource for the current service</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// This allows the resource deployment to detect whether or not to pull existing container image during</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// provision operation to avoid resetting the container app back to a default image</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> serviceConfig</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Project</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">AddHandler</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"preprovision"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">func</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">ctx context</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Context</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> args ProjectLifecycleEventArgs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">error</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    exists </span><span class="token operator" style="color:rgb(255, 157, 0)">:=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// Check if the target resource already exists</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    targetResource</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> err </span><span class="token operator" style="color:rgb(255, 157, 0)">:=</span><span class="token plain"> at</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">resourceManager</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetTargetResource</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> at</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetSubscriptionId</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> serviceConfig</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> targetResource </span><span class="token operator" style="color:rgb(255, 157, 0)">!=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">nil</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">&amp;&amp;</span><span class="token plain"> err </span><span class="token operator" style="color:rgb(255, 157, 0)">==</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      exists </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    at</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">SetServiceProperty</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">serviceConfig</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"RESOURCE_EXISTS"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> strconv</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">FormatBool</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">exists</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> at</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">envManager</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Save</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> at</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre></div></div>
<p>Now that we have our <code>main.bicepparam</code> file, we're ready to migrate to our pipeline to use <code>azd</code>.</p>
<p>Well, one extra bit first.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="workaround-for-service_app_resource_exists-not-being-supplied">Workaround for <code>SERVICE_APP_RESOURCE_EXISTS</code> not being supplied<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops#workaround-for-service_app_resource_exists-not-being-supplied" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>At the time of writing, there is an issue that means that the <code>SERVICE_APP_RESOURCE_EXISTS</code> environment variable is not being set by <code>azd</code>. <a href="https://github.com/Azure/azure-dev/issues/4402" target="_blank" rel="noopener noreferrer">This is a known issue and is being worked on</a>.</p>
<p>In the meantime, we have a workaround. We're going to set the <code>SERVICE_APP_RESOURCE_EXISTS</code> environment variable in our pipeline with a little bash and Azure CLI magic. We're going to set our manually created <code>SERVICE_APP_RESOURCE_EXISTS</code> environment variable to <code>true</code> if we detect a service already exists and <code>false</code> if not.</p>
<p>You'll note this as the <code>Check container app exists</code> step in the modifications to our pipeline below. This is a workaround and will be removed when the issue is resolved in <code>azd</code> itself.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="azure-devops-pipeline-modifications">Azure DevOps pipeline modifications<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops#azure-devops-pipeline-modifications" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>There's no two ways about it; our Azure DevOps pipeline modifications are pretty extensive. Where we were previously using the <code>AzureResourceManagerTemplateDeployment@3</code> task to deploy our Bicep files, we're now going to use the <code>azd</code> command to deploy our infrastructure and our container app.</p>
<p>Here's a cut down version of our pipeline replacing the single <code>AzureResourceManagerTemplateDeployment@3</code> task with a series of tasks that use the <code>azd</code> command:</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> setup</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">azd@0</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Install azd</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># If you can't use above task in your organization, you can remove it and uncomment below task to install azd</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># - task: Bash@3</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">#   displayName: Install azd</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">#   inputs:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">#     targetType: "inline"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">#     script: |</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">#       curl -fsSL https://aka.ms/install-azd.sh | bash</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">pwsh</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">|</span><span class="token scalar string" style="color:rgb(165, 255, 144)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">    azd config set auth.useAzCliAuth "true"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Configure `azd` config options.</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> AzureCLI@2</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Login to ACR</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">azureSubscription</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(registryServiceConnection)</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">scriptType</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> bash</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">scriptLocation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> inlineScript</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">inlineScript</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">|</span><span class="token scalar string" style="color:rgb(165, 255, 144)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">      az acr login -n myregistry</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> AzureCLI@2</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Check container app exists </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># see https://github.com/Azure/azure-dev/issues/4593 for context on why this exists</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">azureSubscription</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> variables.serviceConnection </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">scriptType</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> bash</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">scriptLocation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> inlineScript</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">inlineScript</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">|</span><span class="token scalar string" style="color:rgb(165, 255, 144)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">      containerAppName="$(containerAppName)"</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">      resourceGroupName="$(resourceGroupName)"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      if </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">z "$containerAppName" </span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">|</span><span class="token punctuation" style="color:rgb(255, 255, 255)">|</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">z "$resourceGroupName" </span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain">; then</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">echo "SERVICE_APP_RESOURCE_EXISTS</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> false"</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          echo "</span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">##vso[task.setvariable variable=SERVICE_APP_RESOURCE_EXISTS]false"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      else</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          if az containerapp show </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">name "$containerAppName" </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">resource</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">group "$resourceGroupName" </span><span class="token punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> /dev/null 2</span><span class="token punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token important">&amp;1;</span><span class="token plain"> then</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">              </span><span class="token key atrule">echo "SERVICE_APP_RESOURCE_EXISTS</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> true"</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">              echo "</span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">##vso[task.setvariable variable=SERVICE_APP_RESOURCE_EXISTS]true"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          else</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">              </span><span class="token key atrule">echo "SERVICE_APP_RESOURCE_EXISTS</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> false"</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">              echo "</span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">##vso[task.setvariable variable=SERVICE_APP_RESOURCE_EXISTS]false"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          fi</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      fi</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> AzureCLI@2</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Provision Infra</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">azureSubscription</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(serviceConnection)</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">scriptType</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> bash</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">scriptLocation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> inlineScript</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">inlineScript</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">|</span><span class="token scalar string" style="color:rgb(165, 255, 144)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">      azd provision --no-prompt</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># See https://learn.microsoft.com/en-gb/azure/developer/azure-developer-cli/configure-devops-pipeline?tabs=azdo</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">AZURE_LOCATION</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(location)</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">AZURE_SUBSCRIPTION_ID</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(subscriptionId)</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">AZURE_ENV_NAME</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">parameters.env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># https://learn.microsoft.com/en-us/azure/developer/azure-developer-cli/manage-environment-variables#user-provided-environment-variables</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">AZURE_RESOURCE_GROUP</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(resourceGroupName)</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">AZURE_PRINCIPAL_ID</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(serviceConnectionPrincipalId)</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># Define the additional variables or secrets that are required only for provision</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">TAGS_BRANCH</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(Build.SourceBranch)</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">TAGS_REPO</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(repo)</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">CONTAINER_APP_NAME</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(myContainerAppName) </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># this is used to substitute the CONTAINER_APP_NAME value in the azure.yaml file</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">CONTAINER_IMAGE_NAME</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(myContainerImageName) </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># this is used to substitute the CONTAINER_IMAGE_NAME value in the azure.yaml file</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">APP_VERSION_TAG</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(containerImageTag) </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># the tag of the built image</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> AzureCLI@2</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Deploy Application</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">retryCountOnTaskFailure</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">azureSubscription</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(serviceConnection)</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">scriptType</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> bash</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">scriptLocation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> inlineScript</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">inlineScript</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">|</span><span class="token scalar string" style="color:rgb(165, 255, 144)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">      azd deploy --no-prompt</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># See https://learn.microsoft.com/en-gb/azure/developer/azure-developer-cli/configure-devops-pipeline?tabs=azdo</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">AZURE_LOCATION</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(location)</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">AZURE_SUBSCRIPTION_ID</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(subscriptionId)</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">AZURE_ENV_NAME</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">parameters.env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># https://learn.microsoft.com/en-us/azure/developer/azure-developer-cli/manage-environment-variables#user-provided-environment-variables</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">AZURE_RESOURCE_GROUP</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(resourceGroupName)</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># Define the additional variables or secrets that are required only for deploy</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">CONTAINER_APP_NAME</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(myContainerAppName) </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># this is used to substitute the CONTAINER_APP_NAME value in the azure.yaml file</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">CONTAINER_IMAGE_NAME</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(myContainerImageName) </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># this is used to substitute the CONTAINER_IMAGE_NAME value in the azure.yaml file</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">APP_VERSION_TAG</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(containerImageTag) </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># the tag of the built image</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># ...</span><br></span></code></pre></div></div>
<p>What's happening here? We'll take it step by step:</p>
<ul>
<li>We're installing <code>azd</code> using the <code>setup-azd@0</code> task.</li>
<li>We're configuring <code>azd</code> to use the Azure CLI for authentication and to enable resource group scoped deployments.</li>
<li>We're logging into our Azure Container Registry. (If you're not building your image independently of <code>azd</code>, then you may not need this step.)</li>
<li>We're provisioning our infrastructure using <code>azd provision --no-prompt</code>. Note that we're providing a number of environment variables to <code>azd</code> which will be detected in our <code>main.bicepparam</code> file.</li>
<li>We're deploying our application using <code>azd deploy --no-prompt</code>. As we do that, we pass the <code>CONTAINER_APP_NAME</code> environment variable which will substitute into the <code>azure.yaml</code> file</li>
</ul>
<p>You'll note that as we use <code>azd</code>, we make heavy use of environment variables. These environment variables will be picked up in the <code>main.bicepparam</code> file and passed through to the <code>main.bicep</code>. And of course there's the runtime <code>SERVICE_[SERVICENAME]_RESOURCE_EXISTS</code> parameter which <code>azd</code> will provide. Much of what you see here is inspired by <a href="https://learn.microsoft.com/en-gb/azure/developer/azure-developer-cli/configure-devops-pipeline?tabs=azdo" target="_blank" rel="noopener noreferrer">this documentation</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-does-it-look-like-when-it-works">What does it look like when it works?<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops#what-does-it-look-like-when-it-works" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>That is the question! Like this:</p>
<p><img decoding="async" loading="lazy" alt="screenshot of azd detecting no changes and so not provisioning" src="https://johnnyreilly.com/assets/images/screenshot-of-azd-detecting-no-changes-4a38419f8f4697892fd6f67d0b151543.avif" width="1434" height="932" class="img_ev3q"></p>
<p>The magic sentence in the above screenshot is: <code>SUCCESS: There are no changes to provision for your application.</code> This is what we're looking for. This is what makes our deployments faster.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops#conclusion" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>So we've done it, we've speeded up our subsequent deployments by using <code>azd</code> in our Azure DevOps pipeline to avoid unnecessary infrastructure provisioning when there are no changes. This is a significant time saver. However, as we've also seen, this is very easy to get wrong and quite hard to get right! Hopefully this will help you implement <code>azd</code> in your Azure DevOps pipelines.</p>
<p>I couldn't have written this without <a href="https://twitter.com/MarcelMichau" target="_blank" rel="noopener noreferrer">Marcel Michau</a> who did much of the heavy lifting on this project. I am the Boswell to his Johnson. Or something like that.</p>]]></content:encoded>
            <category>Azure</category>
            <category>Bicep</category>
            <category>Azure Container Apps</category>
            <category>Azure DevOps</category>
            <category>Azure Pipelines</category>
        </item>
        <item>
            <title><![CDATA[Slash command your deployment with GitHub Actions]]></title>
            <link>https://johnnyreilly.com/slash-command-your-deployment-with-github-actions</link>
            <guid>https://johnnyreilly.com/slash-command-your-deployment-with-github-actions</guid>
            <pubDate>Fri, 03 Jan 2025 08:47:57 GMT</pubDate>
            <description><![CDATA[Slash commands are a great way to interact with your GitHub issues. In this post, we look at how to implement a `/deploy` slash command to deploy an Azure Container Apps service with GitHub Actions.]]></description>
            <content:encoded><![CDATA[<p>In the world of computing, slash commands have a proud and noble history. They are a way to interact with a system by typing a command into a chat or terminal, usually with a <code>/</code> preceding the command; hence the name "slash commands". <a href="https://docs.github.com/en/issues/tracking-your-work-with-issues/using-issues/about-slash-commands" target="_blank" rel="noopener noreferrer">GitHub has its own slash commands</a> that you can use in issues and pull requests to add code blocks and tables etc. The slash commands are, in truth, quite limited.</p>
<p>However, through clever use of the GitHub Actions platform, it's possible to build something quite powerful which is "slash-command-shaped". In this post, we'll look at how to implement a <code>/deploy</code> slash command which, when invoked in a pull request, will deploy an Azure Container App with GitHub Actions.</p>
<p><img decoding="async" loading="eager" alt="title image reading &amp;quot;Slash command your deployment with GitHub Actions&amp;quot; with the GitHub Actions logo" src="https://johnnyreilly.com/assets/images/title-image-5c895b855a4bb9606fc2019f57811c42.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<p>The technique we'll use is covering a deployment usecase, as we'll see, it could be adapted to many other scenarios.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="first-a-bit-about-nuns">First a bit about nuns<a href="https://johnnyreilly.com/slash-command-your-deployment-with-github-actions#first-a-bit-about-nuns" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>I have an aunt that is a Poor Clare nun, and I've been <a href="https://johnnyreilly.com/the-convent-with-continuous-delivery">over-engineering her convent's website for years</a>. Most of the time the site moulders away, but every now and then I get a flurry of requests for minor changes. Once I've made the changes, they go live thanks to the magic of continuous deployment. But there's only ever been a single environment; production or "main".</p>
<p>Sometimes I'd like to eyeball a change before I've shipped it. Not always, sometimes. A particular case where this is useful, is when <a href="https://www.mend.io/renovate/" target="_blank" rel="noopener noreferrer">Renovate</a> has submitted a dependency upgrade PR, and I'd like to see the impact without having to install and run it locally somewhere. Because, unless I instead hit "merge" with crossed fingers, that's what I'll need to do. (I have done this and it doesn't always end well.)</p>
<p>So I decided it was time that the "Convent with Continuous Delivery‚Ñ¢Ô∏è" had a staging environment. And I decided that I'd like to be able to deploy to it by entering the slash command <code>/deploy</code> in a pull request comment. Like this:</p>
<p><img decoding="async" loading="lazy" alt="screenshot of pull request comments" src="https://johnnyreilly.com/assets/images/screenshot-pull-request-comments-39dd71778a3039bc342d6349667fd81c.webp" width="440" height="501" class="img_ev3q"></p>
<p>As we can see, I entered <code>/deploy</code> in a comment. In response, a GitHub Actions workflow then kicked off and deployed the staging environment. How did I do this? Let's find out.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-github-actions-workflow">The GitHub Actions workflow<a href="https://johnnyreilly.com/slash-command-your-deployment-with-github-actions#the-github-actions-workflow" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>The secret sauce that makes implementing slash commands in GitHub Actions possible is the <a href="https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/events-that-trigger-workflows#issue_comment" target="_blank" rel="noopener noreferrer"><code>issue_comment</code> event</a>. This event is triggered when an issue or pull request comment is created, edited, or deleted. We're interested in the situation where a pull request comment is created, and it contains the <code>/deploy</code> command.</p>
<p>Based upon the <a href="https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/events-that-trigger-workflows#issue_comment-on-issues-only-or-pull-requests-only" target="_blank" rel="noopener noreferrer">example here</a> it's possible to create a workflow that is triggered by the <code>issue_comment</code> event, but only when the comment is on a pull request, and that comment contains the text <code>/deploy</code>.</p>
<p>Here's the workflow:</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token key atrule">on</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">issue_comment</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">types</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">created</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token key atrule">jobs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">run-for-pr-comment-with-deploy-command</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># check if the comment comes from a pull request and contains the command `/deploy`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">if</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> github.event.issue.pull_request </span><span class="token important">&amp;&amp;</span><span class="token plain"> contains(github.event.comment.body</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> '/deploy')</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># ...</span><br></span></code></pre></div></div>
<p>The <code>if</code> statement is the key to this workflow. It checks if the comment comes from a pull request and contains the command <code>/deploy</code>. If both conditions are met, the workflow continues. We're in business!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="avoiding-duplication-with-a-reusable-workflow">Avoiding duplication with a reusable workflow<a href="https://johnnyreilly.com/slash-command-your-deployment-with-github-actions#avoiding-duplication-with-a-reusable-workflow" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>I already have a GitHub Actions workflow that deploys the main environment. I don't want to duplicate this logic in the new workflow. Instead, I want to reuse the existing workflow and just pass in a different environment name. This is where <a href="https://docs.github.com/en/actions/learn-github-actions/reusing-workflows" target="_blank" rel="noopener noreferrer">reusable workflows</a> come in.</p>
<p>I think of these as functions that can be called from other workflows. They have inputs and outputs, and can be parameterised.</p>
<p>I migrated the deployment logic to a reusable workflow called <code>util-build-and-deploy.yaml</code>. I pondered the best way to share this information with you, and I've finally opted to include the entire workflow here. It's a bit long, but I think it's the best way to show you how it all fits together:</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Build and deploy</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token key atrule">on</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">workflow_call</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token key atrule">deploy</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">required</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token boolean important" style="color:rgb(255, 98, 140)">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">type</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> boolean</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token key atrule">branchName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">required</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token boolean important" style="color:rgb(255, 98, 140)">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">type</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> string</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">outputs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token key atrule">containerAppUrl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">description</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'The URL of the deployed container app'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">value</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> jobs.deploy.outputs.containerAppUrl </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token key atrule">env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">RESOURCE_GROUP</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> rg</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">my</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">convent</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">REGISTRY</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> ghcr.io</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token key atrule">jobs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">build</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">runs-on</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> ubuntu</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">latest</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">permissions</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token key atrule">contents</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> read</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token key atrule">packages</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> write</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">outputs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token key atrule">image-name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> steps.vars.outputs.image_name </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token key atrule">sha-short</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> steps.vars.outputs.sha_short </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token key atrule">built-at</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> steps.vars.outputs.built_at </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">steps</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Checkout repository</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">uses</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> actions/checkout@v4</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">with</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">ref</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> inputs.branchName </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Set sha</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">short and image</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">name environment variables</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> vars</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">run</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">|</span><span class="token scalar string" style="color:rgb(165, 255, 144)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">          image_name=$(echo "${{ env.REGISTRY }}/${{ github.repository }}/node-service" | tr '[:upper:]' '[:lower:]')</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">          echo "image_name=$image_name" &gt;&gt; $GITHUB_OUTPUT</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">          sha_short=$(echo "$(git rev-parse --short HEAD)" | tr '[:upper:]' '[:lower:]')</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">          echo "sha_short=$sha_short" &gt;&gt; $GITHUB_OUTPUT</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">          echo "built_at=$(date +'%Y-%m-%dT%H:%M:%S')" &gt;&gt; $GITHUB_OUTPUT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># Login against a Docker registry</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># https://github.com/docker/login-action</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Log into registry $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> env.REGISTRY </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">uses</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> docker/login</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">action@v3</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">with</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">registry</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> env.REGISTRY </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">username</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> github.actor </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">password</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> secrets.GITHUB_TOKEN </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># Extract metadata (tags, labels) for Docker</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># https://github.com/docker/metadata-action</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Extract Docker metadata</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> meta</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">uses</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> docker/metadata</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">action@v5</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">with</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">images</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> steps.vars.outputs.image_name </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">context</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> git </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># so it uses the git branch that is checked out</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">tags</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">|</span><span class="token scalar string" style="color:rgb(165, 255, 144)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">            type=semver,pattern={{version}}</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">            type=semver,pattern={{major}}.{{minor}}</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">            type=semver,pattern={{major}}</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">            type=ref,event=branch</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">            type=ref,event=pr</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">            type=sha</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># Build and push Docker image with Buildx (don't push if deploy is false)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># https://github.com/docker/build-push-action</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Build and push Docker image</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">uses</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> docker/build</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">push</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">action@v6</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">with</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">context</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> ./</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">push</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> inputs.deploy </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">tags</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> steps.meta.outputs.tags </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">labels</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> steps.meta.outputs.labels </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">build-args</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">|</span><span class="token scalar string" style="color:rgb(165, 255, 144)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">            VITE_BRANCH_NAME=${{ inputs.branchName }}</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">            VITE_GIT_SHA=${{ steps.vars.outputs.sha_short }}</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">            VITE_BUILT_AT=${{ steps.vars.outputs.built_at }}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">deploy</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">runs-on</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> ubuntu</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">latest</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">if</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> inputs.deploy == true</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">needs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> build</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">outputs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token key atrule">containerAppUrl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> steps.deploy.outputs.CONTAINER_APP_URL </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">permissions</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token key atrule">id-token</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> write</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token key atrule">contents</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> read</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token key atrule">packages</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> write</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">steps</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Checkout repository</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">uses</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> actions/checkout@v4</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">with</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">ref</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> inputs.branchName </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Azure login</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">uses</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> azure/login@v2</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">with</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">client-id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> secrets.AZURE_CLIENT_ID </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">tenant-id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> secrets.AZURE_TENANT_ID </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">subscription-id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> secrets.AZURE_SUBSCRIPTION_ID </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Deploy to Azure</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> deploy</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">uses</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> azure/CLI@v2</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">with</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">inlineScript</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">|</span><span class="token scalar string" style="color:rgb(165, 255, 144)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">            RESOURCE_GROUP="${{ env.RESOURCE_GROUP }}"</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">            BUILT_AT="${{ needs.build.outputs.built-at }}"</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">            BRANCH_NAME="${{ inputs.branchName }}"</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">            SHA_SHORT="${{ needs.build.outputs.sha-short }}"</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">            REF_SHA="${{ inputs.branchName }}.${{ needs.build.outputs.sha-short }}"</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">            DEPLOYMENT_NAME="${REF_SHA////-}"</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">            echo "DEPLOYMENT_NAME=$DEPLOYMENT_NAME"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            webServiceImage="$</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> needs.build.outputs.image</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">name </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain">sha</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">$SHA_SHORT"</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            echo "webServiceImage=$webServiceImage"</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            if </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"> "$BRANCH_NAME" == "main" </span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain">; then</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">              webServiceContainerAppName="main</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">web"</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            else</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">              webServiceContainerAppName="preview</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">web"</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            fi</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            echo "webServiceContainerAppName=$webServiceContainerAppName"</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            TAGS='</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">"owner"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token string" style="color:rgb(165, 255, 144)">"johnnyreilly"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> "email"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token string" style="color:rgb(165, 255, 144)">"johnny_reilly@hotmail.com"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain">'</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            az deployment group create \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">              </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">resource</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">group $RESOURCE_GROUP \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">              </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">name "$DEPLOYMENT_NAME" \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">              </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">template</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">file ./infra/main.bicep \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">              </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">parameters \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                  webServiceImage="$webServiceImage" \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                  containerRegistry=$</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> env.REGISTRY </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                  containerRegistryUsername=$</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> github.actor </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                  containerRegistryPassword=$</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> secrets.PACKAGES_TOKEN </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                  branchName="$BRANCH_NAME" \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                  gitSha="$SHA_SHORT" \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                  builtAt="$BUILT_AT" \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                  workspaceName='shared</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">log</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">analytics' \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                  appInsightsName='shared</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">app</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">insights' \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                  managedEnvironmentName='shared</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">env' \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                  webServiceContainerAppName="$webServiceContainerAppName" \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                  tags="$TAGS" \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                  APPSETTINGS_API_KEY="$</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> secrets.APPSETTINGS_API_KEY </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain">" \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                  APPSETTINGS_DOMAIN="$</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> vars.APPSETTINGS_DOMAIN </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain">" \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                  APPSETTINGS_PRAYER_REQUEST_FROM_EMAIL="$</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> vars.APPSETTINGS_PRAYER_REQUEST_FROM_EMAIL </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain">" \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                  APPSETTINGS_PRAYER_REQUEST_RECIPIENT_EMAIL="$</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> vars.APPSETTINGS_PRAYER_REQUEST_RECIPIENT_EMAIL </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain">"</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            CONTAINER_APP_URL=$(az containerapp show \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">              </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">resource</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">group "$RESOURCE_GROUP" \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">              </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">name "$webServiceContainerAppName" \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">              </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">query properties.configuration.ingress.fqdn \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">              </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">output tsv)</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            echo "CONTAINER_APP_URL=$CONTAINER_APP_URL"</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            echo "CONTAINER_APP_URL=$CONTAINER_APP_URL" </span><span class="token punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> $GITHUB_OUTPUT</span><br></span></code></pre></div></div>
<p>Let's talk through what this workflow does:</p>
<ul>
<li>It's triggered by a <code>workflow_call</code> event, which is how reusable workflows are triggered.</li>
<li>It has two jobs: <code>build</code> and <code>deploy</code> and the <code>deploy</code> job is only run if the <code>deploy</code> input is <code>true</code>. (This allows us to call the workflow with <code>deploy: false</code> to only build the image)</li>
<li>The <code>build</code> job checks out the code, sets some environment variables, logs into the Docker registry, extracts metadata for Docker, builds and pushes the Docker image.</li>
<li>The <code>deploy</code> job checks out the code, logs into Azure, and deploys the container app to Azure Container Apps. It then outputs the URL of the deployed container app in order that we can display it to the user.</li>
</ul>
<p>Now most of this workflow is the same as the one I was originally using to deploy to the main environment. The key difference is it is now parameterised with the <code>branchName</code> input. This is important for two reasons:</p>
<ol>
<li>It allows us to deploy to different environments based on the branch name. In our case we'll deploy to the <code>preview-web</code> container app if the branch name is not <code>main</code>. Otherwise we'll deploy to <code>main-web</code>.</li>
<li>(and this is more subtle) We need to checkout the relevant branch of the repository in our workflow, so that we're building and deploying the correct thing. So you'll see us use the <code>branchName</code> input in the <code>actions/checkout</code> steps and you'll see us use <code>context: git</code> in the <code>docker/metadata-action</code> step.</li>
</ol>
<p>You might be thinking at this point, "fine - but I don't have a containerised application and I don't have an Azure Container Apps service to deploy to". That's great! You can adapt this workflow to build any type of app you would like and deploy to any type of service. The crucial part is that you must build and deploy the code for the correct branch. This is why we pass the <code>branchName</code> input to the workflow.</p>
<p>And now some bad news: the <code>issue_comment</code> event <strong>doesn't</strong> know the branch that the pull request is for. We're going to need to build <em>another</em> reusable workflow that we will use to determine the branch name of the pull request.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="getting-the-branch-name-of-the-pull-request">Getting the branch name of the pull request<a href="https://johnnyreilly.com/slash-command-your-deployment-with-github-actions#getting-the-branch-name-of-the-pull-request" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Now we're old hands at creating reusable workflows, we're going to create another one that will determine the branch name of the pull request. We'll call this workflow <code>util-get-pr-branch-name.yaml</code>:</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Get PR branch name</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token key atrule">on</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">workflow_call</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token key atrule">pullRequestNumber</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">required</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token boolean important" style="color:rgb(255, 98, 140)">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">type</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> number</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">outputs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token key atrule">branchName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">description</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'The source branch name for the pull request'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">value</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> jobs.get</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">pr</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">branch</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">name.outputs.branchName </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token key atrule">jobs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">get-pr-branch-name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">runs-on</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> ubuntu</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">latest</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">outputs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token key atrule">branchName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> steps.get</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">pr</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">branch</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">name.outputs.branchName </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">steps</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> get</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">pr</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">branch</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">name</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">run</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">|</span><span class="token scalar string" style="color:rgb(165, 255, 144)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">          branchName=$(gh pr view ${{ inputs.pullRequestNumber }} --json "headRefName" --jq ".headRefName" --repo ${{ github.repository }})</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">          echo "branchName=$branchName" &gt;&gt; $GITHUB_OUTPUT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">GH_TOKEN</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> github.token </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre></div></div>
<p>This is fairly self explanatory. The workflow takes a <code>pullRequestNumber</code> input and outputs the <code>branchName</code> of the pull request. It uses the <code>gh</code> CLI to get the branch name of the pull request using the <code>headRefName</code> property of a pull request. (Incidentally, the <code>env: GH_TOKEN: ${{ github.token }}</code> line is important as it allows the workflow to authenticate with GitHub.)</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="putting-it-all-together">Putting it all together<a href="https://johnnyreilly.com/slash-command-your-deployment-with-github-actions#putting-it-all-together" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Now we have our two reusable workflows, we can put them together in a workflow that is triggered by the <code>issue_comment</code> event. This workflow will call the <code>util-get-pr-branch-name.yaml</code> workflow to get the branch name of the pull request, and then call the <code>util-build-and-deploy.yaml</code> workflow to build and deploy the code for that branch. Here's the <code>pull-request-commands.yaml</code> workflow:</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Pull request commands</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token key atrule">on</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">issue_comment</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">types</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">created</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token key atrule">jobs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">get-pr-branch-name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">uses</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> ./.github/workflows/util</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">get</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">pr</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">branch</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">name.yaml</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">with</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token key atrule">pullRequestNumber</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> github.event.issue.number </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">pre-deploy</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># check if the comment comes from a pull request and contains the command `/deploy`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">if</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> github.event.issue.pull_request </span><span class="token important">&amp;&amp;</span><span class="token plain"> contains(github.event.comment.body</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> '/deploy')</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">runs-on</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> ubuntu</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">latest</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">steps</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">run</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">|</span><span class="token scalar string" style="color:rgb(165, 255, 144)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">          gh issue comment ${{ github.event.issue.number }} --body "Preview environment [deploying](https://github.com/johnnyreilly/poorclaresarundel-aca/actions/runs/${{ github.run_id }})..." --repo ${{ github.repository }}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">GH_TOKEN</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> secrets.GITHUB_TOKEN </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">deploy</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># check if the comment comes from a pull request and contains the command `/deploy`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">if</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> github.event.issue.pull_request </span><span class="token important">&amp;&amp;</span><span class="token plain"> contains(github.event.comment.body</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> '/deploy')</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">needs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">get</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">pr</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">branch</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> pre</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">deploy</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">uses</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> ./.github/workflows/util</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">build</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">and</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">deploy.yaml</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">with</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token key atrule">deploy</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token boolean important" style="color:rgb(255, 98, 140)">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token key atrule">branchName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> needs.get</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">pr</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">branch</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">name.outputs.branchName </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">secrets</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> inherit</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">post-deploy</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">runs-on</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> ubuntu</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">latest</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">needs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> deploy</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">steps</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">run</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">|</span><span class="token scalar string" style="color:rgb(165, 255, 144)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">          gh issue comment ${{ github.event.issue.number }} --body "Preview environment deployed: https://${{ needs.deploy.outputs.containerAppUrl }}" --repo ${{ github.repository }}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">GH_TOKEN</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> secrets.GITHUB_TOKEN </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre></div></div>
<p>What you're hopefully gleaning from the above is that we have 4 jobs in this workflow:</p>
<ul>
<li><code>get-pr-branch-name</code> - this job calls the <code>util-get-pr-branch-name.yaml</code> workflow to get the branch name of the pull request. Note that we pass the <code>github.event.issue.number</code> as the <code>pullRequestNumber</code> input.</li>
<li><code>pre-deploy</code> - this job runs immediately to post a comment in the pull request to let the user know that the preview environment is being deployed. (Again using the GitHub CLI.) The comment gives the user feedback that the command has been received and is being actioned. Based upon my experience, this response will show up in the pull request 5-10 seconds after the <code>/deploy</code> command is entered. Not as fast as I'd like, but reasonable. For bonus points, I've chosen to include a link to the GitHub Actions run that is deploying the preview environment. This is useful as it allows the user to see the progress of the deployment.</li>
<li><code>deploy</code> - this job calls the <code>util-build-and-deploy.yaml</code> workflow to build and deploy the code for the branch. Note that we pass the <code>branchName</code> input to the workflow using the <code>get-pr-branch-name.outputs.branchName</code> output. Note also that we're passing <code>deploy: true</code> to the workflow to ensure that the code is deployed, and that we're inheriting the secrets from the parent workflow. This is important as it allows the child workflow to access the secrets it needs to deploy the code.</li>
<li><code>post-deploy</code> - this job posts a comment in the pull request to let the user know that the preview environment has been deployed and where they can find it.</li>
</ul>
<p>Or maybe I should have said it better as a screenshot:</p>
<p><img decoding="async" loading="lazy" alt="screenshot of pull request comments" src="https://johnnyreilly.com/assets/images/screenshot-pull-request-comments-39dd71778a3039bc342d6349667fd81c.webp" width="440" height="501" class="img_ev3q"></p>
<p>Yup! That's the same screenshot as before. I'm just showing it again to remind you that this is what we've built.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="writing-other-slash-commands">Writing other slash commands<a href="https://johnnyreilly.com/slash-command-your-deployment-with-github-actions#writing-other-slash-commands" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>We've written a slash command for deployment in this post, but you could write a slash command for anything you like. The key is to use the <code>issue_comment</code> event to trigger the workflow, and to check the comment body for the command you're interested in. You could pass more information in the comment body than just the slash command. For example, you could pass the name of the environment you want to deploy to, or the version of the app you want to deploy. You could even pass multiple commands in a single comment. The world is your oyster!</p>
<p>You can then call other workflows to do the heavy lifting for you, remembering to pass in any inputs that are needed.</p>
<p>If you would like to see the repo where this was implemented, <a href="https://github.com/johnnyreilly/poorclaresarundel-aca/tree/f052dd2f5d55bcec8547624e928bbf90432f3872" target="_blank" rel="noopener noreferrer">look here</a>.</p>]]></content:encoded>
            <category>GitHub Actions</category>
            <category>Azure Container Apps</category>
        </item>
        <item>
            <title><![CDATA[Azure Artifacts: Publish a private npm package with Azure DevOps]]></title>
            <link>https://johnnyreilly.com/azure-artifacts-publish-private-npm-package-with-azure-devops</link>
            <guid>https://johnnyreilly.com/azure-artifacts-publish-private-npm-package-with-azure-devops</guid>
            <pubDate>Sun, 01 Dec 2024 09:45:10 GMT</pubDate>
            <description><![CDATA[Azure DevOps has a feature called Azure Artifacts that supports publishing npm packages to a feed for consumption. This post shows how to publish a private npm package with Azure DevOps.]]></description>
            <content:encoded><![CDATA[<p>Azure DevOps has a feature called Azure Artifacts that supports publishing npm packages to a feed for consumption. Publishing a private npm package with Azure DevOps is a common scenario for teams that want to share code across projects or organizations. This post shows how to publish a private npm package with Azure DevOps.</p>
<p><img decoding="async" loading="eager" alt="title image reading &amp;quot;Azure Artifacts: Publish a private npm package with Azure DevOps&amp;quot; with an Azure DevOps and npm logos" src="https://johnnyreilly.com/assets/images/title-image-f41c20b738c408ad754258ede7571c6f.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<p>Publishing a private npm package with Azure DevOps is fairly straightforward, but surprisingly documentation is a little sparse.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-feeds-are-available-in-azure-artifacts">What feeds are available in Azure Artifacts?<a href="https://johnnyreilly.com/azure-artifacts-publish-private-npm-package-with-azure-devops#what-feeds-are-available-in-azure-artifacts" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>If you don't already have a feed to publish your npm package to, you can create one in Azure DevOps <a href="https://learn.microsoft.com/en-us/azure/devops/artifacts/concepts/feeds?view=azure-devops" target="_blank" rel="noopener noreferrer">by following these instructions</a>.</p>
<p>If you're trying to find out what feeds are available in Azure Artifacts, you can find them in the Azure DevOps UI. Go to the Artifacts section in Azure DevOps and you'll see a list of feeds. The URL for the feed will be in the format <code>https://dev.azure.com/[ORGANIZATION]/_artifacts/feed</code>.</p>
<p>There you'll see a dropdown with the feeds you have access to:</p>
<p><img decoding="async" loading="lazy" alt="screenshot of the feeds in Azure DevOps" src="https://johnnyreilly.com/assets/images/screenshot-npm-feeds-in-azure-artifacts-b561f2cc09bb8358baf4078561fc4c06.webp" width="1248" height="690" class="img_ev3q"></p>
<p>You'll see from the screenshot that I have access to a feed called <code>npmrc-script-organization</code>. Let's use that feed to publish a private npm package.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="setting-up-the-npmrc-file">Setting up the <code>.npmrc</code> file<a href="https://johnnyreilly.com/azure-artifacts-publish-private-npm-package-with-azure-devops#setting-up-the-npmrc-file" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>So that you can publish to a private feed, you need to set up an <code>.npmrc</code> file in your project. This file will contain the URL of the feed you want to publish to, and your credentials. To set up the <code>.npmrc</code> file, you can click on the "Connect to Feed" button in the Azure DevOps UI:</p>
<p><img decoding="async" loading="lazy" alt="Screenshot of &amp;quot;connect to feed&amp;quot; in Azure DevOps" src="https://johnnyreilly.com/assets/images/screenshot-connect-to-feed-9420465335c838a5365e11888ea36437.webp" width="1016" height="118" class="img_ev3q"></p>
<p>Then select <code>npm</code> and you'll see the instructions for setting up the <code>.npmrc</code> file:</p>
<p><img decoding="async" loading="lazy" alt="Screenshot of the instructions for setting up the .npmrc file" src="https://johnnyreilly.com/assets/images/screenshot-npmrc-e8b46fa648b27148f109ea8fbf6ba807.png" width="2240" height="678" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="publishing-with-azure-pipelines">Publishing with Azure Pipelines<a href="https://johnnyreilly.com/azure-artifacts-publish-private-npm-package-with-azure-devops#publishing-with-azure-pipelines" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Now we're ready to publish our npm package with Azure DevOps. Here's an example of an Azure Pipelines YAML file that publishes a private npm package:</p>
<div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token key atrule">trigger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">batch</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token boolean important" style="color:rgb(255, 98, 140)">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token key atrule">pool</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">vmImage</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> ubuntu</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">latest</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token key atrule">variables</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">isMainBranch</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> eq(variables</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token string" style="color:rgb(165, 255, 144)">'Build.SourceBranch'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> 'refs/heads/main') </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token key atrule">stages</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">stage</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Build_Package_Publish</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Build package and publish</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">jobs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">job</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">steps</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> NodeTool@0</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">              </span><span class="token key atrule">versionSpec</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">20</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Install Node.js</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> npmAuthenticate@0</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">              </span><span class="token key atrule">workingFile</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(System.DefaultWorkingDirectory)/.npmrc</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">bash</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> npm install</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'npm install'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">bash</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> npm run build</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'npm build'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Npm@1</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Publish Package</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">              </span><span class="token key atrule">command</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'publish'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">              </span><span class="token key atrule">publishRegistry</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'useFeed'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">              </span><span class="token key atrule">publishFeed</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'npmrc-script-organization'</span><br></span></code></pre></div></div>
<p>Let's break down the steps in this YAML file:</p>
<ul>
<li>We're installing Node.js and authenticating with the <code>.npmrc</code> file.</li>
<li>We're running <code>npm install</code> and <code>npm run build</code>. These are standard steps for building a Node.js project; yours might vary; what's important is that you are able to get your built package set up.</li>
<li>Finally, we use the <code>Npm@1</code> task to publish the package. We specify the <code>publishRegistry</code> as <code>useFeed</code> and the <code>publishFeed</code> as <code>npmrc-script-organization</code>. This is the feed we're publishing to.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://johnnyreilly.com/azure-artifacts-publish-private-npm-package-with-azure-devops#conclusion" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>In this post, we've seen how to publish a private npm package with Azure DevOps. We've set up the <code>.npmrc</code> file, and we've used an Azure Pipelines YAML file to publish the package. This is a common scenario for teams that want to share code across projects or organizations. I hope this post has been helpful to you!</p>]]></content:encoded>
            <category>Azure DevOps</category>
            <category>Node.js</category>
        </item>
        <item>
            <title><![CDATA[Azure DevOps API: Set User Story column with the Azure DevOps Client for Node.js]]></title>
            <link>https://johnnyreilly.com/azure-devops-set-user-story-column-api</link>
            <guid>https://johnnyreilly.com/azure-devops-set-user-story-column-api</guid>
            <pubDate>Fri, 01 Nov 2024 20:57:55 GMT</pubDate>
            <description><![CDATA[It is possible to set the column of a User Story in Azure DevOps with the Azure DevOps Client for Node.js, but the mechanism is surprising.]]></description>
            <content:encoded><![CDATA[<p>When I attempted to set the column of a User Story in Azure DevOps using the Azure DevOps Client for Node.js, I was surprised to find that the field <code>System.BoardColumn</code> was read-only and I bumped into the error:</p>
<blockquote>
<p>TF401326: Invalid field status 'ReadOnly' for field 'System.BoardColumn'.</p>
</blockquote>
<p><img decoding="async" loading="eager" alt="title image reading &amp;quot;Azure DevOps API: Set User Story column with the Azure DevOps Client for Node.js&amp;quot; with an Azure DevOps logo" src="https://johnnyreilly.com/assets/images/title-image-295933715c6803390e6d8ed282e77f0a.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<p>This post explains how to set the column of a User Story in Azure DevOps using the Azure DevOps Client for Node.js and it's based in part on a <a href="https://stackoverflow.com/questions/56165538/how-to-modify-boardcolumn-field-of-a-work-item-using-rest-api" target="_blank" rel="noopener noreferrer">Stack Overflow question</a>.</p>
<p>The <a href="https://github.com/microsoft/azure-devops-node-api" target="_blank" rel="noopener noreferrer">Azure DevOps Client for Node.js</a> is a great way to interact with the Azure DevOps API if you're building with TypeScript. The library provides an API and the types. In this post, we'll use the client to set the column of a User Story in Azure DevOps rather than directly working with the API.</p>
<p><img decoding="async" loading="lazy" alt="A screenshot of a user story in Azure DevOps" src="https://johnnyreilly.com/assets/images/screenshot-azure-devops-column-c3309929828f810e7f0ef31b304905b6.webp" width="492" height="402" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="getting-the-workitemtrackingapi">Getting the WorkItemTrackingApi<a href="https://johnnyreilly.com/azure-devops-set-user-story-column-api#getting-the-workitemtrackingapi" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Consider the following code:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">*</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">as</span><span class="token plain"> nodeApi </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'azure-devops-node-api'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">type</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">WorkItem</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  WorkItemExpand</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'azure-devops-node-api/interfaces/WorkItemTrackingInterfaces.js'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">type</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> IWorkItemTrackingApi </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'azure-devops-node-api/WorkItemTrackingApi.js'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> authHandler </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> pat </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// If running locally you will use a Personal Access Token</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token operator" style="color:rgb(255, 157, 0)">?</span><span class="token plain"> nodeApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">getPersonalAccessTokenHandler</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      pat</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/** allowCrossOriginAuthentication */</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// If running in Azure DevOps you will use the System.AccessToken</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    nodeApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">getHandlerFromToken</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      sat</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/** allowCrossOriginAuthentication */</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> webApi </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">nodeApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">WebApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token string" style="color:rgb(165, 255, 144)">'https://dev.azure.com/johnnyreilly/'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  authHandler</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> workItemTrackingApi </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> webApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">getWorkItemTrackingApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre></div></div>
<p>This code sets up the Azure DevOps Client for Node.js and gets the <code>WorkItemTrackingApi</code>. The <code>WorkItemTrackingApi</code> is the API we'll use to set the column of a User Story. You'll need to replace <code>pat</code> and <code>sat</code> with your Personal Access Token and System Access Token, respectively (depending on where this code executes). And the organisation you use will likely be different from <code>johnnyreilly</code>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="getting-the-user-story">Getting the User Story<a href="https://johnnyreilly.com/azure-devops-set-user-story-column-api#getting-the-user-story" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>We can now load our user story, given its ID:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> userStory </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> workItemTrackingApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">getWorkItem</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  userStoryId</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/** fields */</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">undefined</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/** asOf */</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">undefined</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/** expand */</span><span class="token plain"> WorkItemExpand</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">All</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre></div></div>
<p>This code loads the User Story with the ID <code>userStoryId</code>. We're using the <code>WorkItemExpand.All</code> option to ensure we get all the fields of the User Story.When you look at the User Story, you'll see that the <code>System.BoardColumn</code> field is there. This is the field we want to set, but we can't do it directly. If we try we'll encounter the notorious error:</p>
<blockquote>
<p>TF401326: Invalid field status 'ReadOnly' for field 'System.BoardColumn'.</p>
</blockquote>
<p>However, if you look closely at the User Story you'll see two very similar fields:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token property" style="color:rgb(255, 157, 0)">"System.BoardColumn"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"Blocked"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token property" style="color:rgb(255, 157, 0)">"WEF_1D7E8E9B92454212B8A5E6DFBCED0D17_Kanban.Column"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"Blocked"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><br></span></code></pre></div></div>
<p>The <code>System.BoardColumn</code> field is read-only, but the <code>WEF_1D7E8E9B92454212B8A5E6DFBCED0D17_Kanban.Column</code> field is not. This is the field we can set to change the column of the User Story. And that will, in turn, set the <code>System.BoardColumn</code> field. Why this is the case is a mystery to me, but it works.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-columns-can-we-set">What columns can we set?<a href="https://johnnyreilly.com/azure-devops-set-user-story-column-api#what-columns-can-we-set" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>This may be more than what you need, but as someone who has bumped into the error:</p>
<blockquote>
<p>TF401320: Rule Error for field State. Error code: Required, HasValues, LimitedToValues, SetByRule, InvalidEmpty.</p>
</blockquote>
<p>You might want to know what columns you can set, in order that you can avoid this error happening. Or at least you might want to know what columns you can set so that you can provide a helpful error message to the user. Here's how you can get the columns for a board:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> workApi </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> webApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">getWorkApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> columns </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> workApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">getBoardColumns</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    project</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'my-project'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    team</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'my-team'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token string" style="color:rgb(165, 255, 144)">'Stories'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> validColumns </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> columns</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">map</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">column</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> column</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">name </span><span class="token operator" style="color:rgb(255, 157, 0)">??</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">filter</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre></div></div>
<p>This is optional, but I've found it useful.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="setting-the-column">Setting the Column<a href="https://johnnyreilly.com/azure-devops-set-user-story-column-api#setting-the-column" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>With all that taken care of, we can now set the column of the User Story with this code:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">updateUserStoryColumn</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  userStory</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  workItemTrackingApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  columnName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  validColumns</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  whatIf</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  userStory</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> WorkItem</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  workItemTrackingApi</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> IWorkItemTrackingApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  columnName</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  validColumns</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  whatIf</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">boolean</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> isAValidColumn </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> validColumns</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">includes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">columnName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token operator" style="color:rgb(255, 157, 0)">!</span><span class="token plain">isAValidColumn</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">throw</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">Error</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">We cannot move a User Story to the column "</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">columnName</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string string" style="color:rgb(165, 255, 144)">"; these are the columns that a User Story can be moved to: </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">validColumns</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation function" style="color:rgb(250, 208, 0)">map</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token template-string interpolation">column</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token template-string interpolation"> </span><span class="token template-string interpolation operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token template-string interpolation"> </span><span class="token template-string interpolation template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string interpolation template-string string" style="color:rgb(165, 255, 144)">"</span><span class="token template-string interpolation template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation template-string interpolation">column</span><span class="token template-string interpolation template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string interpolation template-string string" style="color:rgb(165, 255, 144)">"</span><span class="token template-string interpolation template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation function" style="color:rgb(250, 208, 0)">join</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token template-string interpolation string" style="color:rgb(165, 255, 144)">', '</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token operator" style="color:rgb(255, 157, 0)">!</span><span class="token plain">userStory</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">fields</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">throw</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">Error</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'No fields found'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// We are looking for a field like this:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// 'WEF_1D7E8E9B92454212B8A5E6DFBCED0D17_Kanban.Column': 'In-Progress',</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> wefField </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token operator" style="color:rgb(255, 157, 0)">...</span><span class="token plain">Object</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">entries</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">userStory</span><span class="token operator" style="color:rgb(255, 157, 0)">?.</span><span class="token plain">fields</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">find</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">fieldName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> _value</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> fieldName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">includes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'_Kanban.Column'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token operator" style="color:rgb(255, 157, 0)">!</span><span class="token plain">wefField</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">throw</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">Error</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'No WEF field found'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> fieldToUpdate </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> wefField</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token number" style="color:rgb(255, 98, 140)">0</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// Define the update</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> patchDocument </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      op</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'add'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// surprisingly, this is the operation for updating a field - see https://learn.microsoft.com/en-us/rest/api/azure/devops/wit/work-items/update?view=azure-devops-rest-7.1&amp;tabs=HTTP#update-a-field</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      path</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">/fields/</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">fieldToUpdate</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      value</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> columnName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// COMMENTED OUT AS WILL NEVER WORK - LEFT FOR ILLUSTRATION</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// {</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">//     op: "add",</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">//     path: `/fields/System.BoardColumn`,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">//     value: columnName,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// },</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">try</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">whatIf</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token builtin" style="color:rgb(250, 208, 0)">console</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">log</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">Would update User Story </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">userStory</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation">id</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string string" style="color:rgb(165, 255, 144)"> to column </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">columnName</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        patchDocument</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// Update the work item</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> updatedWorkItem </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> workItemTrackingApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">updateWorkItem</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/** customHeaders */</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">undefined</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/** document */</span><span class="token plain"> patchDocument</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/** id */</span><span class="token plain"> userStory</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">id</span><span class="token operator" style="color:rgb(255, 157, 0)">!</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token builtin" style="color:rgb(250, 208, 0)">console</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">log</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">User Story </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">updatedWorkItem</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation">id</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string string" style="color:rgb(165, 255, 144)"> moved to </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">columnName</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">err</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token builtin" style="color:rgb(250, 208, 0)">console</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">error</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">Error moving User Story </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">userStory</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation">id</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string string" style="color:rgb(165, 255, 144)"> to </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">columnName</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      err</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">updateUserStoryColumn</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  userStory</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  workItemTrackingApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  columnName</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'Prioritised'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  validColumns</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  whatIf</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">false</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre></div></div>
<p>The code above:</p>
<ul>
<li>Checks that the column we want to move the User Story to is a valid column.</li>
<li>Finds the curiously named <code>WEF_1D7E8E9B92454212B8A5E6DFBCED0D17_Kanban.Column</code> style field we need to update, purely by looking for a field that contains <code>_Kanban.Column</code>.</li>
<li>Defines the update using the <a href="https://learn.microsoft.com/en-us/rest/api/azure/devops/wit/work-items/update?view=azure-devops-rest-7.1&amp;tabs=HTTP#update-a-field" target="_blank" rel="noopener noreferrer">mechanism documented here</a>.</li>
<li>Updates the User Story.</li>
</ul>
<p>You can also see there's a <code>whatIf</code> option. If you set this to <code>true</code>, the code will log what it would do without actually doing it. This is useful for testing.</p>
<p>And this mechanism works - the User Story is moved to the column you specify as desired.</p>]]></content:encoded>
            <category>TypeScript</category>
            <category>Azure DevOps</category>
            <category>Node.js</category>
        </item>
    </channel>
</rss>