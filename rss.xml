<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>I CAN MAKE THIS WORK</title>
        <link>https://johnnyreilly.com/</link>
        <description>The blog of John Reilly ‚ù§Ô∏èüåª</description>
        <lastBuildDate>Sun, 08 Dec 2024 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <copyright>Copyright ¬© 2012 - 2024 John Reilly.</copyright>
        <item>
            <title><![CDATA[Dual Publishing ESM and CJS Modules with tsup and Are the Types Wrong?]]></title>
            <link>https://johnnyreilly.com/dual-publishing-esm-cjs-modules-with-tsup-and-are-the-types-wrong</link>
            <guid>https://johnnyreilly.com/dual-publishing-esm-cjs-modules-with-tsup-and-are-the-types-wrong</guid>
            <pubDate>Thu, 29 Aug 2024 06:20:50 GMT</pubDate>
            <description><![CDATA[Learn how to publish a package that supports both ECMAScript modules (ESM) and CommonJS modules (CJS) using tsup and Are the Types Wrong?]]></description>
            <content:encoded><![CDATA[<p>If you need to publish a package that supports both ECMAScript modules (ESM) and CommonJS modules (CJS), you can use <a href="https://github.com/egoist/tsup" target="_blank" rel="noopener noreferrer"><code>tsup</code></a> to do so. This post will show you how to do that and how to ensure that the types are correct using the tool <a href="https://github.com/arethetypeswrong/arethetypeswrong.github.io" target="_blank" rel="noopener noreferrer"><code>Are the Types Wrong?</code></a>.</p>
<p><img decoding="async" alt="title image reading &amp;quot;Dual Publishing ESM and CJS Modules with tsup and Are the Types Wrong?&amp;quot; with the Are the Types Wrong logo" src="https://johnnyreilly.com/assets/images/title-image-dc75470e8b6f2a9987c70908fbd3c61a.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="package-support-for-esm-and-cjs-with-tsup">Package support for ESM and CJS with tsup<a href="https://johnnyreilly.com/dual-publishing-esm-cjs-modules-with-tsup-and-are-the-types-wrong#package-support-for-esm-and-cjs-with-tsup" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>I recently needed to build a package that supported both ESM and CJS modules. After attempting to implement this myself, and frankly aging ten years, I decided to see if there was a tool out there that could help me. Happily, there are a number of tools that can help with this and I found that the excellent <code>tsup</code> was the easiest to use.</p>
<p><code>tsup</code> is a zero-config TypeScript bundler with a focus on speed and simplicity. It's a great tool for building and bundling your TypeScript code into ESM and CJS modules and is powered by <a href="https://github.com/evanw/esbuild" target="_blank" rel="noopener noreferrer"><code>esbuild</code></a>.</p>
<p>To get started, you can install <code>tsup</code> to your project:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">install</span><span class="token plain"> tsup --save-dev</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Then you can add a script to your <code>package.json</code> to build your package:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"scripts"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"build"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"tsup src/index.ts --format cjs,esm --dts --clean --sourcemap"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>In this example, we're building the <code>src/index.ts</code> file into both CJS and ESM modules, generating type definitions, cleaning up the output directory prior to build, and generating sourcemaps. You can, if you like, use a <code>tsup.config.ts</code> file to configure <code>tsup</code> but I found the above to be sufficient for my needs.</p>
<p>When you run <code>npm run build</code>, you'll see that <code>tsup</code> has created a <code>dist</code> directory with the following structure:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">dist/</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  index.cjs</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  index.cjs.map</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  index.d.cts</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  index.js</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  index.js.map</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  index.d.ts</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The <code>index.js</code> and <code>index.js.map</code> files are the ESM modules and the <code>index.cjs</code> and <code>index.cjs.map</code> files are the CJS modules. The <code>index.d.ts</code> and <code>index.d.cts</code> files contain the type definitions.</p>
<p>This is great news! You now have a package that supports both ESM and CJS modules. But now we need to get our <code>package.json</code> file set up correctly.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="linting-your-packagejson-file-with-are-the-types-wrong">Linting your package.json file with Are the Types Wrong?<a href="https://johnnyreilly.com/dual-publishing-esm-cjs-modules-with-tsup-and-are-the-types-wrong#linting-your-packagejson-file-with-are-the-types-wrong" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>When you're publishing a package, it's important to ensure that your <code>package.json</code> file is set up correctly. It is the manifest that other packages consume. If it is not set up correctly, things won't work at runtime and you'll have an unpleasant engineering experience in your IDE as well. Getting it right includes ensuring that the <code>exports</code> field is set up correctly to support both ESM and CJS modules. This can be a bit tricky to get right, so it's a good idea to use a tool to help you.</p>
<p>I made the following additions to my <code>package.json</code> file to support both ESM and CJS modules:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"//"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"This is the correct way to set up a package with a `src/index.ts` root file that supports both ESM and CJS modules."</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"type"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"module"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"main"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"./dist/index.cjs"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"module"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"./dist/index.js"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"types"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"./dist/index.d.ts"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"exports"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"import"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"types"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"./dist/index.d.ts"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"import"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"./dist/index.js"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"require"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"types"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"./dist/index.d.cts"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"require"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"./dist/index.cjs"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Let's break this down:</p>
<ul>
<li>The <code>type</code> field is set to <code>module</code> to indicate that the package supports ESM modules.</li>
<li>The <code>main</code> field is set to <code>./dist/index.cjs</code> to indicate the entry point for CJS modules.</li>
<li>The <code>module</code> field is set to <code>./dist/index.js</code> to indicate the entry point for ESM modules.</li>
<li>The <code>types</code> field is set to <code>./dist/index.d.ts</code> to indicate the type definitions file for ESM modules.</li>
</ul>
<p>We then set up the <code>exports</code> field to support both ESM and CJS modules. The <code>import</code> field is set up to support ESM modules and the <code>require</code> field is set up to support CJS modules. In each, the <code>types</code> field is set to the relevant type definitions file - significantly, the <code>types</code> comes first.</p>
<p>Here I've jumped straight to the good part here. I've given you the correct way to set up the <code>exports</code> field for a package that supports both ESM and CJS modules. But how do you know if your <code>package.json</code> file is set up correctly?</p>
<p>Well, in my case I used the tool <a href="https://arethetypeswrong.github.io/" target="_blank" rel="noopener noreferrer"><code>Are the Types Wrong</code></a> to lint my <code>package.json</code> file. <code>Are the Types Wrong</code> is a tool that checks your <code>package.json</code> file to ensure that it's set up correctly for publishing a package that supports both ESM and CJS modules. You're possibly aware of the <a href="https://arethetypeswrong.github.io/" target="_blank" rel="noopener noreferrer">website</a> but did you know that there's a CLI tool that you can use to lint your <code>package.json</code> file?</p>
<p>There is.</p>
<p>If you would like to read the full documentation on the CLI tool, you can find it <a href="https://github.com/arethetypeswrong/arethetypeswrong.github.io/blob/main/packages/cli/README.md" target="_blank" rel="noopener noreferrer">here</a>. However, if you're like me and in a hurry, you can just use it like this:</p>
<ul>
<li>cd into your project directory</li>
<li>run <code>npx --yes @arethetypeswrong/cli --pack .</code></li>
<li>et voila, your <code>package.json</code> file will be linted for type issues</li>
</ul>
<p>To see what this looks like, here's the output from running <code>npx @arethetypeswrong/cli</code> in the project directory of a package with the <code>package.json</code> file <em>not</em> set up correctly:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">api v1.0.0</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">Build tools:</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">- typescript@^5.2.2</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚ùå Import resolved to JavaScript files, but no </span><span class="token builtin class-name" style="color:rgb(250, 208, 0)">type</span><span class="token plain"> declarations were found. https://github.com/arethetypeswrong/arethetypeswrong.github.io/blob/main/docs/problems/UntypedResolution.md</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚îÇ                   ‚îÇ </span><span class="token string" style="color:rgb(165, 255, 144)">"api"</span><span class="token plain">       ‚îÇ</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚îÇ node10            ‚îÇ ‚ùå No types ‚îÇ</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚îÇ node16 </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">from CJS</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> ‚îÇ ‚ùå No types ‚îÇ</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚îÇ node16 </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">from ESM</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> ‚îÇ ‚ùå No types ‚îÇ</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚îÇ bundler           ‚îÇ ‚ùå No types ‚îÇ</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>By contrast, here's how it looks when you use the correct <code>package.json</code> file:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">shared v1.0.0</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">Build tools:</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">- typescript@^5.4.5</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">- tsup@^8.1.0</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"> No problems found üåü</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚îÇ                   ‚îÇ </span><span class="token string" style="color:rgb(165, 255, 144)">"api"</span><span class="token plain">    ‚îÇ</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚îÇ node10            ‚îÇ üü¢       ‚îÇ</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚îÇ node16 </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">from CJS</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> ‚îÇ üü¢ </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">CJS</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> ‚îÇ</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚îÇ node16 </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">from ESM</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> ‚îÇ üü¢ </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">ESM</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> ‚îÇ</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚îÇ bundler           ‚îÇ üü¢       ‚îÇ</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Isn't that great? You can now be confident that your <code>package.json</code> file is set up correctly for publishing a package that supports both ESM and CJS modules, both from a runtime code and a types perspective. So the full <code>package.json</code> might look something like this:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"name"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"our-package"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"version"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"1.0.0"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"description"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">""</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"scripts"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"build"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"tsup src/index.ts --format cjs,esm --dts --clean --sourcemap"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"author"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">""</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"license"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"ISC"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"dependencies"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"devDependencies"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"tsup"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"^8.1.0"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"typescript"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"^5.4.5"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"type"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"module"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"main"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"./dist/index.cjs"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"module"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"./dist/index.js"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"types"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"./dist/index.d.ts"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"exports"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"import"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"types"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"./dist/index.d.ts"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"import"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"./dist/index.js"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"require"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"types"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"./dist/index.d.cts"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"require"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"./dist/index.cjs"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://johnnyreilly.com/dual-publishing-esm-cjs-modules-with-tsup-and-are-the-types-wrong#conclusion" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>In this post, we've seen how to publish a package that supports both ESM and CJS modules using <code>tsup</code>. We've also seen how to ensure that the types are correct using the tool <code>Are the Types Wrong</code>.</p>
<p>It's probably worth saying that <code>Are the Types Wrong</code> doesn't check everything, and that <code>tsup</code>s method of dual compilation makes some unchecked assumptions too. Using these tools isn't a silver bullet, given how complicated the ESM/CJS compatibility story is, but they do their best to help.</p>
<p>Thanks to <a href="https://github.com/andrewbranch" target="_blank" rel="noopener noreferrer">Andrew Branch</a> for putting together <code>Are the Types Wrong</code> and to the folk that work on <code>tsup</code> for making it easy to build packages that support both ESM and CJS modules. Thanks also to Andrew for his help in reviewing this post.</p>
<p>Remember, friends don't let friends publish packages with incorrect types!</p>]]></content:encoded>
            <category>TypeScript</category>
        </item>
        <item>
            <title><![CDATA[Using AZD for faster incremental Azure Static Web App deployments in GitHub Actions]]></title>
            <link>https://johnnyreilly.com/using-azd-for-faster-incremental-azure-static-web-app-deployments-in-github-actions</link>
            <guid>https://johnnyreilly.com/using-azd-for-faster-incremental-azure-static-web-app-deployments-in-github-actions</guid>
            <pubDate>Tue, 27 Aug 2024 19:48:33 GMT</pubDate>
            <description><![CDATA[Learn how to speed up deployments of Azure Static Web Apps in GitHub Actions using the AZD command.]]></description>
            <content:encoded><![CDATA[<p>This post is a follow on from the post <a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops">Using AZD for faster incremental Azure Container App deployments in Azure DevOps</a>. In that post, we looked at how to speed up deployments of Azure Container Apps in Azure DevOps using the <a href="https://learn.microsoft.com/en-us/azure/developer/azure-developer-cli/" target="_blank" rel="noopener noreferrer">Azure Developer CLI (<code>azd</code>)</a>. In this post, we're going to look at how to speed up deployments of Azure Static Web Apps in GitHub Actions using <code>azd</code>.</p>
<p><img decoding="async" alt="title image reading &amp;quot;Using AZD for faster incremental Azure Static Web App deployments in GitHub Actions&amp;quot; with the Azure Static Web Apps logo" src="https://johnnyreilly.com/assets/images/title-image-7a98185b6742dae247aecbbc096eac82.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<p>There's going to be some overlap between the last post and this one. I don't want to force you to read them both, so I'll duplicate some of the content from the previous post here. But I'll also add some new content that's specific to deploying Azure Static Web Apps in GitHub Actions with <code>azd</code>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="faster-deployments-from-azd-14-and-beyond">Faster deployments from <code>azd</code> 1.4 and beyond<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-static-web-app-deployments-in-github-actions#faster-deployments-from-azd-14-and-beyond" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>The <code>azd</code> v1.4.0 release contained a significant feature: <code>azd provision</code> is now faster when there are no infrastructure changes.</p>
<p>To quote a trimmed down version of the <a href="https://devblogs.microsoft.com/azure-sdk/azure-developer-cli-azd-october-2023-release/#azd-provision-is-now-faster-when-there-are-no-infrastructure-changes" target="_blank" rel="noopener noreferrer">announcement</a>:</p>
<blockquote>
<p>If you‚Äôve been using the Azure Developer CLI for a while, you may have noticed that sometimes <code>azd provision</code> takes a long time to complete when it may not need to. The wait time was because, prior to version 1.4.0, <code>azd provision</code> would always reprovision regardless of whether the underlying Infrastructure as Code had changed... As of today‚Äôs 1.4.0 release, <code>azd provision</code> now checks the most recent deployment upstream on Azure to see if the state is the same as what‚Äôs represented in the Infrastructure as Code that‚Äôs been used to provision. If the state is the same, the provision is skipped... with this new experience, you should also notice improved performance when running <code>azd up</code> in a CI/CD pipeline as provisioning will be automatically skipped when there are no changes.</p>
</blockquote>
<p>This can help us speed up deployments of Azure Static Web Apps in GitHub Actions.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="background">Background<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-static-web-app-deployments-in-github-actions#background" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>You're reading this post on my blog, which, at the time of writing, runs using Azure Static Web Apps. And has done for years. Every time I push a change, a deployment pipeline runs that deploys the changes to Azure. There's two distinct parts to the deployment pipeline:</p>
<ol>
<li>deploying infrastructure (the Azure resources that the blog relies upon such as the Azure Static Web App, a Cosmos DB etc)</li>
<li>building and deploying the application code (the blog itself)</li>
</ol>
<p>It takes around <strong>3 minutes</strong> to deploy the infrastructure. And this is happening every time we update the site. But most of the time, there are no changes to be made to the infrastructure of the site; just the content. So it's a waste of time. I want to speed this up and <code>azd</code> can help me do that.</p>
<p>Specifically, I want to switch my usage of <code>az deployment group create</code> to <code>azd provision</code> because <code>azd provision</code> is faster when there are no infrastructure changes. We will drop the infrastructure deployment job time from <strong>3 minutes</strong> to <strong>20 seconds</strong> when there are no infrastructure changes.</p>
<p>Now when I started trying to see if doing faster deployments of Static Web Apps was possible with <code>azd</code>, I couldn't discover any documentation. So I've found myself writing the documentation I wish had existed. Please forgive me any mistakes I make along the way.</p>
<p>To be clear on scope, my intention here is only to speed up how we handle the deployment of the infrastructure. I don't want to deploy infrastructure if there are no changes; so I'll use <code>azd</code> to accomplish this goal. I'm not going all in on <code>azd</code> for the deployment of the application code as well. For now, we'll focus solely on the infrastructure piece. Maybe we'll come back to the application code in a future post.</p>
<p>From here on out, we'll go through the changes we need to make to our project to replace <code>az deployment group create</code> with <code>azd provision</code> for faster incremental Azure Static Web App deployments in GitHub Actions.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="hello-azureyml">Hello <code>azure.yml</code><a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-static-web-app-deployments-in-github-actions#hello-azureyml" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>To make use of <code>azd</code>, we'll requires an <code>azure.yml</code> file in our project. This file is going to contain the configuration for our <code>azd</code> project. Here's what it looks like:</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># yaml-language-server: $schema=https://raw.githubusercontent.com/Azure/azure-dev/main/schemas/v1.0/azure.yaml.json</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> my</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">static</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">web</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">app</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token key atrule">metadata</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">template</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> azd</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">init@1.9.6</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token key atrule">services</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">web</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">host</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> staticwebapp</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">resourceName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">STATIC_WEB_APP_NAME</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">project</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> ./blog</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">website</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">language</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> js</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The particular things to note in this file are:</p>
<ul>
<li>we have one service - <code>web</code> - this is the service that represents our Static Web App</li>
<li>our host is <code>staticwebapp</code> - this means we're deploying a Static Web App</li>
<li>we provide the resource name of our static web app name in the <code>STATIC_WEB_APP_NAME</code> environment variable - this allows <code>azd</code> to identify it. (The <code>resourceName</code> parameter supports environment variable substitution and will plug in the name of the resource when it is used.)</li>
<li>we provide the path to the project that contains the code for our Static Web App in the <code>project</code> parameter and specify it is <code>js</code> code in the <code>language</code> parameter. Neither of these parameters are used by <code>azd</code> during provisioning, but they are required.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="bicep-modifications">Bicep modifications<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-static-web-app-deployments-in-github-actions#bicep-modifications" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>The feature we want to consume from <code>azd</code> is the ability to avoid provisioning infrastructure when there are no changes. To do this, we need to make some modifications to our Bicep files in order that <code>azd</code> can determine whether there are changes or not.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="using-resource-group-scoped-deployments-with-azd">Using resource group scoped deployments with azd<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-static-web-app-deployments-in-github-actions#using-resource-group-scoped-deployments-with-azd" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>We're going to start off with a minor tweak to our <code>main.bicep</code> file; the entry point to our Bicep deployments.</p>
<div class="language-bicep codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bicep codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">targetScope</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'resourceGroup'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The change above allows us to use <code>azd</code> deployments targeted at existing resource groups. The default mode of operation for <code>azd</code> deployments is deploying a resource group to a subscription. We are seeking to <a href="https://learn.microsoft.com/en-us/azure/developer/azure-developer-cli/resource-group-scoped-deployments" target="_blank" rel="noopener noreferrer">deploy to an existing resource group</a>.</p>
<p>Now, strictly speaking, this isn't necessary for speeding up deployments with <code>azd</code>. But if you're not one for creating a resource group per deployment (as I am not), then this is a good idea. This kind of deployment requires less permissions and aligns with the principle of least privilege.</p>
<p>We'll need to opt into using this feature with <code>azd</code> later on when we update our workflow as at present resource group scoped deployments are considered "alpha".</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="new-parameters-in-mainbicep">New parameters in <code>main.bicep</code><a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-static-web-app-deployments-in-github-actions#new-parameters-in-mainbicep" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>We're going to add an <code>envName</code> parameter that will be used to populate <code>azd-env-name</code> tags on resources:</p>
<div class="language-bicep codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bicep codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token decorator">@description</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'Environment eg dev, prod'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> envName </span><span class="token datatype class-name" style="color:rgb(250, 208, 0)">string</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="tagging-resources-with-the-azd-tags">Tagging resources with the azd tags<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-static-web-app-deployments-in-github-actions#tagging-resources-with-the-azd-tags" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>Now that we've passed the <code>envName</code> parameter to our <code>main.bicep</code> file, we're going to use it to tag our resources with the environment name. This allows <code>azd</code> to determine the environment of a given resource. We already have a <code>tags</code> object, let's add the value of the <code>envName</code> parameter to it with the special property name of <code>azd-env-name</code>:</p>
<div class="language-bicep codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bicep codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> combinedTags </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">union</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">tags</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'azd-env-name'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> envName </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We'll make use of the <code>combinedTags</code> object as we tag our resources instead of the <code>tags</code> object. We will also add an extra tag to the static web app resource to identify it as our <code>web</code> service:</p>
<div class="language-bicep codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bicep codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> tagsForStaticWebApp </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">union</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">'azd-service-name'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'web'</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// note the "web" matches the service name in azure.yml</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> combinedTags</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">resource</span><span class="token plain"> staticWebApp </span><span class="token string" style="color:rgb(165, 255, 144)">'Microsoft.Web/staticSites@2022-09-01'</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">name</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> staticWebAppName</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">location</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> location</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">tags</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> tagsForStaticWebApp</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="migrating-to-mainbicepparam">Migrating to <code>main.bicepparam</code><a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-static-web-app-deployments-in-github-actions#migrating-to-mainbicepparam" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>Prior to using <code>azd</code>, we were using a <code>main.bicep</code> file to deploy our infrastructure and we provided parameters to this file via our GitHub Actions workflow. We're going to make a change to our pipeline to use a <a href="https://learn.microsoft.com/en-us/azure/azure-resource-manager/bicep/parameter-files?tabs=Bicep" target="_blank" rel="noopener noreferrer"><code>main.bicepparam</code></a> file instead.</p>
<p>The <code>main.bicepparam</code> file is going to contain the parameters that we were previously providing directly to our <code>main.bicep</code> file. It's going to pick these up from environment variables that we'll declare and from environment variables provided by <code>azd</code>; such as the one to drive environment name. So there's a little more indirection in our parameter passing now. It used to be:</p>
<p><em>GitHub Actions -&gt; <code>main.bicep</code></em></p>
<p>Now it will be:</p>
<p><em>GitHub Actions -&gt; <code>main.bicepparam</code> -&gt; <code>main.bicep</code></em></p>
<p>Consider the following (cut down) <code>main.bicepparam</code> file:</p>
<div class="language-bicep codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bicep codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">using </span><span class="token string" style="color:rgb(165, 255, 144)">'./main.bicep'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> envName </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">readEnvironmentVariable</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'AZURE_ENV_NAME'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> location </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">readEnvironmentVariable</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'AZURE_LOCATION'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> branch </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">readEnvironmentVariable</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'REPOSITORY_BRANCH'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> staticWebAppName </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">readEnvironmentVariable</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'STATIC_WEB_APP_NAME'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> tags </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">owner</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">readEnvironmentVariable</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'TAGS_OWNER'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">emain</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">readEnvironmentVariable</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'TAGS_EMAIL'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This should pick up the values we need from environment values provided both by us and <code>azd</code>. Later we'll update the GitHub Actions workflow to ensure these are provided.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="updating-our-github-actions-workflow-to-use-azd">Updating our GitHub Actions workflow to use <code>azd</code><a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-static-web-app-deployments-in-github-actions#updating-our-github-actions-workflow-to-use-azd" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>We need to install and configure <code>azd</code> in our GitHub Actions workflow:</p>
<div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Install azd üîß</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">uses</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Azure/setup</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">azd@v1.0.0</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Set `azd` config options üîß</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">run</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">|</span><span class="token scalar string" style="color:rgb(165, 255, 144)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">    azd config set auth.useAzCliAuth "true"</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">    azd config set alpha.resourceGroupDeployments on</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>As well as installing <code>azd</code>, we're setting two configuration options. The <code>auth.useAzCliAuth</code> option tells <code>azd</code> to use the Azure CLI for authentication - we already have the <a href="https://github.com/marketplace/actions/azure-login" target="_blank" rel="noopener noreferrer">Azure Login Action</a> in our workflow, authenticating our pipeline so it can use the Azure CLI. With the <code>useAzCliAuth</code> option set, <code>azd</code> can make use of that existing authentication rather than needing us to authenticate it independently. The <code>alpha.resourceGroupDeployments</code> option enables resource group scoped deployments because we're using resource group scoped deployments in our Bicep files as we discussed earlier.</p>
<p>Now we have <code>azd</code> in place and authenticated, we're ready to swap out <code>az deployment group create</code> for <code>azd provision</code>. We're going to remove the following job from our workflow:</p>
<div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Infra </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> provision üîß</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">uses</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> azure/CLI@v2</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">with</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">inlineScript</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">|</span><span class="token scalar string" style="color:rgb(165, 255, 144)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">      az deployment group create \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">        --resource-group ${{ env.RESOURCE_GROUP }} \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">        --name "${{ steps.deployment_name.outputs.DEPLOYMENT_NAME }}" \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">        --template-file ./infra/main.bicep \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">        --parameters \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">            branch='main' \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">            location='${{ env.LOCATION }}' \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">            staticWebAppName='${{ env.STATICWEBAPPNAME }}' \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">            tags='${{ env.TAGS }}' \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">            rootCustomDomainName='${{ env.ROOTCUSTOMDOMAINNAME }}' \</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">            blogCustomDomainName='${{ env.BLOGCUSTOMDOMAINNAME }}'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>And in it's place we'll add the following:</p>
<div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Infra </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> provision üîß</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">run</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> azd provision </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">no</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">prompt</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># See https://learn.microsoft.com/en-gb/azure/developer/azure-developer-cli/configure-devops-pipeline?tabs=azdo</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">AZURE_LOCATION</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> env.AZURE_LOCATION </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">AZURE_SUBSCRIPTION_ID</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> vars.AZURE_SUBSCRIPTION_ID </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">AZURE_ENV_NAME</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> prod </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># I only have one environment - you might have more</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># https://learn.microsoft.com/en-us/azure/developer/azure-developer-cli/manage-environment-variables#user-provided-environment-variables</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">AZURE_RESOURCE_GROUP</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> env.AZURE_RESOURCE_GROUP </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># Define the additional variables or secrets that are required only for provision - see main.bicepparam</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">REPOSITORY_BRANCH</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> main </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># we only provision for the main branch</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">STATIC_WEB_APP_NAME</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> env.STATIC_WEB_APP_NAME </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">TAGS_OWNER</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> env.TAGS_OWNER </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">TAGS_EMAIL</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> env.TAGS_EMAIL </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">ROOT_CUSTOM_DOMAIN_NAME</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> env.ROOT_CUSTOM_DOMAIN_NAME </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">BLOG_CUSTOM_DOMAIN_NAME</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> env.BLOG_CUSTOM_DOMAIN_NAME </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The above amounts simply to a <code>azd provision --no-prompt</code> command, but it works because we are first authenticated and because we supply a number of environment variables to the job.</p>
<p>You'll see that we're populating environment variables that will be picked up by our <code>main.bicepparam</code> file. These were the same variables that were being passed explicitly to our <code>main.bicep</code> file when we were using <code>az deployment group create</code>. Now it will be <code>azd</code> that will be responsible for passing these values to our <code>main.bicep</code> file, using <code>main.bicepparam</code> as the connective tissue.</p>
<p>When <code>azd provision</code> runs, it will look at the existing infrastructure and determine whether there are changes to be made. If there are no changes, then the deployment will be skipped. This is the magic of <code>azd</code>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-does-it-look-like-when-it-works">What does it look like when it works?<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-static-web-app-deployments-in-github-actions#what-does-it-look-like-when-it-works" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Well, once the initial workflow has run (to tag the resources accordingly), a subsequent no-infra-change will look like this:</p>
<p><img decoding="async" loading="lazy" alt="screenshot of azd detecting no changes and so not provisioning" src="https://johnnyreilly.com/assets/images/screenshot-of-azd-detecting-no-changes-7eb0fe0adb96a8060b8f21f009db79ea.webp" width="793" height="579" class="img_ev3q"></p>
<p>The <code>Skipped: Didn't find new changes</code> message is a sign that we're now no longer deploying in full each time. Only when we need to. This is us dropping infrastructure deployment job time from <strong>3 minutes</strong> to <strong>20 seconds</strong> when there are no infrastructure changes.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-static-web-app-deployments-in-github-actions#conclusion" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>It is actually fairly straightforward to get the benefits of faster deployments with <code>azd</code> for Static Web Apps. In fact it's even more straightforward than with Container Apps, because you can choose to continue with your own preferred method of app code deployment. You're not obliged to use <code>azd deploy</code> as well as <code>azd provision</code>. So even if you might want to make the switch later, you can choose to do it gradually.</p>
<p>If you're interested in the PR that implemented this for my blog <a href="https://github.com/johnnyreilly/blog.johnnyreilly.com/pull/913/files" target="_blank" rel="noopener noreferrer">you can find it here</a> - though I should warn you that I did some general refactoring in there as well, so please ignore tweaks to blog content etc.</p>]]></content:encoded>
            <category>Azure</category>
            <category>Bicep</category>
            <category>GitHub Actions</category>
            <category>Azure Static Web Apps</category>
        </item>
        <item>
            <title><![CDATA[Web Workers, Comlink, Vite and TanStack Query]]></title>
            <link>https://johnnyreilly.com/web-workers-comlink-vite-tanstack-query</link>
            <guid>https://johnnyreilly.com/web-workers-comlink-vite-tanstack-query</guid>
            <pubDate>Sun, 23 Jun 2024 13:50:30 GMT</pubDate>
            <description><![CDATA[Web Workers are a great way to offload work from the main thread. Comlink is a delightful way to communicate with Web Workers. TanStack Query is an awesome way to bring them together.]]></description>
            <content:encoded><![CDATA[<p>I've written previously about combining <a href="https://johnnyreilly.com/web-workers-comlink-typescript-and-react">Web Workers and Comlink</a>. I recently found myself needing to use Web Workers again. As I picked them up this time I found myself making some different choices, now I was working in a codebase that used Vite to build. I ended up using <a href="https://github.com/tanstack/query" target="_blank" rel="noopener noreferrer">TanStack Query</a> in combination with my <a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers" target="_blank" rel="noopener noreferrer">Web Workers</a> and <a href="https://github.com/GoogleChromeLabs/comlink" target="_blank" rel="noopener noreferrer">Comlink</a>. It was a really good fit and this post will show you how to use Web Workers with Comlink and TanStack Query.</p>
<p><img decoding="async" alt="title image reading &amp;quot;Web Workers, Comlink, Vite and TanStack Query&amp;quot; with the Static Web Apps CLI and Vite logos" src="https://johnnyreilly.com/assets/images/title-image-734455bc3d473a791221ef8db78f23ac.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="a-use-case-for-web-workers">A use case for Web Workers<a href="https://johnnyreilly.com/web-workers-comlink-vite-tanstack-query#a-use-case-for-web-workers" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Web Workers are a great way to offload work from the main thread. This can be particularly useful if you have a long running task that you don't want to block the UI thread. In my case, I was working on a feature that required a lot of computation. I wanted to keep the UI responsive whilst the numbers got crunched.</p>
<p>Imagine the following function in our <code>calculations.ts</code> file:</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">expensiveCalculation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  data</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> BigLumpOfData</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  from</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> Date</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  to</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> Date</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">number</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// SUPER EXPENSIVE COMPUTATION CODE HERE...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> importantNumber</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This function is doing some very expensive computation. We don't want to block the main thread with it. We want to use a Web Worker to offload this work. But the naked Web Worker API is a bit of a pain to work with. Instead then, we can use Comlink to make it easier.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="vite-comlink-setup-with-vite-plugin-comlink">Vite Comlink setup with <code>vite-plugin-comlink</code><a href="https://johnnyreilly.com/web-workers-comlink-vite-tanstack-query#vite-comlink-setup-with-vite-plugin-comlink" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>As I've mentioned, we're working with Vite in this codebase. To get Comlink working with Vite, we can use the dedicated plugin named <a href="https://github.com/mathe42/vite-plugin-comlink" target="_blank" rel="noopener noreferrer"><code>vite-plugin-comlink</code></a>. It is a wrapper around Comlink that simplifies using it with Vite.</p>
<p>To get started, we need to install the plugin and Comlink:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> i --save-dev vite-plugin-comlink</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> i </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">--save</span><span class="token plain"> comlink</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We need the plugin at build time and Comlink at runtime. We can then add the plugin to our Vite config:</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> react </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@vitejs/plugin-react'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> defineConfig </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'vite'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> comlink </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'vite-plugin-comlink'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// https://vitejs.dev/config/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">default</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">defineConfig</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  plugins</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token function" style="color:rgb(250, 208, 0)">comlink</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">react</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  worker</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token function-variable function" style="color:rgb(250, 208, 0)">plugins</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token function" style="color:rgb(250, 208, 0)">comlink</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Note that we're adding the <code>comlink</code> plugin to both the main Vite config and the worker config. This is because we want to use Comlink in both places. The order of the plugins is important. We want to make sure that <code>comlink</code> is added right at the start.</p>
<p>This is a TypeScript project, so we update our <code>vite-env.d.ts</code> file to include the Comlink types:</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// &lt;reference types="vite/client" /&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// &lt;reference types="vite-plugin-comlink/client" /&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="migrating-our-expensive-calculations-to-comlink">Migrating our expensive calculations to Comlink<a href="https://johnnyreilly.com/web-workers-comlink-vite-tanstack-query#migrating-our-expensive-calculations-to-comlink" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Now we have Comlink set up, we can move our expensive calculations to a Web Worker. This is very easily achieved; we just need to create a variable that points to our Web Worker file:</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> calculationsWorker </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">ComlinkWorker</span><span class="token class-name operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token class-name" style="color:rgb(250, 208, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token class-name" style="color:rgb(250, 208, 0)">  </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">typeof</span><span class="token class-name" style="color:rgb(250, 208, 0)"> </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">import</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name string" style="color:rgb(165, 255, 144)">'./calculations.js'</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token class-name" style="color:rgb(250, 208, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token class-name" style="color:rgb(250, 208, 0)"></span><span class="token class-name operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name constant" style="color:rgb(250, 208, 0)">URL</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'./calculations.js'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">meta</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">url</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  name</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'calculationsComlink'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  type</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'module'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>There's not much code above, but it's doing a lot. We're creating a new Web Worker with Comlink using the <code>ComlinkWorker</code>. This is an affordance provided by <code>vite-plugin-comlink</code> and it creates a Web Worker with Comlink. We're pointing it at our <code>calculations.js</code> file (<code>.js</code> as this is an ESM import representing the <code>calculations.ts</code> file). We're also giving the Web Worker a name, <code>calculationsComlink</code> - this will be handy when debugging. Finally, we're telling the Web Worker that it's a module. So we can use ESM imports in our Web Worker. Actually, we're not do that right now, but we could.</p>
<p>Note also that the types will be inferred from the <code>calculations.js</code> file thanks to the <code>typeof import('./calculations.js')</code>. This is a really nice feature of TypeScript.</p>
<p>The API of the <code>calculationsWorker</code> is the same as the <code>calculations.ts</code> file, with one subtle difference. All sync functions will move to being <code>Promise</code> based. So the API of the <code>calculationsWorker</code> is</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token function-variable function" style="color:rgb(250, 208, 0)">expensiveCalculation</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">data</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> BigLumpOfData</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> from</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> Date</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> to</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> Date</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token builtin" style="color:rgb(250, 208, 0)">Promise</span><span class="token operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token builtin" style="color:rgb(250, 208, 0)">number</span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Which is pretty much the same as the original function in <code>calculations.ts</code>:</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token function-variable function" style="color:rgb(250, 208, 0)">expensiveCalculation</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">data</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> BigLumpOfData</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> from</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> Date</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> to</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> Date</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">number</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The only difference is that the return type is now a <code>Promise&lt;number&gt;</code> rather than a <code>number</code>. If your function was <code>async</code> / <code>Promise</code>-based originally, then the API remains identical.</p>
<p>Incidentally; this is terrific. The journey from a standard codebase to a Web Worker enabled codebase is really smooth.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="using-tanstack-query-to-interact-with-the-comlink-web-worker">Using TanStack Query to interact with the Comlink Web Worker<a href="https://johnnyreilly.com/web-workers-comlink-vite-tanstack-query#using-tanstack-query-to-interact-with-the-comlink-web-worker" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>The final piece of the puzzle is to use TanStack Query (AKA React Query) to interact with our Web Worker. TanStack Query is a fantastic library for managing data in applications. It's a great fit for working with our Web Worker because it's designed to work with async data. We can use TanStack Query to manage interactions with our Web Worker.</p>
<p>To install it we run:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> i @tanstack/react-query</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We can then use it in our component like so:</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> expensiveCalculationResult </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">useQuery</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  queryKey</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token string" style="color:rgb(165, 255, 144)">'expensiveCalculation'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> data</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> from</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> to</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token function-variable function" style="color:rgb(250, 208, 0)">queryFn</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    calculationsWorker</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">expensiveCalculation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">data</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">Date</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">from</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">Date</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">to</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  staleTime</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">Infinity</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This is a pretty standard use of TanStack Query. We're using the <code>useQuery</code> hook to fetch data. We're passing in a <code>queryKey</code> that represents the data we're fetching. We're passing in a <code>queryFn</code> that fetches the data. In this case, it's calling our Web Worker. We're also setting <code>staleTime</code> to <code>Infinity</code> so that the data never goes stale. This is an optimisation, because we're not going to be refetching the data unless the dependencies change. (If you'd like to understand more about <code>staleTime</code> read <a href="https://tkdodo.eu/blog/practical-react-query#the-defaults-explained" target="_blank" rel="noopener noreferrer">TkDodo's excellent post</a>).</p>
<p>This is a really nice way to interact with our Web Worker. We're using TanStack Query to manage the data fetching and Comlink to interact with the Web Worker. It's a really nice fit.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="putting-it-all-together">Putting it all together<a href="https://johnnyreilly.com/web-workers-comlink-vite-tanstack-query#putting-it-all-together" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Here's the full component that uses the Web Worker, Comlink and TanStack Query:</p>
<div class="language-tsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-tsx codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token imports"> useQuery </span><span class="token imports punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@tanstack/react-query'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> calculationsWorker </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">ComlinkWorker</span><span class="token class-name operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token class-name" style="color:rgb(250, 208, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token class-name" style="color:rgb(250, 208, 0)">  </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">typeof</span><span class="token class-name" style="color:rgb(250, 208, 0)"> </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">import</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name string" style="color:rgb(165, 255, 144)">'./calculations.js'</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token class-name" style="color:rgb(250, 208, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token class-name" style="color:rgb(250, 208, 0)"></span><span class="token class-name operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name constant" style="color:rgb(250, 208, 0)">URL</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'./calculations.js'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">meta</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">url</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  name</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'calculationsComlink'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  type</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'module'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">WorkerDemo</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  data</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  from</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  to</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  data</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">BigLumpOfData</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  from</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  to</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> expensiveCalculationResult </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">useQuery</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    queryKey</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token string" style="color:rgb(165, 255, 144)">'expensiveCalculation'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> data</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> from</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> to</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token function-variable function" style="color:rgb(250, 208, 0)">queryFn</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      calculationsWorker</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">expensiveCalculation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        data</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">Date</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">from</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">Date</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">to</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    staleTime</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">Infinity</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag" style="color:rgb(255, 157, 0)">div</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag" style="color:rgb(255, 157, 0)">h1</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text">Web Workers, Comlink and Tanstack Query in action!</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag" style="color:rgb(255, 157, 0)">h1</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">expensiveCalculationResult</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">data</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">?</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag" style="color:rgb(255, 157, 0)">p</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text">Calculation result: </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">expensiveCalculationResult</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">data</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag" style="color:rgb(255, 157, 0)">p</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> expensiveCalculationResult</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">isPending</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">?</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag" style="color:rgb(255, 157, 0)">p</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text">Calculating...</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag" style="color:rgb(255, 157, 0)">p</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> expensiveCalculationResult</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">error</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">?</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag" style="color:rgb(255, 157, 0)">p</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text">Error: </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">expensiveCalculationResult</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">error</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag" style="color:rgb(255, 157, 0)">p</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag" style="color:rgb(255, 157, 0)">p</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text">...</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag" style="color:rgb(255, 157, 0)">p</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag" style="color:rgb(255, 157, 0)">div</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This is a really nice way to use Web Workers with TanStack Query. We're using Comlink to interact with the Web Worker and TanStack Query to manage the data fetching. It's a really nice fit. I hope this helps you to use Web Workers in your Vite projects. Enjoy!</p>]]></content:encoded>
            <category>TypeScript</category>
            <category>React</category>
        </item>
        <item>
            <title><![CDATA[typescript-eslint with JSDoc JavaScript]]></title>
            <link>https://johnnyreilly.com/typescript-eslint-with-jsdoc-js</link>
            <guid>https://johnnyreilly.com/typescript-eslint-with-jsdoc-js</guid>
            <pubDate>Sat, 21 Sep 2024 17:44:46 GMT</pubDate>
            <description><![CDATA[You can use typescript-eslint with JSDoc JavaScript to get the benefits of linting powered by type information in a JavaScript codebase; this post shows you how.]]></description>
            <content:encoded><![CDATA[<p>It's possible to statically type check a JavaScript codebase with TypeScript with JSDoc annotations. Going a little further, and using <code>typescript-eslint</code> to lint your codebase with the benefits of type information can improve your code quality even more. This post will show you how to set this up and talk about some of the gotchas.</p>
<p><img decoding="async" alt="title image reading &amp;quot;typescript-eslint with JSDoc JavaScript&amp;quot; with a typescript-eslint logo and TypeScript logo" src="https://johnnyreilly.com/assets/images/title-image-b1fd8bccc2a13baa3adb03e186110f25.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<p>We'll also talk a little about how to use TypeScript in combination with JSDoc annotations in a JavaScript codebase.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="background">Background<a href="https://johnnyreilly.com/typescript-eslint-with-jsdoc-js#background" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>I recently worked on a project where we had a five year old React JavaScript codebase. There wasn't time to convert the codebase to TypeScript, but we wanted to see if we could get some of the benefits of TypeScript by using JSDoc annotations. The codebase also didn't have linting in place. So we thought we'd see if we could use <code>typescript-eslint</code> to lint our codebase. This was a little tricky to set up, so I thought I'd write a post to help others who might be in the same situation.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="setting-up-typescript">Setting up TypeScript<a href="https://johnnyreilly.com/typescript-eslint-with-jsdoc-js#setting-up-typescript" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>First things first, you'll need to set up TypeScript in your project. You can do this by running:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">install</span><span class="token plain"> --save-dev typescript</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We now have TypeScript installed in our project. We'll need to create a <code>tsconfig.json</code> file to configure TypeScript to work with our JavaScript codebase:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"compilerOptions"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/* Visit https://aka.ms/tsconfig to read more about this file */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/* Language and Environment */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"lib"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token string" style="color:rgb(165, 255, 144)">"DOM"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token string" style="color:rgb(165, 255, 144)">"DOM.Iterable"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token string" style="color:rgb(165, 255, 144)">"ESNext"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/* Specify a set of bundled library declaration files that describe the target runtime environment. */</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"jsx"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"preserve"</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/* Specify what JSX code is generated. */</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"target"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"ESNext"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/* Modules */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"module"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"preserve"</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/* Specify what module code is generated. */</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"resolveJsonModule"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/* Enable importing .json files. */</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/* JavaScript Support */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"checkJs"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/* Enable error reporting in type-checked JavaScript files. Implicitly sets `allowJs: true` */</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// "maxNodeModuleJsDepth": 1,                        /* Specify the maximum folder depth used for checking JavaScript files from 'node_modules'. Only applicable with 'allowJs'. */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/* Emit */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"noEmit"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/* Disable emitting files from a compilation. */</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/* Type Checking */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"strict"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/* Enable all strict type-checking options. */</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/* Completeness */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"skipLibCheck"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/* Skip type checking all .d.ts files. */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"include"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token string" style="color:rgb(165, 255, 144)">"src"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"eslint.config.mjs"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The main things to draw from the above <code>tsconfig.json</code> are:</p>
<ul>
<li>it enables type checking of JavaScript files with JSDoc annotations with the <code>allowJs</code> / <code>checkJs</code> options</li>
<li>it tells the TypeScript compiler to expect a modern browser environment with the <code>lib</code> option</li>
<li>it tells the TypeScript compiler to expect React JSX with the <code>jsx</code> option</li>
<li>it tells the TypeScript compiler not to emit any files with the <code>noEmit</code> option (as we're only using TypeScript for type checking - we will not be transpiling TypeScript into JavaScript)</li>
<li>it tells the TypeScript compiler to run in strict mode with the <code>strict</code> option - I'm going all in on type checking; you may want to be more selective</li>
</ul>
<p>Finally we need to add a script to our <code>package.json</code> to typecheck our codebase with the TypeScript compiler:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"scripts"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"typecheck"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"tsc --noEmit"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>You could omit the <code>--noEmit</code> flag given we've set <code>noEmit</code> to <code>true</code> in our <code>tsconfig.json</code>, but I like to be explicit.</p>
<p>We can now run <code>npm run typecheck</code> to type check our JavaScript codebase with TypeScript. This will check all the JavaScript files in our <code>src</code> directory. At this point, you'll almost certainly see a lot of errors. Without some JSDoc annotations, TypeScript will struggle to infer some types for your codebase. Particularly parameters of functions.</p>
<p>Your mission now is to add JSDoc annotations to your codebase to help TypeScript out. This is a bit of a grind, but it's worth it. You'll get a lot of the benefits of TypeScript without having to convert your codebase to TypeScript. Should you reach the point where all the errors are dealt with, you can include the <code>typecheck</code> script in your CI pipeline to ensure that new code is type checked / existing code doesn't regress.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="jsdoc-and-the-type-annotations-ecmascript-proposal">JSDoc and the Type Annotations ECMAScript proposal<a href="https://johnnyreilly.com/typescript-eslint-with-jsdoc-js#jsdoc-and-the-type-annotations-ecmascript-proposal" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>If you're looking for references on how to write JSDoc annotations, the <a href="https://www.typescriptlang.org/docs/handbook/jsdoc-supported-types.html" target="_blank" rel="noopener noreferrer">TypeScript handbook</a> is a great place to start. It's also worth reading Gil Tayar's post on <a href="https://gils-blog.tayar.org/posts/jsdoc-typings-all-the-benefits-none-of-the-drawbacks/" target="_blank" rel="noopener noreferrer">JSDoc typings</a>.</p>
<p><a href="https://gils-blog.tayar.org/about/" target="_blank" rel="noopener noreferrer">Gil</a>, it's worth noting, is one of the people working on the <a href="https://github.com/tc39/proposal-type-annotations" target="_blank" rel="noopener noreferrer">Type Annotations ECMAScript proposal</a> for adding support for type annotations to JavaScript. I've written <a href="https://johnnyreilly.com/type-annotations-proposal-strong-types-weakly-held">a post about that proposal</a> which you might find useful.</p>
<p>The fact that the proposal exists in the first place, points to how much the community would rather write TypeScript rather than JavaScript. At the time I write this, Bun, Deno and even Node.js now support running TypeScript directly; without a transpilation stage. And should the Type Annotations proposal one day reach Stage 4, then hopefully we can all move to that in browsers as well.</p>
<p>This is subjective, but it feels like a fairly common view that writing JSDoc is less fun than writing TypeScript.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="playing-jsdoc-on-easy-mode-jsdoc-js--ts">Playing JSDoc on easy mode (JSDoc <code>.js</code> + <code>.ts</code>)<a href="https://johnnyreilly.com/typescript-eslint-with-jsdoc-js#playing-jsdoc-on-easy-mode-jsdoc-js--ts" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>But in the situation I'm in now, I have to write JSDoc. But I can combine writing JSDoc with also writing TypeScript, <strong>when the code in question is type only</strong>. Confused? Let me explain.</p>
<p>In our codebase we have a <code>logger.js</code> file which contains the following JavaScript function:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">function createLogger(</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    sessionId,</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    authToken,</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    durableSessionId</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">) {</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    return {</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        error: (message, context, exception) =&gt; void logMessage('error', message, {sessionId, durableSessionId, ...context}, exception, authToken),</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        warn: (message, context, exception) =&gt; void logMessage('warn', message, {sessionId, durableSessionId, ...context}, exception, authToken),</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        info: (message, context, exception) =&gt; void logMessage('info', message, {sessionId, durableSessionId, ...context}, exception, authToken),</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        debug: (message, context, exception) =&gt; void logMessage('debug', message, {sessionId, durableSessionId, ...context}, exception, authToken)</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This function is a factory function that returns a logger object. The logger object has four methods: <code>error</code>, <code>warn</code>, <code>info</code>, and <code>debug</code>. Each method logs a message at a different level. The <code>logMessage</code> function is a private function that does the actual logging (and it logs asynchronously hence the <code>void</code>).</p>
<p>Now to provide that level of information in JSDoc, we'd write something like this:</p>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/**</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> * </span><span class="token doc-comment comment keyword" style="color:rgb(255, 157, 0);font-style:italic">@typedef</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> </span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">{</span><span class="token doc-comment comment class-name keyword" style="color:rgb(255, 157, 0);font-style:italic">function</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">(</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic">string</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">,</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic"> object</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">=</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">,</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic"> unknown</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">=</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">)</span><span class="token doc-comment comment class-name operator" style="color:rgb(255, 157, 0);font-style:italic">:</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic"> </span><span class="token doc-comment comment class-name keyword" style="color:rgb(255, 157, 0);font-style:italic">void</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">}</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> </span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic">LogMethod</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/**</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> * </span><span class="token doc-comment comment keyword" style="color:rgb(255, 157, 0);font-style:italic">@typedef</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> </span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">{</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic">Object</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">}</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> </span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic">Logger</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> * </span><span class="token doc-comment comment keyword" style="color:rgb(255, 157, 0);font-style:italic">@property</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> </span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">{</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic">LogMethod</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">}</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> </span><span class="token doc-comment comment parameter" style="color:rgb(179, 98, 255);font-style:italic">warn</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> * </span><span class="token doc-comment comment keyword" style="color:rgb(255, 157, 0);font-style:italic">@property</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> </span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">{</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic">LogMethod</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">}</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> </span><span class="token doc-comment comment parameter" style="color:rgb(179, 98, 255);font-style:italic">error</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> * </span><span class="token doc-comment comment keyword" style="color:rgb(255, 157, 0);font-style:italic">@property</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> </span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">{</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic">LogMethod</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">}</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> </span><span class="token doc-comment comment parameter" style="color:rgb(179, 98, 255);font-style:italic">info</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> * </span><span class="token doc-comment comment keyword" style="color:rgb(255, 157, 0);font-style:italic">@property</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> </span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">{</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic">LogMethod</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">}</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> </span><span class="token doc-comment comment parameter" style="color:rgb(179, 98, 255);font-style:italic">debug</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/**</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> * </span><span class="token doc-comment comment keyword" style="color:rgb(255, 157, 0);font-style:italic">@typedef</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> </span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">{</span><span class="token doc-comment comment class-name keyword" style="color:rgb(255, 157, 0);font-style:italic">function</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">(</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic">string</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">,</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic"> string</span><span class="token doc-comment comment class-name operator" style="color:rgb(255, 157, 0);font-style:italic">|</span><span class="token doc-comment comment class-name keyword" style="color:rgb(255, 157, 0);font-style:italic">null</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">,</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic"> string</span><span class="token doc-comment comment class-name operator" style="color:rgb(255, 157, 0);font-style:italic">|</span><span class="token doc-comment comment class-name keyword" style="color:rgb(255, 157, 0);font-style:italic">null</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">)</span><span class="token doc-comment comment class-name operator" style="color:rgb(255, 157, 0);font-style:italic">:</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic"> Logger</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">}</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> </span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic">LoggerFactory</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/**</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> * </span><span class="token doc-comment comment keyword" style="color:rgb(255, 157, 0);font-style:italic">@typedef</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> </span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">{</span><span class="token doc-comment comment class-name string" style="color:rgb(165, 255, 144);font-style:italic">"debug"</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic"> </span><span class="token doc-comment comment class-name operator" style="color:rgb(255, 157, 0);font-style:italic">|</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic"> </span><span class="token doc-comment comment class-name string" style="color:rgb(165, 255, 144);font-style:italic">"info"</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic"> </span><span class="token doc-comment comment class-name operator" style="color:rgb(255, 157, 0);font-style:italic">|</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic"> </span><span class="token doc-comment comment class-name string" style="color:rgb(165, 255, 144);font-style:italic">"warn"</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic"> </span><span class="token doc-comment comment class-name operator" style="color:rgb(255, 157, 0);font-style:italic">|</span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic"> </span><span class="token doc-comment comment class-name string" style="color:rgb(165, 255, 144);font-style:italic">"error"</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(255, 255, 255);font-style:italic">}</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> </span><span class="token doc-comment comment class-name" style="color:rgb(250, 208, 0);font-style:italic">LogLevel</span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic"> */</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>For my money, this is not that readable. I would much rather write it in TypeScript:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">type</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">LogMethod</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  message</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  context</span><span class="token operator" style="color:rgb(255, 157, 0)">?</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> object</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  exception</span><span class="token operator" style="color:rgb(255, 157, 0)">?</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">unknown</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">void</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">interface</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">Logger</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  warn</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> LogMethod</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  error</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> LogMethod</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  info</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> LogMethod</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  debug</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> LogMethod</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">type</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">LoggerFactory</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  sessionId</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  authToken</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">|</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  durableSessionId</span><span class="token operator" style="color:rgb(255, 157, 0)">?</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">|</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> Logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">type</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">LogLevel</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'debug'</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">|</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'info'</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">|</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'warn'</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">|</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'error'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This is pure TypeScript code. The tremendous news is that we can write type-only TypeScript and we can consume it in a JSDoc JavaScript file <strong>because there is no runtime code in here</strong>. It's purely type information. We'll write this in a <code>.ts</code> file and then we can <code>import</code> it into in our JS files.</p>
<p>So let's imagine we have a <code>loggerTypes.ts</code> file with the above TypeScript code in it. We can then import the <code>LoggerFactory</code> into our <code>logger.js</code> file like this:</p>
<div class="language-diff codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-diff codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">/** @type {import('./loggerTypes').LoggerFactory} */</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token plain">function createLogger(</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   sessionId,</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   authToken,</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   durableSessionId</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token plain">) {</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   return {</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">       error: (message, context, exception) =&gt; void logMessage('error', message, {sessionId, durableSessionId, ...context}, exception, authToken),</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">       warn: (message, context, exception) =&gt; void logMessage('warn', message, {sessionId, durableSessionId, ...context}, exception, authToken),</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">       info: (message, context, exception) =&gt; void logMessage('info', message, {sessionId, durableSessionId, ...context}, exception, authToken),</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">       debug: (message, context, exception) =&gt; void logMessage('debug', message, {sessionId, durableSessionId, ...context}, exception, authToken)</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   }</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>And with this single line addition to our <code>logger.js</code> file, we've now got type information for our <code>createLogger</code> function. This is what it looks like in VS Code once you've added that JSDoc annotation:</p>
<p><img decoding="async" loading="lazy" alt="Screenshot of type information in VS Code" src="https://johnnyreilly.com/assets/images/screenshot-jsdoc-in-vscode-3c6c54ebd2d37c29e8bdf1b3c62d8229.png" width="2180" height="548" class="img_ev3q"></p>
<p>So here we've had one line of JSDoc and we've got all the type information we need <strong>using TypeScript</strong>. Our runtime code is still JavaScript, but our type information is TypeScript. This is a great way to get the benefits of TypeScript without having to write all your type information in JSDoc.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="a-note-on-ts-file-naming">A note on <code>.ts</code> file naming<a href="https://johnnyreilly.com/typescript-eslint-with-jsdoc-js#a-note-on-ts-file-naming" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>I was intentional around the naming of the <code>.ts</code> file. I've called it <code>loggerTypes.ts</code> because I want to make it clear that this file is all about types. It's not a (runtime) <code>.js</code> file, it's a <code>.ts</code> file - relevant for compile time. The <code>Types</code> suffix is deliberate too; it's not <code>logger.ts</code> entirely as planned.</p>
<p>The TypeScript compiler doesn't understand a world in which there is a <code>logger.js</code> file which imports types from a <code>logger.ts</code> file. Expect difficulty if you should try to use that approach. Particularly in a world in which ESM has lead to all imports being from <code>.js</code> files even when they are actually <code>.ts</code> source files.</p>
<p>What's more, you would not typically see code like that in a TypeScript (or JavaScript) codebase. It would invite head scratching from anyone who came across it. So having <code>Types</code> in the name means that the compiler is not confused, and hopefully neither are your colleagues. You are unambiguously importing a different file. (By the way, having a 1-1 relationship between <code>.ts</code> and <code>.js</code> files as I'm doing isn't mandatory, but I've found it to be a useful pattern.)</p>
<p>I did also consider the idea that the files I wrote should be <code>.d.ts</code> files rather than <code>.ts</code> files. After a <a href="https://twitter.com/robpalmer2/status/1829856562422124734" target="_blank" rel="noopener noreferrer">healthy discussion on Twitter</a> I was directed by <a href="https://twitter.com/robpalmer2" target="_blank" rel="noopener noreferrer">Rob Palmer</a> to what's probably the definitive answer on this from <a href="https://github.com/andrewbranch" target="_blank" rel="noopener noreferrer">Andrew Branch</a> of the TypeScript team:</p>
<p>As ever in life, I find I cannot improve on <a href="https://github.com/microsoft/TypeScript/issues/52593#issuecomment-1419505081" target="_blank" rel="noopener noreferrer">Andrew's guidance</a> and so I'll quote his views on the use of <code>.d.ts</code> files for storing hand-written utility types in full:</p>
<blockquote>
<p>I would say it‚Äôs discouraged or even harmful (though it won‚Äôt be ‚Äúdeprecated‚Äù). At best, it‚Äôs a technique with serious pitfalls that can be leveraged by people who understand them enough to set up additional tooling and safeguards to make it viable. Because <code>.d.ts</code> files only occur ‚Äúnaturally‚Äù as a pair with a <code>.js</code> file, together as outputs of a <code>.ts</code> file, a <code>.d.ts</code> file always implies the existence of a <code>.js</code> file. So the potential harm is readily apparent: if you hand-author <code>only-types.d.ts</code> and then write <code>import {} from "./only-types.js"</code>, this resolves and is legal in all settings, but in <code>verbatimModuleSyntax</code>, the import will be preserved and crash at runtime. While TypeScript has type-only imports and exports, it lacks the analogous concept of a type-only module, one which exists for type information purposes but is known to not exist at runtime, though I‚Äôve casually suggested multiple times that such a concept could be useful.</p>
<p>But the main reason I personally avoid this is just because it doesn‚Äôt copy into <code>outDir</code>. For my purposes, I‚Äôd rather just eat the cost of the empty JS file (which also protects you from crashes should you accidentally import it at runtime).</p>
</blockquote>
<p>Thanks also to <a href="https://remcohaszing.nl/" target="_blank" rel="noopener noreferrer">Remco Haszing</a> for sharing that <a href="https://twitter.com/remcohaszing/status/1829808165459804330" target="_blank" rel="noopener noreferrer">even local <code>.d.ts</code> files should not be validated if you use <code>skipLibCheck</code></a>. (Oddly, I didn't see that behaviour in my own testing, but I wouldn't be surprised if I was doing something quirky.)</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="setting-up-typescript-eslint">Setting up <code>typescript-eslint</code><a href="https://johnnyreilly.com/typescript-eslint-with-jsdoc-js#setting-up-typescript-eslint" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>But you didn't come here to just type check your codebase, you want to lint it too! Let's set up <a href="https://typescript-eslint.io/" target="_blank" rel="noopener noreferrer"><code>typescript-eslint</code></a> to lint our codebase with the benefits of type information. We're going to need to install a few more packages:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">install</span><span class="token plain"> --save-dev eslint @eslint/js @types/eslint__js typescript typescript-eslint eslint-plugin-react globals</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We'll also need to create an <code>eslint.config.mjs</code> file to configure <code>eslint</code> to work with TypeScript (the eagle eyed amongst you will have noticed that we included this file in our <code>tsconfig.json</code> earlier). Here's what that file looks like:</p>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/* eslint-disable @typescript-eslint/no-unsafe-member-access */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword module" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports">eslint</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@eslint/js'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword module" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports">globals</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'globals'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword module" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports">tseslint</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'typescript-eslint'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">//@ts-expect-error no type definitions for eslint-plugin-react</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword module" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports">pluginReact</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'eslint-plugin-react'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword module" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(255, 157, 0)">default</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:rgb(255, 157, 0)">files</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token string" style="color:rgb(165, 255, 144)">'**/*.{js,mjs,cjs,ts,jsx,tsx}'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:rgb(255, 157, 0)">languageOptions</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:rgb(255, 157, 0)">globals</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> globals</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">browser</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  eslint</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">configs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">recommended</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token plain">tseslint</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">configs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">recommendedTypeChecked</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// yes we are using type checked</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token literal-property property" style="color:rgb(255, 157, 0)">languageOptions</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token literal-property property" style="color:rgb(255, 157, 0)">parserOptions</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token literal-property property" style="color:rgb(255, 157, 0)">project</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token literal-property property" style="color:rgb(255, 157, 0)">projectService</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token literal-property property" style="color:rgb(255, 157, 0)">tsconfigRootDir</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(255, 157, 0)">import</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">meta</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">dirname</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  pluginReact</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">configs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">flat</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">recommended</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token literal-property property" style="color:rgb(255, 157, 0)">settings</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token literal-property property" style="color:rgb(255, 157, 0)">react</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token literal-property property" style="color:rgb(255, 157, 0)">version</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'detect'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token literal-property property" style="color:rgb(255, 157, 0)">rules</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// Not compatible with JSDoc according to @bradzacher and https://github.com/typescript-eslint/typescript-eslint/issues/8955#issuecomment-2097518639</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token string-property property" style="color:rgb(255, 157, 0)">'@typescript-eslint/explicit-function-return-type'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'off'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token string-property property" style="color:rgb(255, 157, 0)">'@typescript-eslint/explicit-module-boundary-types'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'off'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token string-property property" style="color:rgb(255, 157, 0)">'@typescript-eslint/parameter-properties'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'off'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token string-property property" style="color:rgb(255, 157, 0)">'@typescript-eslint/typedef'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'off'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>A common misconception is that you cannot use <a href="https://typescript-eslint.io/getting-started/typed-linting" target="_blank" rel="noopener noreferrer"><code>typescript-eslint</code>s linting with type information</a> in JSDoc. You can. And here we are. However, there are some rules that are not compatible with JSDoc. We're turning those off in the <code>rules</code> section of the above <code>eslint.config.mjs</code> file.</p>
<p>The four rules we're turning off are rules that are not compatible with JSDoc according to <a href="https://github.com/typescript-eslint/typescript-eslint/issues/8955" target="_blank" rel="noopener noreferrer">this thread on GitHub</a>. In general, this is because the syntax required to satisfy the rule is not compatible with JS / JSDoc.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://johnnyreilly.com/typescript-eslint-with-jsdoc-js#conclusion" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>In this post we've set up a JavaScript project to be type checked with JSDoc and the TypeScript compiler. We've also set up <code>typescript-eslint</code> to lint the codebase, including using type information. Hopefully this will help increase the type safety of JavaScript projects of your own.</p>
<p>I should say, it's been a learning exercise writing this post, and as I continue working on enriching the type safety of this particular codebase I'm likely to learn more. I'll be updating this post as I do.</p>
<p><a href="https://johnnyreilly.com/typescript-vs-jsdoc-javascript">To read more on TypeScript vs JavaScript with JSDoc, you may want to read this post.</a></p>]]></content:encoded>
            <category>JavaScript</category>
            <category>TypeScript</category>
            <category>JSDoc</category>
        </item>
        <item>
            <title><![CDATA[Using Kernel Memory to Chunk Documents into Azure AI Search]]></title>
            <link>https://johnnyreilly.com/using-kernel-memory-to-chunk-documents-into-azure-ai-search</link>
            <guid>https://johnnyreilly.com/using-kernel-memory-to-chunk-documents-into-azure-ai-search</guid>
            <pubDate>Sun, 21 Apr 2024 08:47:49 GMT</pubDate>
            <description><![CDATA[To build RAG (Retrieval Augmented Generation) experiences, where LLMs can query documents, you need a strategy to chunk those documents. Kernel Memory supports this.]]></description>
            <content:encoded><![CDATA[<p>I've recently been working on building retrieval augmented generation (RAG) experiences into applications; building systems where large language models (LLMs) can query documents. To achieve this, we first need a strategy to chunk those documents and make them LLM-friendly. <a href="https://github.com/microsoft/kernel-memory" target="_blank" rel="noopener noreferrer">Kernel Memory</a>, a sister project of <a href="https://github.com/microsoft/semantic-kernel" target="_blank" rel="noopener noreferrer">Semantic Kernel</a> supports this.</p>
<p><img decoding="async" alt="title image reading &amp;quot;Using Kernel Memory to Chunk Documents into Azure AI Search&amp;quot; with the Azure Open AI / Azure AI Search logos" src="https://johnnyreilly.com/assets/images/title-image-337c58e5e55f92f59a1d1db49366ec04.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<p>If you haven't heard of Kernel Memory before, it's a library that, amongst other things, provides a way to chunk documents into smaller pieces. To quote the <a href="https://github.com/microsoft/kernel-memory?tab=readme-ov-file#kernel-memory-km-and-semantic-memory-sm" target="_blank" rel="noopener noreferrer">Kernel Memory GitHub repository</a>:</p>
<blockquote>
<p>Kernel Memory (KM) is a service built on the feedback received and lessons learned from developing Semantic Kernel (SK) and Semantic Memory (SM). It provides several features that would otherwise have to be developed manually, such as storing files, extracting text from files, providing a framework to secure users' data, etc. The KM codebase is entirely in .NET, which eliminates the need to write and maintain features in multiple languages. As a service, KM can be used from any language, tool, or platform, e.g. browser extensions and ChatGPT assistants.</p>
</blockquote>
<p>In this post, I'll show you how to use Kernel Memory to chunk documents in the background of an ASP.NET application.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="kernel-memory-serverless-vs-service">Kernel Memory: Serverless vs Service<a href="https://johnnyreilly.com/using-kernel-memory-to-chunk-documents-into-azure-ai-search#kernel-memory-serverless-vs-service" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>There's two ways that we can run Kernel Memory: "Serverless" and "Service".</p>
<p>Running the full service is more powerful, but effectively requires running a separate application. We would then need to integrate our main app with that. Given that I'm building with ASP.NET, I'll be using the serverless approach, which allows us to run Kernel Memory within the context of a single application (which will contain our main app code as well). We can then manage our integrations with Kernel Memory as simple method calls.</p>
<p>This is simpler and more cost-effective, but it does have some limitations. The service approach offers more features; including persistent retry logic. The documentation states that if we want to scale then we'll likely want to consider the service approach. But my own experience has been that serverless works very well for small to medium-sized applications.</p>
<p>Perhaps surprisingly, using serverless we can still have the experience of running Kernel Memory as a <strong>non-blocking</strong> separate service within the context of our ASP.NET application. This is achieved by running Kernel Memory as a <a href="https://learn.microsoft.com/en-us/aspnet/core/fundamentals/host/hosted-services?view=aspnetcore-8.0" target="_blank" rel="noopener noreferrer">hosted service</a> - this is the standard ASP.NET mechanism for running background tasks. That's what we're going to use.</p>
<p>There's four parts to bring this to life:</p>
<ol>
<li>Our Kernel Memory serverless instance - this is where the integration between Kernel Memory, Azure Open AI, Azure AI Search and the actual chunking takes place</li>
<li>A queue which we'll use to provide documents for chunking with Kernel Memory</li>
<li>Our hosted service which will bring together the queue and the Kernel Memory integration to manage our background document processing</li>
<li>An endpoint in our ASP.NET application to add documents to the queue</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="1-setting-up-kernel-memory-serverless">1. Setting up Kernel Memory serverless<a href="https://johnnyreilly.com/using-kernel-memory-to-chunk-documents-into-azure-ai-search#1-setting-up-kernel-memory-serverless" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>There's a number of dependencies that we need to add to our project to get Kernel Memory working. These are:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">dotnet </span><span class="token function" style="color:rgb(250, 208, 0)">add</span><span class="token plain"> Azure.AI.OpenAI</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">dotnet </span><span class="token function" style="color:rgb(250, 208, 0)">add</span><span class="token plain"> Azure.AI.FormRecognizer </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># if we want to use Document Intelligence - not mandatory</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">dotnet </span><span class="token function" style="color:rgb(250, 208, 0)">add</span><span class="token plain"> Azure.Identity</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">dotnet </span><span class="token function" style="color:rgb(250, 208, 0)">add</span><span class="token plain"> Azure.Storage.Blobs</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">dotnet </span><span class="token function" style="color:rgb(250, 208, 0)">add</span><span class="token plain"> Microsoft.KernelMemory.Core</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">dotnet </span><span class="token function" style="color:rgb(250, 208, 0)">add</span><span class="token plain"> Microsoft.SemanticKernel</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>With this in place we'll start to integrate with Kernel Memory. We will first construct ourselves an <code>IKernelMemory</code> like so:</p>
<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">_memory </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">KernelMemoryBuilder</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">WithAzureOpenAITextEmbeddingGeneration</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">AzureOpenAIConfig</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        APIType </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> AzureOpenAIConfig</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">APITypes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">EmbeddingGeneration</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        Auth </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> AzureOpenAIConfig</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">AuthTypes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">AzureIdentity</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        Endpoint </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"https://cog-ourapp-dev.openai.azure.com/"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        Deployment </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"OpenAi-text-embedding-ada2"</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// text-embedding-ada-002</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">WithAzureOpenAITextGeneration</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">AzureOpenAIConfig</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        APIType </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> AzureOpenAIConfig</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">APITypes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">ChatCompletion</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        Auth </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> AzureOpenAIConfig</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">AuthTypes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">AzureIdentity</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        Endpoint </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"https://cog-ourapp-dev.openai.azure.com/"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        Deployment </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"OpenAi-gpt-35-turbo-16k"</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// gpt-3.5-turbo-16k</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">WithAzureAISearchMemoryDb</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">AzureAISearchConfig</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        Auth </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> AzureAISearchConfig</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">AuthTypes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">AzureIdentity</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        Endpoint </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"https://srch-ourapp-dev.search.windows.net"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// Only necessary if you want to add Document Intelligence</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">WithAzureAIDocIntel</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">AzureAIDocIntelConfig</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        Auth </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> AzureAIDocIntelConfig</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">AuthTypes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">AzureIdentity</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        Endpoint </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"https://cog-ourapp-dev.cognitiveservices.azure.com/"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Build</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>What we're doing here, is creating an <code>IKernelMemory</code> instance and making it aware of all our deployed Azure resources. Going through how to deploy those is out of the scope of this post, but it's probably worth highlighting that we're using <code>AzureIdentity</code> for auth as it's particularly secure, if you would like to use other options, you certainly can.</p>
<p>It's probably worth highlighting that we're using the <code>text-embedding-ada-002</code> model for text embedding and the <code>gpt-3.5-turbo-16k</code> model for text generation. These are the models that I've found to be most effective for my use cases. Of these, the text embedding model is the most important - it's the one that will be used to chunk documents.</p>
<p>You'll also note we're using Azure AI Document Intelligence; this is optional and just tackles a few more document chunking scenarios. It's not mandatory.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="chunking-with-kernel-memory-serverless">Chunking with Kernel Memory serverless<a href="https://johnnyreilly.com/using-kernel-memory-to-chunk-documents-into-azure-ai-search#chunking-with-kernel-memory-serverless" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>With our <code>IKernelMemory</code> ready to go, we now need a way to chunk documents. Deep down, this is achieved by acquiring the document we want to chunk from blob storage and passing it to <code>_memory.ImportDocumentAsync</code> with the name of the index we want to process into. You can see examples of this usage in the <a href="https://microsoft.github.io/kernel-memory/serverless" target="_blank" rel="noopener noreferrer">Kernel Memory docs</a>. You can also see how it works in the <a href="https://github.com/microsoft/kernel-memory/blob/9112757f4fe25edd7bfbf10222621f11422bd3b5/service/Core/MemoryServerless.cs#L89" target="_blank" rel="noopener noreferrer">Kernel Memory repository itself</a>.</p>
<p>However, it's often helpful to have a number of other things in place to manage:</p>
<ol>
<li>Applying tags to documents (this gives us more power when querying later)</li>
<li>Creating acceptable names / ids for the Azure AI Search Service</li>
<li>Handling rate limiting - more on that in a moment</li>
</ol>
<p>To that end, I tend to end up implementing a <code>Process</code> method that looks something like this:</p>
<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">async</span><span class="token plain"> </span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">Task</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">Process</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> index</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> documentUrl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name" style="color:rgb(250, 208, 0)">TokenCredential</span><span class="token plain"> credential </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> _env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">IsDevelopment</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">AzureCliCredential</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">DefaultAzureCredential</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">DefaultAzureCredentialOptions</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        ManagedIdentityClientId </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"[Managed Identity ClientId Here]"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name" style="color:rgb(250, 208, 0)">BlobServiceClient</span><span class="token plain"> azureBlobServiceClient </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">Uri</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"https://stourappdev.blob.core.windows.net"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> credential</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> containerClient </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> azureBlobServiceClient</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetBlobContainerClient</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">index</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// eg DocumentUrl: https://stourappdev.blob.core.windows.net/my-index/A%20Booklet.pdf</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> fileName </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> System</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Web</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">HttpUtility</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">UrlDecode</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">documentToProcess</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">DocumentUrl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Split</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token char" style="color:rgb(250, 208, 0)">'/'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Last</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> blobClient </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> containerClient</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetBlobClient</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">fileName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name" style="color:rgb(250, 208, 0)">MemoryStream</span><span class="token plain"> documentContent </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> response </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> blobClient</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">DownloadToAsync</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">documentContent</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// example documentUrl:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// Chunking, getting embeddings for and storing for documentUrl consisting of 103469 characters in https://stourappdev.blob.core.windows.net/my-index/A%20Booklet.pdf</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogInformation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Chunking, getting embeddings for and storing for {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">documentUrl</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} consisting of {{count}} characters in {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">index</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}}"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> documentUrl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> documentContent</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Length</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> index</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> documentId </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">MakeDocumentId</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">documentUrl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name" style="color:rgb(250, 208, 0)">TagCollection</span><span class="token plain"> tags </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"DocumentUrl"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> documentUrl </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"FileName"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> fileName </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> stopwatch </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">Stopwatch</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    stopwatch</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Start</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">int</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> waitForSeconds </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">bool</span><span class="token plain"> done </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">false</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">int</span><span class="token plain"> attempt </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">0</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">do</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        attempt</span><span class="token operator" style="color:rgb(255, 157, 0)">++</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">attempt </span><span class="token operator" style="color:rgb(255, 157, 0)">==</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">4</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// if we've tried 3 times, give up</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">throw</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">Exception</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Failed to store document </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp">documentUrl</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)"> after </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp">attempt </span><span class="token interpolation-string interpolation expression language-csharp operator" style="color:rgb(255, 157, 0)">-</span><span class="token interpolation-string interpolation expression language-csharp"> </span><span class="token interpolation-string interpolation expression language-csharp number" style="color:rgb(255, 98, 140)">1</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)"> attempts and </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp">stopwatch</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">Elapsed</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">TotalSeconds</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)"> seconds"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">try</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">waitForSeconds </span><span class="token operator" style="color:rgb(255, 157, 0)">!=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogInformation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Waiting {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">waitForSeconds</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} seconds"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> waitForSeconds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Value</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> Task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Delay</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">TimeSpan</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">FromSeconds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">waitForSeconds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Value</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                waitForSeconds </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogInformation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"Importing documentId {documentId} attempt {attempt}"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> documentId</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> attempt</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> _memory</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">ImportDocumentAsync</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">content</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> documentContent</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">fileName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> fileName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">documentId</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> documentId</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">index</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> index</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">tags</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> tags</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            done </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">Microsoft</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token class-name" style="color:rgb(250, 208, 0)">SemanticKernel</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token class-name" style="color:rgb(250, 208, 0)">HttpOperationException</span><span class="token plain"> e</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">when</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">e</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">InnerException </span><span class="token keyword" style="color:rgb(255, 157, 0)">is</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">Azure</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token class-name" style="color:rgb(250, 208, 0)">RequestFailedException</span><span class="token plain"> azureRequestFailedException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            waitForSeconds </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">HandleRequestFailed</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">azureRequestFailedException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">Azure</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token class-name" style="color:rgb(250, 208, 0)">RequestFailedException</span><span class="token plain"> azureRequestFailedException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            waitForSeconds </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">HandleRequestFailed</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">azureRequestFailedException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">Exception</span><span class="token plain"> ex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">throw</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">Exception</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Error storing document </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp">documentUrl</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)"> on attempt </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp">attempt</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)"> after </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp">stopwatch</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">Elapsed</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">TotalSeconds</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)"> seconds"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> ex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">while</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token operator" style="color:rgb(255, 157, 0)">!</span><span class="token plain">done</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    stopwatch</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Stop</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogInformation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Processed {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">documentId</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} into {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">index</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} index in {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">stopwatch</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">Elapsed</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">TotalSeconds</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} seconds"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> documentId</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> index</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> stopwatch</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Elapsed</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">TotalSeconds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token return-type class-name keyword" style="color:rgb(255, 157, 0)">int</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">HandleRequestFailed</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">Azure</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token class-name" style="color:rgb(250, 208, 0)">RequestFailedException</span><span class="token plain"> azureRequestFailedException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">int</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> waitForSeconds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> response </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> azureRequestFailedException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetRawResponse</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> retryAfterSeconds </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> response</span><span class="token punctuation" style="color:rgb(255, 255, 255)">?.</span><span class="token plain">Headers</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">FirstOrDefault</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">h </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> h</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Name </span><span class="token operator" style="color:rgb(255, 157, 0)">==</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"x-ratelimit-reset-requests"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Value</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token operator" style="color:rgb(255, 157, 0)">??</span><span class="token plain"> response</span><span class="token punctuation" style="color:rgb(255, 255, 255)">?.</span><span class="token plain">Headers</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">FirstOrDefault</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">h </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> h</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Name </span><span class="token operator" style="color:rgb(255, 157, 0)">==</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"Retry-After"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Value</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">//x-ratelimit-reset-requests: 4,x-ms-client-request-id: XXXX,apim-request-id: 69569dd5-2e4a-4bfa-9b52-f3eb08481a83,Strict-Transport-Security: max-age=31536000; includeSubDomains; preload,X-Content-Type-Options: nosniff,policy-id: DeploymentRatelimit-Call,x-ms-region: West Europe,Date: Fri, 01 Dec 2023 13:29:12 GMT,Content-Length: 85,Content-Type: application/json</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    waitForSeconds </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> retryAfterSeconds </span><span class="token operator" style="color:rgb(255, 157, 0)">!=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">int</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Parse</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">retryAfterSeconds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">waitForSeconds </span><span class="token operator" style="color:rgb(255, 157, 0)">==</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> pattern </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">@"Try again in (\d+) seconds"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> match </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> Regex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Match</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">azureRequestFailedException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Message</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> pattern</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// wait for 60 seconds if a specific value is not provided</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        waitForSeconds </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> match</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Success </span><span class="token operator" style="color:rgb(255, 157, 0)">&amp;&amp;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">int</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">TryParse</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">match</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Groups</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token number" style="color:rgb(255, 98, 140)">1</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Value</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">out</span><span class="token plain"> </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">int</span><span class="token plain"> seconds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> seconds </span><span class="token operator" style="color:rgb(255, 157, 0)">+</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">1</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">60</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">azureRequestFailedException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Status </span><span class="token operator" style="color:rgb(255, 157, 0)">==</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">int</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain">System</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Net</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">HttpStatusCode</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">TooManyRequests</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// var headers = response?.Headers.Select(h =&gt; $"{h.Name}: {h.Value}").ToList() ?? new List&lt;string&gt;();</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// _logger.LogWarning(azureRequestFailedException, $"429 - too many requests, will wait {{{nameof(waitForSeconds)}}} seconds - HEADERS: {{{nameof(headers)}}}", waitForSeconds, string.Join(",", headers));</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogWarning</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">azureRequestFailedException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"429 - too many requests, will wait {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">waitForSeconds</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} seconds"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> waitForSeconds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">else</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> headers </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> response</span><span class="token punctuation" style="color:rgb(255, 255, 255)">?.</span><span class="token plain">Headers</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Select</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">h </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> </span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp">h</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">Name</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">: </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp">h</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">Value</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">ToList</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">??</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogError</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">azureRequestFailedException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Azure.RequestFailedException - {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">azureRequestFailedException</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">Status</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} status code, will wait {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">waitForSeconds</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} seconds - HEADERS: {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">headers</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}}"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> azureRequestFailedException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Status</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> waitForSeconds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Join</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">","</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> headers</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> waitForSeconds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// &lt;summary&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// Make a documentId from a fileName; remove all characters except A-Z, a-z, 0-9, ., _, -</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// &lt;/summary&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">static</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">MakeDocumentId</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> fileName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> Regex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Replace</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">fileName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"[^A-Za-z0-9._-]"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">""</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// eg "A Booklet.pdf"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Much of the code above concerns rate limiting / 429s. It's not uncommon when chunking to be hit by 429s - "Too many requests". Chunking documents requires use of Azure Open AI resources, and the level of access we have is typically restricted and controlled via quotas. There's an element of this that we can avoid by controlling the quota available on our Azure Open AI deployments (<a href="https://johnnyreilly.com/azure-open-ai-capacity-quota-bicep">you can read more about this here</a>), and we can implement a certain amount of retry logic also.</p>
<p>The code above tries to handle a number of re-attempts as wisely as it can, and using the information that Azure APIs surface around when re-attempting is allowed. Interestingly you'll see a variety of strategies employed here around retry times, as the way information is surfaced to support this keeps changing! We can likely have less code in future when a final standard is committed to.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="bringing-it-together">Bringing it together<a href="https://johnnyreilly.com/using-kernel-memory-to-chunk-documents-into-azure-ai-search#bringing-it-together" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>We're going to put this all together in a single class called <code>RagGestionService</code>.</p>
<p>You might be puzzled by the name "RagGestion" - this is a term my good friend <a href="https://medium.com/@georgekarsas" target="_blank" rel="noopener noreferrer">George Karsas</a> coined to describe the process of preparing documents for Retrieval Augmented Generation. It's a great term, and I've adopted it!</p>
<p>The <code>RagGestionService</code> will look like this:</p>
<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">Azure</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Storage</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Blobs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">Azure</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Core</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">Azure</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Identity</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">Microsoft</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">KernelMemory</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">OurApp</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Model</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">System</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Diagnostics</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">System</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Text</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">RegularExpressions</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">System</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Text</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Json</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">namespace</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">OurApp</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Services</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">interface</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">IRagGestionService</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">Task</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">Process</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> indexName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> documentUrl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">class</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">RagGestionService</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token type-list class-name" style="color:rgb(250, 208, 0)">IRagGestionService</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">readonly</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">IKernelMemory</span><span class="token plain"> _memory</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">readonly</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">ILogger</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token class-name" style="color:rgb(250, 208, 0)">RagGestionService</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">RagGestionService</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name" style="color:rgb(250, 208, 0)">ILogger</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token class-name" style="color:rgb(250, 208, 0)">RagGestionService</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> logger</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        _logger </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        _memory </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">KernelMemoryBuilder</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">WithAzureOpenAITextEmbeddingGeneration</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">AzureOpenAIConfig</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                APIType </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> AzureOpenAIConfig</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">APITypes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">EmbeddingGeneration</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                Auth </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> AzureOpenAIConfig</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">AuthTypes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">AzureIdentity</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                Endpoint </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"https://cog-ourapp-dev.openai.azure.com/"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                Deployment </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"OpenAi-text-embedding-ada2"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">WithAzureOpenAITextGeneration</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">AzureOpenAIConfig</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                APIType </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> AzureOpenAIConfig</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">APITypes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">ChatCompletion</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                Auth </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> AzureOpenAIConfig</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">AuthTypes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">AzureIdentity</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                Endpoint </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"https://cog-ourapp-dev.openai.azure.com/"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                Deployment </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"OpenAi-gpt-35-turbo-16k"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">WithAzureAISearchMemoryDb</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">AzureAISearchConfig</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                Auth </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> AzureAISearchConfig</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">AuthTypes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">AzureIdentity</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                Endpoint </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"https://srch-ourapp-dev.search.windows.net"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// Only necessary if we want to add Document Intelligence</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">WithAzureAIDocIntel</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">AzureAIDocIntelConfig</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                Auth </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> AzureAIDocIntelConfig</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">AuthTypes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">AzureIdentity</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                Endpoint </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"https://cog-ourapp-dev.cognitiveservices.azure.com/"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Build</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">async</span><span class="token plain"> </span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">Task</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">Process</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> index</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> documentUrl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name" style="color:rgb(250, 208, 0)">TokenCredential</span><span class="token plain"> credential </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> _env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">IsDevelopment</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">AzureCliCredential</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">DefaultAzureCredential</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">DefaultAzureCredentialOptions</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            ManagedIdentityClientId </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"[Managed Identity ClientId Here]"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name" style="color:rgb(250, 208, 0)">BlobServiceClient</span><span class="token plain"> azureBlobServiceClient </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">Uri</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"https://stourappdev.blob.core.windows.net"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> credential</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> containerClient </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> azureBlobServiceClient</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetBlobContainerClient</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">index</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// eg DocumentUrl: https://stourappdev.blob.core.windows.net/my-index/A%20Booklet.pdf</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> fileName </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> System</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Web</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">HttpUtility</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">UrlDecode</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">documentToProcess</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">DocumentUrl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Split</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token char" style="color:rgb(250, 208, 0)">'/'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Last</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> blobClient </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> containerClient</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetBlobClient</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">fileName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name" style="color:rgb(250, 208, 0)">MemoryStream</span><span class="token plain"> documentContent </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> response </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> blobClient</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">DownloadToAsync</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">documentContent</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// example documentUrl:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// Chunking, getting embeddings for and storing for documentUrl consisting of 103469 characters in https://stourappdev.blob.core.windows.net/my-index/A%20Booklet.pdf</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogInformation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Chunking, getting embeddings for and storing for {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">documentUrl</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} consisting of {{count}} characters in {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">index</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}}"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> documentUrl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> documentContent</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Length</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> index</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> documentId </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">MakeDocumentId</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">documentUrl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name" style="color:rgb(250, 208, 0)">TagCollection</span><span class="token plain"> tags </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"DocumentUrl"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> documentUrl </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"FileName"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> fileName </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> stopwatch </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">Stopwatch</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        stopwatch</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Start</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">int</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> waitForSeconds </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">bool</span><span class="token plain"> done </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">false</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">int</span><span class="token plain"> attempt </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">0</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">do</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            attempt</span><span class="token operator" style="color:rgb(255, 157, 0)">++</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">attempt </span><span class="token operator" style="color:rgb(255, 157, 0)">==</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">4</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// if we've tried 3 times, give up</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token keyword" style="color:rgb(255, 157, 0)">throw</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">Exception</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Failed to store document </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp">documentUrl</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)"> after </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp">attempt </span><span class="token interpolation-string interpolation expression language-csharp operator" style="color:rgb(255, 157, 0)">-</span><span class="token interpolation-string interpolation expression language-csharp"> </span><span class="token interpolation-string interpolation expression language-csharp number" style="color:rgb(255, 98, 140)">1</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)"> attempts and </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp">stopwatch</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">Elapsed</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">TotalSeconds</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)"> seconds"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">try</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">waitForSeconds </span><span class="token operator" style="color:rgb(255, 157, 0)">!=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogInformation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Waiting {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">waitForSeconds</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} seconds"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> waitForSeconds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Value</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> Task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Delay</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">TimeSpan</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">FromSeconds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">waitForSeconds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Value</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    waitForSeconds </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogInformation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"Importing documentId {documentId} attempt {attempt}"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> documentId</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> attempt</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> _memory</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">ImportDocumentAsync</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">content</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> documentContent</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">fileName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> fileName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">documentId</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> documentId</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">index</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> index</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">tags</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> tags</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                done </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">Microsoft</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token class-name" style="color:rgb(250, 208, 0)">SemanticKernel</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token class-name" style="color:rgb(250, 208, 0)">HttpOperationException</span><span class="token plain"> e</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">when</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">e</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">InnerException </span><span class="token keyword" style="color:rgb(255, 157, 0)">is</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">Azure</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token class-name" style="color:rgb(250, 208, 0)">RequestFailedException</span><span class="token plain"> azureRequestFailedException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                waitForSeconds </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">HandleRequestFailed</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">azureRequestFailedException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">Azure</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token class-name" style="color:rgb(250, 208, 0)">RequestFailedException</span><span class="token plain"> azureRequestFailedException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                waitForSeconds </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">HandleRequestFailed</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">azureRequestFailedException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">Exception</span><span class="token plain"> ex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token keyword" style="color:rgb(255, 157, 0)">throw</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">Exception</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Error storing document </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp">documentUrl</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)"> on attempt </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp">attempt</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)"> after </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp">stopwatch</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">Elapsed</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">TotalSeconds</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)"> seconds"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> ex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">while</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token operator" style="color:rgb(255, 157, 0)">!</span><span class="token plain">done</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        stopwatch</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Stop</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogInformation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Processed {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">documentId</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} into {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">index</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} index in {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">stopwatch</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">Elapsed</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">TotalSeconds</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} seconds"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> documentId</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> index</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> stopwatch</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Elapsed</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">TotalSeconds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token return-type class-name keyword" style="color:rgb(255, 157, 0)">int</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">HandleRequestFailed</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">Azure</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token class-name" style="color:rgb(250, 208, 0)">RequestFailedException</span><span class="token plain"> azureRequestFailedException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">int</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> waitForSeconds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> response </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> azureRequestFailedException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetRawResponse</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> retryAfterSeconds </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> response</span><span class="token punctuation" style="color:rgb(255, 255, 255)">?.</span><span class="token plain">Headers</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">FirstOrDefault</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">h </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> h</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Name </span><span class="token operator" style="color:rgb(255, 157, 0)">==</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"x-ratelimit-reset-requests"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Value</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token operator" style="color:rgb(255, 157, 0)">??</span><span class="token plain"> response</span><span class="token punctuation" style="color:rgb(255, 255, 255)">?.</span><span class="token plain">Headers</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">FirstOrDefault</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">h </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> h</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Name </span><span class="token operator" style="color:rgb(255, 157, 0)">==</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"Retry-After"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Value</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">//x-ratelimit-reset-requests: 4,x-ms-client-request-id: XXXX,apim-request-id: 69569dd5-2e4a-4bfa-9b52-f3eb08481a83,Strict-Transport-Security: max-age=31536000; includeSubDomains; preload,X-Content-Type-Options: nosniff,policy-id: DeploymentRatelimit-Call,x-ms-region: West Europe,Date: Fri, 01 Dec 2023 13:29:12 GMT,Content-Length: 85,Content-Type: application/json</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        waitForSeconds </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> retryAfterSeconds </span><span class="token operator" style="color:rgb(255, 157, 0)">!=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">int</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Parse</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">retryAfterSeconds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">waitForSeconds </span><span class="token operator" style="color:rgb(255, 157, 0)">==</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> pattern </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">@"Try again in (\d+) seconds"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> match </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> Regex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Match</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">azureRequestFailedException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Message</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> pattern</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// wait for 60 seconds if a specific value is not provided</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            waitForSeconds </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> match</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Success </span><span class="token operator" style="color:rgb(255, 157, 0)">&amp;&amp;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">int</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">TryParse</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">match</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Groups</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token number" style="color:rgb(255, 98, 140)">1</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Value</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">out</span><span class="token plain"> </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">int</span><span class="token plain"> seconds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> seconds </span><span class="token operator" style="color:rgb(255, 157, 0)">+</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">1</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">60</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">azureRequestFailedException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Status </span><span class="token operator" style="color:rgb(255, 157, 0)">==</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">int</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain">System</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Net</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">HttpStatusCode</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">TooManyRequests</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// var headers = response?.Headers.Select(h =&gt; $"{h.Name}: {h.Value}").ToList() ?? new List&lt;string&gt;();</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// _logger.LogWarning(azureRequestFailedException, $"429 - too many requests, will wait {{{nameof(waitForSeconds)}}} seconds - HEADERS: {{{nameof(headers)}}}", waitForSeconds, string.Join(",", headers));</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogWarning</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">azureRequestFailedException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"429 - too many requests, will wait {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">waitForSeconds</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} seconds"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> waitForSeconds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">else</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> headers </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> response</span><span class="token punctuation" style="color:rgb(255, 255, 255)">?.</span><span class="token plain">Headers</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Select</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">h </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> </span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp">h</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">Name</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">: </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp">h</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">Value</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">ToList</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">??</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogError</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">azureRequestFailedException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Azure.RequestFailedException - {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">azureRequestFailedException</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">Status</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} status code, will wait {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">waitForSeconds</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} seconds - HEADERS: {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">headers</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}}"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> azureRequestFailedException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Status</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> waitForSeconds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Join</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">","</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> headers</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> waitForSeconds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// &lt;summary&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// Make a documentId from a fileName; remove all characters except A-Z, a-z, 0-9, ., _, -</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// &lt;/summary&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">static</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">MakeDocumentId</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> fileName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> Regex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Replace</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">fileName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"[^A-Za-z0-9._-]"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">""</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// eg "A Booklet.pdf"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>By the way, I don't advise hard-coding the Azure resources as I have here, but rather passing them in as configuration. Incidentally, we could also use dependency injection to inject a prepared <code>IKernelMemory</code> instance into the service, but again, I'm keeping it simple here for clarity.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="2-our-document-processor-queue">2. Our document processor queue<a href="https://johnnyreilly.com/using-kernel-memory-to-chunk-documents-into-azure-ai-search#2-our-document-processor-queue" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>In order that we have a way to provide documents for chunking, we need a queue. This is a simple queue that we can add documents to, and then process them in the background. We're going to use a <code>ConcurrentQueue</code> for this, with a little wrapper around it so we can encapsulate the queue for sharing between our UI and our background task, and also to do some logging.</p>
<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">System</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Collections</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Concurrent</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">OurApp</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Model</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">namespace</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">OurApp</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Services</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Implementations</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">record</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">DocumentToProcess</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> DocumentUrl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> IndexName</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">interface</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">IDocumentProcessorQueue</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">DocumentToProcess</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">DequeueDocumentUri</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token return-type class-name keyword" style="color:rgb(255, 157, 0)">void</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">EnqueueDocumentUri</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">DocumentToProcess</span><span class="token plain"> documentToProcess</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">class</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">DocumentProcessorQueue</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token type-list class-name" style="color:rgb(250, 208, 0)">IDocumentProcessorQueue</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">readonly</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">ConcurrentQueue</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token class-name" style="color:rgb(250, 208, 0)">DocumentToProcess</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> _documentUrlQueue</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">readonly</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">ILogger</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token class-name" style="color:rgb(250, 208, 0)">DocumentProcessorQueue</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">DocumentProcessorQueue</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">ILogger</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token class-name" style="color:rgb(250, 208, 0)">DocumentProcessorQueue</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        _documentUrlQueue </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        _logger </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:rgb(255, 157, 0)">void</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">EnqueueDocumentUri</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">DocumentToProcess</span><span class="token plain"> documentToProcess</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogInformation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Adding document for background processing onto {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">documentToProcess</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">IndexName</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} index later: {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">documentToProcess</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">DocumentUrl</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} ({{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">_documentUrlQueue</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">Count</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} items on queue)"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> documentToProcess</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">IndexName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> documentToProcess</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">DocumentUrl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> _documentUrlQueue</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Count</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        _documentUrlQueue</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Enqueue</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">documentToProcess</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">DocumentToProcess</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">DequeueDocumentUri</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">_documentUrlQueue</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">TryDequeue</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">out</span><span class="token plain"> </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> documentToProcess</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogInformation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Document picked up for background processing onto {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">documentToProcess</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">IndexName</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} index: {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">documentToProcess</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">DocumentUrl</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} ({{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">_documentUrlQueue</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">Count</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} items remain on queue)"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> documentToProcess</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">IndexName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> documentToProcess</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">DocumentUrl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> _documentUrlQueue</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Count</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> documentToProcess</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The <code>EnqueueDocumentUri</code> method above will be called from the context of our UI - from an ASP.NET controller. This will be invoked when someone uploads a file and will also be responsible for adding the file to a BlobService for storage prior to processing.</p>
<p>By contrast, the <code>DequeueDocumentUri</code> method will be called from the context of our background service; it will call this method to pick up a file for processing.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="3-our-background-service">3. Our background service<a href="https://johnnyreilly.com/using-kernel-memory-to-chunk-documents-into-azure-ai-search#3-our-background-service" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Next, we need a background service to bring together our <code>DocumentProcessorQueue</code> and our <code>RagGestionService</code>. This is a standard ASP.NET hosted service. It will look like this:</p>
<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">OurApp</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Model</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">OurApp</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Services</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">namespace</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">OurApp</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">BackgroundServices</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">class</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">DocumentProcessorBackgroundService</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token type-list class-name" style="color:rgb(250, 208, 0)">BackgroundService</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">readonly</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">ILogger</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token class-name" style="color:rgb(250, 208, 0)">DocumentProcessorBackgroundService</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">readonly</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">IServiceProvider</span><span class="token plain"> _services</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">DocumentProcessorBackgroundService</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">IServiceProvider</span><span class="token plain"> services</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">ILogger</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token class-name" style="color:rgb(250, 208, 0)">DocumentProcessorBackgroundService</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        _services </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> services</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        _logger </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">protected</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">override</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">async</span><span class="token plain"> </span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">Task</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">ExecuteAsync</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">CancellationToken</span><span class="token plain"> stoppingToken</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">try</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogInformation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"Starting RagGestion"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> ragGestionService </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> _services</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token generic-method function" style="color:rgb(250, 208, 0)">GetRequiredService</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token generic-method generic class-name" style="color:rgb(250, 208, 0)">IRagGestionService</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> documentProcessorQueue </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> _services</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token generic-method function" style="color:rgb(250, 208, 0)">GetRequiredService</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token generic-method generic class-name" style="color:rgb(250, 208, 0)">IDocumentProcessorQueue</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">PerformRagGestion</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> chunkerService</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> documentProcessorQueue</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> stoppingToken</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">Exception</span><span class="token plain"> e</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogError</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">e</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Error processing document"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">async</span><span class="token plain"> </span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">Task</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">PerformRagGestion</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">IRagGestionService</span><span class="token plain"> ragGestionService</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">IDocumentProcessorQueue</span><span class="token plain"> documentProcessorQueue</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">CancellationToken</span><span class="token plain"> stoppingToken</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">while</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token operator" style="color:rgb(255, 157, 0)">!</span><span class="token plain">stoppingToken</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">IsCancellationRequested</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> Task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Delay</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">TimeSpan</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">FromSeconds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token number" style="color:rgb(255, 98, 140)">5</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> stoppingToken</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token class-name" style="color:rgb(250, 208, 0)">DocumentToProcess</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> documentToProcess </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> documentProcessorQueue</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">DequeueDocumentUri</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">documentToProcess </span><span class="token operator" style="color:rgb(255, 157, 0)">==</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogDebug</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"No documents to process"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token keyword" style="color:rgb(255, 157, 0)">continue</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">try</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> watch </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> System</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Diagnostics</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Stopwatch</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">StartNew</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogInformation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Processing document: {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">documentToProcess</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">DocumentUrl</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}}"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> documentToProcess</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">DocumentUrl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> ragGestionService</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Process</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">indexName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> documentToProcess</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">IndexName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">documentUrl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> documentToProcess</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">DocumentUrl</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                watch</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Stop</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogInformation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    </span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Chunked and stored {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">documentToProcess</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">DocumentUrl</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} into Azure AI Search {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">documentToProcess</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">IndexName</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} index in {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">watch</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">Elapsed</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">Seconds</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}} seconds"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    documentToProcess</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">DocumentUrl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> documentToProcess</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">IndexName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> watch</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Elapsed</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">TotalSeconds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">Exception</span><span class="token plain"> e</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogError</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">e</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Error processing document: {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">documentToProcess</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}}"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> documentToProcess</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This service will run in the background of the ASP.NET application, will pick up documents from the queue (if there are any) and pass them to the <code>RagGestionService</code> for processing. It will trigger every 5 seconds, running for the lifetime of the application.</p>
<p>You'll see we're doing some timing here - this is because it's useful to know how long the process takes. If we're processing a lot of documents, we'll want to know how long it's taking to process each one.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="4-adding-documents-to-the-queue">4. Adding documents to the queue<a href="https://johnnyreilly.com/using-kernel-memory-to-chunk-documents-into-azure-ai-search#4-adding-documents-to-the-queue" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>To add documents to the queue, we'll need to create an endpoint in our ASP.NET application. This endpoint will accept files and add them to the queue. Here's an example of how we might do that:</p>
<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">Microsoft</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">AspNetCore</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Mvc</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">Azure</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Storage</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Blobs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">Azure</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Identity</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">Azure</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Core</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">namespace</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">OurApp</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Controllers</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">record</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">UploadedFile</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> FileName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">bool</span><span class="token plain"> Succeeded</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">long</span><span class="token plain"> Size</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> DocumentUrl</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token attribute class-name" style="color:rgb(250, 208, 0)">ApiController</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">class</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">UploadController</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token type-list class-name" style="color:rgb(250, 208, 0)">ControllerBase</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">readonly</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">IDocumentProcessorQueue</span><span class="token plain"> _documentProcessorQueue</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">readonly</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">ILogger</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token class-name" style="color:rgb(250, 208, 0)">UploadController</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> _log</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">readonly</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">IHostEnvironment</span><span class="token plain"> _env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">UploadController</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name" style="color:rgb(250, 208, 0)">ILogger</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token class-name" style="color:rgb(250, 208, 0)">UploadController</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> log</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name" style="color:rgb(250, 208, 0)">IHostEnvironment</span><span class="token plain"> env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name" style="color:rgb(250, 208, 0)">IDocumentProcessorQueue</span><span class="token plain"> documentProcessorQueue</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        _log </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> log</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        _env </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        _documentProcessorQueue </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> documentProcessorQueue</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token attribute class-name" style="color:rgb(250, 208, 0)">RequestSizeLimit</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token attribute attribute-arguments number" style="color:rgb(255, 98, 140)">104857600</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// For files of up to 100 MB - perhaps larger than you'd want to upload in a single go</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token function" style="color:rgb(250, 208, 0)">HttpPost</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"api/</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">UploadFiles</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token attribute class-name" style="color:rgb(250, 208, 0)">ProducesResponseType</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token attribute attribute-arguments">StatusCodes</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token attribute attribute-arguments">Status200OK</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token attribute attribute-arguments"> Type </span><span class="token attribute attribute-arguments operator" style="color:rgb(255, 157, 0)">=</span><span class="token attribute attribute-arguments"> </span><span class="token attribute attribute-arguments keyword" style="color:rgb(255, 157, 0)">typeof</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token attribute attribute-arguments type-expression class-name" style="color:rgb(250, 208, 0)">List</span><span class="token attribute attribute-arguments type-expression class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token attribute attribute-arguments type-expression class-name" style="color:rgb(250, 208, 0)">UploadedFile</span><span class="token attribute attribute-arguments type-expression class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token attribute class-name" style="color:rgb(250, 208, 0)">ProducesResponseType</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token attribute attribute-arguments">StatusCodes</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token attribute attribute-arguments">Status403Forbidden</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token attribute attribute-arguments"> Type </span><span class="token attribute attribute-arguments operator" style="color:rgb(255, 157, 0)">=</span><span class="token attribute attribute-arguments"> </span><span class="token attribute attribute-arguments keyword" style="color:rgb(255, 157, 0)">typeof</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token attribute attribute-arguments type-expression class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token attribute class-name" style="color:rgb(250, 208, 0)">ProducesResponseType</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token attribute attribute-arguments">StatusCodes</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token attribute attribute-arguments">Status404NotFound</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token attribute attribute-arguments"> Type </span><span class="token attribute attribute-arguments operator" style="color:rgb(255, 157, 0)">=</span><span class="token attribute attribute-arguments"> </span><span class="token attribute attribute-arguments keyword" style="color:rgb(255, 157, 0)">typeof</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token attribute attribute-arguments type-expression class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">async</span><span class="token plain"> </span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">Task</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">ActionResult</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">List</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">UploadedFile</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">UploadFiles</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token attribute class-name" style="color:rgb(250, 208, 0)">FromQuery</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> indexName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name" style="color:rgb(250, 208, 0)">List</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token class-name" style="color:rgb(250, 208, 0)">IFormFile</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> files</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> processedFiles </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">List</span><span class="token constructor-invocation class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">UploadedFile</span><span class="token constructor-invocation class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">try</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">foreach</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> formFile </span><span class="token keyword" style="color:rgb(255, 157, 0)">in</span><span class="token plain"> files</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token keyword" style="color:rgb(255, 157, 0)">try</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    </span><span class="token class-name" style="color:rgb(250, 208, 0)">TokenCredential</span><span class="token plain"> credential </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> _env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">IsDevelopment</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">AzureCliCredential</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">DefaultAzureCredential</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">DefaultAzureCredentialOptions</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                        ManagedIdentityClientId </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"[Managed Identity ClientId Here]"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    </span><span class="token class-name" style="color:rgb(250, 208, 0)">BlobServiceClient</span><span class="token plain"> azureBlobServiceClient </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                        </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">Uri</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"https://stourappdev.blob.core.windows.net"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> credential</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> containerClient </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> azureBlobServiceClient</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetBlobContainerClient</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">indexName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token operator" style="color:rgb(255, 157, 0)">!</span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> containerClient</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">ExistsAsync</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                        </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> containerClient</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">CreateIfNotExistsAsync</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> blobClient </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> containerClient</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetBlobClient</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">formFile</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">FileName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    </span><span class="token class-name" style="color:rgb(250, 208, 0)">StreamReader</span><span class="token plain"> streamReader </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">formFile</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">OpenReadStream</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> uploaded </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> blobClient</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">UploadAsync</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">streamReader</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">BaseStream</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">overwrite</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> uploadedFile </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">UploadedFile</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                        </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">FileName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> formFile</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">FileName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                        </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">Succeeded</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                        </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">Size</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> formFile</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Length</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                        </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">DocumentUrl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> blobClient</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Uri</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">AbsoluteUri</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    processedFiles</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Add</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">uploadedFile</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    _documentProcessorQueue</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">EnqueueDocumentUri</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                        </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">DocumentToProcess</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                            </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">DocumentUrl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> uploadedFile</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">DocumentUrl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                            </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">IndexName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> indexName</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token keyword" style="color:rgb(255, 157, 0)">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">Exception</span><span class="token plain"> ex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    processedFiles</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Add</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">UploadedFile</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                        </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">FileName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> formFile</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">FileName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                        </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">Succeeded</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">false</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                        </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">Size</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> formFile</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Length</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                        </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">DocumentUrl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Empty</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    _log</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogError</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">ex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"Failed to upload {file}"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> formFile</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">FileName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">Ok</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">processedFiles</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">Exception</span><span class="token plain"> ex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            _log</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogError</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">ex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"Problem uploading files"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">BadRequest</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"Problem uploading files"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>As we can see, this endpoint:</p>
<ol>
<li>Accepts files from a POST request with an index name in the querystring</li>
<li>Uploads them to Blob Storage (matching the container name to the index they will be processed into in future)</li>
<li>Adds them to the queue with <code>_documentProcessorQueue.EnqueueDocumentUri</code>. This will then be picked up by the background service and processed.</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="registering-our-services">Registering our services<a href="https://johnnyreilly.com/using-kernel-memory-to-chunk-documents-into-azure-ai-search#registering-our-services" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Finally, we'll need to register our services in the <code>Program.cs</code> file. We'll want to add the following:</p>
<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">builder</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Services</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token generic-method function" style="color:rgb(250, 208, 0)">AddSingleton</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token generic-method generic class-name" style="color:rgb(250, 208, 0)">IRagGestionService</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token generic-method generic class-name" style="color:rgb(250, 208, 0)"> RagGestionService</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token generic-method function" style="color:rgb(250, 208, 0)">AddSingleton</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token generic-method generic class-name" style="color:rgb(250, 208, 0)">IDocumentProcessorQueue</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token generic-method generic class-name" style="color:rgb(250, 208, 0)"> DocumentProcessorQueue</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token generic-method function" style="color:rgb(250, 208, 0)">AddHostedService</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token generic-method generic class-name" style="color:rgb(250, 208, 0)">DocumentProcessorBackgroundService</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>With this in place we have an application that can upload documents and chunk them in the background.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://johnnyreilly.com/using-kernel-memory-to-chunk-documents-into-azure-ai-search#conclusion" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>And that's it! This is an ASP.NET application that can chunk documents (or RagGest üòâ) in the background using Kernel Memory running in serverless mode. I haven't yet had the need to upgrade to the full Kernel Memory service. Perhaps the day will come, but the mileage we can get with this approach is considerable.</p>
<p>Many thanks to <a href="https://github.com/drosevear" target="_blank" rel="noopener noreferrer">David Rosevear</a> and <a href="https://www.linkedin.com/in/george-karsas" target="_blank" rel="noopener noreferrer">George Karsas</a> for their help working on this mechanism. And George for "RagGestion" - I love it!</p>]]></content:encoded>
            <category>Azure</category>
            <category>C#</category>
            <category>ASP.NET</category>
            <category>AI</category>
        </item>
        <item>
            <title><![CDATA[Static Web Apps CLI: improve performance with Vite server proxy]]></title>
            <link>https://johnnyreilly.com/static-web-apps-cli-improve-performance-with-vite-server-proxy</link>
            <guid>https://johnnyreilly.com/static-web-apps-cli-improve-performance-with-vite-server-proxy</guid>
            <pubDate>Wed, 19 Jun 2024 05:02:42 GMT</pubDate>
            <description><![CDATA[The Static Web Apps CLI has a slow proxy server. This post shows you how to improve performance by using Vite server proxy instead.]]></description>
            <content:encoded><![CDATA[<p>I often use the Azure Static Web Apps CLI for local development. It's not only handy when building Azure Static Web Apps, but also when building other types of web app, which also rely upon both a frontend server and some kind of API server. The Azure Static Web Apps CLI is particularly handy if you want to spoof authentication / authorization as well.</p>
<p>Changes in the behaviour of Node.js in version 17 caused issues with the Static Web Apps CLI. You can read a <a href="https://johnnyreilly.com/static-web-apps-cli-node-18-could-not-connect-to-api">previous post which discussed this</a>. However, whilst the issue was fixed in version 1.1.4 of the Static Web Apps CLI, it caused significant performance regressions in the CLIs dev server functionality.</p>
<p>This post shows you how to improve your developer experience by using Vite server proxy instead.</p>
<p><img decoding="async" alt="title image reading &amp;quot;Static Web Apps CLI: improve performance with Vite server proxy&amp;quot; with the Static Web Apps CLI and Vite logos" src="https://johnnyreilly.com/assets/images/title-image-3a4846e7d19616f2d2f9a6d14e3de3bd.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-the-static-web-apps-cli-does">What the Static Web Apps CLI does<a href="https://johnnyreilly.com/static-web-apps-cli-improve-performance-with-vite-server-proxy#what-the-static-web-apps-cli-does" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>The Static Web Apps CLI is a great tool for local development. It spins up a local server which proxies requests to your frontend / backend servers. This is a great way to handle local development without having to work around CORS issues. There's also an extra bonus in the box, in that you can spoof authentication / authorization as well.</p>
<p>So to be clear, for the purposes of local development, the Static Web Apps CLI is a dev server that does three important things:</p>
<ol>
<li>Proxies requests across to your front end dev server (in my case this is Vite, and this will become relevant later)</li>
<li>Proxies requests across to your backend server</li>
<li>Provides an authentication / authorization mechanism</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-issue-with-the-static-web-apps-cli">The issue with the Static Web Apps CLI<a href="https://johnnyreilly.com/static-web-apps-cli-improve-performance-with-vite-server-proxy#the-issue-with-the-static-web-apps-cli" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>All of this is great, but the performance of the proxy server has been poor since version 1.1.4 of the Static Web Apps CLI. So whilst the issue with Node.js 18 was fixed, the performance of the proxy server was impacted. Consider a comment from <a href="https://github.com/Azure/static-web-apps-cli/issues/663#issuecomment-1646061953" target="_blank" rel="noopener noreferrer">this GitHub issue</a>:</p>
<blockquote>
<p>It works for me as well, the main problem is that the performance of the site is terrible when compared not running through swa cli. Pages take long time to load and resources (for example &gt; 1s to load a font)</p>
</blockquote>
<p>Regrettably, performance has not improved significantly since that time. <a href="https://github.com/Azure/static-web-apps-cli/issues/736" target="_blank" rel="noopener noreferrer">You can read more about the performance issues in this issue</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="proxying-with-vite">Proxying with Vite<a href="https://johnnyreilly.com/static-web-apps-cli-improve-performance-with-vite-server-proxy#proxying-with-vite" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>So what can we do about this? Well, for my local development I'm using Vite as my frontend server. Vite has a server proxy feature which is very performant.</p>
<p><a href="https://github.com/bzbetty" target="_blank" rel="noopener noreferrer">Sam "Betty" McKoy</a> suggested that we could use the Vite server proxy instead of the Static Web Apps CLI proxy server <a href="https://github.com/Azure/static-web-apps-cli/issues/736#issuecomment-2143373208" target="_blank" rel="noopener noreferrer">here</a>. This is a great idea, and it's very easy to do.</p>
<p>My <code>package.json</code> file in the frontend app has the following scripts:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"scripts"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token property" style="color:rgb(255, 157, 0)">"dev"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"vite"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token property" style="color:rgb(255, 157, 0)">"start"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"swa start http://localhost:5173 --run \"npm run dev\" --api-location ./api"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Right now, once I've run <code>npm start</code> the Static Web Apps CLI will start up the frontend server and the backend server. I can then browse to <code>http://localhost:4280</code> and see my app running. Front end requests will be proxied to <code>http://localhost:5173</code> and backend requests will be proxied to my API (in my case it's an Azure Function served on <code>http://localhost:7071</code>) - but it could be somewhere else, and <a href="https://azure.github.io/static-web-apps-cli/docs/cli/swa-start/#start-api-server-manually" target="_blank" rel="noopener noreferrer">that's configurable</a>.</p>
<p>To get the Vite server proxy working, I need to change the <code>vite.config.ts</code> to add the following <code>server.proxy</code> configuration:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> defineConfig </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'vite'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// https://vitejs.dev/config/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">default</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">defineConfig</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  server</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    proxy</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token string-property property" style="color:rgb(255, 157, 0)">'/api'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        target</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'http://127.0.0.1:4280'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        changeOrigin</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        autoRewrite</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token string-property property" style="color:rgb(255, 157, 0)">'/.auth'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        target</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'http://127.0.0.1:4280'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        changeOrigin</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        autoRewrite</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>What does this do? Well, for requests that go to Vite (on <code>http://localhost:5173</code>), thanks to this change, requests with the prefix <code>/api</code> and <code>/.auth</code> are now proxied across back to the Static Web App CLI server at <code>http://localhost:4280</code>.</p>
<p>You'll note a few options being set:</p>
<ul>
<li><a href="https://vitejs.dev/config/server-options.html#server-proxy" target="_blank" rel="noopener noreferrer"><code>changeOrigin</code></a> - will change both host and origin headers to match the target</li>
<li><a href="https://github.com/http-party/node-http-proxy#options" target="_blank" rel="noopener noreferrer"><code>autoRewrite</code></a> - rewrites the location host/port on (201/301/302/307/308) redirects based on requested host/port.</li>
</ul>
<p>You'll also note we're using a <code>target</code> of <code>http://127.0.0.1:4280</code> rather than <code>http://localhost:4280</code>. This is because of the changes in Node.js 17 and above which mean that IPv6 is the default DNS instead of IPv4.</p>
<p>If you were to try using a <code>target</code> of <code>http://localhost:4280</code> in the configuration you may see an error like below due to the IPv6 DNS issue:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">run</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">1</span><span class="token plain">:38:29 PM </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">vite</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> http proxy error: /.auth/login/aad</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">run</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> Error: connect ECONNREFUSED ::1:4280</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">run</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain">     at TCPConnectWrap.afterConnect </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">as oncomplete</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">node:net:1555:16</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>If you stick with <code>http://127.0.0.1:4280</code> and you should be fine. I discovered the workaround from <a href="https://github.com/vitejs/vite/discussions/7620#discussioncomment-5689650" target="_blank" rel="noopener noreferrer">this GitHub issue</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="comparing-performance">Comparing performance<a href="https://johnnyreilly.com/static-web-apps-cli-improve-performance-with-vite-server-proxy#comparing-performance" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>With the Vite <code>server.proxy</code> configuration in place, our app is now usable on 2 ports. We can browse to both <code>http://localhost:5173</code> and <code>http://localhost:4280</code> - both ports will show our app running. Going to <code>http://localhost:5173</code> is using Vite directly for static assets and proxying back to <code>http://localhost:4280</code> for API / auth. Going to <code>http://localhost:4280</code> is using the Static Web Apps CLI to proxy to Vite for static assets, uses itself for auth and proxies any API requests.</p>
<p>I'm going to take a medium sized app and run it with both configurations. I'll then use the Chrome DevTools to compare the performance of the two configurations. It'll be a basic test, but it should give us an idea of the performance difference.</p>
<p>The Static Web App CLI (<code>http://localhost:4280</code>) takes just over <strong>10 seconds</strong> to load the app.</p>
<p><img decoding="async" loading="lazy" alt="screenshot of devtools showing 10 seconds finish time" src="https://johnnyreilly.com/assets/images/devtools-performance-static-web-app-cli-2db8559ac8179393f298521d5efcc14f.png" width="1430" height="50" class="img_ev3q"></p>
<p>The Vite server proxy (<code>http://localhost:5173</code>) takes just around <strong>1.5 seconds</strong> to load the app.</p>
<p><img decoding="async" loading="lazy" alt="screenshot of devtools showing 10 seconds finish time" src="https://johnnyreilly.com/assets/images/devtools-performance-vite-server-proxy-cf656f14743a3cdaf651fa1203796072.png" width="1430" height="50" class="img_ev3q"></p>
<p>This is a significant improvement in performance. The Vite server proxy approach is nearly <strong>10x faster</strong> than the Static Web Apps CLI proxy server.</p>
<p>It's worth noting that we're still using the Static Web Apps CLI for authentication / authorization and for hitting the backend server. However, given that static assets are by far the most common request, this change will make a big difference to your local development experience.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="summary">Summary<a href="https://johnnyreilly.com/static-web-apps-cli-improve-performance-with-vite-server-proxy#summary" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>The Static Web Apps CLI is a great tool for local development. However, the performance of the proxy server has been poor since version 1.1.4. This post has shown you how to improve performance by using the Vite server proxy instead. The Vite server proxy is much faster than the Static Web Apps CLI proxy server. This is a simple change to make, and it will make a big difference to your local development experience. Give it a try and see how much faster your app loads!</p>]]></content:encoded>
            <category>Azure Static Web Apps</category>
            <category>Node.js</category>
        </item>
        <item>
            <title><![CDATA[npx and Azure Artifacts: the secret CLI delivery mechanism]]></title>
            <link>https://johnnyreilly.com/npx-and-azure-artifacts-the-secret-cli-delivery-mechanism</link>
            <guid>https://johnnyreilly.com/npx-and-azure-artifacts-the-secret-cli-delivery-mechanism</guid>
            <pubDate>Wed, 18 Dec 2024 07:43:47 GMT</pubDate>
            <description><![CDATA[By combining npx and Azure Artifacts, you can deliver your command line application to consumers in a way that is easy to use and secure.]]></description>
            <content:encoded><![CDATA[<p>The <a href="https://docs.npmjs.com/cli/v8/commands/npx" target="_blank" rel="noopener noreferrer"><code>npx</code> command</a> is a powerful tool for running CLI tools shipped as npm packages, without having to install them globally. <code>npx</code> is typically used to run packages on the public npm registry. However, if you have a private npm feed, you can also use <code>npx</code> to run packages available on that feed.</p>
<p>Azure Artifacts is a feature of Azure DevOps that supports publishing npm packages to a feed for consumption. (You might want to read <a href="https://johnnyreilly.com/azure-artifacts-publish-private-npm-package-with-azure-devops">this guide on publishing npm packages to Azure Artifacts</a>.) By combining <code>npx</code> and Azure Artifacts, you can deliver your CLI tool to consumers in a way that's easy to use and secure.</p>
<p><img decoding="async" alt="title image reading &amp;quot;Azure Artifacts: Publish a private npm package with Azure DevOps&amp;quot; with an Azure DevOps and npm logos" src="https://johnnyreilly.com/assets/images/title-image-d0c6ea44c850de93c1f5bc9b5dc3861f.png" width="1600" height="900" fetchpriority="high" class="img_ev3q"></p>
<p>This post shows how to use <code>npx</code> and Azure Artifacts to deliver your private CLI tool to consumers.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="why-is-combining-npx-with-private-npm-feeds-useful">Why is combining <code>npx</code> with private npm feeds useful?<a href="https://johnnyreilly.com/npx-and-azure-artifacts-the-secret-cli-delivery-mechanism#why-is-combining-npx-with-private-npm-feeds-useful" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>If you've ever found a need to deliver a private CLI tool to consumers, you'll know that it can be a challenge.</p>
<p>I work for a large organization and we need to share internal tools with our colleagues. The problem is, that it's hard to get people to install tools. Either you need to provide detailed instructions on how to acquire and install the tool, or you need to work out some kind of internal distribution mechanism. You also have to think about how to update the tool. It's not simple.</p>
<p>By combining <code>npx</code> and Azure Artifacts it becomes much simpler. You can publish your CLI tool to a private npm feed and then consumers can run it with a single command. They don't need to install anything up front (apart from Node.js which they likely already have), and they don't need to worry about updates.</p>
<p>A typical usecase is the one I've mentioned; sharing tools internally in an organisation. But, broader than that, if you want to deliver a private CLI tool to consumers, this is a great way to do it.</p>
<p>We're going to look at how we'd achieve this with Azure Artifacts as the host of the npm package. But, you could use any private npm feed that you have access to.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="publishing-a-package-to-azure-artifacts">Publishing a package to Azure Artifacts<a href="https://johnnyreilly.com/npx-and-azure-artifacts-the-secret-cli-delivery-mechanism#publishing-a-package-to-azure-artifacts" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Before you can use <code>npx</code> to run your CLI tool, you need to publish it to a private npm feed. Here is a guide on <a href="https://johnnyreilly.com/azure-artifacts-publish-private-npm-package-with-azure-devops">how to publish a private npm package with Azure Artifacts</a>. In that example we published a package to a feed called <code>npmrc-script-organization</code> in the <code>johnnyreilly</code> organization of Azure DevOps / Azure Artifacts.</p>
<p>For the sake of this post, we'll say that our package is a CLI tool with the name <code>@johnnyreilly/my-cli-tool</code>.</p>
<p>Remember, an npm package which houses a CLI tool is merely an npm package with a <a href="https://docs.npmjs.com/cli/v10/configuring-npm/package-json#bin" target="_blank" rel="noopener noreferrer"><code>bin</code> entry in the <code>package.json</code></a>. This post is not about how to create a CLI tool, but rather how to deliver one to private consumers. If you would like to see an example of what a CLI tool package looks like, you can check out the <a href="https://github.com/johnnyreilly/azdo-npm-auth" target="_blank" rel="noopener noreferrer"><code>azdo-npm-auth</code> package on GitHub</a>. (In fact, we'll use <code>azdo-npm-auth</code> later in this post - it's an example of a CLI tool published to the <strong>public</strong> npm registry.)</p>
<p>The question now is, how we can run the (private) <code>@johnnyreilly/my-cli-tool</code> package with <code>npx</code>?</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-registry-config-setting-of-npm--npx">The <code>registry</code> config setting of <code>npm</code> / <code>npx</code><a href="https://johnnyreilly.com/npx-and-azure-artifacts-the-secret-cli-delivery-mechanism#the-registry-config-setting-of-npm--npx" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>The secret sauce of running a CLI tool from a private npm feed with <code>npx</code> is the <a href="https://docs.npmjs.com/cli/v8/using-npm/config#registry" target="_blank" rel="noopener noreferrer"><code>registry</code> config setting of <code>npm</code> / <code>npx</code></a>. The <code>registry</code> option allows you to specify the URL of the npm feed that you want to use.</p>
<p>For our case, we grabbed the registry URL from the Azure DevOps UI by clicking on the "Connect to Feed" button in the Azure Artifacts section:</p>
<p><img decoding="async" loading="lazy" alt="Screenshot of &amp;quot;connect to feed&amp;quot; in Azure DevOps" src="https://johnnyreilly.com/assets/images/screenshot-connect-to-feed-9420465335c838a5365e11888ea36437.webp" width="1016" height="118" class="img_ev3q"></p>
<p>When we selected <code>npm</code>, ADO displayed instructions for setting up an <code>.npmrc</code> file for private consumption:</p>
<p><img decoding="async" loading="lazy" alt="Screenshot of the instructions for setting up the .npmrc file" src="https://johnnyreilly.com/assets/images/screenshot-npmrc-e8b46fa648b27148f109ea8fbf6ba807.png" width="2240" height="678" class="img_ev3q"></p>
<p>We don't need to set up an <code>.npmrc</code> file to run the CLI tool with <code>npx</code>, but we do need to grab the registry URL, which we can see in the example <code>.npmrc</code> file above. In our case, the URL is <code>https://pkgs.dev.azure.com/johnnyreilly/_packaging/npmrc-script-organization/npm/registry/</code>. This is the URL of the registry (private npm feed) that we want to use.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="running-the-cli-tool-with-npx">Running the CLI tool with <code>npx</code><a href="https://johnnyreilly.com/npx-and-azure-artifacts-the-secret-cli-delivery-mechanism#running-the-cli-tool-with-npx" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Equipped with the registry URL, we can now run our CLI tool with <code>npx</code>:</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">npx </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">-y</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">--registry</span><span class="token plain"> https://pkgs.dev.azure.com/johnnyreilly/_packaging/npmrc-script-organization/npm/registry/ @johnnyreilly/my-cli-tool</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This command will download the <code>@johnnyreilly/my-cli-tool</code> package from the private npm feed and run it. The <code>--registry</code> option tells <code>npx</code> to use the specified registry URL to download the package and the <code>-y</code> option tells <code>npx</code> to answer "yes" to the installation prompt.</p>
<p>If you need to pass arguments to the CLI tool, you can simply add them to the end of the command as you would with any CLI tool: (I'll put this over multiple lines for readability, but you can run it as a single line)</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">npx </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">-y</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">--registry</span><span class="token plain"> https://pkgs.dev.azure.com/johnnyreilly/_packaging/npmrc-script-organization/npm/registry/ </span><span class="token punctuation" style="color:rgb(255, 255, 255)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  @johnnyreilly/my-cli-tool </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">--arg1</span><span class="token plain"> hello</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>There is another way to specify the registry URL, which is to use the <code>npm_config_registry</code> environment variable. This approach is more verbose and is not cross platform (it won't work on Windows). But, if you prefer this approach, you can use this style of command:</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token assign-left variable" style="color:rgb(255, 238, 128)">npm_config_registry</span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain">https://pkgs.dev.azure.com/johnnyreilly/_packaging/npmrc-script-organization/npm/registry/ npx </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">-y</span><span class="token plain"> @johnnyreilly/my-cli-tool</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-about-authentication">What about authentication?<a href="https://johnnyreilly.com/npx-and-azure-artifacts-the-secret-cli-delivery-mechanism#what-about-authentication" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>If you encounter an error like this:</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> error code E401</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> error Unable to authenticate, your authentication token seems to be invalid.</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> error To correct this please try logging </span><span class="token keyword" style="color:rgb(255, 157, 0)">in</span><span class="token plain"> again with:</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> error </span><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> login</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Then npm is telling you to authenticate with the private npm feed / registry. This is because the feed is private and requires authentication. This is a good thing; it means that your package is secure; just as you'd hoped.</p>
<p>You may have your own way of authenticating with the feed. If so, great! Do that now and skip the next section.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="using-azdo-npm-auth-to-authenticate-with-azure-artifacts">Using <code>azdo-npm-auth</code> to authenticate with Azure Artifacts<a href="https://johnnyreilly.com/npx-and-azure-artifacts-the-secret-cli-delivery-mechanism#using-azdo-npm-auth-to-authenticate-with-azure-artifacts" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>On the other hand, if you're using Azure Artifacts (<a href="https://learn.microsoft.com/en-us/azure/devops/organizations/accounts/connect-organization-to-azure-ad?view=azure-devops" target="_blank" rel="noopener noreferrer">and your Azure DevOps organisation is connected with your Azure account / Microsoft Entra ID</a>), you can use <a href="https://github.com/johnnyreilly/azdo-npm-auth" target="_blank" rel="noopener noreferrer"><code>azdo-npm-auth</code></a> to solve your authentication needs. You can run <code>azdo-npm-auth</code> like this:</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">npx </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">-y</span><span class="token plain"> azdo-npm-auth </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">--registry</span><span class="token plain"> https://pkgs.dev.azure.com/johnnyreilly/_packaging/npmrc-script-organization/npm/registry/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The above command will acquire a PAT (Personal Access Token) from Azure DevOps and use it to create a user <code>.npmrc</code> file, which will be used by <code>npx</code> to authenticate with the feed subsequently.</p>
<p>If you encounter a <code>npm error code E401</code> as you run the <code>azdo-npm-auth</code> command, it's possible that you have a local <code>.npmrc</code> file that is tripping <code>npx</code> up. You can get around that by explicitly passing the <code>--registry</code> of the public npm feed / registry to <code>npx</code>:</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">npx </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">-y</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">--registry</span><span class="token plain"> https://registry.npmjs.org azdo-npm-auth </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">--registry</span><span class="token plain"> https://pkgs.dev.azure.com/johnnyreilly/_packaging/npmrc-script-organization/npm/registry/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>That's right; we're passing the public npm registry to <code>npx</code>'s <code>--registry</code> and we're passing our private npm feed / registry to <code>azdo-npm-auth</code>'s <code>--registry</code>. This gets around the <code>npm error code E401</code> issue.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="running-the-original-command-again">Running the original command again<a href="https://johnnyreilly.com/npx-and-azure-artifacts-the-secret-cli-delivery-mechanism#running-the-original-command-again" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Whichever way you authenticated, you should now be ready. You can now run the original command again; it should work this time. For example:</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">npx </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">-y</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">--registry</span><span class="token plain"> https://pkgs.dev.azure.com/johnnyreilly/_packaging/npmrc-script-organization/npm/registry/ @johnnyreilly/my-cli-tool</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>And that's it! You've successfully run your CLI tool from a private npm feed with <code>npx</code>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://johnnyreilly.com/npx-and-azure-artifacts-the-secret-cli-delivery-mechanism#conclusion" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>In this post we've used Azure Artifacts as the host of the npm package, but you could use any npm feed that you have access to. The key is to use the <code>registry</code> option of <code>npm</code> / <code>npx</code> to specify the URL of the npm feed.</p>
<p>By combining <code>npx</code> and private npm feeds, you can deliver your CLI tool to consumers in a way that's easy to use and secure. Consumers can run your tool with a single command, without having to install anything up front. This is a powerful way to share private CLI tools.</p>]]></content:encoded>
            <category>Azure DevOps</category>
            <category>Node.js</category>
        </item>
        <item>
            <title><![CDATA[module ws does not provide an export named WebSocketServer]]></title>
            <link>https://johnnyreilly.com/module-ws-does-not-provide-an-export-named-websocketserver</link>
            <guid>https://johnnyreilly.com/module-ws-does-not-provide-an-export-named-websocketserver</guid>
            <pubDate>Tue, 15 Oct 2024 14:21:15 GMT</pubDate>
            <description><![CDATA[Resolve the ws npm issue: SyntaxError: The requested module ws does not provide an export named WebSocketServer]]></description>
            <content:encoded><![CDATA[<p>I use Playwright for testing and mock Web Socket calls with the <a href="https://github.com/websockets/ws" target="_blank" rel="noopener noreferrer">ws</a> package. I recently did an <code>npm upgrade</code> and found myself hitting this error message when I tried to run tests:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">SyntaxError: The requested module 'ws' does not provide an export named 'WebSocketServer'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>It was caused by the following code:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> WebSocketServer </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"ws"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// this goes bang!</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> mockWsServer </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">WebSocketServer</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> port</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">5000</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The fix was surprisingly simple to implement but hard to search for.  That's why I'm writing this.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="resolving-the-requested-module-ws-does-not-provide">Resolving "The requested module 'ws' does not provide"...<a href="https://johnnyreilly.com/module-ws-does-not-provide-an-export-named-websocketserver#resolving-the-requested-module-ws-does-not-provide" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>This fix is as simple switching the code to:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> ws </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"ws"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> mockWsServer </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">ws</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Server</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> port</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">5000</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>And that should resolve the issue.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Serialising ASP.NET method calls for later execution]]></title>
            <link>https://johnnyreilly.com/serialising-aspnet-method-calls-for-later-execution</link>
            <guid>https://johnnyreilly.com/serialising-aspnet-method-calls-for-later-execution</guid>
            <pubDate>Tue, 14 May 2024 12:55:48 GMT</pubDate>
            <description><![CDATA[How can we take a method call, serialise it, perhaps store it in a database, and then later rehydrate and execute?]]></description>
            <content:encoded><![CDATA[<p>Let's start with "why". Imagine you have an operation that you'd like to perform, but before that operation is performed, some other things need to take place first. Maybe it needs to be approved by someone, maybe you need an explicit record of what method is to be executed.</p>
<p>Now you could build a mechanism to manually cater for each scenario that triggered a method call. But that's a lot of boilerplate code for each implementation, and given we might want to cater for many scenarios, it wouldn't scale particularly well as an approach.</p>
<p>So how can we take a method call, serialise it, perhaps store it in a database, and then later rehydrate and execute?</p>
<p><img decoding="async" alt="title image reading &amp;quot;Serialising ASP.NET method calls for later execution&amp;quot; with the C# logo" src="https://johnnyreilly.com/assets/images/title-image-0c2344bb797a565a0d579f3ef0c011c3.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-does-serialising-our-method-call-require">What does serialising our method call require?<a href="https://johnnyreilly.com/serialising-aspnet-method-calls-for-later-execution#what-does-serialising-our-method-call-require" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>To serialise a method call, what do we need to store? Three things:</p>
<ol>
<li>The type of object that contains the method we want to subsequently invoke</li>
<li>The method on that object</li>
<li>The parameter values that will be passed to the method when it is called</li>
</ol>
<p>Pretty simple, right? It's worth highlighting that there is an underlying assumption for this approach:</p>
<p><strong>The method call does not depend on the object being in a specific state for the operation to succeed.</strong></p>
<p>So if, before calling a method on that object, you need to call another method called <code>OpenConnection</code> (for example) then this approach would not work. Likewise if subsequent cleanup is required after a method is called, this approach would not work.</p>
<p>The analogy may not be entirely accurate, but think of each method call as needing to be an atomic operation and you're probably heading in the right direction.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="how-do-we-serialise-our-method-call">How do we serialise our method call?<a href="https://johnnyreilly.com/serialising-aspnet-method-calls-for-later-execution#how-do-we-serialise-our-method-call" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>First of all, we need a data structure to store the information we need. We could use a <code>record</code> like this:</p>
<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">record</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">MethodCall</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> ServiceName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> MethodName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">object</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> Parameters</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This record will store the name of the service, the name of the method, and the parameters that will be passed to the method when it is called.</p>
<p>Next we need an example service that we can call. For instance:</p>
<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">interface</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">IOurService</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">Task</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token return-type class-name keyword" style="color:rgb(255, 157, 0)">bool</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">DoAThing</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">decimal</span><span class="token plain"> amount</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">bool</span><span class="token plain"> isApproved</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>An implementation of this service would be registered with the DI container when the application starts up. We don't need to know anything about the implementation of the service, just that it exists and that we can call methods on it.</p>
<p>If we consider a call to this method, it might look like this:</p>
<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">IOurService</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">DoAThing</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"the name"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">100m</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The above can be represented as a <code>MethodCall</code> like this:</p>
<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token class-name" style="color:rgb(250, 208, 0)">MethodCall</span><span class="token plain"> methodCall </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">ServiceName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">typeof</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token type-expression class-name" style="color:rgb(250, 208, 0)">IOurService</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">FullName </span><span class="token operator" style="color:rgb(255, 157, 0)">??</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">throw</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">InvalidOperationException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"Service name cannot be null"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">MethodName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">IOurService</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">DoAThing</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">Parameters</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"the name"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">100m</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>I'm not going to do so in this post, but the <code>MethodCall</code> could be stored in a database. This is powerful because it means that we can store the method call, and then later rehydrate it and execute it.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="how-do-we-deserialise-our-method-call-and-execute-it">How do we deserialise our method call and execute it?<a href="https://johnnyreilly.com/serialising-aspnet-method-calls-for-later-execution#how-do-we-deserialise-our-method-call-and-execute-it" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Now that we've looked at how to serialise a method call, let's look at how we can deserialise and execute it. We need a class that can take a <code>MethodCall</code> and execute it. Herewith the <code>MethodCallInvoker</code> class that does just that:</p>
<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">class</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">MethodCallInvoker</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name" style="color:rgb(250, 208, 0)">IServiceProvider</span><span class="token plain"> serviceProvider</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name" style="color:rgb(250, 208, 0)">MethodCall</span><span class="token plain"> operation</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">async</span><span class="token plain"> </span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">Task</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token return-type class-name keyword" style="color:rgb(255, 157, 0)">object</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">InvokeAsync</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name" style="color:rgb(250, 208, 0)">Type</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> serviceType </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> Type</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetType</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">operation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">ServiceName </span><span class="token operator" style="color:rgb(255, 157, 0)">??</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">throw</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">InvalidOperationException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"Service name cannot be null"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">object</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> service </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> serviceProvider</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetService</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">serviceType </span><span class="token operator" style="color:rgb(255, 157, 0)">??</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">throw</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">InvalidOperationException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"Service type cannot be null"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name" style="color:rgb(250, 208, 0)">MethodInfo</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> serviceMethod </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> serviceType</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetMethod</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">operation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">MethodName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">??</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">throw</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">InvalidOperationException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"Method info cannot be null"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name" style="color:rgb(250, 208, 0)">List</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">object</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> parameters </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name" style="color:rgb(250, 208, 0)">ParameterInfo</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> requiredParameters </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> serviceMethod</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetParameters</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">for</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">int</span><span class="token plain"> i </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">0</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"> i </span><span class="token operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token plain"> requiredParameters</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Length</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"> i</span><span class="token operator" style="color:rgb(255, 157, 0)">++</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token class-name" style="color:rgb(250, 208, 0)">ParameterInfo</span><span class="token plain"> requiredParameter </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> requiredParameters</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">i</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">object</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> suppliedParameter </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> operation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Parameters</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">i</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">bool</span><span class="token plain"> suppliedValueIsOfCorrectType </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> requiredParameter</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">ParameterType </span><span class="token operator" style="color:rgb(255, 157, 0)">==</span><span class="token plain"> suppliedParameter</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetType</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">suppliedValueIsOfCorrectType</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                parameters</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Add</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">operation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Parameters</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">i</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">else</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// Convert.ChangeType is used to convert the supplied parameter to the required type eg from double to decimal</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                parameters</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Add</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">Convert</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">ChangeType</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">suppliedParameter</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> requiredParameter</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">ParameterType</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> CultureInfo</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">InvariantCulture</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name" style="color:rgb(250, 208, 0)">Task</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> task </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">Task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain">serviceMethod</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Invoke</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">service</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token range operator" style="color:rgb(255, 157, 0)">..</span><span class="token plain">parameters</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">??</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">throw</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">InvalidOperationException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Method </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp">operation</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">MethodName</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)"> did not return a task"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">object</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> result </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetType</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">IsGenericType </span><span class="token operator" style="color:rgb(255, 157, 0)">&amp;&amp;</span><span class="token plain"> task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetType</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetGenericTypeDefinition</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">==</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">typeof</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token type-expression class-name" style="color:rgb(250, 208, 0)">Task</span><span class="token type-expression class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token type-expression class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// Get the result using reflection</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token class-name" style="color:rgb(250, 208, 0)">PropertyInfo</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> resultProperty </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetType</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetProperty</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"Result"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            result </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> resultProperty</span><span class="token punctuation" style="color:rgb(255, 255, 255)">?.</span><span class="token function" style="color:rgb(250, 208, 0)">GetValue</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> result</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The <code>MethodCallInvoker</code> class takes an <code>IServiceProvider</code> and a <code>MethodCall</code> in its constructor. Remember that the <code>IServiceProvider</code> can be used to get a service that has been registered with the DI container. By giving the <code>MethodCallInvoker</code> the <code>IServiceProvider</code>, we can get the service that we need to call the method on. The <code>InvokeAsync</code> method uses reflection to get the service, and the method that needs to be called.</p>
<p>We then do some more reflection gymnastics to ensure that the parameters that are passed to the method are of the correct type. When it deserialises the parameters, the converter will make a best guess on the types of the parameters. If a parameter is not of the correct type, it uses <code>Convert.ChangeType</code> to convert the parameter to the correct type. The canonical example of this is converting a <code>double</code> to a <code>decimal</code>.</p>
<p>With all this done, the <code>MethodCallInvoker</code> is ready to call the method. Because it's likely that the method being invoked will be an <code>async</code> method, we expect them to return a <code>Task</code>. It's possible there may be a value returned as well, and if there is we unwrap it from the <code>Task</code> and return it.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="how-do-we-use-the-methodcallinvoker">How do we use the <code>MethodCallInvoker</code>?<a href="https://johnnyreilly.com/serialising-aspnet-method-calls-for-later-execution#how-do-we-use-the-methodcallinvoker" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Let's do an end to end demonstration of how to serialise a method call, deserialise it and execute it. Here's how you can do it:</p>
<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token class-name" style="color:rgb(250, 208, 0)">MethodCall</span><span class="token plain"> methodCall </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">ServiceName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">typeof</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token type-expression class-name" style="color:rgb(250, 208, 0)">IOurService</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">FullName </span><span class="token operator" style="color:rgb(255, 157, 0)">??</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">throw</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">InvalidOperationException</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"Service name cannot be null"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">MethodName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">IOurService</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">DoAThing</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">Parameters</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"the name"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">100m</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> json </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> Newtonsoft</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Json</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">JsonConvert</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">SerializeObject</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">methodCall</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token class-name" style="color:rgb(250, 208, 0)">MethodCall</span><span class="token plain"> deserialized </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> Newtonsoft</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Json</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">JsonConvert</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token generic-method function" style="color:rgb(250, 208, 0)">DeserializeObject</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token generic-method generic class-name" style="color:rgb(250, 208, 0)">MethodCall</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">json</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">??</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">throw</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">Exception</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"Problem deserializing"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">object</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> result </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">MethodCallInvoker</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">_serviceProvider</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> deserialized</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">InvokeAsync</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The above code serialises the <code>MethodCall</code> to a JSON string, deserialises it back to a <code>MethodCall</code>, and then uses the <code>MethodCallInvoker</code> to execute the method.</p>
<p>Why are we using <code>Newtonsoft.Json</code> for our serialisation / deserialisation in this example? We don't have to, but let's say we're persisting this method call to a Cosmos DB, Cosmos uses JSON.NET for JSON handling. So this somewhat simulates what would happen during a potential persistence to a Cosmos container / subsequent loading from a Cosmos container. Otherwise I'd likely use <code>System.Text.Json</code>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://johnnyreilly.com/serialising-aspnet-method-calls-for-later-execution#conclusion" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>In this post, we've looked at how we can serialise a method call (which could be stored in a database), and then later rehydrate and execute it. We've seen how we can use reflection to get the service and method that we need to call, and how we can convert the parameters to the correct type.</p>]]></content:encoded>
            <category>Azure</category>
            <category>C#</category>
        </item>
        <item>
            <title><![CDATA[Azure Cosmos DB: container items and generics]]></title>
            <link>https://johnnyreilly.com/azure-cosmosdb-container-item-generics</link>
            <guid>https://johnnyreilly.com/azure-cosmosdb-container-item-generics</guid>
            <pubDate>Thu, 11 Apr 2024 14:31:06 GMT</pubDate>
            <description><![CDATA[Learn how to use generics to store and retrieve different types of object in an Azure Cosmos DB Container. And how to deserialize the data property into a C# object of a specific type.]]></description>
            <content:encoded><![CDATA[<p>Cosmos DB is a great database for storing objects. But what if you want to store subtly different types of object in the same container? This post demonstrates how you can use generics to store and retrieve different types of object in an Azure Cosmos DB Container using C#.</p>
<p><img decoding="async" alt="title image reading &amp;quot;Azure Cosmos DB: container items and generics&amp;quot; with the Cosmos DB logo" src="https://johnnyreilly.com/assets/images/title-image-41b07cf9d68421ae65ff7cc2350c46f2.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-problem">The problem<a href="https://johnnyreilly.com/azure-cosmosdb-container-item-generics#the-problem" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>The situation I have in mind isn't entirely different types of object. Rather, it's a standard type of object with a single property that can be of different types. Consider the following record:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"id"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"overview"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"itemName"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"vw-beetle"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"type"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"car"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"data"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"Wheels"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">4</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"Colour"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"blue"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"createdAt"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"2024-03-28T10:55:57.860484+00:00"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"createdBy"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"john.reilly"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"updatedAt"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"2024-03-28T14:31:37.9882095+00:00"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"updatedBy"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"john.reilly"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"_rid"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"NisFAIjrg3wFAAAAAAAAAA=="</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"_self"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"dbs/NisFAA==/colls/NisFAIjrg3w=/docs/NisFAIjrg3wFAAAAAAAAAA==/"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"_etag"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"\"bd005ad6-0000-0c00-0000-66057f4a0000\""</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"_attachments"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"attachments/"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"_ts"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">1711636298</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The <code>data</code> property is a JSON object that can be of any shape. In this case, it's a car with four wheels and a blue colour. But it could just as easily be a house with a number of rooms and a garden. Or a person with a name and an age. Or a book with a title and an author. You get the idea.</p>
<p>How can we store and retrieve these objects in a Cosmos DB container with C#?</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="a-generic-solution">A generic solution<a href="https://johnnyreilly.com/azure-cosmosdb-container-item-generics#a-generic-solution" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>The answer is to use generics. Here's the <code>MyItem</code> record that we're using in the above code:</p>
<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockTitle_Ktv7">MyItem.cs</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">namespace</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">ContainerApp</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Model</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Database</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token preprocessor property" style="color:rgb(255, 157, 0)">#</span><span class="token preprocessor property directive keyword" style="color:rgb(255, 157, 0)">pragma</span><span class="token preprocessor property" style="color:rgb(255, 157, 0)"> warning disable IDE1006</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">record</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">MyItem</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// &lt;summary&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// This is the partition key</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// &lt;/summary&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> itemName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> type</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name" style="color:rgb(250, 208, 0)">DateTimeOffset</span><span class="token plain"> createdAt</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> createdBy</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name" style="color:rgb(250, 208, 0)">DateTimeOffset</span><span class="token plain"> updatedAt</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> updatedBy</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token generic-method function" style="color:rgb(250, 208, 0)">MyItem</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token generic-method generic class-name keyword" style="color:rgb(255, 157, 0)">object</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> creditReviewPackName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> itemName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> type</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> createdAt</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> createdBy</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> updatedAt</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> updatedBy</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">record</span><span class="token plain"> </span><span class="token generic-method function" style="color:rgb(250, 208, 0)">MyItem</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token generic-method generic class-name" style="color:rgb(250, 208, 0)">TData</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// &lt;summary&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// This is the partition key</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">/// &lt;/summary&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> itemName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> type</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name" style="color:rgb(250, 208, 0)">TData</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> data</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name" style="color:rgb(250, 208, 0)">DateTimeOffset</span><span class="token plain"> createdAt</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> createdBy</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name" style="color:rgb(250, 208, 0)">DateTimeOffset</span><span class="token plain"> updatedAt</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> updatedBy</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token preprocessor property" style="color:rgb(255, 157, 0)">#</span><span class="token preprocessor property directive keyword" style="color:rgb(255, 157, 0)">pragma</span><span class="token preprocessor property" style="color:rgb(255, 157, 0)"> warning restore IDE1006</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The <code>MyItem</code> record is a generic record with a single type parameter <code>TData</code>. The first record is a convenience record that uses <code>object</code> as the type parameter. This is the record that we'll use when we're writing a record that does not have a <code>data</code> property, or when we're reading a record and we don't initially care about the <code>data</code> property.</p>
<p>The <code>type</code> field represents the type of <code>data</code>. This is a string that can be used to distinguish between different types of object. In the example above, the type is "car". In other examples, the type might be "house", "person", or "book". We can use this in future to filter the data by type and to deserialize the <code>data</code> property into the correct C# type; for instance <code>Car</code>. We just need to know how the <code>type</code> string maps to a particular C# type.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="writing-to-and-reading-from-the-cosmos-db-container">Writing to and reading from the Cosmos DB container<a href="https://johnnyreilly.com/azure-cosmosdb-container-item-generics#writing-to-and-reading-from-the-cosmos-db-container" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>In the <code>DatabaseMyItemService</code> class, we have methods to write to and read from the Cosmos DB container:</p>
<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockTitle_Ktv7">DatabaseMyItemService.cs</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">System</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Net</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">Microsoft</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Azure</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Cosmos</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">ContainerApp</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Model</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Database</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">using</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">ContainerApp</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Utilities</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">namespace</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(255, 157, 0)">ContainerApp</span><span class="token namespace punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token namespace" style="color:rgb(255, 157, 0)">Services</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">class</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">DatabaseMyItemService</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token type-list class-name" style="color:rgb(250, 208, 0)">IDatabaseMyItemService</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> DatabaseName </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"my-database"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> ContainerNameMyItems </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"my-items"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">readonly</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">CosmosClient</span><span class="token plain"> _client</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">private</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">readonly</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">ILogger</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token class-name" style="color:rgb(250, 208, 0)">DatabaseMyItemService</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">DatabaseMyItemService</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">ILogger</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token class-name" style="color:rgb(250, 208, 0)">DatabaseMyItemService</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">AppSettings</span><span class="token plain"> appSettings</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        _client </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">CosmosClient</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">connectionString</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> appSettings</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">CosmosConnectionString</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        _logger </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">async</span><span class="token plain"> </span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">Task</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">MyItem</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">TData</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> </span><span class="token generic-method function" style="color:rgb(250, 208, 0)">UpsertItem</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token generic-method generic class-name" style="color:rgb(250, 208, 0)">TData</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">MyItem</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token class-name" style="color:rgb(250, 208, 0)">TData</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> myItem</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">try</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogInformation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Upserting </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">MyItem</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)"> with </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">myItem</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">itemName</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">: {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">myItem</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">itemName</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}}"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> myItem</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">itemName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> container </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> _client</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetDatabase</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">DatabaseName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetContainer</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">ContainerNameMyItems</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token class-name" style="color:rgb(250, 208, 0)">MyItem</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token class-name" style="color:rgb(250, 208, 0)">TData</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> savedItem </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> container</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">UpsertItemAsync</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">myItem</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">PartitionKey</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">myItem</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">itemName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> savedItem</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">CosmosException</span><span class="token plain"> ex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogError</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">ex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Problem upserting </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">MyItem</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)"> with </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">myItem</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">itemName</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">: {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">myItem</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">itemName</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}}"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> myItem</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">itemName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">throw</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">Exception</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Problem upserting </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">MyItem</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)"> with </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">myItem</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">itemName</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">: </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp">myItem</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token interpolation-string interpolation expression language-csharp">itemName</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> ex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">async</span><span class="token plain"> </span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">Task</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">MyItem</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">TData</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> </span><span class="token generic-method function" style="color:rgb(250, 208, 0)">GetItem</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token generic-method generic class-name" style="color:rgb(250, 208, 0)">TData</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> itemName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">try</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogInformation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Looking up </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">MyItem</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)"> with </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">itemName</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">: {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">itemName</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}}"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> itemName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> container </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> _client</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetDatabase</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">DatabaseName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetContainer</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">ContainerNameMyItems</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// In this simplified example we're intentionally using id as partition key - https://stackoverflow.com/questions/54636852/implications-of-using-id-for-the-partition-key-in-cosmosdb</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token class-name" style="color:rgb(250, 208, 0)">MyItem</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token class-name" style="color:rgb(250, 208, 0)">TData</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> myItem </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> container</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token generic-method function" style="color:rgb(250, 208, 0)">ReadItemAsync</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token generic-method generic class-name" style="color:rgb(250, 208, 0)">MyItem</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token generic-method generic class-name" style="color:rgb(250, 208, 0)">TData</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">itemName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">PartitionKey</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">itemName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> myItem</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">CosmosException</span><span class="token plain"> ex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">when</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">ex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">StatusCode </span><span class="token operator" style="color:rgb(255, 157, 0)">==</span><span class="token plain"> HttpStatusCode</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">NotFound</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">async</span><span class="token plain"> </span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">Task</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">List</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">MyItem</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">GetItems</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> itemName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">try</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogInformation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Looking up </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">MyItem</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">s by </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">itemName</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">: {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">itemName</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}}"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> itemName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> container </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> _client</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetDatabase</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">DatabaseName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetContainer</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">ContainerNameMyItems</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token class-name" style="color:rgb(250, 208, 0)">List</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token class-name" style="color:rgb(250, 208, 0)">MyItem</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> myItems </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> container</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token generic-method function" style="color:rgb(250, 208, 0)">GetItemQueryIterator</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token generic-method generic class-name" style="color:rgb(250, 208, 0)">MyItem</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">QueryDefinition</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                    </span><span class="token string" style="color:rgb(165, 255, 144)">"SELECT * FROM c WHERE c.itemName = @itemName"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">WithParameter</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"@itemName"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> itemName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">ReadAllToListAsync</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> myItems</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">CosmosException</span><span class="token plain"> ex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            _logger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">LogError</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">ex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Problem getting </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">MyItem</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">s by </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">itemName</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">: {{</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">itemName</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">}}"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> itemName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token keyword" style="color:rgb(255, 157, 0)">throw</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">Exception</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">$"Problem getting </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">MyItem</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">s by </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp keyword" style="color:rgb(255, 157, 0)">nameof</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token interpolation-string interpolation expression language-csharp">itemName</span><span class="token interpolation-string interpolation expression language-csharp punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">: </span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token interpolation-string interpolation expression language-csharp">itemName</span><span class="token interpolation-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolation-string string" style="color:rgb(165, 255, 144)">"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> ex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>You'll note that the <code>UpsertItem</code> and <code>GetItem</code> methods are generic methods that take and return a <code>MyItem&lt;TData&gt;</code> record respectively. The <code>GetItems</code> method is not generic because it returns a list of <code>MyItem</code> records, which are the non-generic records; where <code>data</code> is of type <code>object?</code>.</p>
<p>Imagine, you might use the <code>GetItems</code> method to get all the items. If you wanted to load a particular item, in a strongly typed fashion, you might subsequently use the <code>GetItem</code> method to load a single item with a particular type, like so:</p>
<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> myCar </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> _databaseMyItemService</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token generic-method function" style="color:rgb(250, 208, 0)">GetItem</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token generic-method generic class-name" style="color:rgb(250, 208, 0)">Car</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"the-car"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="deserializing-the-data-property-with-jsonnet">Deserializing the <code>data</code> property with <code>JSON.NET</code><a href="https://johnnyreilly.com/azure-cosmosdb-container-item-generics#deserializing-the-data-property-with-jsonnet" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>If you want to avoid requerying the database to get the object in strongly typed form, you'll need to convert the <code>data</code> property into a C# object of a specific type. If you've retrieved the non-generic <code>MyItem</code> from Cosmos, as far as C# is concerned, the <code>data</code> property is just an <code>object?</code> at this point. Well, that's not quite true. It's actually a <code>JObject</code> from the <code>Newtonsoft.Json</code> library. (This is because the Cosmos DB SDK uses <code>Newtonsoft.Json</code> internally.)</p>
<p>You can use <code>JObject.ToObject&lt;T&gt;()</code> to convert the <code>data</code> property into a C# object of a specific type. Here's an example of how you might do this:</p>
<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> data </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> item</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">data </span><span class="token keyword" style="color:rgb(255, 157, 0)">is</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">not</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">Newtonsoft</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token class-name" style="color:rgb(250, 208, 0)">Json</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token class-name" style="color:rgb(250, 208, 0)">Linq</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token class-name" style="color:rgb(250, 208, 0)">JObject</span><span class="token plain"> dataJObject</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> dataJObject</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token generic-method function" style="color:rgb(250, 208, 0)">ToObject</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token generic-method generic class-name" style="color:rgb(250, 208, 0)">Car</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="deserializing-the-data-property-with-systemtextjson">Deserializing the <code>data</code> property with <code>System.Text.Json</code><a href="https://johnnyreilly.com/azure-cosmosdb-container-item-generics#deserializing-the-data-property-with-systemtextjson" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>You may well find yourself wanting to send a list of items to the front end. However, because the default serializer of ASP.NET is <code>System.Text.Json.JsonSerializer</code> you'll need a different approach to deal with the <code>JObject</code>, as you can't send a <code>JObject</code> to the front end. You need to deserialize it into a format that can be sent to the front end.</p>
<p>It's quite typical to have a method that converts a domain model to a view model; something like this:</p>
<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">record</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">MyItemViewModel</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> ItemName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> Type</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">object</span><span class="token class-name punctuation" style="color:rgb(255, 255, 255)">?</span><span class="token plain"> Data</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name" style="color:rgb(250, 208, 0)">DateTimeOffset</span><span class="token plain"> CreatedAt</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> CreatedBy</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name" style="color:rgb(250, 208, 0)">DateTimeOffset</span><span class="token plain"> UpdatedAt</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> UpdatedBy</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Here's an example of how you might convert our domain model to our view model. It includes a mechanism that uses <code>System.Text.Json.JsonSerializer</code> to deserialize the <code>data</code> property into an <code>object?</code> that <strong>can</strong> be sent to the front end:</p>
<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">static</span><span class="token plain"> </span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">MyItemViewModel</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">ItemToItemViewModel</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token class-name" style="color:rgb(250, 208, 0)">MyItem</span><span class="token plain"> item</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> data </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> creditReviewPackItem</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">data </span><span class="token keyword" style="color:rgb(255, 157, 0)">switch</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">Newtonsoft</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">Json</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">Linq</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">JObject</span><span class="token plain"> dataJObject </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> System</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Text</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Json</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">JsonSerializer</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token generic-method function" style="color:rgb(250, 208, 0)">Deserialize</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token generic-method generic class-name keyword" style="color:rgb(255, 157, 0)">object</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">dataJObject</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">ToString</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">Newtonsoft</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">Json</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">Linq</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">JArray</span><span class="token plain"> dataJArray </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> System</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Text</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Json</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">JsonSerializer</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token generic-method function" style="color:rgb(250, 208, 0)">Deserialize</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token generic-method generic class-name keyword" style="color:rgb(255, 157, 0)">object</span><span class="token generic-method generic class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">dataJArray</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">ToString</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        _ </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">null</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">ItemName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> item</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">itemName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">Type</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> item</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">type</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">Data</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> data</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">CreatedAt</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> item</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">createdAt</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">CreatedBy</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> item</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">createdBy</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">UpdatedAt</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> item</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">updatedAt</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">UpdatedBy</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> item</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">updatedBy</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://johnnyreilly.com/azure-cosmosdb-container-item-generics#conclusion" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>In this post, we've seen how you can use generics to store and retrieve different types of object in an Azure Cosmos DB Container using C#. We've seen how you can use a generic record to store objects with a single property that can be of different types. We've also seen how you can use <code>Newtonsoft.Json</code> to deserialize the <code>data</code> property into a C# object of a specific type. And we've seen how you can use <code>System.Text.Json</code> to deserialize the <code>data</code> property into an <code>object?</code> that can be sent to the front end.</p>]]></content:encoded>
            <category>Azure</category>
            <category>C#</category>
        </item>
        <item>
            <title><![CDATA[Introducing azdo-npm-auth (Azure DevOps npm auth)]]></title>
            <link>https://johnnyreilly.com/introducing-azdo-npm-auth</link>
            <guid>https://johnnyreilly.com/introducing-azdo-npm-auth</guid>
            <pubDate>Sun, 08 Dec 2024 08:21:50 GMT</pubDate>
            <description><![CDATA[Azure DevOps npm auth eases setting up local authentication to Azure DevOps npm feeds, particularly for non Windows users.]]></description>
            <content:encoded><![CDATA[<p>Azure DevOps has a feature called Azure Artifacts that supports publishing npm packages to a feed for consumption. Typically those npm packages are intended to be consumed by a restricted audience. To install a package published to a private feed you need to configure authentication, and for non Windows users this is a convoluted process.</p>
<p><img decoding="async" alt="title image reading &amp;quot;Introducing Azure DevOps npm auth&amp;quot; with an Azure DevOps and npm logos" src="https://johnnyreilly.com/assets/images/title-image-20d2fea1b99047c4bfb7a058a01ab1fb.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<p><a href="https://github.com/johnnyreilly/azdo-npm-auth" target="_blank" rel="noopener noreferrer"><code>azdo-npm-auth</code></a> exists to ease the setting up of local authentication to Azure DevOps npm feeds, particularly for non Windows users.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-problem-are-we-solving">What problem are we solving?<a href="https://johnnyreilly.com/introducing-azdo-npm-auth#what-problem-are-we-solving" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Consider the onboarding process for a Windows user for consuming an Azure Artifact npm feed:</p>
<p><img decoding="async" loading="lazy" alt="screenshot of the onboarding process for Windows users" src="https://johnnyreilly.com/assets/images/screenshot-onboarding-with-windows-f829c5e94b4ccdc17ec2c9c325cfaca5.png" width="2168" height="592" class="img_ev3q"></p>
<p>Now consider the onboarding process for a non Windows user:</p>
<p><img decoding="async" loading="lazy" alt="screenshot of the onboarding process for non Windows users" src="https://johnnyreilly.com/assets/images/screenshot-onboarding-with-other-f763bbba47f0835be032ce1bdeb202bb.png" width="2168" height="1606" class="img_ev3q"></p>
<p>As we can see, there is a significant difference in the onboarding experience between operating systems. Windows users can use a tool named <a href="https://www.npmjs.com/package/vsts-npm-auth" target="_blank" rel="noopener noreferrer"><code>vsts-npm-auth</code></a> which automates onboarding. Non Windows users have a longer road to follow. The instructions walk through manually creating an <code>.npmrc</code> file in a users home directory which contains information including a base 64 encoded Azure DevOps Personal Access Token with the Packaging read and write scopes. It is tedious to do.</p>
<p><code>azdo-npm-auth</code> aims to automate the toil, and make the onboarding experience for non Windows users as simple as it is for Windows users.</p>
<p>There is an official package named <a href="https://github.com/microsoft/ado-npm-auth" target="_blank" rel="noopener noreferrer"><code>ado-npm-auth</code></a>. However, <a href="https://github.com/microsoft/ado-npm-auth/issues/50" target="_blank" rel="noopener noreferrer">due to issues I experienced in using the <code>ado-npm-auth</code> package</a>, I found myself creating <code>azdo-npm-auth</code>. By the way, the package was briefly named <code>ado-npm-auth-lite</code>; I renamed it as I felt <code>azdo-npm-auth</code> was a better name.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="when-do-i-need-to-run-azdo-npm-auth">When do I need to run <code>azdo-npm-auth</code>?<a href="https://johnnyreilly.com/introducing-azdo-npm-auth#when-do-i-need-to-run-azdo-npm-auth" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Should you encounter the following message when you try to <code>npm i</code>:</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> error code E401</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> error Unable to authenticate, your authentication token seems to be invalid.</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> error To correct this please try logging </span><span class="token keyword" style="color:rgb(255, 157, 0)">in</span><span class="token plain"> again with:</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> error </span><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> login</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>OR</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> error code E401</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> error Incorrect or missing password.</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> error If you were trying to login, change your password, create an</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> error authentication token or </span><span class="token builtin class-name" style="color:rgb(250, 208, 0)">enable</span><span class="token plain"> two-factor authentication </span><span class="token keyword" style="color:rgb(255, 157, 0)">then</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> error that means you likely typed your password </span><span class="token keyword" style="color:rgb(255, 157, 0)">in</span><span class="token plain"> incorrectly.</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> error Please try again, or recover your password at:</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> error   https://www.npmjs.com/forgot</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> error</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> error If you were doing some other operation </span><span class="token keyword" style="color:rgb(255, 157, 0)">then</span><span class="token plain"> your saved credentials are</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> error probably out of date. To correct this please try logging </span><span class="token keyword" style="color:rgb(255, 157, 0)">in</span><span class="token plain"> again with:</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> error   </span><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> login</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>That means either:</p>
<ul>
<li>You have no user <code>.npmrc</code> file <strong>OR</strong></li>
<li>The token in your user <code>.npmrc</code> file is out of date</li>
</ul>
<p>In either case, running <code>azdo-npm-auth</code> should resolve the issue. But the way you run it is important. To get <code>azdo-npm-auth</code> to create the necessary user <code>.npmrc</code> file for local development, run the following command:</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">npx </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">-y</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">--registry</span><span class="token plain"> https://registry.npmjs.org azdo-npm-auth</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>It is possible to use environment variables to control the <code>registry</code> setting as well; consider the following (non-Windows compatible) example:</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token assign-left variable" style="color:rgb(255, 238, 128)">npm_config_registry</span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain">https://registry.npmjs.org npx azdo-npm-auth</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>You might be wondering what the <code>--registry https://registry.npmjs.org</code> part is for. It is a way to ensure that the <code>npx</code> command uses the <strong>public</strong> npm registry to install <code>azdo-npm-auth</code>. Without this, you might encounter a <code>npm error code E401</code> error like those above.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="configuration">Configuration<a href="https://johnnyreilly.com/introducing-azdo-npm-auth#configuration" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p><code>azdo-npm-auth</code> requires that a project <code>.npmrc</code> file exists in order that it can acquire the information to run.</p>
<p>There is an optional <code>config</code> parameter which allows selection of a specific project <code>.npmrc</code> file. If the <code>config</code> parameter is not supplied, <code>azdo-npm-auth</code> will default to use the <code>.npmrc</code> in the current project directory.</p>
<p>Should you not have one of these files already, there will be information in your Azure DevOps Artifacts section for connecting to the npm feed around creating a project <code>.npmrc</code> file. The required file should look something like this:</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token assign-left variable" style="color:rgb(255, 238, 128)">registry</span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain">https://pkgs.dev.azure.com/johnnyreilly/_packaging/npmrc-script-organization/npm/registry/</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">always-auth</span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain">true</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="authenticating-to-azure">Authenticating to Azure<a href="https://johnnyreilly.com/introducing-azdo-npm-auth#authenticating-to-azure" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>If you would like <code>azdo-npm-auth</code> to acquire a token on your behalf, then it requires that your <a href="https://learn.microsoft.com/en-us/azure/devops/organizations/accounts/connect-organization-to-azure-ad?view=azure-devops" target="_blank" rel="noopener noreferrer">Azure DevOps organisation is connected with your Azure account / Microsoft Entra ID</a>. Then, assuming you are authenticated with Azure, it can acquire an Azure DevOps Personal Access Token on your behalf. To authenticate, run <code>az login</code>. <a href="https://learn.microsoft.com/en-us/cli/azure/install-azure-cli" target="_blank" rel="noopener noreferrer">If you need to install the Azure CLI, follow these instructions</a>. It is not necessary to run <code>az login</code> if you are already authenticated with Azure.</p>
<p>If you would like to acquire a PAT token manually, there is a <code>--pat</code> option for that very circumstance.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="integration-with-packagejson">Integration with <code>package.json</code><a href="https://johnnyreilly.com/introducing-azdo-npm-auth#integration-with-packagejson" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="using-a-preinstall-script">Using a <code>preinstall</code> script<a href="https://johnnyreilly.com/introducing-azdo-npm-auth#using-a-preinstall-script" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>A great way to integrate <code>azdo-npm-auth</code> is by using it in a <code>preinstall</code> script in your <code>package.json</code>:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token property" style="color:rgb(255, 157, 0)">"scripts"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"preinstall"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"npx --yes azdo-npm-auth --config ./subdirectory-with-another-package-json/.npmrc"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The <code>--yes</code> flag above simply skips having npm challenge the user as to whether to download the package.</p>
<p>However, as you're probably noticing, this requires having multiple <code>package.json</code>s and only having the <code>.npmrc</code> file in the nested one. Assuming that works for you, brilliant. It may not - no worries. We'll talk about that in a second.</p>
<p>With the above <code>preinstall</code> script in place, when the user performs <code>npm i</code> or similar, before attempting to install, the relevant user <code>.npmrc</code> file will be put in place so that installation just works‚Ñ¢Ô∏è. This is a <strong>great</strong> developer experience.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="using-an-auth-script">Using an <code>auth</code> script<a href="https://johnnyreilly.com/introducing-azdo-npm-auth#using-an-auth-script" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>If the complexity of nested <code>package.json</code>s doesn't work for you, we generally advise setting up a script like the one below:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token property" style="color:rgb(255, 157, 0)">"scripts"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"auth"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"npx -y --registry https://registry.npmjs.org azdo-npm-auth"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>And running <code>npm run auth</code> when a <code>npm error code E401</code> is encountered. (Your script doesn't have to be called <code>auth</code> necessarily - if you like you could call it <code>fix-code-e401</code>, or something else entirely.)</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-about-ci">What about CI?<a href="https://johnnyreilly.com/introducing-azdo-npm-auth#what-about-ci" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>You might be worried about <code>azdo-npm-auth</code> trying to create user <code>.npmrc</code> files when running CI builds. Happily this does not happen; it detects whether it is running in a CI environment and does <strong>not</strong> create a user <code>.npmrc</code> file in that case.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="summary">Summary<a href="https://johnnyreilly.com/introducing-azdo-npm-auth#summary" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>If you're a Mac or a Linux user, hopefully <code>azdo-npm-auth</code> can significantly ease the friction experienced doing local development with Azure DevOps npm feeds. You can see the <a href="https://github.com/johnnyreilly/azdo-npm-auth" target="_blank" rel="noopener noreferrer">project code on GitHub here</a>.</p>]]></content:encoded>
            <category>Azure DevOps</category>
            <category>Node.js</category>
        </item>
        <item>
            <title><![CDATA[Static Typing for MUI React Data Grid Columns]]></title>
            <link>https://johnnyreilly.com/static-typing-for-mui-react-data-grid-columns</link>
            <guid>https://johnnyreilly.com/static-typing-for-mui-react-data-grid-columns</guid>
            <pubDate>Tue, 08 Oct 2024 10:33:54 GMT</pubDate>
            <description><![CDATA[The MUI React Data Grid can be used with static typing to ensure the columns you pass to the component are correct. This post will show you how to do that.]]></description>
            <content:encoded><![CDATA[<p>The <a href="https://mui.com/x/react-data-grid/" target="_blank" rel="noopener noreferrer">MUI X Data Grid</a> is a really handy component for rendering tabular data in React applications. But one thing that is not immediately obvious is how to use TypeScript to ensure that the columns you pass to the component are correct. This post will show you how to do that.</p>
<p><img decoding="async" alt="title image reading &amp;quot;Static Typing for MUI React Data Grid Columns&amp;quot; with a TypeScript logo and MUI logos" src="https://johnnyreilly.com/assets/images/title-image-b1343f3a033f2c8fa62e544fa2ae894d.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<p>Why does it matter? Well look at this screenshot of the Data Grid with incorrect column names:</p>
<p><img decoding="async" loading="lazy" alt="screenshot of a grid with incorrect columns" src="https://johnnyreilly.com/assets/images/screenshot-incorrect-columns-272e7f87c6f465e5f98c0c4453958089.png" width="2600" height="870" class="img_ev3q"></p>
<p>Interestingly, the <code>User</code> column is blank. Given the code, we'd probably expect to see a users name there.</p>
<p>Let's take look at the code for that screenshot:</p>
<div class="language-tsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-tsx codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports operator" style="color:rgb(255, 157, 0)">*</span><span class="token imports"> </span><span class="token imports keyword module" style="color:rgb(255, 157, 0)">as</span><span class="token imports"> </span><span class="token imports maybe-class-name">React</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'react'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">Box</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/material/Box'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">DataGrid</span><span class="token imports"> </span><span class="token imports punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/x-data-grid'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">default</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">BasicColumnsGrid</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> rows </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">1</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      username</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@MUI'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      age</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">20</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> columns </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> field</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'user-name'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> headerName</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'User'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> field</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'age'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> headerName</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'Age'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">sx</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> height</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript number" style="color:rgb(255, 98, 140)">250</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> width</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript string" style="color:rgb(165, 255, 144)">'100%'</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">DataGrid</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">columns</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">columns</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">rows</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">rows</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The issue is that the <code>field</code> property in the column definition is incorrect. It should be <code>username</code> not <code>user-name</code>. We know that, but the TypeScript compiler doesn't. And the Data Grid doesn't appear to know that either; there's no error in the console surfacing an issue.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="using-typescript-to-extract-type-information-from-the-rows">Using TypeScript to extract type information from the rows<a href="https://johnnyreilly.com/static-typing-for-mui-react-data-grid-columns#using-typescript-to-extract-type-information-from-the-rows" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>It's possible to use TypeScript to ensure that the columns you pass to the Data Grid are valid. What we want, is TypeScript to say: "Hey, you've passed the wrong column name to the Data Grid" (in it's own inimitable way). We can do that.</p>
<p>What we want to do, is use TypeScript to analyse the <code>rows</code> array and extract type information. We can do that like so:</p>
<div class="language-diff codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-diff codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> const rows = [</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   {</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">     id: 1,</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">     username: '@MUI',</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">     age: 20,</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   },</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> ];</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">  type ValidRow = (typeof rows)[number];</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">  type ValidField = keyof ValidRow;</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">  type ColumnWithValidField = { field: ValidField };</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The <code>ValidRow</code> type is the type of an element in the <code>rows</code> array:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">type</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">ValidRow</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">number</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  username</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  age</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">number</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The <code>ValidField</code> type is derived from the <code>ValidRow</code> type; it is the keys of the <code>ValidRow</code> type. So, the <code>ValidField</code> type is:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">type</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">ValidField</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'id'</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">|</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'username'</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">|</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'age'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Finally, we can create a type that represents a column with a valid field in the form of the <code>ColumnWithValidField</code> type:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">type</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">ColumnWithValidField</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  field</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'id'</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">|</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'username'</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">|</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'age'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The type above says explicitly that the <code>field</code> property of a column must be one of the keys of the <code>ValidRow</code> type. This is the type information we require to ensure that the columns we pass to the Data Grid are correct.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="applying-the-type-information-to-the-columns">Applying the type information to the columns<a href="https://johnnyreilly.com/static-typing-for-mui-react-data-grid-columns#applying-the-type-information-to-the-columns" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Now we have this type information, we can then use that information to type the <code>columns</code> array. We can do that like so:</p>
<div class="language-diff codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-diff codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> const columns = [</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   { field: 'username', headerName: 'User' },</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   { field: 'age', headerName: 'Age' },</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token deleted-sign deleted prefix deleted" style="color:rgba(239, 83, 80, 0.56)">-</span><span class="token deleted-sign deleted line" style="color:rgba(239, 83, 80, 0.56)">  ];</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token deleted-sign deleted line" style="color:rgba(239, 83, 80, 0.56)"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">  ] satisfies GridColDef&lt;ValidRow&gt;[] &amp; ColumnWithValidField[];</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Whereas previously the <code>columns</code> array was not explicitly typed. Now it is with the <code>satisfies</code> operator. (For an excellent explanation of <code>satifies</code> read <a href="https://www.totaltypescript.com/clarifying-the-satisfies-operator" target="_blank" rel="noopener noreferrer">Matt Pocock's post</a>.)</p>
<p>We are saying that <code>columns</code> is an array of <code>GridColDef&lt;ValidRow&gt;</code> <strong>and</strong> that the <code>field</code> property of each element in the array is definitely one of the provided fields in the <code>rows</code> data. We need both of these conditions to be true:</p>
<ul>
<li>Using <code>GridColDef&lt;ValidRow&gt;</code> ensures that the general columns schema matches what the Data Grid component needs.</li>
<li>Using <code>ColumnWithValidField</code> ensures that the <code>field</code> property of each column is correct; based upon the <code>rows</code> field.</li>
</ul>
<p>Let's validate this approach works, trying to use our buggy input with this new approach:</p>
<p><img decoding="async" loading="lazy" alt="screenshot of a grid with incorrect columns and TypeScript surfacing the issue" src="https://johnnyreilly.com/assets/images/screenshot-incorrect-columns-with-helpful-error-9bfd0e2a98ffbb73bbf44f329eef9dff.png" width="2600" height="1024" class="img_ev3q"></p>
<p>We can now see an error from the TypeScript compiler in VS Code: <code>Type '"user-name"' is not assignable to type '"id" | "username" | "age"'. Did you mean '"username"'?</code> It's even an actionable error, suggesting the correct field name!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="putting-it-all-together">Putting it all together<a href="https://johnnyreilly.com/static-typing-for-mui-react-data-grid-columns#putting-it-all-together" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Here's the full code (with the error corrected):</p>
<div class="language-tsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-tsx codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports operator" style="color:rgb(255, 157, 0)">*</span><span class="token imports"> </span><span class="token imports keyword module" style="color:rgb(255, 157, 0)">as</span><span class="token imports"> </span><span class="token imports maybe-class-name">React</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'react'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">Box</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/material/Box'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">DataGrid</span><span class="token imports punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token imports"> </span><span class="token imports maybe-class-name">GridColDef</span><span class="token imports"> </span><span class="token imports punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/x-data-grid'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">default</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">BasicColumnsGrid</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> rows </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">1</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      username</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@MUI'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      age</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">20</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">type</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">ValidRow</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">typeof</span><span class="token plain"> rows</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token builtin" style="color:rgb(250, 208, 0)">number</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">type</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">ValidField</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">keyof</span><span class="token plain"> </span><span class="token maybe-class-name">ValidRow</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">type</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">ColumnWithValidField</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> field</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">ValidField</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> columns </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> field</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'username'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> headerName</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'User'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> field</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'age'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> headerName</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'Age'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> satisfies </span><span class="token maybe-class-name">GridColDef</span><span class="token operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token maybe-class-name">ValidRow</span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">&amp;</span><span class="token plain"> </span><span class="token maybe-class-name">ColumnWithValidField</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">sx</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> height</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript number" style="color:rgb(255, 98, 140)">250</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> width</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript string" style="color:rgb(165, 255, 144)">'100%'</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">DataGrid</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">columns</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">columns</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">rows</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">rows</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>With this approach, you can be confident that the columns you pass to the Data Grid are correct. This is a great way to ensure that your code is correct and that you are using the Data Grid component as intended.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-importance-of-memoizing-columns">The importance of memoizing columns<a href="https://johnnyreilly.com/static-typing-for-mui-react-data-grid-columns#the-importance-of-memoizing-columns" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>The <a href="https://mui.com/x/react-data-grid/column-definition/" target="_blank" rel="noopener noreferrer">MUI docs say</a>:</p>
<blockquote>
<p>The <code>columns</code> prop should keep the same reference between two renders. The columns are designed to be definitions, to never change once the component is mounted. Otherwise, you take the risk of losing elements like column width or order. You can create the array outside the render function or memoize it.</p>
</blockquote>
<p>My own experience has been that I noticed no ill effects on my own use cases by <strong>not</strong> memoizing. When I asked the question I was advised this was still important <a href="https://github.com/mui/mui-x/issues/14862" target="_blank" rel="noopener noreferrer">when you use a big number of columns and rows</a>. To apply that to the example we've been working with, it would look like this:</p>
<div class="language-tsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-tsx codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports operator" style="color:rgb(255, 157, 0)">*</span><span class="token imports"> </span><span class="token imports keyword module" style="color:rgb(255, 157, 0)">as</span><span class="token imports"> </span><span class="token imports maybe-class-name">React</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'react'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">Box</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/material/Box'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">DataGrid</span><span class="token imports punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token imports"> </span><span class="token imports maybe-class-name">GridColDef</span><span class="token imports"> </span><span class="token imports punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/x-data-grid'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">default</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">BasicColumnsGrid</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> rows </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">1</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      username</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@MUI'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      age</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">20</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">type</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">ValidRow</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">typeof</span><span class="token plain"> rows</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token builtin" style="color:rgb(250, 208, 0)">number</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">type</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">ValidField</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">keyof</span><span class="token plain"> </span><span class="token maybe-class-name">ValidRow</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">type</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">ColumnWithValidField</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> field</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">ValidField</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> columns </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">useMemo</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> field</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'username'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> headerName</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'User'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> field</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'age'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> headerName</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'Age'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> satisfies </span><span class="token maybe-class-name">GridColDef</span><span class="token operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token maybe-class-name">ValidRow</span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">&amp;</span><span class="token plain"> </span><span class="token maybe-class-name">ColumnWithValidField</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">sx</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> height</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript number" style="color:rgb(255, 98, 140)">250</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> width</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript string" style="color:rgb(165, 255, 144)">'100%'</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">DataGrid</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">columns</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">columns</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">rows</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">rows</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>React</category>
            <category>TypeScript</category>
            <category>MUI</category>
        </item>
        <item>
            <title><![CDATA[MUI React Tree View: pass data to TreeItem]]></title>
            <link>https://johnnyreilly.com/mui-react-tree-view-pass-data-to-treeitem</link>
            <guid>https://johnnyreilly.com/mui-react-tree-view-pass-data-to-treeitem</guid>
            <pubDate>Mon, 07 Oct 2024 15:14:44 GMT</pubDate>
            <description><![CDATA[Learn how to pass arbitrary data to individual nodes in the MUI treeview component so individual nodes can be customised; for instance implementing a loader.]]></description>
            <content:encoded><![CDATA[<p>I'm a big fan of the Material-UI (MUI) library <a href="https://mui.com/x/react-tree-view/" target="_blank" rel="noopener noreferrer">treeview component</a>. I recently needed to do some customisation of the nodes in the treeview component I was rendering. The application I was working on acquired data for each node in our treeview component asynchronously. I wanted to show a loader for each node that was still loading.</p>
<p>Achieving this required passing data to individual nodes in the treeview component. This appears to not be officially supported by the MUI treeview component. However, it is possible and this post will show you how to do it.</p>
<p>The comment on <a href="https://github.com/mui/material-ui/issues/33175#issuecomment-1469725522" target="_blank" rel="noopener noreferrer">this GitHub issue</a> suggests that this will be directly supported in MUI v6. Until that time, you'll have to slightly hack the component to achieve this.</p>
<p>I've written previously about <a href="https://johnnyreilly.com/mui-react-tree-view-check-children-uncheck-parents">how to check children and uncheck parents in the MUI treeview component</a>. This post builds on that one. But, you need not be using multiselect / checkboxes etc to use the approach in this post. It applies generally to usage of the treeview component.</p>
<p><img decoding="async" alt="title image reading &amp;quot;MUI React Tree View: pass data to TreeItem&amp;quot; with the MUI logo" src="https://johnnyreilly.com/assets/images/title-image-ef2d396d68c885998c2d98d2a0159c32.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-behaviour-we-want-to-implement">The behaviour we want to implement<a href="https://johnnyreilly.com/mui-react-tree-view-pass-data-to-treeitem#the-behaviour-we-want-to-implement" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>In the application I'm working on, we load data for each node in our treeview that is selected. While a nodes data is loading, we want to show a loader so users know that work is being done. We want to achieve something like this:</p>
<p><img decoding="async" loading="lazy" alt="a treeview with a loading spinner" src="https://johnnyreilly.com/assets/images/recording-loader-a75466ee1f74138d6e14dc1474d8509b.gif" width="1338" height="394" class="img_ev3q"></p>
<p>The labels in the above GIF aren't relevant to this post. The key thing to note is that the treeview is showing a loader for nodes that are still loading. Strictly speaking, the loader is a spinner from the MUI library. The <a href="https://mui.com/material-ui/react-progress/#circular" target="_blank" rel="noopener noreferrer"><code>CircularProgress</code></a> component to be precise. However, the loader could be anything you like.</p>
<p>The question is: how do we pass data to individual nodes in the treeview component so we can customise them?</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-code">The code<a href="https://johnnyreilly.com/mui-react-tree-view-pass-data-to-treeitem#the-code" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>We can achieve this by using the <code>slots</code> and <code>slotProps</code> props on the <code>RichTreeView</code> component. (If you're using the <code>SimpleTreeView</code> that should work the same.) The <code>slots</code> prop allows us to customise the rendering of the treeview components. The <code>slotProps</code> prop allows us to pass data to the customised components. "Slots" is a MUI approach to customising components. You can read more about it <a href="https://mui.com/base-ui/getting-started/usage/#slots" target="_blank" rel="noopener noreferrer">here</a>.</p>
<p>The code below demonstrates how to pass data to individual nodes in the treeview component:</p>
<div class="language-tsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-tsx codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">OurComponent</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">RichTreeView</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">defaultExpandedItems</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">initialExpandedItems</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">multiSelect</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript boolean" style="color:rgb(255, 98, 140)">true</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">checkboxSelection</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript boolean" style="color:rgb(255, 98, 140)">true</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">selectedItems</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">selectedIds</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">onSelectedItemsChange</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">handleSelectedItemsChange</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">items</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">treeViewNodes</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag comment" style="color:rgb(179, 98, 255);font-style:italic">// note that we're using the TreeItemWithLoading component here</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">slots</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> item</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript maybe-class-name" style="color:rgb(255, 157, 0)">TreeItemWithLoading</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">slotProps</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">        item</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">          </span><span class="token tag script language-javascript comment" style="color:rgb(179, 98, 255);font-style:italic">//@ts-expect-error this works but MUI doesn't officially support this prior to v6 - see https://github.com/mui/material-ui/issues/33175#issuecomment-1469725522</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">          </span><span class="token tag script language-javascript string-property property" style="color:rgb(255, 157, 0)">'data-still-to-load-ids'</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> data</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token tag script language-javascript property-access" style="color:rgb(255, 157, 0)">stillToLoad</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">        </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">      </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The two key parts of the code above are the <code>slots</code> and <code>slotProps</code> props. In <code>slots</code>, we're passing a <code>TreeItemWithLoading</code> component to customise the rendering - we'll implement that component in moment. We're also passing a <code>data-still-to-load-ids</code> prop to the <code>TreeItemWithLoading</code> component. This is the data we want to pass to the individual nodes in the treeview component. In our case, it's a list of node ids that we're still loading the data for. You could pass any data you like here.</p>
<p>The thing that's probably (hopefully) setting off alarm bells in your head is the <code>//@ts-expect-error</code> comment. This is in place because MUI doesn't officially support passing data to individual nodes in the treeview component, and consequently TypeScript shouts about it. However, passing arbitrary data does work. It will be received by the rendering component and so can be used. The comment is there to acknowledge that this is a hack and to get TypeScript to stop complaining about it.</p>
<p>Now let's look at the <code>TreeItemWithLoading</code> component:</p>
<div class="language-tsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-tsx codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token maybe-class-name">TreeItemWithLoading</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">forwardRef</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">TreeItemWithLoadingInternal</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  props</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">TreeItem2Props</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  ref</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access maybe-class-name">Ref</span><span class="token operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token maybe-class-name">HTMLLIElement</span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">TreeItem2</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">ref</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">ref</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token tag spread" style="color:rgb(255, 157, 0)">props</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">slots</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">        label</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript maybe-class-name" style="color:rgb(255, 157, 0)">TreeItemLabelWithLoading</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">      </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">slotProps</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">        label</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">          </span><span class="token tag script language-javascript comment" style="color:rgb(179, 98, 255);font-style:italic">//@ts-expect-error this works but MUI doesn't officially support this prior to v6 - see https://github.com/mui/material-ui/issues/33175#issuecomment-1469725522</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">          </span><span class="token tag script language-javascript string-property property" style="color:rgb(255, 157, 0)">'data-is-loading'</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> props</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token tag script language-javascript string" style="color:rgb(165, 255, 144)">'data-still-to-load-ids'</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token tag script language-javascript method function property-access" style="color:rgb(250, 208, 0)">includes</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">            props</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token tag script language-javascript property-access" style="color:rgb(255, 157, 0)">itemId</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">          </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">        </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">      </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The <code>TreeItemWithLoading</code> component is a wrapper around the <code>TreeItem2</code> component. You'll note in our code we're using the <a href="https://mui.com/x/react-tree-view/#tree-item-components" target="_blank" rel="noopener noreferrer"><code>TreeItem2</code> component</a>. I won't explicitly discuss this, but it's worth noting that the <code>TreeItem2</code> component is intended to replace the <code>TreeItem</code> component in a future version of MUI; the <code>TreeItem2</code> component is more flexible and allows for more customisation.</p>
<p>Anyway, the <code>TreeItemWithLoading</code> component is where the magic happens. For every node in the treeview, this component will be rendered. All it does is render a <code>TreeItem2</code> component, but with some customisation. Again using the <code>slots</code> / <code>slotProps</code> properties, it customises the underlying label component that is rendered. It replaces the default label component (<code>TreeItem2Label</code>) with a custom one that shows a loader if the node is still loading, that component is named <code>TreeItemLabelWithLoading</code>. We'll implement it in a moment.</p>
<p>The <code>TreeItemWithLoading</code> component is also responsible for passing the <code>data-is-loading</code> prop to the <code>TreeItemLabelWithLoading</code> component. You'll note that we're just passing a <code>boolean</code> this time which we construct by comparing the id of the node to the list of ids that are still loading.</p>
<p>Finally, let's look at the <code>TreeItemLabelWithLoading</code> component:</p>
<div class="language-tsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-tsx codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">TreeItemLabelWithLoading</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">props</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  children</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  className</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token string-property property" style="color:rgb(255, 157, 0)">'data-is-loading'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">boolean</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> children</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string-property property" style="color:rgb(255, 157, 0)">'data-is-loading'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> isLoading</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token plain">other </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> props</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">TreeItem2Label</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token tag spread" style="color:rgb(255, 157, 0)">other</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">children</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">isLoading </span><span class="token operator" style="color:rgb(255, 157, 0)">&amp;&amp;</span><span class="token plain"> </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CircularProgress</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">size</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">1em</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">sx</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> marginLeft</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript number" style="color:rgb(255, 98, 140)">0.5</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">TreeItem2Label</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This is just a wrapper of the <code>TreeItem2Label</code> component that would have been rendered by default. The only difference being: if the <code>data-is-loading</code> value passed is truthy, a loader (<code>CircularProgress</code>) component is rendered next to the label to indicate the loading state.</p>
<p>Consider the image below:</p>
<p><img decoding="async" loading="lazy" alt="screenshot of the treeview" src="https://johnnyreilly.com/assets/images/screenshot-with-loader-b9ebba64715e39d06cf0edbb4cdabbcd.webp" width="680" height="202" class="img_ev3q"></p>
<p>Notice that there are three nodes in this picture. Two without a loader, one with. This is the result of the logic in our <code>TreeItemLabelWithLoading</code> component.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="putting-it-all-together">Putting it all together<a href="https://johnnyreilly.com/mui-react-tree-view-pass-data-to-treeitem#putting-it-all-together" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Now we've walked through how it works, let's put all the code together in one place:</p>
<div class="language-tsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-tsx codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">OurComponent</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">RichTreeView</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">defaultExpandedItems</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">initialExpandedItems</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">multiSelect</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript boolean" style="color:rgb(255, 98, 140)">true</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">checkboxSelection</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript boolean" style="color:rgb(255, 98, 140)">true</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">selectedItems</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">selectedIds</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">onSelectedItemsChange</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">handleSelectedItemsChange</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">items</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">treeViewNodes</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag comment" style="color:rgb(179, 98, 255);font-style:italic">// note that we're using the TreeItemWithLoading component here</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">slots</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> item</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript maybe-class-name" style="color:rgb(255, 157, 0)">TreeItemWithLoading</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">slotProps</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">        item</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">          </span><span class="token tag script language-javascript comment" style="color:rgb(179, 98, 255);font-style:italic">//@ts-expect-error this works but MUI doesn't officially support this prior to v6 - see https://github.com/mui/material-ui/issues/33175#issuecomment-1469725522</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">          </span><span class="token tag script language-javascript string-property property" style="color:rgb(255, 157, 0)">'data-still-to-load-ids'</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> data</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token tag script language-javascript property-access" style="color:rgb(255, 157, 0)">stillToLoad</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">        </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">      </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">TreeItemLabelWithLoading</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">props</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  children</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  className</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token string-property property" style="color:rgb(255, 157, 0)">'data-is-loading'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">boolean</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> children</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string-property property" style="color:rgb(255, 157, 0)">'data-is-loading'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> isLoading</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token plain">other </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> props</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">TreeItem2Label</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token tag spread" style="color:rgb(255, 157, 0)">other</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">children</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">isLoading </span><span class="token operator" style="color:rgb(255, 157, 0)">&amp;&amp;</span><span class="token plain"> </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CircularProgress</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">size</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">1em</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">sx</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> marginLeft</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript number" style="color:rgb(255, 98, 140)">0.5</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">TreeItem2Label</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token maybe-class-name">TreeItemWithLoading</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">forwardRef</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">TreeItemWithLoadingInternal</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  props</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">TreeItem2Props</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  ref</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access maybe-class-name">Ref</span><span class="token operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token maybe-class-name">HTMLLIElement</span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">TreeItem2</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">ref</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">ref</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token tag spread" style="color:rgb(255, 157, 0)">props</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">slots</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">        label</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript maybe-class-name" style="color:rgb(255, 157, 0)">TreeItemLabelWithLoading</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">      </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">slotProps</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">        label</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">          </span><span class="token tag script language-javascript comment" style="color:rgb(179, 98, 255);font-style:italic">//@ts-expect-error this works but MUI doesn't officially support this prior to v6 - see https://github.com/mui/material-ui/issues/33175#issuecomment-1469725522</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">          </span><span class="token tag script language-javascript string-property property" style="color:rgb(255, 157, 0)">'data-is-loading'</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> props</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token tag script language-javascript string" style="color:rgb(165, 255, 144)">'data-still-to-load-ids'</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token tag script language-javascript method function property-access" style="color:rgb(250, 208, 0)">includes</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">            props</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token tag script language-javascript property-access" style="color:rgb(255, 157, 0)">itemId</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">          </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">        </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">      </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The above will allow you to pass data to the components rendering the elements that make up your treeview, and allow you to customise accordingly.</p>
<p>I'm not completely certain this is "the way" that is advised. But it is a way that works. I'm going to follow up with the MUI team to ensure this is good advice.</p>]]></content:encoded>
            <category>React</category>
            <category>MUI</category>
        </item>
        <item>
            <title><![CDATA[MUI React Tree View: check children, uncheck parents]]></title>
            <link>https://johnnyreilly.com/mui-react-tree-view-check-children-uncheck-parents</link>
            <guid>https://johnnyreilly.com/mui-react-tree-view-check-children-uncheck-parents</guid>
            <pubDate>Mon, 07 Oct 2024 15:14:44 GMT</pubDate>
            <description><![CDATA[Learn how to use the MUI treeview component with behaviour that selects child nodes when parents are select and deselects parent nodes when children are deselected.]]></description>
            <content:encoded><![CDATA[<p>Every now and then, I need to use a treeview component in a React application. The Material-UI (MUI) library provides a <a href="https://mui.com/x/react-tree-view/" target="_blank" rel="noopener noreferrer">treeview component</a> that is very useful. However, some of the default behaviours of the component differ from that which you typically find in a treeview component. I'm speaking, of course, about node selection. I'm used to a treeview component that, when a parent node is selected, auto selects the child nodes underneath. And by turn, when nodes are deselected, the parent nodes get deselected.</p>
<p>This post documents how to implement this behaviour with the MUI treeview component.</p>
<p>Since initially writing this, I've learned that it is likely that the kind of behaviour I'm hand-rolling here, will natively land in the component. So, all being well, what follows should become unnecessary! To track native support <a href="https://github.com/mui/mui-x/issues/12883" target="_blank" rel="noopener noreferrer">watch this GitHub issue</a>.</p>
<p><img decoding="async" alt="title image reading &amp;quot;MUI React Tree View: check children, uncheck parents&amp;quot; with the MUI logo" src="https://johnnyreilly.com/assets/images/title-image-0461be933e2465270577c307ebf0afd5.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-default-behaviour-and-the-desired-behaviour">The default behaviour and the desired behaviour<a href="https://johnnyreilly.com/mui-react-tree-view-check-children-uncheck-parents#the-default-behaviour-and-the-desired-behaviour" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>By default, the MUI treeview component checks and unchecks nodes individually. Each node is an island; when a node is selected or deselected, it has no bearing on any other nodes.</p>
<p>What I'd rather is some relationship between parent and child nodes during selection / deselection. The behaviour I'd like has the following characteristics:</p>
<ul>
<li>when a parent node is selected, all child nodes are selected</li>
<li>when a parent node is deselected, all child nodes are deselected</li>
<li>when a child node is deselected, the parent node is deselected, and any children are deselected also</li>
<li>finally, if all children are selected, the parent node should be selected.</li>
</ul>
<p>This is the behaviour that I'm used to in a treeview component. In action it looks like this:</p>
<p><img decoding="async" loading="lazy" alt="animated gif demonstrating new behaviour" src="https://johnnyreilly.com/assets/images/treeview-demo-951556826e0d9183d1fa0aa14e99ec2d.gif" width="2000" height="1360" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-code">The code<a href="https://johnnyreilly.com/mui-react-tree-view-check-children-uncheck-parents#the-code" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>We can implement this behaviour by tracking the selected nodes and then determining which nodes should be selected based on the current selection. The code below demonstrates how to do this:</p>
<div class="language-tsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-tsx codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports operator" style="color:rgb(255, 157, 0)">*</span><span class="token imports"> </span><span class="token imports keyword module" style="color:rgb(255, 157, 0)">as</span><span class="token imports"> </span><span class="token imports maybe-class-name">React</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'react'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">Box</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/material/Box'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">RichTreeView</span><span class="token imports"> </span><span class="token imports punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/x-tree-view/RichTreeView'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">TreeViewBaseItem</span><span class="token imports"> </span><span class="token imports punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/x-tree-view/models'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token constant" style="color:rgb(250, 208, 0)">MUI_X_PRODUCTS</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">TreeViewBaseItem</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'grid'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    label</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'Data Grid'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    children</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'grid-community'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> label</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/x-data-grid'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'grid-pro'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> label</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/x-data-grid-pro'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'grid-premium'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> label</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/x-data-grid-premium'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'pickers'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    label</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'Date and Time Pickers'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    children</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'pickers-community'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> label</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/x-date-pickers'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'pickers-pro'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> label</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/x-date-pickers-pro'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'charts'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    label</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'Charts'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    children</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'charts-community'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> label</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/x-charts'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'tree-view'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    label</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'Tree View'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    children</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'tree-view-community'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> label</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/x-tree-view'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">getParentNode</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  items</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">TreeViewBaseItem</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">TreeViewBaseItem</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">|</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">undefined</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">for</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> item </span><span class="token keyword" style="color:rgb(255, 157, 0)">of</span><span class="token plain"> items</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">item</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">children</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">item</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">children</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">some</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">child</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> child</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">id</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">===</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// The current item is the parent of the supplied id</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> item</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">else</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// Recursively call the function for the children of the current item</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> parentNode </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">getParentNode</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">item</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">children</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">parentNode</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> parentNode</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// No parent found</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">undefined</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">getAllParentIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">items</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">TreeViewBaseItem</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> parentIds</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">let</span><span class="token plain"> parent </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">getParentNode</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">items</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">while</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">parent</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    parentIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">push</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">parent</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    parent </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">getParentNode</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">items</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> parent</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> parentIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">getSelectedIdsAndChildrenIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  items</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">TreeViewBaseItem</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  selectedIds</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> selectedIdIncludingChildrenIds </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">Set</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token plain">selectedIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">for</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> item </span><span class="token keyword" style="color:rgb(255, 157, 0)">of</span><span class="token plain"> items</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">selectedIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">includes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">item</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// Add the current item's id to the result array</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      selectedIdIncludingChildrenIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">add</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">item</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// Recursively call the function for the children of the current item</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">item</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">children</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> childrenIds </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> item</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">children</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">map</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">child</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> child</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> childrenSelectedIds </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">getSelectedIdsAndChildrenIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          item</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">children</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          childrenIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        childrenSelectedIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">forEach</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">selectedId</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          selectedIdIncludingChildrenIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">add</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">selectedId</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">else</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">item</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">children</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// walk the children to see if selections lay in there also</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> childrenSelectedIds </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">getSelectedIdsAndChildrenIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        item</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">children</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        selectedIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      childrenSelectedIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">forEach</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">selectedId</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        selectedIdIncludingChildrenIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">add</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">selectedId</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token known-class-name class-name" style="color:rgb(250, 208, 0)">Array</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">from</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">selectedIdIncludingChildrenIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">determineIdsToSet</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  items</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">TreeViewBaseItem</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  newIds</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  currentIds</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> isDeselectingNode </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> currentIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">length</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain"> newIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">length</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">isDeselectingNode</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> removed </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> currentIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">filter</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">!</span><span class="token plain">newIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">includes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token number" style="color:rgb(255, 98, 140)">0</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> parentIdsToRemove </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">getAllParentIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">items</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> removed</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> childIdsToRemove </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">getSelectedIdsAndChildrenIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">items</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">removed</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> newIdsWithParentsAndChildrenRemoved </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> newIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">filter</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">!</span><span class="token plain">parentIdsToRemove</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">includes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">&amp;&amp;</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">!</span><span class="token plain">childIdsToRemove</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">includes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> newIdsWithParentsAndChildrenRemoved</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> added </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> newIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">filter</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">!</span><span class="token plain">currentIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">includes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token number" style="color:rgb(255, 98, 140)">0</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> idsToSet </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">getSelectedIdsAndChildrenIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">items</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> newIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">let</span><span class="token plain"> parent </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">getParentNode</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">items</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> added</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">while</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">parent</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> childIds </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> parent</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">children</span><span class="token operator" style="color:rgb(255, 157, 0)">?.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">map</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">node</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> node</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">??</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> allChildrenSelected </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> childIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">every</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> idsToSet</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">includes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">allChildrenSelected</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      idsToSet</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">push</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">parent</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      parent </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">getParentNode</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">items</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> parent</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">id</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">else</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token keyword" style="color:rgb(255, 157, 0)">break</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> idsToSet</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">default</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">CheckboxSelection</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">selectedIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> setSelectedIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">useState</span><span class="token operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:rgb(250, 208, 0)">handleSelectedItemsChange</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    _event</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access maybe-class-name">SyntheticEvent</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    ids</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token function" style="color:rgb(250, 208, 0)">setSelectedIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token function" style="color:rgb(250, 208, 0)">determineIdsToSet</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token constant" style="color:rgb(250, 208, 0)">MUI_X_PRODUCTS</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> ids</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> selectedIds</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">sx</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> height</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript number" style="color:rgb(255, 98, 140)">264</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> flexGrow</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript number" style="color:rgb(255, 98, 140)">1</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> maxWidth</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript number" style="color:rgb(255, 98, 140)">400</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">RichTreeView</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">        </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">defaultExpandedItems</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript constant" style="color:rgb(250, 208, 0)">MUI_X_PRODUCTS</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token tag script language-javascript method function property-access" style="color:rgb(250, 208, 0)">map</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">x</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript arrow operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> x</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token tag script language-javascript property-access" style="color:rgb(255, 157, 0)">id</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">        </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">multiSelect</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript boolean" style="color:rgb(255, 98, 140)">true</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">        </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">checkboxSelection</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript boolean" style="color:rgb(255, 98, 140)">true</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">        </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">selectedItems</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">selectedIds</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">        </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">onSelectedItemsChange</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">handleSelectedItemsChange</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">        </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">items</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript constant" style="color:rgb(250, 208, 0)">MUI_X_PRODUCTS</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>You'll see above that we're using the <code>RichTreeView</code> component from <code>@mui/x-tree-view</code>. We're setting it to <code>multiSelect</code> and <code>checkboxSelection</code> to allow for multiple selections and to show checkboxes next to each node. We're also tracking the selected nodes in the <code>selectedIds</code> state variable.</p>
<p>The <code>handleSelectedItemsChange</code> function is called whenever the selection changes. It determines which nodes should be selected based on the current selection and the new selection. The <code>determineIdsToSet</code> function is responsible for this logic.</p>
<p>The first thing it does is determine if a node is being deselected or selected, by comparing the length of the current selection with the new selection. If a node is being deselected, it finds the parent and child nodes of the deselected node and removes them from the new selection. If a node is being selected, it selects all the children of that node. It also finds the parent node and checks if all child nodes are selected. If they are, it selects the parent node.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://johnnyreilly.com/mui-react-tree-view-check-children-uncheck-parents#conclusion" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>The code above demonstrates how to implement a treeview component with parent-child node selection behaviour. This behaviour is, in my opinion, more intuitive and user-friendly than the default behaviour of the MUI treeview component.</p>
<p>You can also see this code in action <a href="https://stackblitz.com/edit/mui-react-tree-view-check-children-uncheck-parents?file=Demo.tsx" target="_blank" rel="noopener noreferrer">on StackBlitz</a>.</p>]]></content:encoded>
            <category>React</category>
            <category>MUI</category>
        </item>
        <item>
            <title><![CDATA[Text-first MUI Tabs]]></title>
            <link>https://johnnyreilly.com/text-first-mui-tabs</link>
            <guid>https://johnnyreilly.com/text-first-mui-tabs</guid>
            <pubDate>Mon, 07 Oct 2024 15:14:44 GMT</pubDate>
            <description><![CDATA[Learn how to use the MUI tabs component in a text first way that remains strongly typed.]]></description>
            <content:encoded><![CDATA[<p>I love the Material-UI (MUI) library for React. Hand on heart, I'm not very good at making UIs that are attractive. So I always grab for something to paper over the cracks. MUI is awesome for that.</p>
<p>One of the components that I use frequently is the <a href="https://mui.com/material-ui/react-tabs/" target="_blank" rel="noopener noreferrer">tabs component</a>. However, I've found that it can be a little tricky to use in a "text-first" way, that also remains strongly typed. This post documents how to do just that!</p>
<p><img decoding="async" alt="title image reading &amp;quot;Text-first MUI Tabs&amp;quot; with the MUI logo" src="https://johnnyreilly.com/assets/images/title-image-fae370d4476e00436aeda389c5ff8423.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="official-example">Official example<a href="https://johnnyreilly.com/text-first-mui-tabs#official-example" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>What does the tabs component look like? Well, here's a screenshot of it in action:</p>
<p><img decoding="async" loading="lazy" alt="screenshot of the tabs component" src="https://johnnyreilly.com/assets/images/screenshot-mui-tabs-5d4bdd365e8a259d3de2651bec27d630.png" width="690" height="312" class="img_ev3q"></p>
<p>It's very useful if you'd like your users to be able to switch between different views easily. The official MUI documentation provides an example of how to use the tabs component:</p>
<div class="language-tsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-tsx codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports operator" style="color:rgb(255, 157, 0)">*</span><span class="token imports"> </span><span class="token imports keyword module" style="color:rgb(255, 157, 0)">as</span><span class="token imports"> </span><span class="token imports maybe-class-name">React</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'react'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">Tabs</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/material/Tabs'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">Tab</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/material/Tab'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">Typography</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/material/Typography'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">Box</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/material/Box'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">interface</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">TabPanelProps</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  children</span><span class="token operator" style="color:rgb(255, 157, 0)">?</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access maybe-class-name">ReactNode</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  index</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">number</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  value</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">number</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">props</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">TabPanelProps</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> children</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> value</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> index</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token plain">other </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> props</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag" style="color:rgb(255, 157, 0)">div</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">role</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">tabpanel</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">hidden</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">value </span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">!==</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> index</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">id</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token tag script language-javascript template-string string" style="color:rgb(165, 255, 144)">simple-tabpanel-</span><span class="token tag script language-javascript template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token tag script language-javascript template-string interpolation" style="color:rgb(255, 157, 0)">index</span><span class="token tag script language-javascript template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">aria-labelledby</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token tag script language-javascript template-string string" style="color:rgb(165, 255, 144)">simple-tab-</span><span class="token tag script language-javascript template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token tag script language-javascript template-string interpolation" style="color:rgb(255, 157, 0)">index</span><span class="token tag script language-javascript template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token tag spread" style="color:rgb(255, 157, 0)">other</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">value </span><span class="token operator" style="color:rgb(255, 157, 0)">===</span><span class="token plain"> index </span><span class="token operator" style="color:rgb(255, 157, 0)">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">sx</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> p</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript number" style="color:rgb(255, 98, 140)">3</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Typography</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">children</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Typography</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag" style="color:rgb(255, 157, 0)">div</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">a11yProps</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">index</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">number</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">simple-tab-</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">index</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token string-property property" style="color:rgb(255, 157, 0)">'aria-controls'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">simple-tabpanel-</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">index</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">default</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">BasicTabs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">value</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> setValue</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">useState</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token number" style="color:rgb(255, 98, 140)">0</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:rgb(250, 208, 0)">handleChange</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">event</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access maybe-class-name">SyntheticEvent</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> newValue</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">number</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token function" style="color:rgb(250, 208, 0)">setValue</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">newValue</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">sx</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> width</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript string" style="color:rgb(165, 255, 144)">'100%'</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">sx</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> borderBottom</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript number" style="color:rgb(255, 98, 140)">1</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> borderColor</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript string" style="color:rgb(165, 255, 144)">'divider'</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Tabs</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">          </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">value</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">value</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">          </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">onChange</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">handleChange</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">          </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">aria-label</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">basic tabs example</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">        </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Tab</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">label</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">Item One</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token tag spread method function property-access" style="color:rgb(250, 208, 0)">a11yProps</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token tag spread number" style="color:rgb(255, 98, 140)">0</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Tab</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">label</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">Item Two</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token tag spread method function property-access" style="color:rgb(250, 208, 0)">a11yProps</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token tag spread number" style="color:rgb(255, 98, 140)">1</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Tab</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">label</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">Item Three</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token tag spread method function property-access" style="color:rgb(250, 208, 0)">a11yProps</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token tag spread number" style="color:rgb(255, 98, 140)">2</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Tabs</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">value</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">value</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">index</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript number" style="color:rgb(255, 98, 140)">0</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">        Item One</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">value</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">value</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">index</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript number" style="color:rgb(255, 98, 140)">1</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">        Item Two</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">value</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">value</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">index</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript number" style="color:rgb(255, 98, 140)">2</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">        Item Three</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This example is great, but (personally) I find it a little hard to read. There's a direct relationship between the tabs and the tab panels, but it's not immediately obvious. When you see the <code>0</code> passed to <code>a11yProps</code> and the <code>0</code> passed to <code>CustomTabPanel</code>, it's not clear that they're related. And if the <code>a11yProps</code> function call was not present, it would be even less clear.</p>
<p>I'd like to see the tabs and tab panels presented together in a more text-first way, that makes the relationship between tab and tab panel more apparent.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="text-first-tabs">Text-first tabs<a href="https://johnnyreilly.com/text-first-mui-tabs#text-first-tabs" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>The code I'd like to see would look something like this:</p>
<div class="language-tsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-tsx codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">sx</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> width</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript string" style="color:rgb(165, 255, 144)">'100%'</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">  </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">sx</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> borderBottom</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript number" style="color:rgb(255, 98, 140)">1</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> borderColor</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript string" style="color:rgb(165, 255, 144)">'divider'</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Tabs</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">value</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">selectedTab</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">onChange</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">handleChange</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">aria-label</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">basic tabs example</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Tab</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token tag spread method function property-access" style="color:rgb(250, 208, 0)">customTabProps</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token tag spread string" style="color:rgb(165, 255, 144)">'Item One'</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Tab</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token tag spread method function property-access" style="color:rgb(250, 208, 0)">customTabProps</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token tag spread string" style="color:rgb(165, 255, 144)">'Item Two'</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Tab</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token tag spread method function property-access" style="color:rgb(250, 208, 0)">customTabProps</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token tag spread string" style="color:rgb(165, 255, 144)">'Item Three'</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Tabs</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">  </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">  </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">selectedTab</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">selectedTab</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">tab</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">Item One</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">    Item One</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">  </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">  </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">selectedTab</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">selectedTab</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">tab</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">Item Two</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">    Item Two</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">  </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">  </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">selectedTab</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">selectedTab</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">tab</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">Item Three</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">    Item Three</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">  </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text"></span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>In this code snippet, the tabs and tab panels have more of a linkage, in a text-first way. It's hopefully clear that the "Item One" <code>Tab</code> and the "Item One" <code>CustomTabPanel</code> are related.</p>
<p>In the code above, the <code>customTabProps</code> function is used to generate the props for the tabs (it's an evolution of the <code>a11yProps</code> function that handles accessibility props as well as all others). Meanwhile, the <code>CustomTabPanel</code> component is used to render the tab panels. The <code>selectedTab</code> state is used to keep track of the selected tab.</p>
<p>How does this work? And is it strongly typed? Let's find out.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="strongly-typed-tabs">Strongly typed tabs<a href="https://johnnyreilly.com/text-first-mui-tabs#strongly-typed-tabs" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Yes, it's strongly typed! We achieve this by defining a mapping of tab text to tab index:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> tabs </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token string-property property" style="color:rgb(255, 157, 0)">'Item One'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">0</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token string-property property" style="color:rgb(255, 157, 0)">'Item Two'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">1</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token string-property property" style="color:rgb(255, 157, 0)">'Item Three'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">2</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">as</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">type</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">TabText</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">keyof</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">typeof</span><span class="token plain"> tabs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">type</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">TabIndex</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">typeof</span><span class="token plain"> tabs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">TabText</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>So "Item One" is <code>0</code>, "Item Two" is <code>1</code>, and "Item Three" is <code>2</code>.</p>
<p>We then do some TypeScript magic to strongly type this. We use <code>as const</code> to tell TypeScript this is an immutable object. With that done we can then extract the keys and values from the object and use them to create the derived types <code>TabText</code> and <code>TabIndex</code>.</p>
<p><code>TabText</code> is the keys of the <code>tabs</code> object and <code>TabIndex</code> is the values. So <code>TabText</code> is <code>"Item One" | "Item Two" | "Item Three"</code> and <code>TabIndex</code> is <code>0 | 1 | 2</code>. If we should subsequently amend the <code>tabs</code> object in our code, TypeScript will ensure that the <code>TabText</code> and <code>TabIndex</code> types are updated accordingly.</p>
<p>We can then use these types in our components:</p>
<div class="language-tsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-tsx codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">customTabProps</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">tab</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">TabText</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> index </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> tabs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">tab</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">simple-tab-tab-</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">index</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token string-property property" style="color:rgb(255, 157, 0)">'aria-controls'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">simple-tab-tabpanel-</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">index</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    label</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> tab</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">interface</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">CustomTabPanelProps</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  children</span><span class="token operator" style="color:rgb(255, 157, 0)">?</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access maybe-class-name">ReactNode</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  tab</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">TabText</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  selectedTab</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">TabIndex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">props</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">CustomTabPanelProps</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> children</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> selectedTab</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> tab</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token plain">other </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> props</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> index </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> tabs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">tab</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag" style="color:rgb(255, 157, 0)">div</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">role</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">tabpanel</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">hidden</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">selectedTab </span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">!==</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> index</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">id</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token tag script language-javascript template-string string" style="color:rgb(165, 255, 144)">simple-tab-tabpanel-</span><span class="token tag script language-javascript template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token tag script language-javascript template-string interpolation" style="color:rgb(255, 157, 0)">index</span><span class="token tag script language-javascript template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">aria-labelledby</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token tag script language-javascript template-string string" style="color:rgb(165, 255, 144)">simple-tab-tab-</span><span class="token tag script language-javascript template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token tag script language-javascript template-string interpolation" style="color:rgb(255, 157, 0)">index</span><span class="token tag script language-javascript template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token tag spread" style="color:rgb(255, 157, 0)">other</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">selectedTab </span><span class="token operator" style="color:rgb(255, 157, 0)">===</span><span class="token plain"> index </span><span class="token operator" style="color:rgb(255, 157, 0)">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">sx</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> p</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript number" style="color:rgb(255, 98, 140)">3</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Typography</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">children</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Typography</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag" style="color:rgb(255, 157, 0)">div</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Then our final example code looks like this:</p>
<div class="language-tsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-tsx codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">default</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">BasicTabs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">selectedTab</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> setSelectedTab</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">useState</span><span class="token operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token maybe-class-name">TabIndex</span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    tabs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token string" style="color:rgb(165, 255, 144)">'Item One'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:rgb(250, 208, 0)">handleChange</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">event</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access maybe-class-name">SyntheticEvent</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> newValue</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">TabIndex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token function" style="color:rgb(250, 208, 0)">setSelectedTab</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">newValue</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">sx</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> width</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript string" style="color:rgb(165, 255, 144)">'100%'</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">sx</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> borderBottom</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript number" style="color:rgb(255, 98, 140)">1</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> borderColor</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript string" style="color:rgb(165, 255, 144)">'divider'</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Tabs</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">          </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">value</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">selectedTab</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">          </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">onChange</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">handleChange</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">          </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">aria-label</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">basic tabs example</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">        </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Tab</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token tag spread method function property-access" style="color:rgb(250, 208, 0)">customTabProps</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token tag spread string" style="color:rgb(165, 255, 144)">'Item One'</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Tab</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token tag spread method function property-access" style="color:rgb(250, 208, 0)">customTabProps</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token tag spread string" style="color:rgb(165, 255, 144)">'Item Two'</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Tab</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token tag spread method function property-access" style="color:rgb(250, 208, 0)">customTabProps</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token tag spread string" style="color:rgb(165, 255, 144)">'Item Three'</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Tabs</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">selectedTab</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">selectedTab</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">tab</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">Item One</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">        Item One</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">selectedTab</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">selectedTab</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">tab</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">Item Two</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">        Item Two</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">selectedTab</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">selectedTab</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">tab</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">Item Three</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">        Item Three</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Note how we use our <code>TabIndex</code> types to strongly type the <code>selectedTab</code> state and the <code>handleChange</code> function. And also how the <code>TabText</code> type is used to strongly type the <code>tab</code> prop in the <code>CustomTabPanel</code> component and the <code>tab</code> argument in the <code>customTabProps</code> function. With this in place, we cannot provide invalid tab text to the <code>customTabProps</code> function or the <code>CustomTabPanel</code> component. TypeScript would fight us every step of the way if we tried.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://johnnyreilly.com/text-first-mui-tabs#conclusion" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>So now we have a strongly typed, text-first way to use the MUI tabs component. We've used TypeScript to ensure that our tabs and tab panels are related in a way that is clear and easy to understand. This approach makes our code more maintainable and easier to work with. The full code is below:</p>
<div class="language-tsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-tsx codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports operator" style="color:rgb(255, 157, 0)">*</span><span class="token imports"> </span><span class="token imports keyword module" style="color:rgb(255, 157, 0)">as</span><span class="token imports"> </span><span class="token imports maybe-class-name">React</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'react'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">Tabs</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/material/Tabs'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">Tab</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/material/Tab'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">Typography</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/material/Typography'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">Box</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'@mui/material/Box'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> tabs </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token string-property property" style="color:rgb(255, 157, 0)">'Item One'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">0</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token string-property property" style="color:rgb(255, 157, 0)">'Item Two'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">1</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token string-property property" style="color:rgb(255, 157, 0)">'Item Three'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">2</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">as</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">type</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">TabText</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">keyof</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">typeof</span><span class="token plain"> tabs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">type</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">TabIndex</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token keyword" style="color:rgb(255, 157, 0)">typeof</span><span class="token plain"> tabs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token maybe-class-name">TabText</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">customTabProps</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">tab</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">TabText</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> index </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> tabs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">tab</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    id</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">simple-tab-tab-</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">index</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token string-property property" style="color:rgb(255, 157, 0)">'aria-controls'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">simple-tab-tabpanel-</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">index</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    label</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> tab</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">interface</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">CustomTabPanelProps</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  children</span><span class="token operator" style="color:rgb(255, 157, 0)">?</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access maybe-class-name">ReactNode</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  tab</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">TabText</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  selectedTab</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">TabIndex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">props</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">CustomTabPanelProps</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> children</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> selectedTab</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> tab</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token plain">other </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> props</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> index </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> tabs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">tab</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag" style="color:rgb(255, 157, 0)">div</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">role</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">tabpanel</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">hidden</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">selectedTab </span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">!==</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> index</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">id</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token tag script language-javascript template-string string" style="color:rgb(165, 255, 144)">simple-tab-tabpanel-</span><span class="token tag script language-javascript template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token tag script language-javascript template-string interpolation" style="color:rgb(255, 157, 0)">index</span><span class="token tag script language-javascript template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">aria-labelledby</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token tag script language-javascript template-string string" style="color:rgb(165, 255, 144)">simple-tab-tab-</span><span class="token tag script language-javascript template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token tag script language-javascript template-string interpolation" style="color:rgb(255, 157, 0)">index</span><span class="token tag script language-javascript template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">      </span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token tag spread" style="color:rgb(255, 157, 0)">other</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">selectedTab </span><span class="token operator" style="color:rgb(255, 157, 0)">===</span><span class="token plain"> index </span><span class="token operator" style="color:rgb(255, 157, 0)">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">sx</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> p</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript number" style="color:rgb(255, 98, 140)">3</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Typography</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">children</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Typography</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag" style="color:rgb(255, 157, 0)">div</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">default</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">BasicTabs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">selectedTab</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> setSelectedTab</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">useState</span><span class="token operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token maybe-class-name">TabIndex</span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    tabs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token string" style="color:rgb(165, 255, 144)">'Item One'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:rgb(250, 208, 0)">handleChange</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">event</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access maybe-class-name">SyntheticEvent</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> newValue</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token maybe-class-name">TabIndex</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token function" style="color:rgb(250, 208, 0)">setSelectedTab</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">newValue</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">sx</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> width</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript string" style="color:rgb(165, 255, 144)">'100%'</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">sx</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> borderBottom</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript number" style="color:rgb(255, 98, 140)">1</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> borderColor</span><span class="token tag script language-javascript operator" style="color:rgb(255, 157, 0)">:</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript string" style="color:rgb(165, 255, 144)">'divider'</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)"> </span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Tabs</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">          </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">value</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">selectedTab</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">          </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">onChange</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">handleChange</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">          </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">aria-label</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">basic tabs example</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag" style="color:rgb(255, 157, 0)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token tag" style="color:rgb(255, 157, 0)">        </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Tab</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token tag spread method function property-access" style="color:rgb(250, 208, 0)">customTabProps</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token tag spread string" style="color:rgb(165, 255, 144)">'Item One'</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Tab</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token tag spread method function property-access" style="color:rgb(250, 208, 0)">customTabProps</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token tag spread string" style="color:rgb(165, 255, 144)">'Item Two'</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Tab</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag spread operator" style="color:rgb(255, 157, 0)">...</span><span class="token tag spread method function property-access" style="color:rgb(250, 208, 0)">customTabProps</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token tag spread string" style="color:rgb(165, 255, 144)">'Item Three'</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token tag spread punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Tabs</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">selectedTab</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">selectedTab</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">tab</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">Item One</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">        Item One</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">selectedTab</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">selectedTab</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">tab</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">Item Two</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">        Item Two</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">selectedTab</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(255, 255, 255)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 157, 0)">selectedTab</span><span class="token tag script language-javascript punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">tab</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">Item Three</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">        Item Three</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTabPanel</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;/</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">Box</span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>It's certainly more complicated than the official example (and this may well be why the official example is the way it is), but it matches my preferences.</p>
<p>As an aside, I'd like the code even more if I had the following instead of using <code>Tab</code> with <code>customTabProps</code>:</p>
<div class="language-tsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-tsx codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token tag punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token tag class-name" style="color:rgb(250, 208, 0)">CustomTab</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag attr-name" style="color:rgb(255, 180, 84)">tab</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(255, 255, 255)">=</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag attr-value" style="color:rgb(255, 157, 0)">Item One</span><span class="token tag attr-value punctuation" style="color:rgb(255, 255, 255)">"</span><span class="token tag" style="color:rgb(255, 157, 0)"> </span><span class="token tag punctuation" style="color:rgb(255, 255, 255)">/&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>I avoided that in this post because it would have made the example more complicated. But I think it would be a nice improvement.</p>]]></content:encoded>
            <category>React</category>
            <category>MUI</category>
        </item>
        <item>
            <title><![CDATA[Overview of webpack, a JavaScript bundler]]></title>
            <link>https://johnnyreilly.com/webpack-overview</link>
            <guid>https://johnnyreilly.com/webpack-overview</guid>
            <pubDate>Sat, 06 Apr 2024 07:21:54 GMT</pubDate>
            <description><![CDATA[webpack is a JavaScript bundler that helps you bundle your code into a single file. It's a great tool for optimizing your code and improving performance.]]></description>
            <content:encoded><![CDATA[<p>If you're a JavaScript developer, you've probably heard of webpack. It's a JavaScript bundler that helps you bundle your code into a single file. It's a great tool for optimizing your code and improving performance. This article will give you an overview of webpack, its history and how it works.</p>
<p>It'll be a little different than your typical "what is webpack?" article, in that I write this as the maintainer of <a href="https://github.com/TypeStrong/ts-loader" target="_blank" rel="noopener noreferrer"><code>ts-loader</code></a>, a loader used for integrating TypeScript with webpack. I've worked in the webpack ecosystem for some years now and I'll share some of my experiences with you. I'll go through a little history around bundling, and try to understand why webpack came to be such a popular choice.</p>
<p><img decoding="async" alt="title image reading &amp;quot;Overview of webpack, a JavaScript bundler&amp;quot; with the webpack logo" src="https://johnnyreilly.com/assets/images/title-image-510ccb17fb0abf91a6a1fca2ba757f19.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="a-short-history-of-web-development">A short history of web development<a href="https://johnnyreilly.com/webpack-overview#a-short-history-of-web-development" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>To answer the question "what is webpack?", we need to understand what a bundler is. To grasp that, we first need a little history lesson.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="the-early-days-of-javascript">The early days of JavaScript<a href="https://johnnyreilly.com/webpack-overview#the-early-days-of-javascript" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>If you started web development after 2016, you might not realise that bundling is a relatively new concept.</p>
<p>Let's roll back the clock to the late 2000's. This was when JavaScript development started to go mainstream. Around that time, jQuery was becoming popular and the web was a very different place. We didn't have the same tools we have today. We didn't have npm, we didn't have webpack, we didn't have React, we didn't have TypeScript. We didn't even have ES2015. We were still writing JavaScript in ES5.</p>
<p>So what did building a front end application look like back then? Well, I was a web developer, and I can tell you that it was a lot of work. To make a simple app you would have to:</p>
<ul>
<li>Go to the websites of libraries you wanted to use, usually jQuery and jQuery UI.</li>
<li>Download the library files you needed (both <code>jquery-1.4.4.js</code> and the minified <code>jquery-1.4.4.min.js</code> because there weren't minification tools back then)</li>
<li>Include the library files in your HTML file using <code>script</code> tags, and significantly <strong>before</strong> other JavaScript files that would depend upon jQuery.</li>
<li>For bonus points, you would also download the jQuery UI CSS files and include them in your HTML file.</li>
<li>For extra bonus points, you would figure out a way to serve up non-minified versions of your JavaScript files in development, and minified versions in production.</li>
</ul>
<p>What I'm hoping you can see from this is that it was a lot of work. And it was very error prone. If you forgot to include a library, or included it in the wrong order, or included the wrong version, or forgot to minify your files, or forgot to include the CSS files, your app would break. And it would be very difficult to debug.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="rise-of-the-task-runners">Rise of the task runners<a href="https://johnnyreilly.com/webpack-overview#rise-of-the-task-runners" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>As web development became more popular, people started to realise that there was a lot of repetition in the process. So they started to automate it. Around 2012 we started to see the birth of the task runner. There were two main task runners that became popular: <a href="https://gruntjs.com/" target="_blank" rel="noopener noreferrer">Grunt</a> and <a href="https://gulpjs.com/" target="_blank" rel="noopener noreferrer">Gulp</a>.</p>
<p>These task runners allowed you to automate the process of combining and minifying JavaScript and CSS files, and including them in your HTML file. They also allowed you to automate other tasks, like running tests, linting your code, and deploying your app. They did improve the web development experience, but they didn't solve all the problems.</p>
<p>It was still very easy to make mistakes. You could still forget to include a library, or include it in the wrong order, or get a path wrong, or forget to minify your files, or forget to include the CSS files. And it was still very difficult to debug.</p>
<p>But it was <strong>so much better</strong> than what we had before. So it became very popular.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="the-rise-of-the-module-bundler">The rise of the module bundler<a href="https://johnnyreilly.com/webpack-overview#the-rise-of-the-module-bundler" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>Around 2014, a new tool started to become popular: the module bundler. But what is a module bundler? Well, it's a tool that allows you to write your code in modules, and then bundle those modules into a single file. It also allows you to use other tools, like TypeScript, and CSS preprocessors like Sass and Less.</p>
<p>That's a lot of words, let's unpack them a little. For some time, the defacto way of acquiring JavaScript libraries has been through npm. npm is a package manager for JavaScript. However, it's worth remembering its history. npm started out as the package manager for Node.js. It was originally used to house packages that were used to build Node.js applications. It was never intended to be used for front end development. In fact, for a while there was an alternative front end package manager called <a href="https://bower.io/" target="_blank" rel="noopener noreferrer">Bower</a>.</p>
<p>The thing is, there's a lot of commonality between Node.js and front end development. Both use JavaScript. You're unlikely to need to run a web server in the browser. However, whether running in a browser or on a server, you might want to order an array with lodash, or make use of TypeScript, or perform validation with Zod. So it makes sense to use the same package manager for both.</p>
<p>The first tool that tackled this was <a href="http://browserify.org/" target="_blank" rel="noopener noreferrer">Browserify</a>. As the name suggests, it was a tool that allowed you to use Node.js style modules in the browser. It did this by taking your code, and recursively walking through it, finding all the <code>require</code> calls, and bundling them into a single file.</p>
<p>By doing this, it performed two useful functions:</p>
<ol>
<li>It opened up the ecosystem of Node.js packages to front end developers.</li>
<li>It allowed you to write your code in modules, which made it easier to reason about.</li>
</ol>
<p>Both of these are tremendously significant. The first one is obvious; there's a rich ecosystem of modules which can be used to speed up the task of web development.</p>
<p>The value of modularity is less obvious, but it's very important. It's worth remembering that JavaScript didn't have modules until ES2015. But npm had its own module standard called CommonJS. Given that Browserify and webpack were both created before ES2015, they both used CommonJS modules in the context of the browser. This was a huge improvement over the previous way of doing things, which was to include a bunch of script tags in your HTML file, and writing all your code in a giant global object. The reason it's so wildly different is because the dependencies in your codebase moved from being <strong>implicit</strong> to being <strong>explicit</strong>. Instead of having to remember to include a bunch of script tags in your HTML file, you could just <code>require</code> the modules you needed. This made it much easier to reason about your codebase. What's more, you had a a <code>package.json</code> file that listed all your dependencies, so you could see at a glance what your dependencies were.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-webpack">What is webpack?<a href="https://johnnyreilly.com/webpack-overview#what-is-webpack" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Now we understand a little of the history, we come to webpack. By the way, it's definitely not "Webpack" or "WebPack". It's <a href="https://webpack.js.org/branding/" target="_blank" rel="noopener noreferrer">"webpack"</a>. The person initially behind webpack is <a href="https://github.com/sokra" target="_blank" rel="noopener noreferrer">Tobias Koppers</a>; an engineer from Germany. Many, many people have contributed to the project since then, but Tobias is the person who has done the most work on it.</p>
<p>I mentioned that I was a web developer whilst the web was evolving its developer tooling. In my case I was a longtime user of Gulp, and then Browserify. I moved to webpack in 2015. I can't remember exactly why I moved, but I think it was because I wanted to use TypeScript, and webpack had better TypeScript support than Browserify (more on this later). I also think I was attracted to webpack because it was a more holistic solution than Browserify. It had a plugin system, and it had loaders. I'll talk about those in a moment.</p>
<p>First and foremost, it's worth saying that webpack is a module bundler. It takes your code, and recursively walks through it, finding all the <code>require</code> or <code>import</code> calls, building up a dependency graph, performing preprocessing tasks and producing runnable output, in the form of HTML, CSS and JavaScript. It also allows you to use other tools, like TypeScript, and CSS preprocessors like Sass and Less.</p>
<p>One of the most surprising things about webpack has been both its popularity, and how it has lasted. The web development world is famous for having the attention span of a distracted toddler. Tools replace tools, libraries replace libraries, and frameworks replace frameworks. But webpack has been around for a long time, and it's still the most popular bundler. At the time of writing it still has <strong>110 million downloads a month</strong>. That's a lot! Why is that?</p>
<p>I think there are a few reasons.</p>
<p>Firstly, because of the richness of the ecosystem and the flexibility of the tool, it's possible to solve pretty much all web development problems with webpack. There are newer, shinier, faster tools (and as we'll see later, webpack is starting to be displaced by some of these) but as a reliable tool that can solve all your problems, webpack is hard to beat.</p>
<p>That doesn't mean it's the easiest tool to work with on all occasions. The internet is awash with people bitterly complaining about the scars they bear from configuring webpack. It's true that webpack can be difficult to configure. But it's also true that webpack is a very powerful tool. Once you have it working, you generally don't have to touch it again.</p>
<p>A second reason why webpack is so popular, is that it has become a "primitive". What I mean by that, is that it has become a library that other libraries depend upon. If you use Docusaurus, you're also using webpack as the underlying build tool. Many projects have a need of a build tool and have picked webpack to be that. This has led to a huge ecosystem of plugins and loaders. It's also led to a plethora of tutorials and blog posts. If you have a problem, it's likely that someone else has had the same problem and has written a blog post about it.</p>
<p>By way of example, a <a href="https://johnnyreilly.com/using-webpacks-defineplugin-with-typescript" target="_blank" rel="noopener noreferrer">blog post I wrote in 2016 about the webpack <code>DefinePlugin</code></a> still ranks highly in Google for "use webpack defineplugin with typescript" and is (to my surprise) one of my most popular blog posts. Here's a screenshot of it in the Google search results:</p>
<p><img decoding="async" loading="lazy" alt="screenshot of the blog post in Google search results" src="https://johnnyreilly.com/assets/images/screenshot-google-search-results-webpack-defineplugin-8ae6233274e2dc990b6ff6f98e7c30ea.webp" width="1858" height="652" class="img_ev3q"></p>
<p>This speaks to the level of popularity around all things webpack.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="getting-started">Getting started<a href="https://johnnyreilly.com/webpack-overview#getting-started" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>This article is intended to be an overview of webpack. The documentation, as you might expect from such a big project, is comprehensive and can be found here: <a href="https://webpack.js.org/" target="_blank" rel="noopener noreferrer">https://webpack.js.org</a></p>
<p>Whilst we won't go through every scenario and use case of webpack, we want to give you a sense of what working with webpack looks like. For the purposes of this article, let's get started with a simple example. We'll create a simple "Hello, webpack" app. And we'll enrich it as we go through the piece.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="creating-a-simple-app">Creating a simple app<a href="https://johnnyreilly.com/webpack-overview#creating-a-simple-app" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>First, let's make a folder, create a <code>package.json</code> file and install the webpack dependencies we need:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token function" style="color:rgb(250, 208, 0)">mkdir</span><span class="token plain"> hello-webpack</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(250, 208, 0)">cd</span><span class="token plain"> hello-webpack</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> init </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">-y</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">install</span><span class="token plain"> webpack webpack-cli webpack-dev-server html-webpack-plugin --save-dev</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The dependencies we're installing are:</p>
<ul>
<li>webpack</li>
<li><a href="https://github.com/webpack/webpack-cli" target="_blank" rel="noopener noreferrer"><code>webpack-cli</code></a> - a command line interface for webpack</li>
<li><a href="https://webpack.js.org/configuration/dev-server/" target="_blank" rel="noopener noreferrer"><code>webpack-dev-server</code></a> - a development server that allows you to serve up your app in a browser</li>
<li><a href="https://github.com/jantimon/html-webpack-plugin/" target="_blank" rel="noopener noreferrer"><code>html-webpack-plugin</code></a> - a plugin that allows you to generate an HTML file that includes your bundled JavaScript file(s)</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="configuration-with-webpackconfigjs">Configuration with <code>webpack.config.js</code><a href="https://johnnyreilly.com/webpack-overview#configuration-with-webpackconfigjs" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>Whilst it is possible to use webpack without configuring it, it's more typical to have a configuration file. This file is often called <code>webpack.config.js</code>; where a single configuration file is being used. It's also comon to may have more than one configuration file; perhaps one for development and one for production. We'll create a single <code>webpack.config.js</code> to use with our example app:</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> path </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">require</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'path'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> </span><span class="token maybe-class-name">HtmlWebpackPlugin</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">require</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'html-webpack-plugin'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">module</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token literal-property property" style="color:rgb(255, 157, 0)">mode</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'development'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// mode can be "development", "production" or "none" https://webpack.js.org/configuration/mode/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token literal-property property" style="color:rgb(255, 157, 0)">entry</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'./src/index.js'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// the entry point of our app https://webpack.js.org/concepts/entry-points/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token literal-property property" style="color:rgb(255, 157, 0)">devtool</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'inline-source-map'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// the type of sourcemap to generate for debugging https://webpack.js.org/configuration/devtool/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token literal-property property" style="color:rgb(255, 157, 0)">plugins</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">HtmlWebpackPlugin</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// a plugin to generate an HTML file https://github.com/jantimon/html-webpack-plugin</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token literal-property property" style="color:rgb(255, 157, 0)">output</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// where to put the bundled output https://webpack.js.org/concepts/output/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token literal-property property" style="color:rgb(255, 157, 0)">filename</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'[name].[contenthash].js'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token literal-property property" style="color:rgb(255, 157, 0)">path</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> path</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">resolve</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">__dirname</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'dist'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token literal-property property" style="color:rgb(255, 157, 0)">clean</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This may seem a little overwhelming, so we'll through this configuration file property by property in a moment.</p>
<p>The one thing that you might be puzzled by, is the absence of a <code>module</code> section to cover loaders. This is because webpack supports processing JavaScript by default. We'll add a <code>module</code> section later when we want to process other types of files.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="mode"><code>mode</code><a href="https://johnnyreilly.com/webpack-overview#mode" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h4>
<p>This is the mode that webpack will run in, and it essentially tells webpack to provide helpful defaults around how builds are performed. It can be <code>development</code>, <code>production</code> or <code>none</code>. We're using <code>development</code> because we're developing locally. If we were building for production, we'd use <code>production</code>.</p>
<p>Read more about modes here: <a href="https://webpack.js.org/configuration/mode/" target="_blank" rel="noopener noreferrer">https://webpack.js.org/configuration/mode/</a></p>
<p>Incidentally, we can override this on the command line with the <code>--mode</code> flag. And we will.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="entry"><code>entry</code><a href="https://johnnyreilly.com/webpack-overview#entry" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h4>
<p>This is the entry point of our app. It's the file that webpack will start with. In this case, it's <code>src/index.js</code>. It is possible to have multiple entry points, but we'll keep it simple for now.</p>
<p>Read more about entry points here: <a href="https://webpack.js.org/concepts/entry-points/" target="_blank" rel="noopener noreferrer">https://webpack.js.org/concepts/entry-points/</a></p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="devtool"><code>devtool</code><a href="https://johnnyreilly.com/webpack-overview#devtool" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h4>
<p>This is the type of sourcemap that webpack will generate. We're using <code>inline-source-map</code> because we're developing locally and we'd like to be able to debug our source code in the browser. If we were building for production, we might make a different choice.</p>
<p>Read more about sourcemaps here: <a href="https://webpack.js.org/configuration/devtool/" target="_blank" rel="noopener noreferrer">https://webpack.js.org/configuration/devtool/</a> - there are many different types of sourcemap, and they all have different tradeoffs.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="plugins"><code>plugins</code><a href="https://johnnyreilly.com/webpack-overview#plugins" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h4>
<p>This is a list of plugins that we want to use. We're using the <code>HtmlWebpackPlugin</code> to generate an HTML file that includes our bundled JavaScript file(s).</p>
<p>Read more about plugins here: <a href="https://webpack.js.org/concepts/plugins/" target="_blank" rel="noopener noreferrer">https://webpack.js.org/concepts/plugins/</a> - we'll talk more about plugins later.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="output"><code>output</code><a href="https://johnnyreilly.com/webpack-overview#output" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h4>
<p>This is where we want webpack to put the bundled output. We're using <code>dist</code> as the folder name. We're also using a <code>[name].[contenthash].js</code> naming convention for our bundled JavaScript file. This means that webpack will generate a file called <code>main.[contenthash].js</code> in the <code>dist</code> folder. The <code>[contenthash]</code> part is a hash of the contents of the file. This is useful because it means that if the contents of the file change, the hash will change, and the filename will change. This helps because it means that we can cache the file for a long time, and if the contents change, the filename will change and the browser will download the new file.</p>
<p>We're also providing the <a href="https://webpack.js.org/guides/output-management/#cleaning-up-the-dist-folder" target="_blank" rel="noopener noreferrer"><code>clean: true</code></a> option which deletes the contents of our <code>dist</code> folder on each build.</p>
<p>Read more about output here: <a href="https://webpack.js.org/concepts/output/" target="_blank" rel="noopener noreferrer">https://webpack.js.org/concepts/output/</a></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="creating-a-simple-app-1">Creating a simple app<a href="https://johnnyreilly.com/webpack-overview#creating-a-simple-app-1" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>What we need now, is some code to bundle. Let's create a <code>src</code> folder, and a <code>src/index.js</code> file; our first JavaScript file:</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">app</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> element </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token dom variable" style="color:rgb(255, 238, 128)">document</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">createElement</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'div'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  element</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">innerHTML</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'Hello, webpack'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword control-flow" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> element</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token dom variable" style="color:rgb(255, 238, 128)">document</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token property-access">body</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token method function property-access" style="color:rgb(250, 208, 0)">appendChild</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token function" style="color:rgb(250, 208, 0)">app</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="local-development-with-webpack-dev-server">Local development with <code>webpack-dev-server</code><a href="https://johnnyreilly.com/webpack-overview#local-development-with-webpack-dev-server" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>Now we're going to add two scripts to our <code>package.json</code> file. One to build our app, and one to serve it up in a browser whilst we're developing it:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"scripts"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"build"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"webpack build --mode production"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">"start"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"webpack serve --open"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>With this in place, we can develop locally with <code>npm start</code>. This will serve up our app in a browser at <code>http://localhost:8080/</code> using <code>webpack-dev-server</code>:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain"> hello-webpack@1.0.0 start</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain"> webpack serve </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">--open</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token plain">i</span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">webpack-dev-server</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> Project is running at:</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token plain">i</span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">webpack-dev-server</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> Loopback: http://localhost:8080/</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token plain">i</span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">webpack-dev-server</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> On Your Network </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">IPv4</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain">: http://172.30.170.28:8080/</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token plain">i</span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">webpack-dev-server</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> On Your Network </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">IPv6</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain">: http://</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">fe80::1</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain">:8080/</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token plain">i</span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">webpack-dev-server</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> Content not from webpack is served from </span><span class="token string" style="color:rgb(165, 255, 144)">'/Users/jreilly/code/github.com/hello-webpack/public'</span><span class="token plain"> directory</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token operator" style="color:rgb(255, 157, 0)">&lt;</span><span class="token plain">i</span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">webpack-dev-middleware</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">wait</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">until</span><span class="token plain"> bundle finished: /</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">asset main.4d4379bc3adfa037dc27.js </span><span class="token number" style="color:rgb(255, 98, 140)">621</span><span class="token plain"> KiB </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">emitted</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">immutable</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">name: main</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">asset index.html </span><span class="token number" style="color:rgb(255, 98, 140)">252</span><span class="token plain"> bytes </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">emitted</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">runtime modules </span><span class="token number" style="color:rgb(255, 98, 140)">27.3</span><span class="token plain"> KiB </span><span class="token number" style="color:rgb(255, 98, 140)">12</span><span class="token plain"> modules</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">modules by path ./node_modules/ </span><span class="token number" style="color:rgb(255, 98, 140)">178</span><span class="token plain"> KiB</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  modules by path ./node_modules/webpack-dev-server/client/ </span><span class="token number" style="color:rgb(255, 98, 140)">71.8</span><span class="token plain"> KiB </span><span class="token number" style="color:rgb(255, 98, 140)">16</span><span class="token plain"> modules</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  modules by path ./node_modules/webpack/hot/*.js </span><span class="token number" style="color:rgb(255, 98, 140)">5.3</span><span class="token plain"> KiB</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    ./node_modules/webpack/hot/dev-server.js </span><span class="token number" style="color:rgb(255, 98, 140)">1.94</span><span class="token plain"> KiB </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">built</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">code generated</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    ./node_modules/webpack/hot/log.js </span><span class="token number" style="color:rgb(255, 98, 140)">1.86</span><span class="token plain"> KiB </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">built</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">code generated</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    + </span><span class="token number" style="color:rgb(255, 98, 140)">2</span><span class="token plain"> modules</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  modules by path ./node_modules/html-entities/lib/*.js </span><span class="token number" style="color:rgb(255, 98, 140)">81.8</span><span class="token plain"> KiB</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    ./node_modules/html-entities/lib/index.js </span><span class="token number" style="color:rgb(255, 98, 140)">7.91</span><span class="token plain"> KiB </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">built</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">code generated</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    ./node_modules/html-entities/lib/named-references.js </span><span class="token number" style="color:rgb(255, 98, 140)">73</span><span class="token plain"> KiB </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">built</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">code generated</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    ./node_modules/html-entities/lib/numeric-unicode-map.js </span><span class="token number" style="color:rgb(255, 98, 140)">339</span><span class="token plain"> bytes </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">built</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">code generated</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    ./node_modules/html-entities/lib/surrogate-pairs.js </span><span class="token number" style="color:rgb(255, 98, 140)">537</span><span class="token plain"> bytes </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">built</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">code generated</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  ./node_modules/ansi-html-community/index.js </span><span class="token number" style="color:rgb(255, 98, 140)">4.16</span><span class="token plain"> KiB </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">built</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">code generated</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  ./node_modules/events/events.js </span><span class="token number" style="color:rgb(255, 98, 140)">14.5</span><span class="token plain"> KiB </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">built</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">code generated</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">./src/index.js </span><span class="token number" style="color:rgb(255, 98, 140)">163</span><span class="token plain"> bytes </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">built</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">code generated</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">webpack </span><span class="token number" style="color:rgb(255, 98, 140)">5.89</span><span class="token plain">.0 compiled successfully </span><span class="token keyword" style="color:rgb(255, 157, 0)">in</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">861</span><span class="token plain"> ms</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>If we open the browser at <code>http://localhost:8080</code>, we'll see our "Hello, webpack" message.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="building-for-production">Building for production<a href="https://johnnyreilly.com/webpack-overview#building-for-production" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>We can build our app for production with <code>npm run build</code>:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> run build</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain"> hello-webpack@1.0.0 build</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain"> webpack build </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">--mode</span><span class="token plain"> production</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">asset main.82d3f64b186c8eec8e7c.js </span><span class="token number" style="color:rgb(255, 98, 140)">862</span><span class="token plain"> bytes </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">emitted</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">immutable</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">minimized</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">name: main</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">asset index.html </span><span class="token number" style="color:rgb(255, 98, 140)">235</span><span class="token plain"> bytes </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">emitted</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">./src/index.js </span><span class="token number" style="color:rgb(255, 98, 140)">163</span><span class="token plain"> bytes </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">built</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">code generated</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">webpack </span><span class="token number" style="color:rgb(255, 98, 140)">5.89</span><span class="token plain">.0 compiled successfully </span><span class="token keyword" style="color:rgb(255, 157, 0)">in</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">516</span><span class="token plain"> ms</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This has created a <code>dist</code> folder, and a <code>dist/index.html</code> file. Alongside that, it's created a <code>dist/main.82d3f64b186c8eec8e7c.js</code> file. If you open the <code>index.html</code> file in a browser, you'll see your "Hello, webpack" message.</p>
<p>At this point we have a simple app built with webpack. It's not doing much, but it's a start. And it'll give us a chance to talk about some concepts. Let's add some more features.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="integrating-with-plugins-and-loaders">Integrating with plugins and loaders<a href="https://johnnyreilly.com/webpack-overview#integrating-with-plugins-and-loaders" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>If you want to do anything more than the most basic of apps, you'll need to use plugins and loaders. Let's add some more features to our app, and we'll use plugins and loaders to do it.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="loaders">Loaders<a href="https://johnnyreilly.com/webpack-overview#loaders" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>The first thing we'll do is look at loaders. Loaders allow webpack to process other types of files (for example, TypeScript) and convert them into valid modules that can be consumed by your application and added to the dependency graph. An example of a loader is <a href="https://github.com/TypeStrong/ts-loader" target="_blank" rel="noopener noreferrer"><code>ts-loader</code></a> which allows you to use TypeScript with webpack.</p>
<p>I should not brush past this, I'm the primary maintainer of <code>ts-loader</code> and I'm very proud of it. It gets around 30 million downloads a month at the time of writing. That suggests that roughly a quarter of webpacks users are also <code>ts-loader</code> users. <code>ts-loader</code> is a great loader, and I'm very happy to have worked on it since 2016. There's actually a story behind how I came to work on it, <a href="https://johnnyreilly.com/but-you-cant-die-i-love-you-ts-loader" target="_blank" rel="noopener noreferrer">you can read it here</a>.</p>
<p>Let's install <code>ts-loader</code> and TypeScript, and create a <code>tsconfig.json</code> file:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">install</span><span class="token plain"> typescript ts-loader --save-dev</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">npx tsc </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">--init</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Now we need to configure webpack to use <code>ts-loader</code>. We do this by updating our entry point to be a TypeScript file and adding a <code>module</code> section to our <code>webpack.config.js</code> file:</p>
<div class="language-diff codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-diff codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">const path = require('path');</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">const HtmlWebpackPlugin = require('html-webpack-plugin');</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">module.exports = {</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> mode: 'development', // mode can be "development", "production" or "none" https://webpack.js.org/configuration/mode/</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token deleted-sign deleted prefix deleted" style="color:rgba(239, 83, 80, 0.56)">-</span><span class="token deleted-sign deleted line" style="color:rgba(239, 83, 80, 0.56)">  entry: './src/index.js', // the entry point of our app https://webpack.js.org/concepts/entry-points/</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token deleted-sign deleted line" style="color:rgba(239, 83, 80, 0.56)"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">  entry: './src/index.ts', // the entry point of our app https://webpack.js.org/concepts/entry-points/</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> devtool: 'inline-source-map', // the type of sourcemap to generate for debugging https://webpack.js.org/configuration/devtool/</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> plugins: [</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   new HtmlWebpackPlugin(), // a plugin to generate an HTML file https://github.com/jantimon/html-webpack-plugin</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> ],</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">  module: {</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">    rules: [</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">      {</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">        test: /\.([cm]?ts|tsx)$/,</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">        loader: 'ts-loader',</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">      },</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">    ],</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">  },</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> output: {</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   // where to put the bundled output https://webpack.js.org/concepts/output/</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   filename: '[name].[contenthash].js',</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   path: path.resolve(__dirname, 'dist'),</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   clean: true,</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> },</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token plain">};</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The <code>test</code> property is a regular expression that matches the files we want to process. In this case, we're matching <code>.ts</code>, <code>.tsx</code>, <code>.cts</code> and <code>.cts</code> files. The <code>loader</code> property is the name of the loader we want to use; <code>ts-loader</code>.</p>
<p>Let's rename our <code>src/index.js</code> file to <code>src/index.ts</code> and change the code to use TypeScript:</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">app</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> HTMLDivElement </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// the only TypeScript change we made is to add a return type</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> element </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> document</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">createElement</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'div'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  element</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">innerHTML </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'Hello, webpack'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> element</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">document</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">body</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">appendChild</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token function" style="color:rgb(250, 208, 0)">app</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>And just like that, we can use TypeScript in our app!</p>
<p>What is <code>ts-loader</code> actually doing? Well, it's taking our TypeScript code, and converting it into JavaScript. For each TypeScript file, <code>ts-loader</code> is invoked. It takes the TypeScript code, and passes it to the TypeScript compiler. The TypeScript compiler converts the TypeScript code into JavaScript. <code>ts-loader</code> then takes the JavaScript code and passes it to webpack. webpack then takes the JavaScript code and bundles it.</p>
<p>This is what all loaders do; they take a file, process it, and pass it to webpack. There are many loaders available, and you can even write your own. They aren't restricted to languages that compile to JavaScript. You can find a list of loaders here: <a href="https://webpack.js.org/loaders/" target="_blank" rel="noopener noreferrer">https://webpack.js.org/loaders/</a></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="plugins-1">Plugins<a href="https://johnnyreilly.com/webpack-overview#plugins-1" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>We've covered loaders, now we'll cover plugins. Plugins allow you to do all kinds of things with webpack. The definition in the webpack documentation is delightfully broad:</p>
<blockquote>
<p>Plugins are the backbone of webpack. ... They serve the purpose of doing anything else that a loader cannot do.</p>
</blockquote>
<p>This is helpful when you remind yourself that a loader takes a file, processes it, and passes the output of that processing to webpack. It is single-file-oriented, if you like. A plugin is what you use when you want to do something that isn't single-file-oriented.</p>
<p>So maybe it's easier to give you some examples. We already have one plugin in our app, the <code>HtmlWebpackPlugin</code>. This plugin generates an HTML file that includes our bundled JavaScript file(s).</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="defineplugin"><code>DefinePlugin</code><a href="https://johnnyreilly.com/webpack-overview#defineplugin" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h4>
<p>Let's add another plugin to our app. We'll add the <a href="https://webpack.js.org/plugins/define-plugin/" target="_blank" rel="noopener noreferrer"><code>DefinePlugin</code></a>. This plugin allows you to define global constants that can be used in your code. Let's add it to our <code>webpack.config.js</code> file:</p>
<div class="language-diff codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-diff codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">const path = require("path");</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">const webpack = require("webpack");</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token plain">const HtmlWebpackPlugin = require("html-webpack-plugin");</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">module.exports = {</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> mode: "development",</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> entry: './src/index.ts', // the entry point of our app https://webpack.js.org/concepts/entry-points/</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> devtool: "inline-source-map",</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> plugins: [</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">     new HtmlWebpackPlugin(),</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">      new webpack.DefinePlugin({</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">        'MODE': JSON.stringify("PRODUCTION"),</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">      })</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> ],</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> module: {</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   rules: [</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">     {</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">       test: /\.([cm]?ts|tsx)$/,</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">       loader: 'ts-loader',</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">     },</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   ],</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> },</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> output: {</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   filename: "[name].[contenthash].js",</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   path: path.resolve(__dirname, "dist"),</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   clean: true,</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> },</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token plain">};</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>With the change above, we've added the <code>DefinePlugin</code> to our list of plugins. We've also defined a global constant called <code>MODE</code> that will be available in our code. We've set the value of <code>MODE</code> to be the value of the <code>NODE_ENV</code> environment variable. We'll use this in our code in a moment.</p>
<p>Let's update our <code>src/index.ts</code> file to use the <code>MODE</code> constant, and tell TypeScript about it:</p>
<div class="language-diff codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-diff codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">declare const MODE: string;</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">function app(): HTMLDivElement {</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> const element = document.createElement("div");</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token deleted-sign deleted prefix deleted" style="color:rgba(239, 83, 80, 0.56)">-</span><span class="token deleted-sign deleted line" style="color:rgba(239, 83, 80, 0.56)">  element.innerHTML = 'Hello, webpack';</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token deleted-sign deleted line" style="color:rgba(239, 83, 80, 0.56)"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">  element.innerHTML = `Hello, webpack, we are in ${MODE} mode.`;</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> return element;</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token plain">}</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">document.body.appendChild(app());</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Now if we build our app, we'll see that the <code>MODE</code> constant is available in our code, and we can use it. At runtime it will be replaced with the value we defined in our <code>webpack.config.js</code> file and our app will say:</p>
<blockquote>
<p>Hello, webpack, we are in PRODUCTION mode.</p>
</blockquote>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="fork-ts-checker-webpack-plugin"><code>fork-ts-checker-webpack-plugin</code><a href="https://johnnyreilly.com/webpack-overview#fork-ts-checker-webpack-plugin" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h4>
<p>Before we move on, let's add one more plugin to our app. We're going to add the <a href="https://github.com/TypeStrong/fork-ts-checker-webpack-plugin" target="_blank" rel="noopener noreferrer"><code>fork-ts-checker-webpack-plugin</code></a>. This plugin allows you to run the TypeScript compiler in a separate process, and relieve <code>ts-loader</code> of the responsibility of handling type checking. This is useful because it means that webpack can run in parallel with the TypeScript compiler. This can significantly speed up your build times. I have worked on this plugin, as it has a sibling relationship with <code>ts-loader</code>. It's quite common to use both together; <code>ts-loader</code> to compile your code, and <code>fork-ts-checker-webpack-plugin</code> to type check it.</p>
<p>Let's install <code>fork-ts-checker-webpack-plugin</code>:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">install</span><span class="token plain"> fork-ts-checker-webpack-plugin --save-dev</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>And let's configure it in our <code>webpack.config.js</code> file:</p>
<div class="language-diff codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-diff codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">const path = require("path");</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">const webpack = require("webpack");</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">const HtmlWebpackPlugin = require("html-webpack-plugin");</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">const ForkTsCheckerWebpackPlugin = require('fork-ts-checker-webpack-plugin');</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">module.exports = {</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> mode: "development",</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> entry: './src/index.ts', // the entry point of our app https://webpack.js.org/concepts/entry-points/</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> devtool: "inline-source-map",</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> plugins: [</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">     new HtmlWebpackPlugin(),</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">     new webpack.DefinePlugin({</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">       'MODE': JSON.stringify('PRODUCTION'),</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">     }),</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">      new ForkTsCheckerWebpackPlugin()</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> ],</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> module: {</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   rules: [</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">     {</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">       test: /\.([cm]?ts|tsx)$/,</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">       loader: 'ts-loader',</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">        // we only need to explicitly specify transpileOnly option if you use ts-loader &lt; 9.3.0</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">        options: {</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">          transpileOnly: true</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">        }</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">     },</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   ],</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> },</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> output: {</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   filename: "[name].[contenthash].js",</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   path: path.resolve(__dirname, "dist"),</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   clean: true,</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> },</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token plain">};</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We can see here that we're providing some configuration to <code>ts-loader</code>; setting it to <code>transpileOnly: true</code>. This means that <code>ts-loader</code> will only transpile our code, and not type check it. We're also adding the <code>ForkTsCheckerWebpackPlugin</code> to our list of plugins. This will run the TypeScript compiler in a separate process and perform type checking there.</p>
<p>It's worth noting that because of <a href="https://github.com/TypeStrong/ts-loader/pull/1451" target="_blank" rel="noopener noreferrer">this excellent PR</a> by the primary maintainer <a href="https://github.com/piotr-oles" target="_blank" rel="noopener noreferrer">Piotr Ole≈õ</a>, we don't need to explicitly specify <code>transpileOnly: true</code> anymore. It's the default behaviour of <code>ts-loader</code> when the <code>fork-ts-checker-webpack-plugin</code> is detected. I've left it in the example above to illustrate what configuring a loader looks like.</p>
<p>To test that this is working, let's add a type error to our <code>src/index.ts</code> file:</p>
<div class="language-diff codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-diff codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">declare const MODE: string;</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">function app(): HTMLDivElement {</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> const element = document.createElement("div");</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> element.innerHTML = `Hello, webpack, we are in ${MODE} mode.`;</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token unchanged line"></span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token deleted-sign deleted prefix deleted" style="color:rgba(239, 83, 80, 0.56)">-</span><span class="token deleted-sign deleted line" style="color:rgba(239, 83, 80, 0.56)">  return element;</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token deleted-sign deleted line" style="color:rgba(239, 83, 80, 0.56)"></span><span class="token inserted-sign inserted prefix inserted" style="color:rgb(173, 219, 103)">+</span><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)">  return elemen;</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token inserted-sign inserted line" style="color:rgb(173, 219, 103)"></span><span class="token plain">}</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">document.body.appendChild(app());</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>And let's build our app:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> run build</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain"> hello-webpack@1.0.0 build</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain"> webpack build </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">--mode</span><span class="token plain"> production</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">assets by status </span><span class="token number" style="color:rgb(255, 98, 140)">1.09</span><span class="token plain"> KiB </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">cached</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">2</span><span class="token plain"> assets</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">./src/index.ts </span><span class="token number" style="color:rgb(255, 98, 140)">204</span><span class="token plain"> bytes </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">built</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">code generated</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">ERROR </span><span class="token keyword" style="color:rgb(255, 157, 0)">in</span><span class="token plain"> ./src/index.ts:8:10</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">TS2552: Cannot </span><span class="token function" style="color:rgb(250, 208, 0)">find</span><span class="token plain"> name </span><span class="token string" style="color:rgb(165, 255, 144)">'elemen'</span><span class="token builtin class-name" style="color:rgb(250, 208, 0)">.</span><span class="token plain"> Did you mean </span><span class="token string" style="color:rgb(165, 255, 144)">'element'</span><span class="token plain">?</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">     </span><span class="token number" style="color:rgb(255, 98, 140)">6</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">|</span><span class="token plain">   element.innerHTML </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token variable" style="color:rgb(255, 238, 128)">`</span><span class="token variable" style="color:rgb(255, 238, 128)">Hello, webpack, we are </span><span class="token variable keyword" style="color:rgb(255, 157, 0)">in</span><span class="token variable" style="color:rgb(255, 238, 128)"> $</span><span class="token variable punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token variable" style="color:rgb(255, 238, 128)">MODE</span><span class="token variable punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token variable" style="color:rgb(255, 238, 128)"> mode.</span><span class="token variable" style="color:rgb(255, 238, 128)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">     </span><span class="token number" style="color:rgb(255, 98, 140)">7</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain">  </span><span class="token number" style="color:rgb(255, 98, 140)">8</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">|</span><span class="token plain">   </span><span class="token builtin class-name" style="color:rgb(250, 208, 0)">return</span><span class="token plain"> elemen</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">       </span><span class="token operator" style="color:rgb(255, 157, 0)">|</span><span class="token plain">          ^^^^^^</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">     </span><span class="token number" style="color:rgb(255, 98, 140)">9</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">|</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token number" style="color:rgb(255, 98, 140)">10</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token number" style="color:rgb(255, 98, 140)">11</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">|</span><span class="token plain"> document.body.appendChild</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">app</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">))</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">webpack </span><span class="token number" style="color:rgb(255, 98, 140)">5.89</span><span class="token plain">.0 compiled with </span><span class="token number" style="color:rgb(255, 98, 140)">1</span><span class="token plain"> error </span><span class="token keyword" style="color:rgb(255, 157, 0)">in</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">1710</span><span class="token plain"> ms</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We can see that the TypeScript compiler has picked up our type error. If we remove the <code>fork-ts-checker-webpack-plugin</code> from our list of plugins, we'll see that the type error is no longer picked up:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token function" style="color:rgb(250, 208, 0)">npm</span><span class="token plain"> run build</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain"> hello-webpack@1.0.0 build</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token operator" style="color:rgb(255, 157, 0)">&gt;</span><span class="token plain"> webpack build </span><span class="token parameter variable" style="color:rgb(255, 238, 128)">--mode</span><span class="token plain"> production</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">asset main.a1d11e49d0129cad93aa.js </span><span class="token number" style="color:rgb(255, 98, 140)">885</span><span class="token plain"> bytes </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">emitted</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">immutable</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">minimized</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">name: main</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">asset index.html </span><span class="token number" style="color:rgb(255, 98, 140)">235</span><span class="token plain"> bytes </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">emitted</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">compared </span><span class="token keyword" style="color:rgb(255, 157, 0)">for</span><span class="token plain"> emit</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">./src/index.ts </span><span class="token number" style="color:rgb(255, 98, 140)">204</span><span class="token plain"> bytes </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">built</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">code generated</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">webpack </span><span class="token number" style="color:rgb(255, 98, 140)">5.89</span><span class="token plain">.0 compiled successfully </span><span class="token keyword" style="color:rgb(255, 157, 0)">in</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">772</span><span class="token plain"> ms</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>So we can see that the <code>fork-ts-checker-webpack-plugin</code> is working.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="using-plugins-and-loaders---some-resources">Using plugins and loaders - some resources<a href="https://johnnyreilly.com/webpack-overview#using-plugins-and-loaders---some-resources" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>We've seen a number of examples of plugins. Almost all customisation of webpack is done through plugins and loaders. If you want to do something with webpack, it's likely that there's a plugin or loader that will help you do it. If you want to learn more about plugins and loaders, I recommend the following resources:</p>
<ul>
<li><a href="https://blog.logrocket.com/how-detect-dead-code-frontend-project/#using-webpack-for-dead-code-detection" target="_blank" rel="noopener noreferrer">How to detect dead code in a frontend project</a></li>
<li><a href="https://blog.logrocket.com/tree-shaking-json-files-webpack/" target="_blank" rel="noopener noreferrer">Tree shaking JSON files with webpack</a></li>
<li><a href="https://blog.logrocket.com/tree-shaking-and-code-splitting-in-webpack/" target="_blank" rel="noopener noreferrer">Tree shaking and code splitting in webpack</a></li>
<li><a href="https://blog.logrocket.com/building-micro-frontends-webpacks-module-federation/" target="_blank" rel="noopener noreferrer">Building micro-frontends with webpack‚Äôs Module Federation</a></li>
<li><a href="https://blog.logrocket.com/speed-up-your-webpack-build-with-the-dll-plugin/" target="_blank" rel="noopener noreferrer">Improve your webpack build with the DLL plugin</a></li>
<li><a href="https://blog.logrocket.com/slimming-down-your-bundle-size/" target="_blank" rel="noopener noreferrer">Slimming down your bundle size</a></li>
<li><a href="https://blog.logrocket.com/parsing-raw-text-inputs-in-web-applications-using-antlr/" target="_blank" rel="noopener noreferrer">Parsing raw text inputs in web applications using ANTLR</a></li>
<li><a href="https://blog.logrocket.com/guide-performance-optimization-webpack/" target="_blank" rel="noopener noreferrer">An in-depth guide to performance optimization with webpack</a></li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="webpack-and-the-competition">webpack and the competition<a href="https://johnnyreilly.com/webpack-overview#webpack-and-the-competition" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>There has been a lot of competition in the bundler space. For a long time, webpack has been the most popular bundler. But it's not the only game in town, and never has been. It's beyond the scope of this article to do a full comparison of webpack and its competitors, but there's some excellent articles out there that do just that:</p>
<ul>
<li><a href="https://blog.logrocket.com/snowpack-vs-webpack-build-tool-comparison/" target="_blank" rel="noopener noreferrer">Snowpack vs. webpack: A build tool comparison</a></li>
<li><a href="https://blog.logrocket.com/migrating-swc-webpack-babel-overview/" target="_blank" rel="noopener noreferrer">Migrating to SWC: A brief overview</a></li>
<li><a href="https://blog.logrocket.com/webpack-or-esbuild-why-not-both/" target="_blank" rel="noopener noreferrer">webpack or esbuild: Why not both?</a></li>
<li><a href="https://blog.logrocket.com/switching-to-parcel-from-webpack/" target="_blank" rel="noopener noreferrer">Switching to Parcel from webpack</a></li>
<li><a href="https://blog.logrocket.com/migrate-rspack-webpack/" target="_blank" rel="noopener noreferrer">Why you should migrate to Rspack from webpack</a></li>
<li><a href="https://blog.logrocket.com/introducing-turbopack-rust-based-successor-webpack/" target="_blank" rel="noopener noreferrer">Introducing Turbopack: A Rust-based successor to webpack</a></li>
<li><a href="https://blog.logrocket.com/benchmarking-bundlers-2020-rollup-parcel-webpack/" target="_blank" rel="noopener noreferrer">Benchmarking bundlers 2020: Rollup vs. Parcel vs. webpack</a></li>
</ul>
<p>For the longest time, webpack has been the most popular bundler. Apparently incapable of being dislodged from that position. However, it looks like that might be changing. If we look at the npm download stats for webpack for the last five years, we can see that, for the first time, its popularity is starting to decrease. It's still the most popular bundler, but it's starting to decrease in popularity and competitors are starting to increase. This chart shows the npm download stats for webpack, esbuild, swc and vite over the last five years:</p>
<p><img decoding="async" loading="lazy" alt="screenshot of a chart comparing webpack, esbuild, swc and vite usage over the years 2018-2023" src="https://johnnyreilly.com/assets/images/screenshot-stats-webpack-vite-esbuild-swc-295249030dd5a3b6ff745b70530ab903.webp" width="2654" height="1070" class="img_ev3q"></p>
<p><a href="https://vitejs.dev/" target="_blank" rel="noopener noreferrer">Vite</a> is a bundler that came out of the Vue ecosystem. It's a very fast bundler that uses esbuild under the hood. <a href="https://esbuild.github.io/" target="_blank" rel="noopener noreferrer">esbuild</a> is a bundler that came out of the Go ecosystem. <a href="https://github.com/swc-project/swc" target="_blank" rel="noopener noreferrer">swc</a> is a super-fast TypeScript / JavaScript compiler written in Rust. All of these compete with webpack in some way.</p>
<p>The thing to note about all these competitors is that they are all faster than webpack. There's a reason for that. webpack is written in JavaScript. For most of the history of bundlers, JavaScript was what bundlers were implemented in. But the next generation of tools are written in other languages. esbuild is written in Go. swc is written in Rust. These languages have allowed massively improved performance. In terms of speed, webpack cannot compete with these tools. It's worth noting that even the creator of webpack, Tobias Koppers is now working on a <a href="https://turbo.build/pack" target="_blank" rel="noopener noreferrer">Rust-based successor to webpack named Turbopack</a>.</p>
<p>Next generation tools keep appearing. <a href="https://blog.logrocket.com/bun-adoption-guide/" target="_blank" rel="noopener noreferrer">Bun</a> is an alternative JavaScript runtime, implemented in Zig. It also ships with its own built in <a href="https://bun.sh/docs/bundler" target="_blank" rel="noopener noreferrer">Bun bundler</a> which is reportedly even faster than esbuild and Rspack! We're likely to see even more of these tools in the future.</p>
<p>Speed is a very attractive proposition, and as we can see, we're starting to see the community move away from webpack. It's not a mass exodus, when people are starting new projects now, they're more than likely to use one of the newer tools. When I've started a new project over the last year I've tended to use Vite. I've not used webpack for a new project for a long time. I'm not alone in this.</p>
<p>To be clear: webpack is not going anywhere. But it's fair to say that it is starting to be displaced by some of the newer tools. This trend is only going to continue.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://johnnyreilly.com/webpack-overview#conclusion" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>In this article we've looked at what webpack is, and why it's so popular. We've looked at its history, and how it came to be the most popular bundler. We've examined how to get started with webpack, some of the high level concepts such as plugins and loaders. We've also considered some of the competition, and how webpack is starting to be displaced by some of the newer tools.</p>
<p><a href="https://blog.logrocket.com/webpack-adoption-guide/" target="_blank" rel="noopener noreferrer">This post was originally published on LogRocket.</a></p>
]]></content:encoded>
            <category>webpack</category>
        </item>
        <item>
            <title><![CDATA[Using AZD for faster incremental Azure Container App deployments in Azure DevOps]]></title>
            <link>https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops</link>
            <guid>https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops</guid>
            <pubDate>Wed, 04 Dec 2024 16:14:40 GMT</pubDate>
            <description><![CDATA[Learn how to speed up deployments of Azure Container Apps in GitHub Actions using the AZD command.]]></description>
            <content:encoded><![CDATA[<p>When deploying Azure Container Apps from Azure DevOps, you can use the <code>azd</code> command to speed up deployments that do not affect infrastructure. Given that when you're deploying, it's far more common to be making a code and / or content change and not an infrastructure one, this can be a significant time saver.</p>
<p><img decoding="async" alt="title image reading &amp;quot;Using AZD for faster incremental Azure Container App deployments in Azure DevOps&amp;quot; with the Azure Container Apps logo" src="https://johnnyreilly.com/assets/images/title-image-ca63b951ef232f0eede02c6a48f0d39b.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<p>If you're looking for information on how to use <code>azd</code> to speed up deployments of Azure Static Web Apps in GitHub Actions, then you might want to read <a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-static-web-app-deployments-in-github-actions">this post</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="faster-deployments-from-azd-14-and-beyond">Faster deployments from <code>azd</code> 1.4 and beyond<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops#faster-deployments-from-azd-14-and-beyond" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>The <code>azd</code> v1.4.0 release contained a significant feature: <code>azd provision</code> is now faster when there are no infrastructure changes.</p>
<p>To quote a trimmed down version of the <a href="https://devblogs.microsoft.com/azure-sdk/azure-developer-cli-azd-october-2023-release/#azd-provision-is-now-faster-when-there-are-no-infrastructure-changes" target="_blank" rel="noopener noreferrer">announcement</a>:</p>
<blockquote>
<p>If you‚Äôve been using the Azure Developer CLI for a while, you may have noticed that sometimes <code>azd provision</code> takes a long time to complete when it may not need to. The wait time was because, prior to version 1.4.0, <code>azd provision</code> would always reprovision regardless of whether the underlying Infrastructure as Code had changed... As of today‚Äôs 1.4.0 release, <code>azd provision</code> now checks the most recent deployment upstream on Azure to see if the state is the same as what‚Äôs represented in the Infrastructure as Code that‚Äôs been used to provision. If the state is the same, the provision is skipped... with this new experience, you should also notice improved performance when running <code>azd up</code> in a CI/CD pipeline as provisioning will be automatically skipped when there are no changes.</p>
</blockquote>
<p>I want this. We're going to unpack how to use this feature in the context of an Azure DevOps pipeline with Azure Container Apps. It turns out that there's a little more to it than just running <code>azd provision</code> and hoping for the best. In fact, there's gotchas aplenty - but it's totally achievable.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-about-bicep-what-if">What about Bicep <code>what-if</code>?<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops#what-about-bicep-what-if" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>You might be thinking at this point: "What about Bicep <code>what-if</code>?" It's a good question. <code>what-if</code> is a feature of the Azure CLI that allows you to see what changes would be made if you were to deploy a Bicep file. Unfortunately, my own experience of using <code>what-if</code> has been that it's quite unreliable. It will detect changes where there are none, and it will fail to detect changes where there are some. I'd love to use it, but I can't trust it. If you'd like to watch a more in depth discussion of the issue, <a href="https://www.youtube.com/watch?v=jlkwH-fP--M" target="_blank" rel="noopener noreferrer">this video is a good place to start</a>.</p>
<p>There appear to be some known issues with <code>what-if</code> that you can follow the progress of here:</p>
<ul>
<li><a href="https://github.com/Azure/arm-template-whatif/issues/83" target="_blank" rel="noopener noreferrer">https://github.com/Azure/arm-template-whatif/issues/83</a></li>
<li><a href="https://github.com/Azure/arm-template-whatif/issues/157" target="_blank" rel="noopener noreferrer">https://github.com/Azure/arm-template-whatif/issues/157</a></li>
</ul>
<p>Given that <code>what-if</code> is not reliable, we're going to use <code>azd</code> to speed up our deployments.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="embracing-azd-in-an-existing-azure-devops-pipeline">Embracing <code>azd</code> in an existing Azure DevOps pipeline<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops#embracing-azd-in-an-existing-azure-devops-pipeline" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>I'm going to start with a pre-existing Azure Pipeline that deploys an Azure Container App. It uses the classic <a href="https://learn.microsoft.com/en-us/azure/devops/pipelines/tasks/reference/azure-resource-manager-template-deployment-v3?view=azure-pipelines" target="_blank" rel="noopener noreferrer"><code>AzureResourceManagerTemplateDeployment@3</code> ARM template deployment v3 task</a> to deploy our infrastructure in the form of a <code>main.bicep</code> (and it's submodules) file.</p>
<p>This existing pipeline and infrastructure as code payload is in a good state. But it's slow. Every time the pipeline runs, the bicep section takes <strong>8 minutes</strong>. We're going to make it faster. Spoiler: we're going to get it down to <strong>1 minute</strong>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="hello-azureyml">Hello <code>azure.yml</code><a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops#hello-azureyml" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Our project has no integration with <code>azd</code>. But we need <code>azd</code> to take advantage of the new <code>azd provision</code> feature. We're going to add a new file to our project: <code>azure.yml</code>. This file is going to contain the configuration for our <code>azd</code> project.</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># yaml-language-server: $schema=https://raw.githubusercontent.com/Azure/azure-dev/main/schemas/v1.0/azure.yaml.json</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> my</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">container</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">app</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token key atrule">metadata</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">template</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> azd</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">init@1.9.4</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token key atrule">services</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">app</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">image</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> myregistry.azurecr.io/$</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">CONTAINER_IMAGE_NAME</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain">$</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">APP_VERSION_TAG</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">host</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> containerapp</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">resourceName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">CONTAINER_APP_NAME</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The yaml above describes a container app service called <code>app</code> that uses an image from an Azure Container Registry. The <code>APP_VERSION_TAG</code> is a variable that we'll need to provide in our Azure DevOps pipeline. It's worth noticing the link at the top to the schema for the <code>azure.yml</code> file: <a href="https://raw.githubusercontent.com/Azure/azure-dev/main/schemas/v1.0/azure.yaml.json" target="_blank" rel="noopener noreferrer">https://raw.githubusercontent.com/Azure/azure-dev/main/schemas/v1.0/azure.yaml.json</a> - much of the work around figuring out how to use <code>azd</code> was achieved by looking at the schema for the <code>azure.yml</code> file.</p>
<p>One thing we learned, as we looked at the schema, was that many parameters support environment variable substitution at runtime:</p>
<p><img decoding="async" loading="lazy" alt="screenshot of schema file" src="https://johnnyreilly.com/assets/images/screenshot-azure-yml-schema-993e66df439d83bf81c6e6439f964776.png" width="1996" height="1834" class="img_ev3q"></p>
<p>The screenshot above is taken from the Docker section of the configuration where environment variable substitution is widely supported. Originally the <code>image</code> parameter <a href="https://github.com/Azure/azure-dev/issues/4124" target="_blank" rel="noopener noreferrer">did not support substitution</a>. It does as of <a href="https://github.com/Azure/azure-dev/releases/tag/azure-dev-cli_1.10.0" target="_blank" rel="noopener noreferrer">v1.10.0</a>.</p>
<p>You'll notice that we pass <code>resourceName: ${CONTAINER_APP_NAME}</code>. You'll see later that we supply the <code>CONTAINER_APP_NAME</code> and this will be consumed by the <code>azd deploy</code> stage.</p>
<p>Incidentally, we're using an approach whereby the image is built and pushed to the registry independently of <code>azd</code>. You could equally use <code>azd</code> to build and push the image. But we're not doing that here.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="bicep-modifications">Bicep modifications<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops#bicep-modifications" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>I mentioned that we're adding a level of <code>azd</code> support to an existing pipeline. As part of that, we need to make modifications to our existing Bicep modules.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="using-resource-group-scoped-deployments-with-azd">Using resource group scoped deployments with azd<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops#using-resource-group-scoped-deployments-with-azd" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>We're going to start off with a minor tweak to our <code>main.bicep</code> file; the entry point to our Bicep deployments.</p>
<div class="language-bicep codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bicep codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">targetScope</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'resourceGroup'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The change above allows us to use <code>azd</code> deployments targeted at existing resource groups. The default mode of operation for <code>azd</code> deployments is deploying a resource group to a subscription. We are seeking to <a href="https://learn.microsoft.com/en-us/azure/developer/azure-developer-cli/resource-group-scoped-deployments" target="_blank" rel="noopener noreferrer">deploy to an existing resource group</a>.</p>
<p>Now, strictly speaking, this isn't necessary for speeding up deployments with <code>azd</code>. But if you're not one for creating a resource group per deployment (as I am not), then this is a good idea. This kind of deployment requires less permissions and may well better align with your organisation's security posture.</p>
<p>We'll need to opt into using this feature with <code>azd</code> later on in the pipeline; at present resource group scoped deployments are considered "beta".</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="the-does-your-service-exist-parameter">The "does your service exist?" parameter<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops#the-does-your-service-exist-parameter" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>We're going to add a "magic" parameter to our <code>main.bicep</code> file. This parameter is going to be used to determine whether the container app we're deploying already exists. This is important because if the container app already exists, we will reuse the existing deployed container image during the <code>azd provision</code> stage. If it does not, then we'll deploy a new container image.</p>
<div class="language-bicep codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bicep codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token decorator">@description</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'Specifies if the container app exists - azd will provide this'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> containerAppExists </span><span class="token datatype class-name" style="color:rgb(250, 208, 0)">bool</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">false</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We'll look later at where this value comes from, but for now, we're just adding it to our <code>main.bicep</code> file. How do we use this parameter? In the module where we deploy our container app, we're going to make a couple of changes:</p>
<div class="language-bicep codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bicep codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">module</span><span class="token plain"> fetchLatestImage </span><span class="token string" style="color:rgb(165, 255, 144)">'../modules/fetch-container-image.bicep'</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">name</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token interpolated-string string" style="color:rgb(165, 255, 144)">'</span><span class="token interpolated-string interpolation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token interpolated-string interpolation expression">name</span><span class="token interpolated-string interpolation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token interpolated-string string" style="color:rgb(165, 255, 144)">-fetch-image'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">params</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">exists</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> containerAppExists</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">name</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> name</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">resource</span><span class="token plain"> app </span><span class="token string" style="color:rgb(165, 255, 144)">'Microsoft.App/containerApps@2023-05-01'</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">name</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> name</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">location</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> location</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">tags</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">union</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">tags</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token string" style="color:rgb(165, 255, 144)">'azd-service-name'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain">  </span><span class="token string" style="color:rgb(165, 255, 144)">'web'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// note the "web" matches the service name in azure.yml</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">properties</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token property" style="color:rgb(255, 157, 0)">template</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">containers</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token property" style="color:rgb(255, 157, 0)">image</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> fetchLatestImage</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">outputs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token operator" style="color:rgb(255, 157, 0)">?</span><span class="token plain">containers</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token operator" style="color:rgb(255, 157, 0)">?</span><span class="token number" style="color:rgb(255, 98, 140)">0</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token operator" style="color:rgb(255, 157, 0)">?</span><span class="token plain">image </span><span class="token operator" style="color:rgb(255, 157, 0)">??</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'mcr.microsoft.com/azuredocs/containerapps-helloworld:latest'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>You can see we tag the container app with the service name from the <code>azure.yml</code> file (<code>web</code>). This is important because it allows <code>azd</code> to determine whether the container app already exists and so power the <code>containerAppExists</code> parameter we added to our <code>main.bicep</code> file.</p>
<p>We're using the <code>containerAppExists</code> parameter to determine whether we should fetch the currently deployed image from the existing container app. If the container app exists, we'll use the existing image. If it does not, we'll use a default image. We'd typically only expect to use the default image when we're deploying the container app to an environment for the first time. (You might be wondering how the new version of the application gets deployed; given that we're not using the new container image. It turns out that <code>azd deploy</code> is the command responsible for deploying the new image; we'll get to that later.)</p>
<p>You'll have noticed that we're using a new module called <code>fetch-container-image.bicep</code>. This module is responsible for attempting to fetch the existing image from the currently deployed container app:</p>
<div class="language-bicep codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bicep codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> exists </span><span class="token datatype class-name" style="color:rgb(250, 208, 0)">bool</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> name </span><span class="token datatype class-name" style="color:rgb(250, 208, 0)">string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">resource</span><span class="token plain"> existingApp </span><span class="token string" style="color:rgb(165, 255, 144)">'Microsoft.App/containerApps@2023-05-01'</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">existing</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">exists</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">name</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> name</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">output</span><span class="token plain"> containers </span><span class="token datatype class-name" style="color:rgb(250, 208, 0)">array</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> exists </span><span class="token operator" style="color:rgb(255, 157, 0)">?</span><span class="token plain"> existingApp</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">properties</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">template</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">containers </span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This is based on what files are generated when you perform an <code>azd init</code>, but has been customised for the specific version of the <code>Microsoft.App/containerApps</code> resource we're using.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="tagging-resources-with-the-environment-name">Tagging resources with the environment name<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops#tagging-resources-with-the-environment-name" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>Another addition we're going to make to our <code>main.bicep</code> file is to tag our resources with the environment name. This allows <code>azd</code> to determine the environment of a given resource. It's achieved by using the our already existing <code>envName</code> parameter and adding it to the tags of our resources:</p>
<div class="language-bicep codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bicep codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token decorator">@description</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'Environment eg dev, prod'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> envName </span><span class="token datatype class-name" style="color:rgb(250, 208, 0)">string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> combinedTags </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">union</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">tags</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'azd-env-name'</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> envName </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="parameters-in-mainbicep-must-be-immutable-per-environment">Parameters in <code>main.bicep</code> must be immutable per environment<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops#parameters-in-mainbicep-must-be-immutable-per-environment" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h3>
<p>It's gotcha time! One thing we learned the hard way is that parameters in <code>main.bicep</code> must be <strong>immutable per environment</strong>. This means that you can't change the value of a parameter in a <code>main.bicep</code> file between deployments to an environment. This is because <code>azd</code> uses the <code>main.bicep</code> file to determine whether a deployment is incremental or not. If the parameters change, then <code>azd</code> will assume that the deployment requires infrastructure changes, and will reprovision the resources.</p>
<p>What's more, as things stand, <code>azd</code> only has the ability to <strong>fully</strong> reprovision your resources. If your app consists of a database and a container app, and you only want to deploy a new version of the container app, you're out of luck. <code>azd</code> will deploy the database again too. This is a limitation of <code>azd</code> at the time of writing.</p>
<p>I've <a href="https://github.com/Azure/azure-dev/issues/4123" target="_blank" rel="noopener noreferrer">raised a GitHub issue</a> in the hope that this feature might one day land. Perhaps it's super hard - quite possibly.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="welcome-mainbicepparam">Welcome <code>main.bicepparam</code><a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops#welcome-mainbicepparam" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Prior to using <code>azd</code>, we were using a <code>main.bicep</code> file to deploy our infrastructure and we provided parameters to this file via our Azure DevOps pipeline. We're going to make a change to our pipeline to use a <a href="https://learn.microsoft.com/en-us/azure/azure-resource-manager/bicep/parameter-files?tabs=Bicep" target="_blank" rel="noopener noreferrer"><code>main.bicepparam</code></a> file instead.</p>
<p>The <code>main.bicepparam</code> file is going to contain the parameters that we were previously providing to our <code>main.bicep</code> file. It's going to pick these up from environment variables that we'll declare. We're also going to add our new <code>containerAppExists</code> parameter to this file, which will also collect its value from an environment variable. But it won't be us that provides that value; it will be <code>azd</code>.</p>
<p>Consider the following (cut down) <code>main.bicepparam</code> file:</p>
<div class="language-bicep codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bicep codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token plain">using </span><span class="token string" style="color:rgb(165, 255, 144)">'./main.bicep'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> envName </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">readEnvironmentVariable</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'AZURE_ENV_NAME'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> location </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">readEnvironmentVariable</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'AZURE_LOCATION'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> serviceConnectionPrincipalId </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">readEnvironmentVariable</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'AZURE_PRINCIPAL_ID'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> tags </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">branch</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">readEnvironmentVariable</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'TAGS_BRANCH'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">repo</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">readEnvironmentVariable</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'TAGS_REPO'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// azd will provide the following parameters</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">param</span><span class="token plain"> containerAppExists </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">bool</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token function" style="color:rgb(250, 208, 0)">readEnvironmentVariable</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'SERVICE_APP_RESOURCE_EXISTS'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'false'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The <code>containerAppExists</code> parameter is determined by the <code>SERVICE_APP_RESOURCE_EXISTS</code> environment variable to provide this value. What's happening here is that we're picking up on a convention that <code>azd</code> uses to provide confirmation that a service already exists. <code>SERVICE_[SERVICENAME]_RESOURCE_EXISTS</code> is the pattern that <code>azd</code> uses to provide this information; where <code>[SERVICENAME]</code> is the name of the service as defined in the <code>azure.yml</code> file. In our case, it's <code>app</code> (or rather <code>APP</code>).</p>
<p>If you're curious about how this actually works <a href="https://github.com/Azure/azure-dev/blob/837d4e8592c53375c7d9aa6df8b134c23cdeb487/cli/azd/pkg/project/service_target_containerapp.go#L174-L190" target="_blank" rel="noopener noreferrer">you can read the source code here</a> in the <code>azd</code> project. Here's the relevant code snippet:</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">func</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">at </span><span class="token operator" style="color:rgb(255, 157, 0)">*</span><span class="token plain">containerAppTarget</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">addPreProvisionChecks</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">ctx context</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Context</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> serviceConfig </span><span class="token operator" style="color:rgb(255, 157, 0)">*</span><span class="token plain">ServiceConfig</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">error</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// Attempt to retrieve the target resource for the current service</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// This allows the resource deployment to detect whether or not to pull existing container image during</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// provision operation to avoid resetting the container app back to a default image</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> serviceConfig</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Project</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">AddHandler</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"preprovision"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">func</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">ctx context</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Context</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> args ProjectLifecycleEventArgs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">error</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    exists </span><span class="token operator" style="color:rgb(255, 157, 0)">:=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// Check if the target resource already exists</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    targetResource</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> err </span><span class="token operator" style="color:rgb(255, 157, 0)">:=</span><span class="token plain"> at</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">resourceManager</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetTargetResource</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> at</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetSubscriptionId</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> serviceConfig</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> targetResource </span><span class="token operator" style="color:rgb(255, 157, 0)">!=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">nil</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">&amp;&amp;</span><span class="token plain"> err </span><span class="token operator" style="color:rgb(255, 157, 0)">==</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      exists </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    at</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">SetServiceProperty</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">serviceConfig</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"RESOURCE_EXISTS"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> strconv</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">FormatBool</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">exists</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> at</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">envManager</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Save</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> at</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Now that we have our <code>main.bicepparam</code> file, we're ready to migrate to our pipeline to use <code>azd</code>.</p>
<p>Well, one extra bit first.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="workaround-for-service_app_resource_exists-not-being-supplied">Workaround for <code>SERVICE_APP_RESOURCE_EXISTS</code> not being supplied<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops#workaround-for-service_app_resource_exists-not-being-supplied" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>At the time of writing, there is an issue that means that the <code>SERVICE_APP_RESOURCE_EXISTS</code> environment variable is not being set by <code>azd</code>. <a href="https://github.com/Azure/azure-dev/issues/4402" target="_blank" rel="noopener noreferrer">This is a known issue and is being worked on</a>.</p>
<p>In the meantime, we have a workaround. We're going to set the <code>SERVICE_APP_RESOURCE_EXISTS</code> environment variable in our pipeline with a little bash and Azure CLI magic. We're going to set our manually created <code>SERVICE_APP_RESOURCE_EXISTS</code> environment variable to <code>true</code> if we detect a service already exists and <code>false</code> if not.</p>
<p>You'll note this as the <code>Check container app exists</code> step in the modifications to our pipeline below. This is a workaround and will be removed when the issue is resolved in <code>azd</code> itself.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="azure-devops-pipeline-modifications">Azure DevOps pipeline modifications<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops#azure-devops-pipeline-modifications" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>There's no two ways about it; our Azure DevOps pipeline modifications are pretty extensive. Where we were previously using the <code>AzureResourceManagerTemplateDeployment@3</code> task to deploy our Bicep files, we're now going to use the <code>azd</code> command to deploy our infrastructure and our container app.</p>
<p>Here's a cut down version of our pipeline replacing the single <code>AzureResourceManagerTemplateDeployment@3</code> task with a series of tasks that use the <code>azd</code> command:</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> setup</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">azd@0</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Install azd</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># If you can't use above task in your organization, you can remove it and uncomment below task to install azd</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># - task: Bash@3</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">#   displayName: Install azd</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">#   inputs:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">#     targetType: "inline"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">#     script: |</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">#       curl -fsSL https://aka.ms/install-azd.sh | bash</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">pwsh</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">|</span><span class="token scalar string" style="color:rgb(165, 255, 144)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">    azd config set auth.useAzCliAuth "true"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Configure `azd` config options.</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> AzureCLI@2</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Login to ACR</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">azureSubscription</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(registryServiceConnection)</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">scriptType</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> bash</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">scriptLocation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> inlineScript</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">inlineScript</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">|</span><span class="token scalar string" style="color:rgb(165, 255, 144)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">      az acr login -n myregistry</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> AzureCLI@2</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Check container app exists </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># see https://github.com/Azure/azure-dev/issues/4593 for context on why this exists</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">azureSubscription</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> variables.serviceConnection </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">scriptType</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> bash</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">scriptLocation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> inlineScript</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">inlineScript</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">|</span><span class="token scalar string" style="color:rgb(165, 255, 144)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">      containerAppName="$(containerAppName)"</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">      resourceGroupName="$(resourceGroupName)"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      if </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">z "$containerAppName" </span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">|</span><span class="token punctuation" style="color:rgb(255, 255, 255)">|</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">z "$resourceGroupName" </span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain">; then</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token key atrule">echo "SERVICE_APP_RESOURCE_EXISTS</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> false"</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          echo "</span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">##vso[task.setvariable variable=SERVICE_APP_RESOURCE_EXISTS]false"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      else</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          if az containerapp show </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">name "$containerAppName" </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">resource</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">group "$resourceGroupName" </span><span class="token punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> /dev/null 2</span><span class="token punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token important">&amp;1;</span><span class="token plain"> then</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">              </span><span class="token key atrule">echo "SERVICE_APP_RESOURCE_EXISTS</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> true"</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">              echo "</span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">##vso[task.setvariable variable=SERVICE_APP_RESOURCE_EXISTS]true"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          else</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">              </span><span class="token key atrule">echo "SERVICE_APP_RESOURCE_EXISTS</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> false"</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">              echo "</span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">##vso[task.setvariable variable=SERVICE_APP_RESOURCE_EXISTS]false"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          fi</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      fi</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> AzureCLI@2</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Provision Infra</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">azureSubscription</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(serviceConnection)</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">scriptType</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> bash</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">scriptLocation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> inlineScript</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">inlineScript</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">|</span><span class="token scalar string" style="color:rgb(165, 255, 144)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">      azd provision --no-prompt</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># See https://learn.microsoft.com/en-gb/azure/developer/azure-developer-cli/configure-devops-pipeline?tabs=azdo</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">AZURE_LOCATION</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(location)</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">AZURE_SUBSCRIPTION_ID</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(subscriptionId)</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">AZURE_ENV_NAME</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">parameters.env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># https://learn.microsoft.com/en-us/azure/developer/azure-developer-cli/manage-environment-variables#user-provided-environment-variables</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">AZURE_RESOURCE_GROUP</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(resourceGroupName)</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">AZURE_PRINCIPAL_ID</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(serviceConnectionPrincipalId)</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># Define the additional variables or secrets that are required only for provision</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">TAGS_BRANCH</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(Build.SourceBranch)</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">TAGS_REPO</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(repo)</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">CONTAINER_APP_NAME</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(myContainerAppName) </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># this is used to substitute the CONTAINER_APP_NAME value in the azure.yaml file</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">CONTAINER_IMAGE_NAME</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(myContainerImageName) </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># this is used to substitute the CONTAINER_IMAGE_NAME value in the azure.yaml file</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">APP_VERSION_TAG</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(containerImageTag) </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># the tag of the built image</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> AzureCLI@2</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Deploy Application</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">retryCountOnTaskFailure</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">azureSubscription</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(serviceConnection)</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">scriptType</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> bash</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">scriptLocation</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> inlineScript</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">inlineScript</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">|</span><span class="token scalar string" style="color:rgb(165, 255, 144)"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token scalar string" style="color:rgb(165, 255, 144)">      azd deploy --no-prompt</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># See https://learn.microsoft.com/en-gb/azure/developer/azure-developer-cli/configure-devops-pipeline?tabs=azdo</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">AZURE_LOCATION</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(location)</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">AZURE_SUBSCRIPTION_ID</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(subscriptionId)</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">AZURE_ENV_NAME</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain">parameters.env</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># https://learn.microsoft.com/en-us/azure/developer/azure-developer-cli/manage-environment-variables#user-provided-environment-variables</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">AZURE_RESOURCE_GROUP</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(resourceGroupName)</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># Define the additional variables or secrets that are required only for deploy</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">CONTAINER_APP_NAME</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(myContainerAppName) </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># this is used to substitute the CONTAINER_APP_NAME value in the azure.yaml file</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">CONTAINER_IMAGE_NAME</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(myContainerImageName) </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># this is used to substitute the CONTAINER_IMAGE_NAME value in the azure.yaml file</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">APP_VERSION_TAG</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(containerImageTag) </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># the tag of the built image</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic"># ...</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>What's happening here? We'll take it step by step:</p>
<ul>
<li>We're installing <code>azd</code> using the <code>setup-azd@0</code> task.</li>
<li>We're configuring <code>azd</code> to use the Azure CLI for authentication and to enable resource group scoped deployments.</li>
<li>We're logging into our Azure Container Registry. (If you're not building your image independently of <code>azd</code>, then you may not need this step.)</li>
<li>We're provisioning our infrastructure using <code>azd provision --no-prompt</code>. Note that we're providing a number of environment variables to <code>azd</code> which will be detected in our <code>main.bicepparam</code> file.</li>
<li>We're deploying our application using <code>azd deploy --no-prompt</code>. As we do that, we pass the <code>CONTAINER_APP_NAME</code> environment variable which will substitute into the <code>azure.yaml</code> file</li>
</ul>
<p>You'll note that as we use <code>azd</code>, we make heavy use of environment variables. These environment variables will be picked up in the <code>main.bicepparam</code> file and passed through to the <code>main.bicep</code>. And of course there's the runtime <code>SERVICE_[SERVICENAME]_RESOURCE_EXISTS</code> parameter which <code>azd</code> will provide. Much of what you see here is inspired by <a href="https://learn.microsoft.com/en-gb/azure/developer/azure-developer-cli/configure-devops-pipeline?tabs=azdo" target="_blank" rel="noopener noreferrer">this documentation</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-does-it-look-like-when-it-works">What does it look like when it works?<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops#what-does-it-look-like-when-it-works" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>That is the question! Like this:</p>
<p><img decoding="async" loading="lazy" alt="screenshot of azd detecting no changes and so not provisioning" src="https://johnnyreilly.com/assets/images/screenshot-of-azd-detecting-no-changes-4a38419f8f4697892fd6f67d0b151543.avif" width="1434" height="932" class="img_ev3q"></p>
<p>The magic sentence in the above screenshot is: <code>SUCCESS: There are no changes to provision for your application.</code> This is what we're looking for. This is what makes our deployments faster.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://johnnyreilly.com/using-azd-for-faster-incremental-azure-container-app-deployments-in-azure-devops#conclusion" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>So we've done it, we've speeded up our subsequent deployments by using <code>azd</code> in our Azure DevOps pipeline to avoid unnecessary infrastructure provisioning when there are no changes. This is a significant time saver. However, as we've also seen, this is very easy to get wrong and quite hard to get right! Hopefully this will help you implement <code>azd</code> in your Azure DevOps pipelines.</p>
<p>I couldn't have written this without <a href="https://twitter.com/MarcelMichau" target="_blank" rel="noopener noreferrer">Marcel Michau</a> who did much of the heavy lifting on this project. I am the Boswell to his Johnson. Or something like that.</p>]]></content:encoded>
            <category>Azure</category>
            <category>Bicep</category>
            <category>Azure Container Apps</category>
            <category>Azure DevOps</category>
            <category>Azure Pipelines</category>
        </item>
        <item>
            <title><![CDATA[Large Language Models, Open API, View Models and the Backend for Frontend Pattern]]></title>
            <link>https://johnnyreilly.com/large-language-models-view-models-backend-for-frontend</link>
            <guid>https://johnnyreilly.com/large-language-models-view-models-backend-for-frontend</guid>
            <pubDate>Sat, 04 May 2024 16:42:12 GMT</pubDate>
            <description><![CDATA[To integrate LLMs with APIs, there is a need for the LLM equivalent of view models and the backend for frontend pattern. This discusses it in the context of Semantic Kernel.]]></description>
            <content:encoded><![CDATA[<p>Of late, I've been involved in work to integrate APIs into LLM interactions, using <a href="https://github.com/microsoft/semantic-kernel" target="_blank" rel="noopener noreferrer">Semantic Kernel</a>. This post is something of a brain dump on the topic. Given how fast this space is moving, I expect what is written here to be out of date, possibly even <em>before</em> I hit publish. But nevertheless, I hope it's useful.</p>
<p><img decoding="async" alt="title image reading &amp;quot;Large Language Models, Open API, View Models and the Backend for Frontend Pattern&amp;quot; with the Azure Open AI / Swagger logos" src="https://johnnyreilly.com/assets/images/title-image-bed363141bbcb8dfb82b1db42671f1d0.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="swagger--open-api-and-semantic-kernel">Swagger / Open API and Semantic Kernel<a href="https://johnnyreilly.com/large-language-models-view-models-backend-for-frontend#swagger--open-api-and-semantic-kernel" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>APIs are awesome. Imagine LLMs could interact with APIs to allow us to chat directly to our data. This is what <a href="https://platform.openai.com/docs/guides/function-calling" target="_blank" rel="noopener noreferrer">function calling</a> provides. It allows us to take some kind of API and integrate it with our LLM. This is a powerful concept, but it's not without its challenges.</p>
<p>APIs are often documented in Swagger / Open API. This is a great way to document APIs, but it's not always the best way to interact with them from an LLM point of view. We'll go into more detail on the problems it can present in a moment, but first let's look at how we can use Semantic Kernel to integrate with APIs.</p>
<p>It's completely possible to plug an LLM into an Open API / Swagger spec described API using Semantic Kernel. Here's an example of how we might do that from the <a href="https://github.com/microsoft/semantic-kernel/blob/9a4450622021ce003234863bcf4def9613ae1153/dotnet/samples/Concepts/Plugins/CreatePluginFromOpenApiSpec_Jira.cs#L69-L77" target="_blank" rel="noopener noreferrer">Semantic Kernel GitHub repository</a>:</p>
<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> apiPluginRawFileURL </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">Uri</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">"https://raw.githubusercontent.com/microsoft/PowerPlatformConnectors/dev/certified-connectors/JIRA/apiDefinition.swagger.json"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">jiraFunctions </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> kernel</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">ImportPluginFromOpenApiAsync</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token string" style="color:rgb(165, 255, 144)">"jiraPlugin"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    apiPluginRawFileURL</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">OpenApiFunctionExecutionParameters</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        httpClient</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> tokenProvider</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">AuthenticateRequestAsync</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">serverUrlOverride</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">Uri</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">serverUrl</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The code above is creating a Jira plugin from an Open API spec. Brilliant! We didn't have to do any work; Semantic Kernel has done the heavy lifting for us. It's created a plugin that we can use to interact with Jira. Are you ready for the but?</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-problem-with-swagger--open-api-and-llms">The problem with Swagger / Open API and LLMs<a href="https://johnnyreilly.com/large-language-models-view-models-backend-for-frontend#the-problem-with-swagger--open-api-and-llms" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>The example above illustrates the simplicity of integrating. But what it doesn't reveal is the unfortunate reality that <strong>LLMs are not great at ignoring information</strong>. They will mention information we explicitly tell them not to. Just to spite us.</p>
<p>Let's take the Jira plugin as an example. When using direct Swagger / Open API integration I have found myself writing prompts like this:</p>
<blockquote>
<p>Please tell me about stories that are assigned to me. Please never refer to the stories by their ids - use titles instead.</p>
</blockquote>
<p>Only to find that in the responses the LLM will <em>still</em> refer to the stories by their ids.</p>
<p>It's a bit like having a child who you've told not to do something, only to find they've done it anyway. The LLM may even cheekily say something like "I know you told me not too, but I included the id for reference". The scallywag.</p>
<p>Or perhaps, given the variety of endpoints that are available in an API, the LLM will call one that we didn't want it to. Or perhaps our Swagger / Open API spec is poorly documented, and the LLM doesn't think it has an endpoint it can call.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="view-models-and-the-bffs-to-the-rescue">View models and the BFFs to the rescue<a href="https://johnnyreilly.com/large-language-models-view-models-backend-for-frontend#view-models-and-the-bffs-to-the-rescue" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>A useful framing for this problem is remembering when ORMs started to automate access to databases. We could take our ORM, and host it in a web service and, hey presto, our database was now accessible over HTTP. So let's take our React app (or whatever) and have it talk directly to our database.</p>
<p>Except, of course, that's a terrible idea. We don't want our front end talking to our database. There's a number of reasons why:</p>
<ul>
<li>Too much information going backwards and forward between client and server (perhaps including information we'd never like clients to see).</li>
<li>Security; why are we exposing our database to updates directly from the internet? Is that wise?</li>
</ul>
<p>You get the picture. We tend not to integrate our databases directly with our front ends with good reason.</p>
<p>A common approach to tackle these issues is employing the <a href="https://learn.microsoft.com/en-us/azure/architecture/patterns/backends-for-frontends" target="_blank" rel="noopener noreferrer">back end for front ends (BFF) pattern</a>; having something that sits between our front end and our database. One of the things the BFF does is to provide a view of the data that is appropriate for the client. So for example, exposing a <a href="https://en.wikipedia.org/wiki/View_model" target="_blank" rel="noopener noreferrer">view model</a> in the back end to serve the front end. It's a way to ensure that only the necessary information is exposed to the client.</p>
<p>We can take this idea and apply it to building integrations with APIs and LLMs. So rather than plugging a Swagger / Open API spec into Semantic Kernel, instead build a custom plugin that manages access to our API, and have it expose view models for providing data to LLMs.</p>
<p>That way we can ensure that only the necessary information is given to the LLM, and our answers do not contain data we would rather not see.</p>
<p>So rather than giving an LLM a data structure like this:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"stories"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"id"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">1</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"title"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"Story 1"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"description"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"This is the first story"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">//... MANY MORE FIELDS</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"id"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">2</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"title"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"Story 2"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"description"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"This is the second story"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">//... MANY MORE FIELDS</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We give it the trimmed down equivalent:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token property" style="color:rgb(255, 157, 0)">"stories"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"title"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"Story 1"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"description"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"This is the first story"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"title"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"Story 2"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token property" style="color:rgb(255, 157, 0)">"description"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"This is the second story"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This has the combined benefit of reducing our token usage / cost (as we're sending less data to the LLM) and reducing the risk of exposing data we'd rather not.</p>
<p>It also has the advantage of allowing us to steer the LLM towards the functions we want it to call. If we only expose the functions we want the LLM to call, then we can ensure that it doesn't call functions we'd rather it didn't.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="but-integrating-with-apis-is-a-lot-of-work">"But integrating with APIs is a lot of work!"<a href="https://johnnyreilly.com/large-language-models-view-models-backend-for-frontend#but-integrating-with-apis-is-a-lot-of-work" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>A common, and quite reasonable, complaint is that integrating with an API involves a lot of work. We have to write some code to interact with the API, and then we have to write the types that we'll use to pass data around. Fortunately there are tools like NSwag that use the Swagger / Open API spec to <a href="https://johnnyreilly.com/generate-typescript-and-csharp-clients-with-nswag">automate creating a client with types to manage API interaction</a>. If we're autogenerating our API clients, then the work of integrating an LLM with an API is significantly reduced.</p>
<p>With Semantic Kernel it effectively is reduced to creating a plugin; and that's quite simple to do. <a href="https://learn.microsoft.com/en-us/semantic-kernel/agents/plugins/using-the-kernelfunction-decorator?tabs=Csharp" target="_blank" rel="noopener noreferrer">There is guidance on how to create a plugin here</a>. So to create a BFF plugin for an API, we'd need to create that plugin, exposing the functions we want to be called. Those functions will internally call into the APIs using the auto-generated Swagger clients and then map that to the view models which we want to expose to the LLM. Imagine something like this:</p>
<div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">record</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">JiraStory</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> Title</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> Description</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token attribute class-name" style="color:rgb(250, 208, 0)">KernelFunction</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token attribute class-name" style="color:rgb(250, 208, 0)">Description</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token attribute attribute-arguments string" style="color:rgb(165, 255, 144)">"Provides stories for a given user"</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token attribute target keyword" style="color:rgb(255, 157, 0)">return</span><span class="token attribute punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token attribute"> </span><span class="token attribute class-name" style="color:rgb(250, 208, 0)">Description</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token attribute attribute-arguments string" style="color:rgb(165, 255, 144)">"Jira user stories for the given user"</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">public</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">async</span><span class="token plain"> </span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">Task</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&lt;</span><span class="token return-type class-name" style="color:rgb(250, 208, 0)">JiraStory</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token return-type class-name punctuation" style="color:rgb(255, 255, 255)">&gt;</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">GetUsersJiraStories</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token class-name" style="color:rgb(250, 208, 0)">Kernel</span><span class="token plain"> kernel</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token attribute class-name" style="color:rgb(250, 208, 0)">Description</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token attribute attribute-arguments string" style="color:rgb(165, 255, 144)">"Email of user to filter by"</span><span class="token attribute attribute-arguments punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">string</span><span class="token plain"> userEmail</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token class-name keyword" style="color:rgb(255, 157, 0)">var</span><span class="token plain"> stories </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> _jiraClient</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">GetStories</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">userEmail</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token plain"> stories</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">Select</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">story </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name" style="color:rgb(250, 208, 0)">JiraStory</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">title</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> story</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Title</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:rgb(255, 255, 255)">description</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> story</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">Description</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">ToArray</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The code above exposes a well defined function to the LLM, which will return the stories for a given user. The function internally calls into the Jira API, and then maps the large amount of data returned from the API to a much slimmer view model that is appropriate for the LLM. As we can see, this was very little work indeed!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://johnnyreilly.com/large-language-models-view-models-backend-for-frontend#conclusion" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>The integrated support for consuming Open API / Swagger specs is definitely going to improve over time, both in Semantic Kernel and in the wider ecosystem. However, it's possible that there is fundamental issue that needs to be solved, and that BFFs for LLMs may solve it. It's a way to ensure that only the necessary information is exposed to LLMs, and that the answers they give are appropriate for the context in which they are being used.</p>
<p>I'm not aware of a specific name for this pattern as yet. My colleague, Ryan suggested "Frontend for Language Models" (FLM) which is less of a mouthful than "Backend for Frontends for Language Models". Naming things is hard.</p>
<p>Another colleague (Rick), suggested that perhaps the BFF for LLMs could be built directly into APIs. So rather than having to implement a custom plugin that manages the interaction with API, we could still perhaps use the Swagger / Open API approach and avoid the custom plugin implementation. This is an interesting idea.</p>
<p>Many thanks to <a href="https://github.com/drosevear" target="_blank" rel="noopener noreferrer">David Rosevear</a>, <a href="https://www.linkedin.com/in/george-karsas" target="_blank" rel="noopener noreferrer">George Karsas</a>, <a href="https://www.rickroche.com/" target="_blank" rel="noopener noreferrer">Rick Roch√©</a>, <a href="https://github.com/RyanMatCook" target="_blank" rel="noopener noreferrer">Ryan Cook</a> and <a href="https://uk.linkedin.com/in/alisomer" target="_blank" rel="noopener noreferrer">Ali Somer</a> whose thoughts, ideas and experimentation have fed into the thinking in this post.</p>]]></content:encoded>
            <category>Azure</category>
            <category>C#</category>
            <category>AI</category>
        </item>
        <item>
            <title><![CDATA[Azure Artifacts: Publish a private npm package with Azure DevOps]]></title>
            <link>https://johnnyreilly.com/azure-artifacts-publish-private-npm-package-with-azure-devops</link>
            <guid>https://johnnyreilly.com/azure-artifacts-publish-private-npm-package-with-azure-devops</guid>
            <pubDate>Sun, 01 Dec 2024 09:45:10 GMT</pubDate>
            <description><![CDATA[Azure DevOps has a feature called Azure Artifacts that supports publishing npm packages to a feed for consumption. This post shows how to publish a private npm package with Azure DevOps.]]></description>
            <content:encoded><![CDATA[<p>Azure DevOps has a feature called Azure Artifacts that supports publishing npm packages to a feed for consumption. Publishing a private npm package with Azure DevOps is a common scenario for teams that want to share code across projects or organizations. This post shows how to publish a private npm package with Azure DevOps.</p>
<p><img decoding="async" alt="title image reading &amp;quot;Azure Artifacts: Publish a private npm package with Azure DevOps&amp;quot; with an Azure DevOps and npm logos" src="https://johnnyreilly.com/assets/images/title-image-f41c20b738c408ad754258ede7571c6f.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<p>Publishing a private npm package with Azure DevOps is fairly straightforward, but surprisingly documentation is a little sparse.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-feeds-are-available-in-azure-artifacts">What feeds are available in Azure Artifacts?<a href="https://johnnyreilly.com/azure-artifacts-publish-private-npm-package-with-azure-devops#what-feeds-are-available-in-azure-artifacts" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>If you don't already have a feed to publish your npm package to, you can create one in Azure DevOps <a href="https://learn.microsoft.com/en-us/azure/devops/artifacts/concepts/feeds?view=azure-devops" target="_blank" rel="noopener noreferrer">by following these instructions</a>.</p>
<p>If you're trying to find out what feeds are available in Azure Artifacts, you can find them in the Azure DevOps UI. Go to the Artifacts section in Azure DevOps and you'll see a list of feeds. The URL for the feed will be in the format <code>https://dev.azure.com/[ORGANIZATION]/_artifacts/feed</code>.</p>
<p>There you'll see a dropdown with the feeds you have access to:</p>
<p><img decoding="async" loading="lazy" alt="screenshot of the feeds in Azure DevOps" src="https://johnnyreilly.com/assets/images/screenshot-npm-feeds-in-azure-artifacts-b561f2cc09bb8358baf4078561fc4c06.webp" width="1248" height="690" class="img_ev3q"></p>
<p>You'll see from the screenshot that I have access to a feed called <code>npmrc-script-organization</code>. Let's use that feed to publish a private npm package.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="setting-up-the-npmrc-file">Setting up the <code>.npmrc</code> file<a href="https://johnnyreilly.com/azure-artifacts-publish-private-npm-package-with-azure-devops#setting-up-the-npmrc-file" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>So that you can publish to a private feed, you need to set up an <code>.npmrc</code> file in your project. This file will contain the URL of the feed you want to publish to, and your credentials. To set up the <code>.npmrc</code> file, you can click on the "Connect to Feed" button in the Azure DevOps UI:</p>
<p><img decoding="async" loading="lazy" alt="Screenshot of &amp;quot;connect to feed&amp;quot; in Azure DevOps" src="https://johnnyreilly.com/assets/images/screenshot-connect-to-feed-9420465335c838a5365e11888ea36437.webp" width="1016" height="118" class="img_ev3q"></p>
<p>Then select <code>npm</code> and you'll see the instructions for setting up the <code>.npmrc</code> file:</p>
<p><img decoding="async" loading="lazy" alt="Screenshot of the instructions for setting up the .npmrc file" src="https://johnnyreilly.com/assets/images/screenshot-npmrc-e8b46fa648b27148f109ea8fbf6ba807.png" width="2240" height="678" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="publishing-with-azure-pipelines">Publishing with Azure Pipelines<a href="https://johnnyreilly.com/azure-artifacts-publish-private-npm-package-with-azure-devops#publishing-with-azure-pipelines" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Now we're ready to publish our npm package with Azure DevOps. Here's an example of an Azure Pipelines YAML file that publishes a private npm package:</p>
<div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token key atrule">trigger</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">batch</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token boolean important" style="color:rgb(255, 98, 140)">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token key atrule">pool</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">vmImage</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> ubuntu</span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain">latest</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token key atrule">variables</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token key atrule">isMainBranch</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> eq(variables</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token string" style="color:rgb(165, 255, 144)">'Build.SourceBranch'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> 'refs/heads/main') </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token key atrule">stages</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">stage</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Build_Package_Publish</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Build package and publish</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token key atrule">jobs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">job</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token key atrule">steps</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> NodeTool@0</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">              </span><span class="token key atrule">versionSpec</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(255, 98, 140)">20</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Install Node.js</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> npmAuthenticate@0</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">              </span><span class="token key atrule">workingFile</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> $(System.DefaultWorkingDirectory)/.npmrc</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">bash</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> npm install</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'npm install'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">bash</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> npm run build</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'npm build'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(255, 255, 255)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Npm@1</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> Publish Package</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">            </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">              </span><span class="token key atrule">command</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'publish'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">              </span><span class="token key atrule">publishRegistry</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'useFeed'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">              </span><span class="token key atrule">publishFeed</span><span class="token punctuation" style="color:rgb(255, 255, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'npmrc-script-organization'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Let's break down the steps in this YAML file:</p>
<ul>
<li>We're installing Node.js and authenticating with the <code>.npmrc</code> file.</li>
<li>We're running <code>npm install</code> and <code>npm run build</code>. These are standard steps for building a Node.js project; yours might vary; what's important is that you are able to get your built package set up.</li>
<li>Finally, we use the <code>Npm@1</code> task to publish the package. We specify the <code>publishRegistry</code> as <code>useFeed</code> and the <code>publishFeed</code> as <code>npmrc-script-organization</code>. This is the feed we're publishing to.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://johnnyreilly.com/azure-artifacts-publish-private-npm-package-with-azure-devops#conclusion" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>In this post, we've seen how to publish a private npm package with Azure DevOps. We've set up the <code>.npmrc</code> file, and we've used an Azure Pipelines YAML file to publish the package. This is a common scenario for teams that want to share code across projects or organizations. I hope this post has been helpful to you!</p>]]></content:encoded>
            <category>Azure DevOps</category>
            <category>Node.js</category>
        </item>
        <item>
            <title><![CDATA[Azure DevOps API: Set User Story column with the Azure DevOps Client for Node.js]]></title>
            <link>https://johnnyreilly.com/azure-devops-set-user-story-column-api</link>
            <guid>https://johnnyreilly.com/azure-devops-set-user-story-column-api</guid>
            <pubDate>Fri, 01 Nov 2024 20:57:55 GMT</pubDate>
            <description><![CDATA[It is possible to set the column of a User Story in Azure DevOps with the Azure DevOps Client for Node.js, but the mechanism is surprising.]]></description>
            <content:encoded><![CDATA[<p>When I attempted to set the column of a User Story in Azure DevOps using the Azure DevOps Client for Node.js, I was surprised to find that the field <code>System.BoardColumn</code> was read-only and I bumped into the error:</p>
<blockquote>
<p>TF401326: Invalid field status 'ReadOnly' for field 'System.BoardColumn'.</p>
</blockquote>
<p><img decoding="async" alt="title image reading &amp;quot;Azure DevOps API: Set User Story column with the Azure DevOps Client for Node.js&amp;quot; with an Azure DevOps logo" src="https://johnnyreilly.com/assets/images/title-image-295933715c6803390e6d8ed282e77f0a.png" width="800" height="450" fetchpriority="high" class="img_ev3q"></p>
<p>This post explains how to set the column of a User Story in Azure DevOps using the Azure DevOps Client for Node.js and it's based in part on a <a href="https://stackoverflow.com/questions/56165538/how-to-modify-boardcolumn-field-of-a-work-item-using-rest-api" target="_blank" rel="noopener noreferrer">Stack Overflow question</a>.</p>
<p>The <a href="https://github.com/microsoft/azure-devops-node-api" target="_blank" rel="noopener noreferrer">Azure DevOps Client for Node.js</a> is a great way to interact with the Azure DevOps API if you're building with TypeScript. The library provides an API and the types. In this post, we'll use the client to set the column of a User Story in Azure DevOps rather than directly working with the API.</p>
<p><img decoding="async" loading="lazy" alt="A screenshot of a user story in Azure DevOps" src="https://johnnyreilly.com/assets/images/screenshot-azure-devops-column-c3309929828f810e7f0ef31b304905b6.webp" width="492" height="402" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="getting-the-workitemtrackingapi">Getting the WorkItemTrackingApi<a href="https://johnnyreilly.com/azure-devops-set-user-story-column-api#getting-the-workitemtrackingapi" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>Consider the following code:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">*</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">as</span><span class="token plain"> nodeApi </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'azure-devops-node-api'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">type</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">WorkItem</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  WorkItemExpand</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'azure-devops-node-api/interfaces/WorkItemTrackingInterfaces.js'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">import</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">type</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"> IWorkItemTrackingApi </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'azure-devops-node-api/WorkItemTrackingApi.js'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> authHandler </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> pat </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// If running locally you will use a Personal Access Token</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token operator" style="color:rgb(255, 157, 0)">?</span><span class="token plain"> nodeApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">getPersonalAccessTokenHandler</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      pat</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/** allowCrossOriginAuthentication */</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// If running in Azure DevOps you will use the System.AccessToken</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    nodeApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">getHandlerFromToken</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      sat</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/** allowCrossOriginAuthentication */</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">true</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> webApi </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">nodeApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">WebApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token string" style="color:rgb(165, 255, 144)">'https://dev.azure.com/johnnyreilly/'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  authHandler</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> workItemTrackingApi </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> webApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">getWorkItemTrackingApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This code sets up the Azure DevOps Client for Node.js and gets the <code>WorkItemTrackingApi</code>. The <code>WorkItemTrackingApi</code> is the API we'll use to set the column of a User Story. You'll need to replace <code>pat</code> and <code>sat</code> with your Personal Access Token and System Access Token, respectively (depending on where this code executes). And the organisation you use will likely be different from <code>johnnyreilly</code>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="getting-the-user-story">Getting the User Story<a href="https://johnnyreilly.com/azure-devops-set-user-story-column-api#getting-the-user-story" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>We can now load our user story, given its ID:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> userStory </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> workItemTrackingApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">getWorkItem</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  userStoryId</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/** fields */</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">undefined</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/** asOf */</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">undefined</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/** expand */</span><span class="token plain"> WorkItemExpand</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">All</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This code loads the User Story with the ID <code>userStoryId</code>. We're using the <code>WorkItemExpand.All</code> option to ensure we get all the fields of the User Story.When you look at the User Story, you'll see that the <code>System.BoardColumn</code> field is there. This is the field we want to set, but we can't do it directly. If we try we'll encounter the notorious error:</p>
<blockquote>
<p>TF401326: Invalid field status 'ReadOnly' for field 'System.BoardColumn'.</p>
</blockquote>
<p>However, if you look closely at the User Story you'll see two very similar fields:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token property" style="color:rgb(255, 157, 0)">"System.BoardColumn"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"Blocked"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token property" style="color:rgb(255, 157, 0)">"WEF_1D7E8E9B92454212B8A5E6DFBCED0D17_Kanban.Column"</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">"Blocked"</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The <code>System.BoardColumn</code> field is read-only, but the <code>WEF_1D7E8E9B92454212B8A5E6DFBCED0D17_Kanban.Column</code> field is not. This is the field we can set to change the column of the User Story. And that will, in turn, set the <code>System.BoardColumn</code> field. Why this is the case is a mystery to me, but it works.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-columns-can-we-set">What columns can we set?<a href="https://johnnyreilly.com/azure-devops-set-user-story-column-api#what-columns-can-we-set" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>This may be more than what you need, but as someone who has bumped into the error:</p>
<blockquote>
<p>TF401320: Rule Error for field State. Error code: Required, HasValues, LimitedToValues, SetByRule, InvalidEmpty.</p>
</blockquote>
<p>You might want to know what columns you can set, in order that you can avoid this error happening. Or at least you might want to know what columns you can set so that you can provide a helpful error message to the user. Here's how you can get the columns for a board:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> workApi </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> webApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">getWorkApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> columns </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> workApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">getBoardColumns</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    project</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'my-project'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    team</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'my-team'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token string" style="color:rgb(165, 255, 144)">'Stories'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> validColumns </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> columns</span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">map</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">column</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> column</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">name </span><span class="token operator" style="color:rgb(255, 157, 0)">??</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">''</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">filter</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> name</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This is optional, but I've found it useful.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="setting-the-column">Setting the Column<a href="https://johnnyreilly.com/azure-devops-set-user-story-column-api#setting-the-column" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">‚Äã</a></h2>
<p>With all that taken care of, we can now set the column of the User Story with this code:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9EFEFF;--prism-background-color:#2D2A55"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#9EFEFF;background-color:#2D2A55"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9EFEFF"><span class="token keyword" style="color:rgb(255, 157, 0)">async</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">updateUserStoryColumn</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  userStory</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  workItemTrackingApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  columnName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  validColumns</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  whatIf</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  userStory</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> WorkItem</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  workItemTrackingApi</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> IWorkItemTrackingApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  columnName</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  validColumns</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">string</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  whatIf</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(250, 208, 0)">boolean</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> isAValidColumn </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> validColumns</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">includes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">columnName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token operator" style="color:rgb(255, 157, 0)">!</span><span class="token plain">isAValidColumn</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">throw</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">Error</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">We cannot move a User Story to the column "</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">columnName</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string string" style="color:rgb(165, 255, 144)">"; these are the columns that a User Story can be moved to: </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">validColumns</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation function" style="color:rgb(250, 208, 0)">map</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token template-string interpolation">column</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token template-string interpolation"> </span><span class="token template-string interpolation operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token template-string interpolation"> </span><span class="token template-string interpolation template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string interpolation template-string string" style="color:rgb(165, 255, 144)">"</span><span class="token template-string interpolation template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation template-string interpolation">column</span><span class="token template-string interpolation template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string interpolation template-string string" style="color:rgb(165, 255, 144)">"</span><span class="token template-string interpolation template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation function" style="color:rgb(250, 208, 0)">join</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token template-string interpolation string" style="color:rgb(165, 255, 144)">', '</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token operator" style="color:rgb(255, 157, 0)">!</span><span class="token plain">userStory</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">fields</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">throw</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">Error</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'No fields found'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// We are looking for a field like this:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// 'WEF_1D7E8E9B92454212B8A5E6DFBCED0D17_Kanban.Column': 'In-Progress',</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> wefField </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token operator" style="color:rgb(255, 157, 0)">...</span><span class="token plain">Object</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">entries</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">userStory</span><span class="token operator" style="color:rgb(255, 157, 0)">?.</span><span class="token plain">fields</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">find</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain">fieldName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> _value</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(255, 157, 0)">=&gt;</span><span class="token plain"> fieldName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">includes</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'_Kanban.Column'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token operator" style="color:rgb(255, 157, 0)">!</span><span class="token plain">wefField</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">throw</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(250, 208, 0)">Error</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token string" style="color:rgb(165, 255, 144)">'No WEF field found'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> fieldToUpdate </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> wefField</span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token number" style="color:rgb(255, 98, 140)">0</span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// Define the update</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> patchDocument </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      op</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'add'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// surprisingly, this is the operation for updating a field - see https://learn.microsoft.com/en-us/rest/api/azure/devops/wit/work-items/update?view=azure-devops-rest-7.1&amp;tabs=HTTP#update-a-field</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      path</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">/fields/</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">fieldToUpdate</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      value</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> columnName</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// COMMENTED OUT AS WILL NEVER WORK - LEFT FOR ILLUSTRATION</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// {</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">//     op: "add",</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">//     path: `/fields/System.BoardColumn`,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">//     value: columnName,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// },</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">]</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token keyword" style="color:rgb(255, 157, 0)">try</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">whatIf</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token builtin" style="color:rgb(250, 208, 0)">console</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">log</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        </span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">Would update User Story </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">userStory</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation">id</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string string" style="color:rgb(165, 255, 144)"> to column </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">columnName</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">        patchDocument</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token keyword" style="color:rgb(255, 157, 0)">return</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token comment" style="color:rgb(179, 98, 255);font-style:italic">// Update the work item</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token keyword" style="color:rgb(255, 157, 0)">const</span><span class="token plain"> updatedWorkItem </span><span class="token operator" style="color:rgb(255, 157, 0)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> workItemTrackingApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">updateWorkItem</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/** customHeaders */</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">undefined</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/** document */</span><span class="token plain"> patchDocument</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token doc-comment comment" style="color:rgb(179, 98, 255);font-style:italic">/** id */</span><span class="token plain"> userStory</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token plain">id</span><span class="token operator" style="color:rgb(255, 157, 0)">!</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token builtin" style="color:rgb(250, 208, 0)">console</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">log</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">User Story </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">updatedWorkItem</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation">id</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string string" style="color:rgb(165, 255, 144)"> moved to </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">columnName</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(255, 157, 0)">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain">err</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token builtin" style="color:rgb(250, 208, 0)">console</span><span class="token punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token function" style="color:rgb(250, 208, 0)">error</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      </span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token template-string string" style="color:rgb(165, 255, 144)">Error moving User Story </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">userStory</span><span class="token template-string interpolation punctuation" style="color:rgb(255, 255, 255)">.</span><span class="token template-string interpolation">id</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string string" style="color:rgb(165, 255, 144)"> to </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">${</span><span class="token template-string interpolation">columnName</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token template-string template-punctuation string" style="color:rgb(165, 255, 144)">`</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">      err</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token keyword" style="color:rgb(255, 157, 0)">await</span><span class="token plain"> </span><span class="token function" style="color:rgb(250, 208, 0)">updateUserStoryColumn</span><span class="token punctuation" style="color:rgb(255, 255, 255)">(</span><span class="token punctuation" style="color:rgb(255, 255, 255)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  userStory</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  workItemTrackingApi</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  columnName</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(165, 255, 144)">'Prioritised'</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  validColumns</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain">  whatIf</span><span class="token operator" style="color:rgb(255, 157, 0)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 98, 140)">false</span><span class="token punctuation" style="color:rgb(255, 255, 255)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9EFEFF"><span class="token plain"></span><span class="token punctuation" style="color:rgb(255, 255, 255)">}</span><span class="token punctuation" style="color:rgb(255, 255, 255)">)</span><span class="token punctuation" style="color:rgb(255, 255, 255)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The code above:</p>
<ul>
<li>Checks that the column we want to move the User Story to is a valid column.</li>
<li>Finds the curiously named <code>WEF_1D7E8E9B92454212B8A5E6DFBCED0D17_Kanban.Column</code> style field we need to update, purely by looking for a field that contains <code>_Kanban.Column</code>.</li>
<li>Defines the update using the <a href="https://learn.microsoft.com/en-us/rest/api/azure/devops/wit/work-items/update?view=azure-devops-rest-7.1&amp;tabs=HTTP#update-a-field" target="_blank" rel="noopener noreferrer">mechanism documented here</a>.</li>
<li>Updates the User Story.</li>
</ul>
<p>You can also see there's a <code>whatIf</code> option. If you set this to <code>true</code>, the code will log what it would do without actually doing it. This is useful for testing.</p>
<p>And this mechanism works - the User Story is moved to the column you specify as desired.</p>]]></content:encoded>
            <category>TypeScript</category>
            <category>Azure DevOps</category>
            <category>Node.js</category>
        </item>
    </channel>
</rss>